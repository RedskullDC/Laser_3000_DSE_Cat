RAM:8000 FF                          .BYTE $FF
RAM:8001 FF                          .BYTE $FF
RAM:8002 FF                          .BYTE $FF
RAM:8003 FF                          .BYTE $FF
RAM:8004 FF                          .BYTE $FF
RAM:8005 FF                          .BYTE $FF
RAM:8006 FF                          .BYTE $FF
RAM:8007 FF                          .BYTE $FF
RAM:8008 FF                          .BYTE $FF
RAM:8009 FF                          .BYTE $FF
RAM:800A FF                          .BYTE $FF
RAM:800B FF                          .BYTE $FF
RAM:800C FF                          .BYTE $FF
RAM:800D FF                          .BYTE $FF
RAM:800E FF                          .BYTE $FF
RAM:800F FF                          .BYTE $FF
RAM:8010 FF                          .BYTE $FF
RAM:8011 FF                          .BYTE $FF
RAM:8012 FF                          .BYTE $FF
RAM:8013 FF                          .BYTE $FF
RAM:8014 FF                          .BYTE $FF
RAM:8015 FF                          .BYTE $FF
RAM:8016 FF                          .BYTE $FF
RAM:8017 FF                          .BYTE $FF
RAM:8018 FF                          .BYTE $FF
RAM:8019 FF                          .BYTE $FF
RAM:801A FF                          .BYTE $FF
RAM:801B FF                          .BYTE $FF
RAM:801C FF                          .BYTE $FF
RAM:801D FF                          .BYTE $FF
RAM:801E FF                          .BYTE $FF
RAM:801F FF                          .BYTE $FF
RAM:8020 FF                          .BYTE $FF
RAM:8021 FF                          .BYTE $FF
RAM:8022 FF                          .BYTE $FF
RAM:8023 FF                          .BYTE $FF
RAM:8024 FF                          .BYTE $FF
RAM:8025 FF                          .BYTE $FF
RAM:8026 FF                          .BYTE $FF
RAM:8027 FF                          .BYTE $FF
RAM:8028 FF                          .BYTE $FF
RAM:8029 FF                          .BYTE $FF
RAM:802A FF                          .BYTE $FF
RAM:802B FF                          .BYTE $FF
RAM:802C FF                          .BYTE $FF
RAM:802D FF                          .BYTE $FF
RAM:802E FF                          .BYTE $FF
RAM:802F FF                          .BYTE $FF
RAM:8030 FF                          .BYTE $FF
RAM:8031 FF                          .BYTE $FF
RAM:8032 FF                          .BYTE $FF
RAM:8033 FF                          .BYTE $FF
RAM:8034 FF                          .BYTE $FF
RAM:8035 FF                          .BYTE $FF
RAM:8036 FF                          .BYTE $FF
RAM:8037 FF                          .BYTE $FF
RAM:8038 FF                          .BYTE $FF
RAM:8039 FF                          .BYTE $FF
RAM:803A FF                          .BYTE $FF
RAM:803B FF                          .BYTE $FF
RAM:803C FF                          .BYTE $FF
RAM:803D FF                          .BYTE $FF
RAM:803E FF                          .BYTE $FF
RAM:803F FF                          .BYTE $FF
RAM:8040 FF                          .BYTE $FF
RAM:8041 FF                          .BYTE $FF
RAM:8042 FF                          .BYTE $FF
RAM:8043 FF                          .BYTE $FF
RAM:8044 FF                          .BYTE $FF
RAM:8045 FF                          .BYTE $FF
RAM:8046 FF                          .BYTE $FF
RAM:8047 FF                          .BYTE $FF
RAM:8048 FF                          .BYTE $FF
RAM:8049 FF                          .BYTE $FF
RAM:804A FF                          .BYTE $FF
RAM:804B FF                          .BYTE $FF
RAM:804C FF                          .BYTE $FF
RAM:804D FF                          .BYTE $FF
RAM:804E FF                          .BYTE $FF
RAM:804F FF                          .BYTE $FF
RAM:8050 FF                          .BYTE $FF
RAM:8051 FF                          .BYTE $FF
RAM:8052 FF                          .BYTE $FF
RAM:8053 FF                          .BYTE $FF
RAM:8054 FF                          .BYTE $FF
RAM:8055 FF                          .BYTE $FF
RAM:8056 FF                          .BYTE $FF
RAM:8057 FF                          .BYTE $FF
RAM:8058 FF                          .BYTE $FF
RAM:8059 FF                          .BYTE $FF
RAM:805A FF                          .BYTE $FF
RAM:805B FF                          .BYTE $FF
RAM:805C FF                          .BYTE $FF
RAM:805D FF                          .BYTE $FF
RAM:805E FF                          .BYTE $FF
RAM:805F FF                          .BYTE $FF
RAM:8060 FF                          .BYTE $FF
RAM:8061 FF                          .BYTE $FF
RAM:8062 FF                          .BYTE $FF
RAM:8063 FF                          .BYTE $FF
RAM:8064 FF                          .BYTE $FF
RAM:8065 FF                          .BYTE $FF
RAM:8066 FF                          .BYTE $FF
RAM:8067 FF                          .BYTE $FF
RAM:8068 FF                          .BYTE $FF
RAM:8069 FF                          .BYTE $FF
RAM:806A FF                          .BYTE $FF
RAM:806B FF                          .BYTE $FF
RAM:806C FF                          .BYTE $FF
RAM:806D FF                          .BYTE $FF
RAM:806E FF                          .BYTE $FF
RAM:806F FF                          .BYTE $FF
RAM:8070 FF                          .BYTE $FF
RAM:8071 FF                          .BYTE $FF
RAM:8072 FF                          .BYTE $FF
RAM:8073 FF                          .BYTE $FF
RAM:8074 FF                          .BYTE $FF
RAM:8075 FF                          .BYTE $FF
RAM:8076 FF                          .BYTE $FF
RAM:8077 FF                          .BYTE $FF
RAM:8078 FF                          .BYTE $FF
RAM:8079 FF                          .BYTE $FF
RAM:807A FF                          .BYTE $FF
RAM:807B FF                          .BYTE $FF
RAM:807C FF                          .BYTE $FF
RAM:807D FF                          .BYTE $FF
RAM:807E FF                          .BYTE $FF
RAM:807F FF                          .BYTE $FF
RAM:8080 FF                          .BYTE $FF
RAM:8081 FF                          .BYTE $FF
RAM:8082 FF                          .BYTE $FF
RAM:8083 FF                          .BYTE $FF
RAM:8084 FF                          .BYTE $FF
RAM:8085 FF                          .BYTE $FF
RAM:8086 FF                          .BYTE $FF
RAM:8087 FF                          .BYTE $FF
RAM:8088 FF                          .BYTE $FF
RAM:8089 FF                          .BYTE $FF
RAM:808A FF                          .BYTE $FF
RAM:808B FF                          .BYTE $FF
RAM:808C FF                          .BYTE $FF
RAM:808D FF                          .BYTE $FF
RAM:808E FF                          .BYTE $FF
RAM:808F FF                          .BYTE $FF
RAM:8090 FF                          .BYTE $FF
RAM:8091 FF                          .BYTE $FF
RAM:8092 FF                          .BYTE $FF
RAM:8093 FF                          .BYTE $FF
RAM:8094 FF                          .BYTE $FF
RAM:8095 FF                          .BYTE $FF
RAM:8096 FF                          .BYTE $FF
RAM:8097 FF                          .BYTE $FF
RAM:8098 FF                          .BYTE $FF
RAM:8099 FF                          .BYTE $FF
RAM:809A FF                          .BYTE $FF
RAM:809B FF                          .BYTE $FF
RAM:809C FF                          .BYTE $FF
RAM:809D FF                          .BYTE $FF
RAM:809E FF                          .BYTE $FF
RAM:809F FF                          .BYTE $FF
RAM:80A0 FF                          .BYTE $FF
RAM:80A1 FF                          .BYTE $FF
RAM:80A2 FF                          .BYTE $FF
RAM:80A3 FF                          .BYTE $FF
RAM:80A4 FF                          .BYTE $FF
RAM:80A5 FF                          .BYTE $FF
RAM:80A6 FF                          .BYTE $FF
RAM:80A7 FF                          .BYTE $FF
RAM:80A8 FF                          .BYTE $FF
RAM:80A9 FF                          .BYTE $FF
RAM:80AA FF                          .BYTE $FF
RAM:80AB FF                          .BYTE $FF
RAM:80AC FF                          .BYTE $FF
RAM:80AD FF                          .BYTE $FF
RAM:80AE FF                          .BYTE $FF
RAM:80AF FF                          .BYTE $FF
RAM:80B0 FF                          .BYTE $FF
RAM:80B1 FF                          .BYTE $FF
RAM:80B2 FF                          .BYTE $FF
RAM:80B3 FF                          .BYTE $FF
RAM:80B4 FF                          .BYTE $FF
RAM:80B5 FF                          .BYTE $FF
RAM:80B6 FF                          .BYTE $FF
RAM:80B7 FF                          .BYTE $FF
RAM:80B8 FF                          .BYTE $FF
RAM:80B9 FF                          .BYTE $FF
RAM:80BA FF                          .BYTE $FF
RAM:80BB FF                          .BYTE $FF
RAM:80BC FF                          .BYTE $FF
RAM:80BD FF                          .BYTE $FF
RAM:80BE FF                          .BYTE $FF
RAM:80BF FF                          .BYTE $FF
RAM:80C0 FF                          .BYTE $FF
RAM:80C1 FF                          .BYTE $FF
RAM:80C2 FF                          .BYTE $FF
RAM:80C3 FF                          .BYTE $FF
RAM:80C4 FF                          .BYTE $FF
RAM:80C5 FF                          .BYTE $FF
RAM:80C6 FF                          .BYTE $FF
RAM:80C7 FF                          .BYTE $FF
RAM:80C8 FF                          .BYTE $FF
RAM:80C9 FF                          .BYTE $FF
RAM:80CA FF                          .BYTE $FF
RAM:80CB FF                          .BYTE $FF
RAM:80CC FF                          .BYTE $FF
RAM:80CD FF                          .BYTE $FF
RAM:80CE FF                          .BYTE $FF
RAM:80CF FF                          .BYTE $FF
RAM:80D0 FF                          .BYTE $FF
RAM:80D1 FF                          .BYTE $FF
RAM:80D2 FF                          .BYTE $FF
RAM:80D3 FF                          .BYTE $FF
RAM:80D4 FF                          .BYTE $FF
RAM:80D5 FF                          .BYTE $FF
RAM:80D6 FF                          .BYTE $FF
RAM:80D7 FF                          .BYTE $FF
RAM:80D8 FF                          .BYTE $FF
RAM:80D9 FF                          .BYTE $FF
RAM:80DA FF                          .BYTE $FF
RAM:80DB FF                          .BYTE $FF
RAM:80DC FF                          .BYTE $FF
RAM:80DD FF                          .BYTE $FF
RAM:80DE FF                          .BYTE $FF
RAM:80DF FF                          .BYTE $FF
RAM:80E0 FF                          .BYTE $FF
RAM:80E1 FF                          .BYTE $FF
RAM:80E2 FF                          .BYTE $FF
RAM:80E3 FF                          .BYTE $FF
RAM:80E4 FF                          .BYTE $FF
RAM:80E5 FF                          .BYTE $FF
RAM:80E6 FF                          .BYTE $FF
RAM:80E7 FF                          .BYTE $FF
RAM:80E8 FF                          .BYTE $FF
RAM:80E9 FF                          .BYTE $FF
RAM:80EA FF                          .BYTE $FF
RAM:80EB FF                          .BYTE $FF
RAM:80EC FF                          .BYTE $FF
RAM:80ED FF                          .BYTE $FF
RAM:80EE FF                          .BYTE $FF
RAM:80EF FF                          .BYTE $FF
RAM:80F0 FF                          .BYTE $FF
RAM:80F1 FF                          .BYTE $FF
RAM:80F2 FF                          .BYTE $FF
RAM:80F3 FF                          .BYTE $FF
RAM:80F4 FF                          .BYTE $FF
RAM:80F5 FF                          .BYTE $FF
RAM:80F6 FF                          .BYTE $FF
RAM:80F7 FF                          .BYTE $FF
RAM:80F8 FF                          .BYTE $FF
RAM:80F9 FF                          .BYTE $FF
RAM:80FA FF                          .BYTE $FF
RAM:80FB FF                          .BYTE $FF
RAM:80FC FF                          .BYTE $FF
RAM:80FD FF                          .BYTE $FF
RAM:80FE FF                          .BYTE $FF
RAM:80FF FF                          .BYTE $FF
RAM:8100 18                          .BYTE $18
RAM:8101 B0                          .BYTE $B0
RAM:8102 38                          .BYTE $38 ; 8
RAM:8103 48                          .BYTE $48 ; H
RAM:8104 8A                          .BYTE $8A
RAM:8105 48                          .BYTE $48 ; H
RAM:8106 98                          .BYTE $98
RAM:8107 48                          .BYTE $48 ; H
RAM:8108 A5                          .BYTE $A5
RAM:8109 00                          .BYTE   0
RAM:810A 48                          .BYTE $48 ; H
RAM:810B A5                          .BYTE $A5
RAM:810C 01                          .BYTE   1
RAM:810D 48                          .BYTE $48 ; H
RAM:810E A5                          .BYTE $A5
RAM:810F 02                          .BYTE   2
RAM:8110 48                          .BYTE $48 ; H
RAM:8111 BA                          .BYTE $BA
RAM:8112 BD                          .BYTE $BD
RAM:8113 06                          .BYTE   6
RAM:8114 01                          .BYTE   1
RAM:8115 48                          .BYTE $48 ; H
RAM:8116 B0                          .BYTE $B0
RAM:8117 32                          .BYTE $32 ; 2
RAM:8118 A9                          .BYTE $A9
RAM:8119 94                          .BYTE $94
RAM:811A 8D                          .BYTE $8D
RAM:811B F9                          .BYTE $F9
RAM:811C 04                          .BYTE   4
RAM:811D A9                          .BYTE $A9
RAM:811E 97                          .BYTE $97
RAM:811F 8D                          .BYTE $8D
RAM:8120 79                          .BYTE $79 ; y
RAM:8121 05                          .BYTE   5
RAM:8122 A9                          .BYTE $A9
RAM:8123 00                          .BYTE   0
RAM:8124 8D                          .BYTE $8D
RAM:8125 F9                          .BYTE $F9
RAM:8126 05                          .BYTE   5
RAM:8127 8D                          .BYTE $8D
RAM:8128 F9                          .BYTE $F9
RAM:8129 06                          .BYTE   6
RAM:812A A5                          .BYTE $A5
RAM:812B 24                          .BYTE $24 ; $
RAM:812C 20                          .BYTE $20
RAM:812D 80                          .BYTE $80
RAM:812E C1                          .BYTE $C1
RAM:812F A5                          .BYTE $A5
RAM:8130 21                          .BYTE $21 ; !
RAM:8131 8D                          .BYTE $8D
RAM:8132 79                          .BYTE $79 ; y
RAM:8133 06                          .BYTE   6
RAM:8134 A9                          .BYTE $A9
RAM:8135 01                          .BYTE   1
RAM:8136 8D                          .BYTE $8D
RAM:8137 79                          .BYTE $79 ; y
RAM:8138 07                          .BYTE   7
RAM:8139 A9                          .BYTE $A9
RAM:813A 4B                          .BYTE $4B ; K
RAM:813B 8D                          .BYTE $8D
RAM:813C 79                          .BYTE $79 ; y
RAM:813D 04                          .BYTE   4
RAM:813E A9                          .BYTE $A9
RAM:813F 02                          .BYTE   2
RAM:8140 85                          .BYTE $85
RAM:8141 36                          .BYTE $36 ; 6
RAM:8142 A9                          .BYTE $A9
RAM:8143 C1                          .BYTE $C1
RAM:8144 85                          .BYTE $85
RAM:8145 37                          .BYTE $37 ; 7
RAM:8146 68                          .BYTE $68 ; h
RAM:8147 EA                          .BYTE $EA
RAM:8148 EA                          .BYTE $EA
RAM:8149 F0                          .BYTE $F0
RAM:814A 68                          .BYTE $68 ; h
RAM:814B 8D                          .BYTE $8D
RAM:814C FF                          .BYTE $FF
RAM:814D CF                          .BYTE $CF
RAM:814E 8D                          .BYTE $8D
RAM:814F 00                          .BYTE   0
RAM:8150 C1                          .BYTE $C1
RAM:8151 C9                          .BYTE $C9
RAM:8152 91                          .BYTE $91
RAM:8153 D0                          .BYTE $D0
RAM:8154 03                          .BYTE   3
RAM:8155 4C                          .BYTE $4C ; L
RAM:8156 03                          .BYTE   3
RAM:8157 C8                          .BYTE $C8
RAM:8158 48                          .BYTE $48 ; H
RAM:8159 CD                          .BYTE $CD
RAM:815A F9                          .BYTE $F9
RAM:815B 04                          .BYTE   4
RAM:815C D0                          .BYTE $D0
RAM:815D 0A                          .BYTE  $A
RAM:815E A5                          .BYTE $A5
RAM:815F 32                          .BYTE $32 ; 2
RAM:8160 49                          .BYTE $49 ; I
RAM:8161 C0                          .BYTE $C0
RAM:8162 85                          .BYTE $85
RAM:8163 32                          .BYTE $32 ; 2
RAM:8164 68                          .BYTE $68 ; h
RAM:8165 4C                          .BYTE $4C ; L
RAM:8166 06                          .BYTE   6
RAM:8167 C8                          .BYTE $C8
RAM:8168 68                          .BYTE $68 ; h
RAM:8169 48                          .BYTE $48 ; H
RAM:816A CD                          .BYTE $CD
RAM:816B 79                          .BYTE $79 ; y
RAM:816C 05                          .BYTE   5
RAM:816D D0                          .BYTE $D0
RAM:816E 0C                          .BYTE  $C
RAM:816F AD                          .BYTE $AD
RAM:8170 F9                          .BYTE $F9
RAM:8171 06                          .BYTE   6
RAM:8172 49                          .BYTE $49 ; I
RAM:8173 FF                          .BYTE $FF
RAM:8174 8D                          .BYTE $8D
RAM:8175 F9                          .BYTE $F9
RAM:8176 06                          .BYTE   6
RAM:8177 68                          .BYTE $68 ; h
RAM:8178 4C                          .BYTE $4C ; L
RAM:8179 06                          .BYTE   6
RAM:817A C8                          .BYTE $C8
RAM:817B 68                          .BYTE $68 ; h
RAM:817C 4C                          .BYTE $4C ; L
RAM:817D 00                          .BYTE   0
RAM:817E C8                          .BYTE $C8
RAM:817F 2F                          .BYTE $2F ; /
RAM:8180 69                          .BYTE $69 ; i
RAM:8181 01                          .BYTE   1
RAM:8182 8D                          .BYTE $8D
RAM:8183 F9                          .BYTE $F9
RAM:8184 07                          .BYTE   7
RAM:8185 60                          .BYTE $60 ; `
RAM:8186 00                          .BYTE   0
RAM:8187 30                          .BYTE $30 ; 0
RAM:8188 5A                          .BYTE $5A ; Z
RAM:8189 50                          .BYTE $50 ; P
RAM:818A 33                          .BYTE $33 ; 3
RAM:818B 31                          .BYTE $31 ; 1
RAM:818C 20                          .BYTE $20
RAM:818D 20                          .BYTE $20
RAM:818E 00                          .BYTE   0
RAM:818F 31                          .BYTE $31 ; 1
RAM:8190 5A                          .BYTE $5A ; Z
RAM:8191 50                          .BYTE $50 ; P
RAM:8192 33                          .BYTE $33 ; 3
RAM:8193 32                          .BYTE $32 ; 2
RAM:8194 20                          .BYTE $20
RAM:8195 20                          .BYTE $20
RAM:8196 00                          .BYTE   0
RAM:8197 32                          .BYTE $32 ; 2
RAM:8198 5A                          .BYTE $5A ; Z
RAM:8199 50                          .BYTE $50 ; P
RAM:819A 33                          .BYTE $33 ; 3
RAM:819B 33                          .BYTE $33 ; 3
RAM:819C 20                          .BYTE $20
RAM:819D 20                          .BYTE $20
RAM:819E 00                          .BYTE   0
RAM:819F 33                          .BYTE $33 ; 3
RAM:81A0 5A                          .BYTE $5A ; Z
RAM:81A1 50                          .BYTE $50 ; P
RAM:81A2 33                          .BYTE $33 ; 3
RAM:81A3 34                          .BYTE $34 ; 4
RAM:81A4 20                          .BYTE $20
RAM:81A5 20                          .BYTE $20
RAM:81A6 00                          .BYTE   0
RAM:81A7 34                          .BYTE $34 ; 4
RAM:81A8 5A                          .BYTE $5A ; Z
RAM:81A9 50                          .BYTE $50 ; P
RAM:81AA 33                          .BYTE $33 ; 3
RAM:81AB 35                          .BYTE $35 ; 5
RAM:81AC 20                          .BYTE $20
RAM:81AD 20                          .BYTE $20
RAM:81AE 00                          .BYTE   0
RAM:81AF 35                          .BYTE $35 ; 5
RAM:81B0 5A                          .BYTE $5A ; Z
RAM:81B1 50                          .BYTE $50 ; P
RAM:81B2 33                          .BYTE $33 ; 3
RAM:81B3 36                          .BYTE $36 ; 6
RAM:81B4 20                          .BYTE $20
RAM:81B5 20                          .BYTE $20
RAM:81B6 00                          .BYTE   0
RAM:81B7 36                          .BYTE $36 ; 6
RAM:81B8 5A                          .BYTE $5A ; Z
RAM:81B9 50                          .BYTE $50 ; P
RAM:81BA 33                          .BYTE $33 ; 3
RAM:81BB 37                          .BYTE $37 ; 7
RAM:81BC 20                          .BYTE $20
RAM:81BD 20                          .BYTE $20
RAM:81BE 00                          .BYTE   0
RAM:81BF 37                          .BYTE $37 ; 7
RAM:81C0 5A                          .BYTE $5A ; Z
RAM:81C1 50                          .BYTE $50 ; P
RAM:81C2 33                          .BYTE $33 ; 3
RAM:81C3 38                          .BYTE $38 ; 8
RAM:81C4 20                          .BYTE $20
RAM:81C5 20                          .BYTE $20
RAM:81C6 00                          .BYTE   0
RAM:81C7 38                          .BYTE $38 ; 8
RAM:81C8 5A                          .BYTE $5A ; Z
RAM:81C9 50                          .BYTE $50 ; P
RAM:81CA 33                          .BYTE $33 ; 3
RAM:81CB 39                          .BYTE $39 ; 9
RAM:81CC 20                          .BYTE $20
RAM:81CD 20                          .BYTE $20
RAM:81CE 00                          .BYTE   0
RAM:81CF 39                          .BYTE $39 ; 9
RAM:81D0 5A                          .BYTE $5A ; Z
RAM:81D1 50                          .BYTE $50 ; P
RAM:81D2 33                          .BYTE $33 ; 3
RAM:81D3 41                          .BYTE $41 ; A
RAM:81D4 20                          .BYTE $20
RAM:81D5 20                          .BYTE $20
RAM:81D6 00                          .BYTE   0
RAM:81D7 3A                          .BYTE $3A ; :
RAM:81D8 5A                          .BYTE $5A ; Z
RAM:81D9 50                          .BYTE $50 ; P
RAM:81DA 33                          .BYTE $33 ; 3
RAM:81DB 42                          .BYTE $42 ; B
RAM:81DC 20                          .BYTE $20
RAM:81DD 20                          .BYTE $20
RAM:81DE 00                          .BYTE   0
RAM:81DF 3B                          .BYTE $3B ; ;
RAM:81E0 5A                          .BYTE $5A ; Z
RAM:81E1 50                          .BYTE $50 ; P
RAM:81E2 33                          .BYTE $33 ; 3
RAM:81E3 43                          .BYTE $43 ; C
RAM:81E4 20                          .BYTE $20
RAM:81E5 20                          .BYTE $20
RAM:81E6 00                          .BYTE   0
RAM:81E7 3C                          .BYTE $3C ; <
RAM:81E8 5A                          .BYTE $5A ; Z
RAM:81E9 50                          .BYTE $50 ; P
RAM:81EA 33                          .BYTE $33 ; 3
RAM:81EB 44                          .BYTE $44 ; D
RAM:81EC 20                          .BYTE $20
RAM:81ED 20                          .BYTE $20
RAM:81EE 00                          .BYTE   0
RAM:81EF 3D                          .BYTE $3D ; =
RAM:81F0 5A                          .BYTE $5A ; Z
RAM:81F1 50                          .BYTE $50 ; P
RAM:81F2 33                          .BYTE $33 ; 3
RAM:81F3 45                          .BYTE $45 ; E
RAM:81F4 20                          .BYTE $20
RAM:81F5 20                          .BYTE $20
RAM:81F6 00                          .BYTE   0
RAM:81F7 3E                          .BYTE $3E ; >
RAM:81F8 5A                          .BYTE $5A ; Z
RAM:81F9 50                          .BYTE $50 ; P
RAM:81FA 33                          .BYTE $33 ; 3
RAM:81FB 46                          .BYTE $46 ; F
RAM:81FC 20                          .BYTE $20
RAM:81FD 20                          .BYTE $20
RAM:81FE 00                          .BYTE   0
RAM:81FF 3F                          .BYTE $3F ; ?
RAM:8200 FF                          .BYTE $FF
RAM:8201 FF                          .BYTE $FF
RAM:8202 FF                          .BYTE $FF
RAM:8203 FF                          .BYTE $FF
RAM:8204 FF                          .BYTE $FF
RAM:8205 FF                          .BYTE $FF
RAM:8206 FF                          .BYTE $FF
RAM:8207 FF                          .BYTE $FF
RAM:8208 FF                          .BYTE $FF
RAM:8209 FF                          .BYTE $FF
RAM:820A FF                          .BYTE $FF
RAM:820B FF                          .BYTE $FF
RAM:820C FF                          .BYTE $FF
RAM:820D FF                          .BYTE $FF
RAM:820E FF                          .BYTE $FF
RAM:820F FF                          .BYTE $FF
RAM:8210 FF                          .BYTE $FF
RAM:8211 FF                          .BYTE $FF
RAM:8212 FF                          .BYTE $FF
RAM:8213 FF                          .BYTE $FF
RAM:8214 FF                          .BYTE $FF
RAM:8215 FF                          .BYTE $FF
RAM:8216 FF                          .BYTE $FF
RAM:8217 FF                          .BYTE $FF
RAM:8218 FF                          .BYTE $FF
RAM:8219 FF                          .BYTE $FF
RAM:821A FF                          .BYTE $FF
RAM:821B FF                          .BYTE $FF
RAM:821C FF                          .BYTE $FF
RAM:821D FF                          .BYTE $FF
RAM:821E FF                          .BYTE $FF
RAM:821F FF                          .BYTE $FF
RAM:8220 FF                          .BYTE $FF
RAM:8221 FF                          .BYTE $FF
RAM:8222 FF                          .BYTE $FF
RAM:8223 FF                          .BYTE $FF
RAM:8224 FF                          .BYTE $FF
RAM:8225 FF                          .BYTE $FF
RAM:8226 FF                          .BYTE $FF
RAM:8227 FF                          .BYTE $FF
RAM:8228 FF                          .BYTE $FF
RAM:8229 FF                          .BYTE $FF
RAM:822A FF                          .BYTE $FF
RAM:822B FF                          .BYTE $FF
RAM:822C FF                          .BYTE $FF
RAM:822D FF                          .BYTE $FF
RAM:822E FF                          .BYTE $FF
RAM:822F FF                          .BYTE $FF
RAM:8230 FF                          .BYTE $FF
RAM:8231 FF                          .BYTE $FF
RAM:8232 FF                          .BYTE $FF
RAM:8233 FF                          .BYTE $FF
RAM:8234 FF                          .BYTE $FF
RAM:8235 FF                          .BYTE $FF
RAM:8236 FF                          .BYTE $FF
RAM:8237 FF                          .BYTE $FF
RAM:8238 FF                          .BYTE $FF
RAM:8239 FF                          .BYTE $FF
RAM:823A FF                          .BYTE $FF
RAM:823B FF                          .BYTE $FF
RAM:823C FF                          .BYTE $FF
RAM:823D FF                          .BYTE $FF
RAM:823E FF                          .BYTE $FF
RAM:823F FF                          .BYTE $FF
RAM:8240 FF                          .BYTE $FF
RAM:8241 FF                          .BYTE $FF
RAM:8242 FF                          .BYTE $FF
RAM:8243 FF                          .BYTE $FF
RAM:8244 FF                          .BYTE $FF
RAM:8245 FF                          .BYTE $FF
RAM:8246 FF                          .BYTE $FF
RAM:8247 FF                          .BYTE $FF
RAM:8248 FF                          .BYTE $FF
RAM:8249 FF                          .BYTE $FF
RAM:824A FF                          .BYTE $FF
RAM:824B FF                          .BYTE $FF
RAM:824C FF                          .BYTE $FF
RAM:824D FF                          .BYTE $FF
RAM:824E FF                          .BYTE $FF
RAM:824F FF                          .BYTE $FF
RAM:8250 FF                          .BYTE $FF
RAM:8251 FF                          .BYTE $FF
RAM:8252 FF                          .BYTE $FF
RAM:8253 FF                          .BYTE $FF
RAM:8254 FF                          .BYTE $FF
RAM:8255 FF                          .BYTE $FF
RAM:8256 FF                          .BYTE $FF
RAM:8257 FF                          .BYTE $FF
RAM:8258 FF                          .BYTE $FF
RAM:8259 FF                          .BYTE $FF
RAM:825A FF                          .BYTE $FF
RAM:825B FF                          .BYTE $FF
RAM:825C FF                          .BYTE $FF
RAM:825D FF                          .BYTE $FF
RAM:825E FF                          .BYTE $FF
RAM:825F FF                          .BYTE $FF
RAM:8260 FF                          .BYTE $FF
RAM:8261 FF                          .BYTE $FF
RAM:8262 FF                          .BYTE $FF
RAM:8263 FF                          .BYTE $FF
RAM:8264 FF                          .BYTE $FF
RAM:8265 FF                          .BYTE $FF
RAM:8266 FF                          .BYTE $FF
RAM:8267 FF                          .BYTE $FF
RAM:8268 FF                          .BYTE $FF
RAM:8269 FF                          .BYTE $FF
RAM:826A FF                          .BYTE $FF
RAM:826B FF                          .BYTE $FF
RAM:826C FF                          .BYTE $FF
RAM:826D FF                          .BYTE $FF
RAM:826E FF                          .BYTE $FF
RAM:826F FF                          .BYTE $FF
RAM:8270 FF                          .BYTE $FF
RAM:8271 FF                          .BYTE $FF
RAM:8272 FF                          .BYTE $FF
RAM:8273 FF                          .BYTE $FF
RAM:8274 FF                          .BYTE $FF
RAM:8275 FF                          .BYTE $FF
RAM:8276 FF                          .BYTE $FF
RAM:8277 FF                          .BYTE $FF
RAM:8278 FF                          .BYTE $FF
RAM:8279 FF                          .BYTE $FF
RAM:827A FF                          .BYTE $FF
RAM:827B FF                          .BYTE $FF
RAM:827C FF                          .BYTE $FF
RAM:827D FF                          .BYTE $FF
RAM:827E FF                          .BYTE $FF
RAM:827F FF                          .BYTE $FF
RAM:8280 FF                          .BYTE $FF
RAM:8281 FF                          .BYTE $FF
RAM:8282 FF                          .BYTE $FF
RAM:8283 FF                          .BYTE $FF
RAM:8284 FF                          .BYTE $FF
RAM:8285 FF                          .BYTE $FF
RAM:8286 FF                          .BYTE $FF
RAM:8287 FF                          .BYTE $FF
RAM:8288 FF                          .BYTE $FF
RAM:8289 FF                          .BYTE $FF
RAM:828A FF                          .BYTE $FF
RAM:828B FF                          .BYTE $FF
RAM:828C FF                          .BYTE $FF
RAM:828D FF                          .BYTE $FF
RAM:828E FF                          .BYTE $FF
RAM:828F FF                          .BYTE $FF
RAM:8290 FF                          .BYTE $FF
RAM:8291 FF                          .BYTE $FF
RAM:8292 FF                          .BYTE $FF
RAM:8293 FF                          .BYTE $FF
RAM:8294 FF                          .BYTE $FF
RAM:8295 FF                          .BYTE $FF
RAM:8296 FF                          .BYTE $FF
RAM:8297 FF                          .BYTE $FF
RAM:8298 FF                          .BYTE $FF
RAM:8299 FF                          .BYTE $FF
RAM:829A FF                          .BYTE $FF
RAM:829B FF                          .BYTE $FF
RAM:829C FF                          .BYTE $FF
RAM:829D FF                          .BYTE $FF
RAM:829E FF                          .BYTE $FF
RAM:829F FF                          .BYTE $FF
RAM:82A0 FF                          .BYTE $FF
RAM:82A1 FF                          .BYTE $FF
RAM:82A2 FF                          .BYTE $FF
RAM:82A3 FF                          .BYTE $FF
RAM:82A4 FF                          .BYTE $FF
RAM:82A5 FF                          .BYTE $FF
RAM:82A6 FF                          .BYTE $FF
RAM:82A7 FF                          .BYTE $FF
RAM:82A8 FF                          .BYTE $FF
RAM:82A9 FF                          .BYTE $FF
RAM:82AA FF                          .BYTE $FF
RAM:82AB FF                          .BYTE $FF
RAM:82AC FF                          .BYTE $FF
RAM:82AD FF                          .BYTE $FF
RAM:82AE FF                          .BYTE $FF
RAM:82AF FF                          .BYTE $FF
RAM:82B0 FF                          .BYTE $FF
RAM:82B1 FF                          .BYTE $FF
RAM:82B2 FF                          .BYTE $FF
RAM:82B3 FF                          .BYTE $FF
RAM:82B4 FF                          .BYTE $FF
RAM:82B5 FF                          .BYTE $FF
RAM:82B6 FF                          .BYTE $FF
RAM:82B7 FF                          .BYTE $FF
RAM:82B8 FF                          .BYTE $FF
RAM:82B9 FF                          .BYTE $FF
RAM:82BA FF                          .BYTE $FF
RAM:82BB FF                          .BYTE $FF
RAM:82BC FF                          .BYTE $FF
RAM:82BD FF                          .BYTE $FF
RAM:82BE FF                          .BYTE $FF
RAM:82BF FF                          .BYTE $FF
RAM:82C0 FF                          .BYTE $FF
RAM:82C1 FF                          .BYTE $FF
RAM:82C2 FF                          .BYTE $FF
RAM:82C3 FF                          .BYTE $FF
RAM:82C4 FF                          .BYTE $FF
RAM:82C5 FF                          .BYTE $FF
RAM:82C6 FF                          .BYTE $FF
RAM:82C7 FF                          .BYTE $FF
RAM:82C8 FF                          .BYTE $FF
RAM:82C9 FF                          .BYTE $FF
RAM:82CA FF                          .BYTE $FF
RAM:82CB FF                          .BYTE $FF
RAM:82CC FF                          .BYTE $FF
RAM:82CD FF                          .BYTE $FF
RAM:82CE FF                          .BYTE $FF
RAM:82CF FF                          .BYTE $FF
RAM:82D0 FF                          .BYTE $FF
RAM:82D1 FF                          .BYTE $FF
RAM:82D2 FF                          .BYTE $FF
RAM:82D3 FF                          .BYTE $FF
RAM:82D4 FF                          .BYTE $FF
RAM:82D5 FF                          .BYTE $FF
RAM:82D6 FF                          .BYTE $FF
RAM:82D7 FF                          .BYTE $FF
RAM:82D8 FF                          .BYTE $FF
RAM:82D9 FF                          .BYTE $FF
RAM:82DA FF                          .BYTE $FF
RAM:82DB FF                          .BYTE $FF
RAM:82DC FF                          .BYTE $FF
RAM:82DD FF                          .BYTE $FF
RAM:82DE FF                          .BYTE $FF
RAM:82DF FF                          .BYTE $FF
RAM:82E0 FF                          .BYTE $FF
RAM:82E1 FF                          .BYTE $FF
RAM:82E2 FF                          .BYTE $FF
RAM:82E3 FF                          .BYTE $FF
RAM:82E4 FF                          .BYTE $FF
RAM:82E5 FF                          .BYTE $FF
RAM:82E6 FF                          .BYTE $FF
RAM:82E7 FF                          .BYTE $FF
RAM:82E8 FF                          .BYTE $FF
RAM:82E9 FF                          .BYTE $FF
RAM:82EA FF                          .BYTE $FF
RAM:82EB FF                          .BYTE $FF
RAM:82EC FF                          .BYTE $FF
RAM:82ED FF                          .BYTE $FF
RAM:82EE FF                          .BYTE $FF
RAM:82EF FF                          .BYTE $FF
RAM:82F0 FF                          .BYTE $FF
RAM:82F1 FF                          .BYTE $FF
RAM:82F2 FF                          .BYTE $FF
RAM:82F3 FF                          .BYTE $FF
RAM:82F4 FF                          .BYTE $FF
RAM:82F5 FF                          .BYTE $FF
RAM:82F6 FF                          .BYTE $FF
RAM:82F7 FF                          .BYTE $FF
RAM:82F8 FF                          .BYTE $FF
RAM:82F9 FF                          .BYTE $FF
RAM:82FA FF                          .BYTE $FF
RAM:82FB FF                          .BYTE $FF
RAM:82FC FF                          .BYTE $FF
RAM:82FD FF                          .BYTE $FF
RAM:82FE FF                          .BYTE $FF
RAM:82FF FF                          .BYTE $FF
RAM:8300 2C                          .BYTE $2C ; ,
RAM:8301 0F                          .BYTE  $F
RAM:8302 C3                          .BYTE $C3
RAM:8303 70                          .BYTE $70 ; p
RAM:8304 04                          .BYTE   4
RAM:8305 38                          .BYTE $38 ; 8
RAM:8306 90                          .BYTE $90
RAM:8307 18                          .BYTE $18
RAM:8308 B8                          .BYTE $B8
RAM:8309 8D                          .BYTE $8D
RAM:830A FF                          .BYTE $FF
RAM:830B CF                          .BYTE $CF
RAM:830C 20                          .BYTE $20
RAM:830D 10                          .BYTE $10
RAM:830E C3                          .BYTE $C3
RAM:830F 60                          .BYTE $60 ; `
RAM:8310 48                          .BYTE $48 ; H
RAM:8311 8A                          .BYTE $8A
RAM:8312 48                          .BYTE $48 ; H
RAM:8313 98                          .BYTE $98
RAM:8314 48                          .BYTE $48 ; H
RAM:8315 08                          .BYTE   8
RAM:8316 BA                          .BYTE $BA
RAM:8317 BD                          .BYTE $BD
RAM:8318 04                          .BYTE   4
RAM:8319 01                          .BYTE   1
RAM:831A 28                          .BYTE $28 ; (
RAM:831B 48                          .BYTE $48 ; H
RAM:831C 70                          .BYTE $70 ; p
RAM:831D 03                          .BYTE   3
RAM:831E 4C                          .BYTE $4C ; L
RAM:831F 30                          .BYTE $30 ; 0
RAM:8320 CC                          .BYTE $CC
RAM:8321 AD                          .BYTE $AD
RAM:8322 4A                          .BYTE $4A ; J
RAM:8323 FB                          .BYTE $FB
RAM:8324 D0                          .BYTE $D0
RAM:8325 2A                          .BYTE $2A ; *
RAM:8326 20                          .BYTE $20
RAM:8327 01                          .BYTE   1
RAM:8328 C8                          .BYTE $C8
RAM:8329 A9                          .BYTE $A9
RAM:832A 00                          .BYTE   0
RAM:832B 8D                          .BYTE $8D
RAM:832C 7B                          .BYTE $7B ; {
RAM:832D 07                          .BYTE   7
RAM:832E A9                          .BYTE $A9
RAM:832F 02                          .BYTE   2
RAM:8330 85                          .BYTE $85
RAM:8331 C5                          .BYTE $C5
RAM:8332 A9                          .BYTE $A9
RAM:8333 01                          .BYTE   1
RAM:8334 85                          .BYTE $85
RAM:8335 C6                          .BYTE $C6
RAM:8336 A9                          .BYTE $A9
RAM:8337 C3                          .BYTE $C3
RAM:8338 85                          .BYTE $85
RAM:8339 39                          .BYTE $39 ; 9
RAM:833A 85                          .BYTE $85
RAM:833B 37                          .BYTE $37 ; 7
RAM:833C A9                          .BYTE $A9
RAM:833D 4D                          .BYTE $4D ; M
RAM:833E 85                          .BYTE $85
RAM:833F 38                          .BYTE $38 ; 8
RAM:8340 A9                          .BYTE $A9
RAM:8341 4A                          .BYTE $4A ; J
RAM:8342 85                          .BYTE $85
RAM:8343 36                          .BYTE $36 ; 6
RAM:8344 68                          .BYTE $68 ; h
RAM:8345 68                          .BYTE $68 ; h
RAM:8346 A8                          .BYTE $A8
RAM:8347 68                          .BYTE $68 ; h
RAM:8348 AA                          .BYTE $AA
RAM:8349 68                          .BYTE $68 ; h
RAM:834A 4C                          .BYTE $4C ; L
RAM:834B F0                          .BYTE $F0
RAM:834C FD                          .BYTE $FD
RAM:834D 4C                          .BYTE $4C ; L
RAM:834E 1B                          .BYTE $1B
RAM:834F FD                          .BYTE $FD
RAM:8350 20                          .BYTE $20
RAM:8351 CA                          .BYTE $CA
RAM:8352 CC                          .BYTE $CC
RAM:8353 20                          .BYTE $20
RAM:8354 01                          .BYTE   1
RAM:8355 C8                          .BYTE $C8
RAM:8356 20                          .BYTE $20
RAM:8357 CA                          .BYTE $CA
RAM:8358 CC                          .BYTE $CC
RAM:8359 A9                          .BYTE $A9
RAM:835A C3                          .BYTE $C3
RAM:835B 85                          .BYTE $85
RAM:835C 39                          .BYTE $39 ; 9
RAM:835D 85                          .BYTE $85
RAM:835E 37                          .BYTE $37 ; 7
RAM:835F A9                          .BYTE $A9
RAM:8360 05                          .BYTE   5
RAM:8361 85                          .BYTE $85
RAM:8362 38                          .BYTE $38 ; 8
RAM:8363 A9                          .BYTE $A9
RAM:8364 07                          .BYTE   7
RAM:8365 85                          .BYTE $85
RAM:8366 36                          .BYTE $36 ; 6
RAM:8367 18                          .BYTE $18
RAM:8368 4C                          .BYTE $4C ; L
RAM:8369 30                          .BYTE $30 ; 0
RAM:836A CC                          .BYTE $CC
RAM:836B 7B                          .BYTE $7B ; {
RAM:836C 3D                          .BYTE $3D ; =
RAM:836D F8                          .BYTE $F8
RAM:836E 08                          .BYTE   8
RAM:836F 8D                          .BYTE $8D
RAM:8370 FF                          .BYTE $FF
RAM:8371 CF                          .BYTE $CF
RAM:8372 20                          .BYTE $20
RAM:8373 54                          .BYTE $54 ; T
RAM:8374 CB                          .BYTE $CB
RAM:8375 28                          .BYTE $28 ; (
RAM:8376 60                          .BYTE $60 ; `
RAM:8377 08                          .BYTE   8
RAM:8378 8D                          .BYTE $8D
RAM:8379 FF                          .BYTE $FF
RAM:837A CF                          .BYTE $CF
RAM:837B 20                          .BYTE $20
RAM:837C A0                          .BYTE $A0
RAM:837D CB                          .BYTE $CB
RAM:837E 28                          .BYTE $28 ; (
RAM:837F 60                          .BYTE $60 ; `
RAM:8380 CD                          .BYTE $CD
RAM:8381 94                          .BYTE $94
RAM:8382 2B                          .BYTE $2B ; +
RAM:8383 7A                          .BYTE $7A ; z
RAM:8384 B7                          .BYTE $B7
RAM:8385 C2                          .BYTE $C2
RAM:8386 9C                          .BYTE $9C
RAM:8387 04                          .BYTE   4
RAM:8388 3A                          .BYTE $3A ; :
RAM:8389 CC                          .BYTE $CC
RAM:838A 3E                          .BYTE $3E ; >
RAM:838B B7                          .BYTE $B7
RAM:838C C8                          .BYTE $C8
RAM:838D 7B                          .BYTE $7B ; {
RAM:838E B7                          .BYTE $B7
RAM:838F 28                          .BYTE $28 ; (
RAM:8390 10                          .BYTE $10
RAM:8391 FE                          .BYTE $FE
RAM:8392 0A                          .BYTE  $A
RAM:8393 DC                          .BYTE $DC
RAM:8394 9C                          .BYTE $9C
RAM:8395 04                          .BYTE   4
RAM:8396 3A                          .BYTE $3A ; :
RAM:8397 F1                          .BYTE $F1
RAM:8398 3F                          .BYTE $3F ; ?
RAM:8399 FE                          .BYTE $FE
RAM:839A 20                          .BYTE $20
RAM:839B 20                          .BYTE $20
RAM:839C 04                          .BYTE   4
RAM:839D 7B                          .BYTE $7B ; {
RAM:839E 32                          .BYTE $32 ; 2
RAM:839F 12                          .BYTE $12
RAM:83A0 3F                          .BYTE $3F ; ?
RAM:83A1 CD                          .BYTE $CD
RAM:83A2 F0                          .BYTE $F0
RAM:83A3 1B                          .BYTE $1B
RAM:83A4 CD                          .BYTE $CD
RAM:83A5 46                          .BYTE $46 ; F
RAM:83A6 04                          .BYTE   4
RAM:83A7 C3                          .BYTE $C3
RAM:83A8 24                          .BYTE $24 ; $
RAM:83A9 1D                          .BYTE $1D
RAM:83AA CD                          .BYTE $CD
RAM:83AB 96                          .BYTE $96
RAM:83AC 0E                          .BYTE  $E
RAM:83AD C2                          .BYTE $C2
RAM:83AE 9C                          .BYTE $9C
RAM:83AF 04                          .BYTE   4
RAM:83B0 F5                          .BYTE $F5
RAM:83B1 3A                          .BYTE $3A ; :
RAM:83B2 C9                          .BYTE $C9
RAM:83B3 3F                          .BYTE $3F ; ?
RAM:83B4 FE                          .BYTE $FE
RAM:83B5 08                          .BYTE   8
RAM:83B6 38                          .BYTE $38 ; 8
RAM:83B7 05                          .BYTE   5
RAM:83B8 CD                          .BYTE $CD
RAM:83B9 C4                          .BYTE $C4
RAM:83BA 04                          .BYTE   4
RAM:83BB 3E                          .BYTE $3E ; >
RAM:83BC 07                          .BYTE   7
RAM:83BD 21                          .BYTE $21 ; !
RAM:83BE C3                          .BYTE $C3
RAM:83BF 3F                          .BYTE $3F ; ?
RAM:83C0 77                          .BYTE $77 ; w
RAM:83C1 23                          .BYTE $23 ; #
RAM:83C2 22                          .BYTE $22 ; "
RAM:83C3 1F                          .BYTE $1F
RAM:83C4 3F                          .BYTE $3F ; ?
RAM:83C5 3A                          .BYTE $3A ; :
RAM:83C6 CC                          .BYTE $CC
RAM:83C7 3E                          .BYTE $3E ; >
RAM:83C8 B7                          .BYTE $B7
RAM:83C9 0E                          .BYTE  $E
RAM:83CA 03                          .BYTE   3
RAM:83CB C4                          .BYTE $C4
RAM:83CC 52                          .BYTE $52 ; R
RAM:83CD 1E                          .BYTE $1E
RAM:83CE F1                          .BYTE $F1
RAM:83CF FE                          .BYTE $FE
RAM:83D0 2C                          .BYTE $2C ; ,
RAM:83D1 28                          .BYTE $28 ; (
RAM:83D2 D7                          .BYTE $D7
RAM:83D3 C9                          .BYTE $C9
RAM:83D4 3A                          .BYTE $3A ; :
RAM:83D5 0C                          .BYTE  $C
RAM:83D6 3F                          .BYTE $3F ; ?
RAM:83D7 B7                          .BYTE $B7
RAM:83D8 C2                          .BYTE $C2
RAM:83D9 BA                          .BYTE $BA
RAM:83DA 04                          .BYTE   4
RAM:83DB CD                          .BYTE $CD
RAM:83DC 03                          .BYTE   3
RAM:83DD 0F                          .BYTE  $F
RAM:83DE 2A                          .BYTE $2A ; *
RAM:83DF 26                          .BYTE $26 ; &
RAM:83E0 3F                          .BYTE $3F ; ?
RAM:83E1 2B                          .BYTE $2B ; +
RAM:83E2 CD                          .BYTE $CD
RAM:83E3 16                          .BYTE $16
RAM:83E4 50                          .BYTE $50 ; P
RAM:83E5 B7                          .BYTE $B7
RAM:83E6 28                          .BYTE $28 ; (
RAM:83E7 06                          .BYTE   6
RAM:83E8 CD                          .BYTE $CD
RAM:83E9 D9                          .BYTE $D9
RAM:83EA 50                          .BYTE $50 ; P
RAM:83EB C3                          .BYTE $C3
RAM:83EC D3                          .BYTE $D3
RAM:83ED 04                          .BYTE   4
RAM:83EE 3D                          .BYTE $3D ; =
RAM:83EF 32                          .BYTE $32 ; 2
RAM:83F0 0C                          .BYTE  $C
RAM:83F1 3F                          .BYTE $3F ; ?
RAM:83F2 2A                          .BYTE $2A ; *
RAM:83F3 26                          .BYTE $26 ; &
RAM:83F4 3F                          .BYTE $3F ; ?
RAM:83F5 7E                          .BYTE $7E ; ~
RAM:83F6 23                          .BYTE $23 ; #
RAM:83F7 22                          .BYTE $22 ; "
RAM:83F8 26                          .BYTE $26 ; &
RAM:83F9 3F                          .BYTE $3F ; ?
RAM:83FA FE                          .BYTE $FE
RAM:83FB 21                          .BYTE $21 ; !
RAM:83FC 30                          .BYTE $30 ; 0
RAM:83FD F4                          .BYTE $F4
RAM:83FE C9                          .BYTE $C9
RAM:83FF CD                          .BYTE $CD
RAM:8400 FF                          .BYTE $FF
RAM:8401 FF                          .BYTE $FF
RAM:8402 FF                          .BYTE $FF
RAM:8403 FF                          .BYTE $FF
RAM:8404 FF                          .BYTE $FF
RAM:8405 FF                          .BYTE $FF
RAM:8406 FF                          .BYTE $FF
RAM:8407 FF                          .BYTE $FF
RAM:8408 FF                          .BYTE $FF
RAM:8409 FF                          .BYTE $FF
RAM:840A FF                          .BYTE $FF
RAM:840B FF                          .BYTE $FF
RAM:840C FF                          .BYTE $FF
RAM:840D FF                          .BYTE $FF
RAM:840E FF                          .BYTE $FF
RAM:840F FF                          .BYTE $FF
RAM:8410 FF                          .BYTE $FF
RAM:8411 FF                          .BYTE $FF
RAM:8412 FF                          .BYTE $FF
RAM:8413 FF                          .BYTE $FF
RAM:8414 FF                          .BYTE $FF
RAM:8415 FF                          .BYTE $FF
RAM:8416 FF                          .BYTE $FF
RAM:8417 FF                          .BYTE $FF
RAM:8418 FF                          .BYTE $FF
RAM:8419 FF                          .BYTE $FF
RAM:841A FF                          .BYTE $FF
RAM:841B FF                          .BYTE $FF
RAM:841C FF                          .BYTE $FF
RAM:841D FF                          .BYTE $FF
RAM:841E FF                          .BYTE $FF
RAM:841F FF                          .BYTE $FF
RAM:8420 FF                          .BYTE $FF
RAM:8421 FF                          .BYTE $FF
RAM:8422 FF                          .BYTE $FF
RAM:8423 FF                          .BYTE $FF
RAM:8424 FF                          .BYTE $FF
RAM:8425 FF                          .BYTE $FF
RAM:8426 FF                          .BYTE $FF
RAM:8427 FF                          .BYTE $FF
RAM:8428 FF                          .BYTE $FF
RAM:8429 FF                          .BYTE $FF
RAM:842A FF                          .BYTE $FF
RAM:842B FF                          .BYTE $FF
RAM:842C FF                          .BYTE $FF
RAM:842D FF                          .BYTE $FF
RAM:842E FF                          .BYTE $FF
RAM:842F FF                          .BYTE $FF
RAM:8430 FF                          .BYTE $FF
RAM:8431 FF                          .BYTE $FF
RAM:8432 FF                          .BYTE $FF
RAM:8433 FF                          .BYTE $FF
RAM:8434 FF                          .BYTE $FF
RAM:8435 FF                          .BYTE $FF
RAM:8436 FF                          .BYTE $FF
RAM:8437 FF                          .BYTE $FF
RAM:8438 FF                          .BYTE $FF
RAM:8439 FF                          .BYTE $FF
RAM:843A FF                          .BYTE $FF
RAM:843B FF                          .BYTE $FF
RAM:843C FF                          .BYTE $FF
RAM:843D FF                          .BYTE $FF
RAM:843E FF                          .BYTE $FF
RAM:843F FF                          .BYTE $FF
RAM:8440 FF                          .BYTE $FF
RAM:8441 FF                          .BYTE $FF
RAM:8442 FF                          .BYTE $FF
RAM:8443 FF                          .BYTE $FF
RAM:8444 FF                          .BYTE $FF
RAM:8445 FF                          .BYTE $FF
RAM:8446 FF                          .BYTE $FF
RAM:8447 FF                          .BYTE $FF
RAM:8448 FF                          .BYTE $FF
RAM:8449 FF                          .BYTE $FF
RAM:844A FF                          .BYTE $FF
RAM:844B FF                          .BYTE $FF
RAM:844C FF                          .BYTE $FF
RAM:844D FF                          .BYTE $FF
RAM:844E FF                          .BYTE $FF
RAM:844F FF                          .BYTE $FF
RAM:8450 FF                          .BYTE $FF
RAM:8451 FF                          .BYTE $FF
RAM:8452 FF                          .BYTE $FF
RAM:8453 FF                          .BYTE $FF
RAM:8454 FF                          .BYTE $FF
RAM:8455 FF                          .BYTE $FF
RAM:8456 FF                          .BYTE $FF
RAM:8457 FF                          .BYTE $FF
RAM:8458 FF                          .BYTE $FF
RAM:8459 FF                          .BYTE $FF
RAM:845A FF                          .BYTE $FF
RAM:845B FF                          .BYTE $FF
RAM:845C FF                          .BYTE $FF
RAM:845D FF                          .BYTE $FF
RAM:845E FF                          .BYTE $FF
RAM:845F FF                          .BYTE $FF
RAM:8460 FF                          .BYTE $FF
RAM:8461 FF                          .BYTE $FF
RAM:8462 FF                          .BYTE $FF
RAM:8463 FF                          .BYTE $FF
RAM:8464 FF                          .BYTE $FF
RAM:8465 FF                          .BYTE $FF
RAM:8466 FF                          .BYTE $FF
RAM:8467 FF                          .BYTE $FF
RAM:8468 FF                          .BYTE $FF
RAM:8469 FF                          .BYTE $FF
RAM:846A FF                          .BYTE $FF
RAM:846B FF                          .BYTE $FF
RAM:846C FF                          .BYTE $FF
RAM:846D FF                          .BYTE $FF
RAM:846E FF                          .BYTE $FF
RAM:846F FF                          .BYTE $FF
RAM:8470 FF                          .BYTE $FF
RAM:8471 FF                          .BYTE $FF
RAM:8472 FF                          .BYTE $FF
RAM:8473 FF                          .BYTE $FF
RAM:8474 FF                          .BYTE $FF
RAM:8475 FF                          .BYTE $FF
RAM:8476 FF                          .BYTE $FF
RAM:8477 FF                          .BYTE $FF
RAM:8478 FF                          .BYTE $FF
RAM:8479 FF                          .BYTE $FF
RAM:847A FF                          .BYTE $FF
RAM:847B FF                          .BYTE $FF
RAM:847C FF                          .BYTE $FF
RAM:847D FF                          .BYTE $FF
RAM:847E FF                          .BYTE $FF
RAM:847F FF                          .BYTE $FF
RAM:8480 FF                          .BYTE $FF
RAM:8481 FF                          .BYTE $FF
RAM:8482 FF                          .BYTE $FF
RAM:8483 FF                          .BYTE $FF
RAM:8484 FF                          .BYTE $FF
RAM:8485 FF                          .BYTE $FF
RAM:8486 FF                          .BYTE $FF
RAM:8487 FF                          .BYTE $FF
RAM:8488 FF                          .BYTE $FF
RAM:8489 FF                          .BYTE $FF
RAM:848A FF                          .BYTE $FF
RAM:848B FF                          .BYTE $FF
RAM:848C FF                          .BYTE $FF
RAM:848D FF                          .BYTE $FF
RAM:848E FF                          .BYTE $FF
RAM:848F FF                          .BYTE $FF
RAM:8490 FF                          .BYTE $FF
RAM:8491 FF                          .BYTE $FF
RAM:8492 FF                          .BYTE $FF
RAM:8493 FF                          .BYTE $FF
RAM:8494 FF                          .BYTE $FF
RAM:8495 FF                          .BYTE $FF
RAM:8496 FF                          .BYTE $FF
RAM:8497 FF                          .BYTE $FF
RAM:8498 FF                          .BYTE $FF
RAM:8499 FF                          .BYTE $FF
RAM:849A FF                          .BYTE $FF
RAM:849B FF                          .BYTE $FF
RAM:849C FF                          .BYTE $FF
RAM:849D FF                          .BYTE $FF
RAM:849E FF                          .BYTE $FF
RAM:849F FF                          .BYTE $FF
RAM:84A0 FF                          .BYTE $FF
RAM:84A1 FF                          .BYTE $FF
RAM:84A2 FF                          .BYTE $FF
RAM:84A3 FF                          .BYTE $FF
RAM:84A4 FF                          .BYTE $FF
RAM:84A5 FF                          .BYTE $FF
RAM:84A6 FF                          .BYTE $FF
RAM:84A7 FF                          .BYTE $FF
RAM:84A8 FF                          .BYTE $FF
RAM:84A9 FF                          .BYTE $FF
RAM:84AA FF                          .BYTE $FF
RAM:84AB FF                          .BYTE $FF
RAM:84AC FF                          .BYTE $FF
RAM:84AD FF                          .BYTE $FF
RAM:84AE FF                          .BYTE $FF
RAM:84AF FF                          .BYTE $FF
RAM:84B0 FF                          .BYTE $FF
RAM:84B1 FF                          .BYTE $FF
RAM:84B2 FF                          .BYTE $FF
RAM:84B3 FF                          .BYTE $FF
RAM:84B4 FF                          .BYTE $FF
RAM:84B5 FF                          .BYTE $FF
RAM:84B6 FF                          .BYTE $FF
RAM:84B7 FF                          .BYTE $FF
RAM:84B8 FF                          .BYTE $FF
RAM:84B9 FF                          .BYTE $FF
RAM:84BA FF                          .BYTE $FF
RAM:84BB FF                          .BYTE $FF
RAM:84BC FF                          .BYTE $FF
RAM:84BD FF                          .BYTE $FF
RAM:84BE FF                          .BYTE $FF
RAM:84BF FF                          .BYTE $FF
RAM:84C0 FF                          .BYTE $FF
RAM:84C1 FF                          .BYTE $FF
RAM:84C2 FF                          .BYTE $FF
RAM:84C3 FF                          .BYTE $FF
RAM:84C4 FF                          .BYTE $FF
RAM:84C5 FF                          .BYTE $FF
RAM:84C6 FF                          .BYTE $FF
RAM:84C7 FF                          .BYTE $FF
RAM:84C8 FF                          .BYTE $FF
RAM:84C9 FF                          .BYTE $FF
RAM:84CA FF                          .BYTE $FF
RAM:84CB FF                          .BYTE $FF
RAM:84CC FF                          .BYTE $FF
RAM:84CD FF                          .BYTE $FF
RAM:84CE FF                          .BYTE $FF
RAM:84CF FF                          .BYTE $FF
RAM:84D0 FF                          .BYTE $FF
RAM:84D1 FF                          .BYTE $FF
RAM:84D2 FF                          .BYTE $FF
RAM:84D3 FF                          .BYTE $FF
RAM:84D4 FF                          .BYTE $FF
RAM:84D5 FF                          .BYTE $FF
RAM:84D6 FF                          .BYTE $FF
RAM:84D7 FF                          .BYTE $FF
RAM:84D8 FF                          .BYTE $FF
RAM:84D9 FF                          .BYTE $FF
RAM:84DA FF                          .BYTE $FF
RAM:84DB FF                          .BYTE $FF
RAM:84DC FF                          .BYTE $FF
RAM:84DD FF                          .BYTE $FF
RAM:84DE FF                          .BYTE $FF
RAM:84DF FF                          .BYTE $FF
RAM:84E0 FF                          .BYTE $FF
RAM:84E1 FF                          .BYTE $FF
RAM:84E2 FF                          .BYTE $FF
RAM:84E3 FF                          .BYTE $FF
RAM:84E4 FF                          .BYTE $FF
RAM:84E5 FF                          .BYTE $FF
RAM:84E6 FF                          .BYTE $FF
RAM:84E7 FF                          .BYTE $FF
RAM:84E8 FF                          .BYTE $FF
RAM:84E9 FF                          .BYTE $FF
RAM:84EA FF                          .BYTE $FF
RAM:84EB FF                          .BYTE $FF
RAM:84EC FF                          .BYTE $FF
RAM:84ED FF                          .BYTE $FF
RAM:84EE FF                          .BYTE $FF
RAM:84EF FF                          .BYTE $FF
RAM:84F0 FF                          .BYTE $FF
RAM:84F1 FF                          .BYTE $FF
RAM:84F2 FF                          .BYTE $FF
RAM:84F3 FF                          .BYTE $FF
RAM:84F4 FF                          .BYTE $FF
RAM:84F5 FF                          .BYTE $FF
RAM:84F6 FF                          .BYTE $FF
RAM:84F7 FF                          .BYTE $FF
RAM:84F8 FF                          .BYTE $FF
RAM:84F9 FF                          .BYTE $FF
RAM:84FA FF                          .BYTE $FF
RAM:84FB FF                          .BYTE $FF
RAM:84FC FF                          .BYTE $FF
RAM:84FD FF                          .BYTE $FF
RAM:84FE FF                          .BYTE $FF
RAM:84FF FF                          .BYTE $FF
RAM:8500 FF                          .BYTE $FF
RAM:8501 FF                          .BYTE $FF
RAM:8502 FF                          .BYTE $FF
RAM:8503 FF                          .BYTE $FF
RAM:8504 FF                          .BYTE $FF
RAM:8505 FF                          .BYTE $FF
RAM:8506 FF                          .BYTE $FF
RAM:8507 FF                          .BYTE $FF
RAM:8508 FF                          .BYTE $FF
RAM:8509 FF                          .BYTE $FF
RAM:850A FF                          .BYTE $FF
RAM:850B FF                          .BYTE $FF
RAM:850C FF                          .BYTE $FF
RAM:850D FF                          .BYTE $FF
RAM:850E FF                          .BYTE $FF
RAM:850F FF                          .BYTE $FF
RAM:8510 FF                          .BYTE $FF
RAM:8511 FF                          .BYTE $FF
RAM:8512 FF                          .BYTE $FF
RAM:8513 FF                          .BYTE $FF
RAM:8514 FF                          .BYTE $FF
RAM:8515 FF                          .BYTE $FF
RAM:8516 FF                          .BYTE $FF
RAM:8517 FF                          .BYTE $FF
RAM:8518 FF                          .BYTE $FF
RAM:8519 FF                          .BYTE $FF
RAM:851A FF                          .BYTE $FF
RAM:851B FF                          .BYTE $FF
RAM:851C FF                          .BYTE $FF
RAM:851D FF                          .BYTE $FF
RAM:851E FF                          .BYTE $FF
RAM:851F FF                          .BYTE $FF
RAM:8520 FF                          .BYTE $FF
RAM:8521 FF                          .BYTE $FF
RAM:8522 FF                          .BYTE $FF
RAM:8523 FF                          .BYTE $FF
RAM:8524 FF                          .BYTE $FF
RAM:8525 FF                          .BYTE $FF
RAM:8526 FF                          .BYTE $FF
RAM:8527 FF                          .BYTE $FF
RAM:8528 FF                          .BYTE $FF
RAM:8529 FF                          .BYTE $FF
RAM:852A FF                          .BYTE $FF
RAM:852B FF                          .BYTE $FF
RAM:852C FF                          .BYTE $FF
RAM:852D FF                          .BYTE $FF
RAM:852E FF                          .BYTE $FF
RAM:852F FF                          .BYTE $FF
RAM:8530 FF                          .BYTE $FF
RAM:8531 FF                          .BYTE $FF
RAM:8532 FF                          .BYTE $FF
RAM:8533 FF                          .BYTE $FF
RAM:8534 FF                          .BYTE $FF
RAM:8535 FF                          .BYTE $FF
RAM:8536 FF                          .BYTE $FF
RAM:8537 FF                          .BYTE $FF
RAM:8538 FF                          .BYTE $FF
RAM:8539 FF                          .BYTE $FF
RAM:853A FF                          .BYTE $FF
RAM:853B FF                          .BYTE $FF
RAM:853C FF                          .BYTE $FF
RAM:853D FF                          .BYTE $FF
RAM:853E FF                          .BYTE $FF
RAM:853F FF                          .BYTE $FF
RAM:8540 FF                          .BYTE $FF
RAM:8541 FF                          .BYTE $FF
RAM:8542 FF                          .BYTE $FF
RAM:8543 FF                          .BYTE $FF
RAM:8544 FF                          .BYTE $FF
RAM:8545 FF                          .BYTE $FF
RAM:8546 FF                          .BYTE $FF
RAM:8547 FF                          .BYTE $FF
RAM:8548 FF                          .BYTE $FF
RAM:8549 FF                          .BYTE $FF
RAM:854A FF                          .BYTE $FF
RAM:854B FF                          .BYTE $FF
RAM:854C FF                          .BYTE $FF
RAM:854D FF                          .BYTE $FF
RAM:854E FF                          .BYTE $FF
RAM:854F FF                          .BYTE $FF
RAM:8550 FF                          .BYTE $FF
RAM:8551 FF                          .BYTE $FF
RAM:8552 FF                          .BYTE $FF
RAM:8553 FF                          .BYTE $FF
RAM:8554 FF                          .BYTE $FF
RAM:8555 FF                          .BYTE $FF
RAM:8556 FF                          .BYTE $FF
RAM:8557 FF                          .BYTE $FF
RAM:8558 FF                          .BYTE $FF
RAM:8559 FF                          .BYTE $FF
RAM:855A FF                          .BYTE $FF
RAM:855B FF                          .BYTE $FF
RAM:855C FF                          .BYTE $FF
RAM:855D FF                          .BYTE $FF
RAM:855E FF                          .BYTE $FF
RAM:855F FF                          .BYTE $FF
RAM:8560 FF                          .BYTE $FF
RAM:8561 FF                          .BYTE $FF
RAM:8562 FF                          .BYTE $FF
RAM:8563 FF                          .BYTE $FF
RAM:8564 FF                          .BYTE $FF
RAM:8565 FF                          .BYTE $FF
RAM:8566 FF                          .BYTE $FF
RAM:8567 FF                          .BYTE $FF
RAM:8568 FF                          .BYTE $FF
RAM:8569 FF                          .BYTE $FF
RAM:856A FF                          .BYTE $FF
RAM:856B FF                          .BYTE $FF
RAM:856C FF                          .BYTE $FF
RAM:856D FF                          .BYTE $FF
RAM:856E FF                          .BYTE $FF
RAM:856F FF                          .BYTE $FF
RAM:8570 FF                          .BYTE $FF
RAM:8571 FF                          .BYTE $FF
RAM:8572 FF                          .BYTE $FF
RAM:8573 FF                          .BYTE $FF
RAM:8574 FF                          .BYTE $FF
RAM:8575 FF                          .BYTE $FF
RAM:8576 FF                          .BYTE $FF
RAM:8577 FF                          .BYTE $FF
RAM:8578 FF                          .BYTE $FF
RAM:8579 FF                          .BYTE $FF
RAM:857A FF                          .BYTE $FF
RAM:857B FF                          .BYTE $FF
RAM:857C FF                          .BYTE $FF
RAM:857D FF                          .BYTE $FF
RAM:857E FF                          .BYTE $FF
RAM:857F FF                          .BYTE $FF
RAM:8580 FF                          .BYTE $FF
RAM:8581 FF                          .BYTE $FF
RAM:8582 FF                          .BYTE $FF
RAM:8583 FF                          .BYTE $FF
RAM:8584 FF                          .BYTE $FF
RAM:8585 FF                          .BYTE $FF
RAM:8586 FF                          .BYTE $FF
RAM:8587 FF                          .BYTE $FF
RAM:8588 FF                          .BYTE $FF
RAM:8589 FF                          .BYTE $FF
RAM:858A FF                          .BYTE $FF
RAM:858B FF                          .BYTE $FF
RAM:858C FF                          .BYTE $FF
RAM:858D FF                          .BYTE $FF
RAM:858E FF                          .BYTE $FF
RAM:858F FF                          .BYTE $FF
RAM:8590 FF                          .BYTE $FF
RAM:8591 FF                          .BYTE $FF
RAM:8592 FF                          .BYTE $FF
RAM:8593 FF                          .BYTE $FF
RAM:8594 FF                          .BYTE $FF
RAM:8595 FF                          .BYTE $FF
RAM:8596 FF                          .BYTE $FF
RAM:8597 FF                          .BYTE $FF
RAM:8598 FF                          .BYTE $FF
RAM:8599 FF                          .BYTE $FF
RAM:859A FF                          .BYTE $FF
RAM:859B FF                          .BYTE $FF
RAM:859C FF                          .BYTE $FF
RAM:859D FF                          .BYTE $FF
RAM:859E FF                          .BYTE $FF
RAM:859F FF                          .BYTE $FF
RAM:85A0 FF                          .BYTE $FF
RAM:85A1 FF                          .BYTE $FF
RAM:85A2 FF                          .BYTE $FF
RAM:85A3 FF                          .BYTE $FF
RAM:85A4 FF                          .BYTE $FF
RAM:85A5 FF                          .BYTE $FF
RAM:85A6 FF                          .BYTE $FF
RAM:85A7 FF                          .BYTE $FF
RAM:85A8 FF                          .BYTE $FF
RAM:85A9 FF                          .BYTE $FF
RAM:85AA FF                          .BYTE $FF
RAM:85AB FF                          .BYTE $FF
RAM:85AC FF                          .BYTE $FF
RAM:85AD FF                          .BYTE $FF
RAM:85AE FF                          .BYTE $FF
RAM:85AF FF                          .BYTE $FF
RAM:85B0 FF                          .BYTE $FF
RAM:85B1 FF                          .BYTE $FF
RAM:85B2 FF                          .BYTE $FF
RAM:85B3 FF                          .BYTE $FF
RAM:85B4 FF                          .BYTE $FF
RAM:85B5 FF                          .BYTE $FF
RAM:85B6 FF                          .BYTE $FF
RAM:85B7 FF                          .BYTE $FF
RAM:85B8 FF                          .BYTE $FF
RAM:85B9 FF                          .BYTE $FF
RAM:85BA FF                          .BYTE $FF
RAM:85BB FF                          .BYTE $FF
RAM:85BC FF                          .BYTE $FF
RAM:85BD FF                          .BYTE $FF
RAM:85BE FF                          .BYTE $FF
RAM:85BF FF                          .BYTE $FF
RAM:85C0 FF                          .BYTE $FF
RAM:85C1 FF                          .BYTE $FF
RAM:85C2 FF                          .BYTE $FF
RAM:85C3 FF                          .BYTE $FF
RAM:85C4 FF                          .BYTE $FF
RAM:85C5 FF                          .BYTE $FF
RAM:85C6 FF                          .BYTE $FF
RAM:85C7 FF                          .BYTE $FF
RAM:85C8 FF                          .BYTE $FF
RAM:85C9 FF                          .BYTE $FF
RAM:85CA FF                          .BYTE $FF
RAM:85CB FF                          .BYTE $FF
RAM:85CC FF                          .BYTE $FF
RAM:85CD FF                          .BYTE $FF
RAM:85CE FF                          .BYTE $FF
RAM:85CF FF                          .BYTE $FF
RAM:85D0 FF                          .BYTE $FF
RAM:85D1 FF                          .BYTE $FF
RAM:85D2 FF                          .BYTE $FF
RAM:85D3 FF                          .BYTE $FF
RAM:85D4 FF                          .BYTE $FF
RAM:85D5 FF                          .BYTE $FF
RAM:85D6 FF                          .BYTE $FF
RAM:85D7 FF                          .BYTE $FF
RAM:85D8 FF                          .BYTE $FF
RAM:85D9 FF                          .BYTE $FF
RAM:85DA FF                          .BYTE $FF
RAM:85DB FF                          .BYTE $FF
RAM:85DC FF                          .BYTE $FF
RAM:85DD FF                          .BYTE $FF
RAM:85DE FF                          .BYTE $FF
RAM:85DF FF                          .BYTE $FF
RAM:85E0 FF                          .BYTE $FF
RAM:85E1 FF                          .BYTE $FF
RAM:85E2 FF                          .BYTE $FF
RAM:85E3 FF                          .BYTE $FF
RAM:85E4 FF                          .BYTE $FF
RAM:85E5 FF                          .BYTE $FF
RAM:85E6 FF                          .BYTE $FF
RAM:85E7 FF                          .BYTE $FF
RAM:85E8 FF                          .BYTE $FF
RAM:85E9 FF                          .BYTE $FF
RAM:85EA FF                          .BYTE $FF
RAM:85EB FF                          .BYTE $FF
RAM:85EC FF                          .BYTE $FF
RAM:85ED FF                          .BYTE $FF
RAM:85EE FF                          .BYTE $FF
RAM:85EF FF                          .BYTE $FF
RAM:85F0 FF                          .BYTE $FF
RAM:85F1 FF                          .BYTE $FF
RAM:85F2 FF                          .BYTE $FF
RAM:85F3 FF                          .BYTE $FF
RAM:85F4 FF                          .BYTE $FF
RAM:85F5 FF                          .BYTE $FF
RAM:85F6 FF                          .BYTE $FF
RAM:85F7 FF                          .BYTE $FF
RAM:85F8 FF                          .BYTE $FF
RAM:85F9 FF                          .BYTE $FF
RAM:85FA FF                          .BYTE $FF
RAM:85FB FF                          .BYTE $FF
RAM:85FC FF                          .BYTE $FF
RAM:85FD FF                          .BYTE $FF
RAM:85FE FF                          .BYTE $FF
RAM:85FF FF                          .BYTE $FF
RAM:8600 FF                          .BYTE $FF
RAM:8601 FF                          .BYTE $FF
RAM:8602 FF                          .BYTE $FF
RAM:8603 FF                          .BYTE $FF
RAM:8604 FF                          .BYTE $FF
RAM:8605 FF                          .BYTE $FF
RAM:8606 FF                          .BYTE $FF
RAM:8607 FF                          .BYTE $FF
RAM:8608 FF                          .BYTE $FF
RAM:8609 FF                          .BYTE $FF
RAM:860A FF                          .BYTE $FF
RAM:860B FF                          .BYTE $FF
RAM:860C FF                          .BYTE $FF
RAM:860D FF                          .BYTE $FF
RAM:860E FF                          .BYTE $FF
RAM:860F FF                          .BYTE $FF
RAM:8610 FF                          .BYTE $FF
RAM:8611 FF                          .BYTE $FF
RAM:8612 FF                          .BYTE $FF
RAM:8613 FF                          .BYTE $FF
RAM:8614 FF                          .BYTE $FF
RAM:8615 FF                          .BYTE $FF
RAM:8616 FF                          .BYTE $FF
RAM:8617 FF                          .BYTE $FF
RAM:8618 FF                          .BYTE $FF
RAM:8619 FF                          .BYTE $FF
RAM:861A FF                          .BYTE $FF
RAM:861B FF                          .BYTE $FF
RAM:861C FF                          .BYTE $FF
RAM:861D FF                          .BYTE $FF
RAM:861E FF                          .BYTE $FF
RAM:861F FF                          .BYTE $FF
RAM:8620 FF                          .BYTE $FF
RAM:8621 FF                          .BYTE $FF
RAM:8622 FF                          .BYTE $FF
RAM:8623 FF                          .BYTE $FF
RAM:8624 FF                          .BYTE $FF
RAM:8625 FF                          .BYTE $FF
RAM:8626 FF                          .BYTE $FF
RAM:8627 FF                          .BYTE $FF
RAM:8628 FF                          .BYTE $FF
RAM:8629 FF                          .BYTE $FF
RAM:862A FF                          .BYTE $FF
RAM:862B FF                          .BYTE $FF
RAM:862C FF                          .BYTE $FF
RAM:862D FF                          .BYTE $FF
RAM:862E FF                          .BYTE $FF
RAM:862F FF                          .BYTE $FF
RAM:8630 FF                          .BYTE $FF
RAM:8631 FF                          .BYTE $FF
RAM:8632 FF                          .BYTE $FF
RAM:8633 FF                          .BYTE $FF
RAM:8634 FF                          .BYTE $FF
RAM:8635 FF                          .BYTE $FF
RAM:8636 FF                          .BYTE $FF
RAM:8637 FF                          .BYTE $FF
RAM:8638 FF                          .BYTE $FF
RAM:8639 FF                          .BYTE $FF
RAM:863A FF                          .BYTE $FF
RAM:863B FF                          .BYTE $FF
RAM:863C FF                          .BYTE $FF
RAM:863D FF                          .BYTE $FF
RAM:863E FF                          .BYTE $FF
RAM:863F FF                          .BYTE $FF
RAM:8640 FF                          .BYTE $FF
RAM:8641 FF                          .BYTE $FF
RAM:8642 FF                          .BYTE $FF
RAM:8643 FF                          .BYTE $FF
RAM:8644 FF                          .BYTE $FF
RAM:8645 FF                          .BYTE $FF
RAM:8646 FF                          .BYTE $FF
RAM:8647 FF                          .BYTE $FF
RAM:8648 FF                          .BYTE $FF
RAM:8649 FF                          .BYTE $FF
RAM:864A FF                          .BYTE $FF
RAM:864B FF                          .BYTE $FF
RAM:864C FF                          .BYTE $FF
RAM:864D FF                          .BYTE $FF
RAM:864E FF                          .BYTE $FF
RAM:864F FF                          .BYTE $FF
RAM:8650 FF                          .BYTE $FF
RAM:8651 FF                          .BYTE $FF
RAM:8652 FF                          .BYTE $FF
RAM:8653 FF                          .BYTE $FF
RAM:8654 FF                          .BYTE $FF
RAM:8655 FF                          .BYTE $FF
RAM:8656 FF                          .BYTE $FF
RAM:8657 FF                          .BYTE $FF
RAM:8658 FF                          .BYTE $FF
RAM:8659 FF                          .BYTE $FF
RAM:865A FF                          .BYTE $FF
RAM:865B FF                          .BYTE $FF
RAM:865C FF                          .BYTE $FF
RAM:865D FF                          .BYTE $FF
RAM:865E FF                          .BYTE $FF
RAM:865F FF                          .BYTE $FF
RAM:8660 FF                          .BYTE $FF
RAM:8661 FF                          .BYTE $FF
RAM:8662 FF                          .BYTE $FF
RAM:8663 FF                          .BYTE $FF
RAM:8664 FF                          .BYTE $FF
RAM:8665 FF                          .BYTE $FF
RAM:8666 FF                          .BYTE $FF
RAM:8667 FF                          .BYTE $FF
RAM:8668 FF                          .BYTE $FF
RAM:8669 FF                          .BYTE $FF
RAM:866A FF                          .BYTE $FF
RAM:866B FF                          .BYTE $FF
RAM:866C FF                          .BYTE $FF
RAM:866D FF                          .BYTE $FF
RAM:866E FF                          .BYTE $FF
RAM:866F FF                          .BYTE $FF
RAM:8670 FF                          .BYTE $FF
RAM:8671 FF                          .BYTE $FF
RAM:8672 FF                          .BYTE $FF
RAM:8673 FF                          .BYTE $FF
RAM:8674 FF                          .BYTE $FF
RAM:8675 FF                          .BYTE $FF
RAM:8676 FF                          .BYTE $FF
RAM:8677 FF                          .BYTE $FF
RAM:8678 FF                          .BYTE $FF
RAM:8679 FF                          .BYTE $FF
RAM:867A FF                          .BYTE $FF
RAM:867B FF                          .BYTE $FF
RAM:867C FF                          .BYTE $FF
RAM:867D FF                          .BYTE $FF
RAM:867E FF                          .BYTE $FF
RAM:867F FF                          .BYTE $FF
RAM:8680 FF                          .BYTE $FF
RAM:8681 FF                          .BYTE $FF
RAM:8682 FF                          .BYTE $FF
RAM:8683 FF                          .BYTE $FF
RAM:8684 FF                          .BYTE $FF
RAM:8685 FF                          .BYTE $FF
RAM:8686 FF                          .BYTE $FF
RAM:8687 FF                          .BYTE $FF
RAM:8688 FF                          .BYTE $FF
RAM:8689 FF                          .BYTE $FF
RAM:868A FF                          .BYTE $FF
RAM:868B FF                          .BYTE $FF
RAM:868C FF                          .BYTE $FF
RAM:868D FF                          .BYTE $FF
RAM:868E FF                          .BYTE $FF
RAM:868F FF                          .BYTE $FF
RAM:8690 FF                          .BYTE $FF
RAM:8691 FF                          .BYTE $FF
RAM:8692 FF                          .BYTE $FF
RAM:8693 FF                          .BYTE $FF
RAM:8694 FF                          .BYTE $FF
RAM:8695 FF                          .BYTE $FF
RAM:8696 FF                          .BYTE $FF
RAM:8697 FF                          .BYTE $FF
RAM:8698 FF                          .BYTE $FF
RAM:8699 FF                          .BYTE $FF
RAM:869A FF                          .BYTE $FF
RAM:869B FF                          .BYTE $FF
RAM:869C FF                          .BYTE $FF
RAM:869D FF                          .BYTE $FF
RAM:869E FF                          .BYTE $FF
RAM:869F FF                          .BYTE $FF
RAM:86A0 FF                          .BYTE $FF
RAM:86A1 FF                          .BYTE $FF
RAM:86A2 FF                          .BYTE $FF
RAM:86A3 FF                          .BYTE $FF
RAM:86A4 FF                          .BYTE $FF
RAM:86A5 FF                          .BYTE $FF
RAM:86A6 FF                          .BYTE $FF
RAM:86A7 FF                          .BYTE $FF
RAM:86A8 FF                          .BYTE $FF
RAM:86A9 FF                          .BYTE $FF
RAM:86AA FF                          .BYTE $FF
RAM:86AB FF                          .BYTE $FF
RAM:86AC FF                          .BYTE $FF
RAM:86AD FF                          .BYTE $FF
RAM:86AE FF                          .BYTE $FF
RAM:86AF FF                          .BYTE $FF
RAM:86B0 FF                          .BYTE $FF
RAM:86B1 FF                          .BYTE $FF
RAM:86B2 FF                          .BYTE $FF
RAM:86B3 FF                          .BYTE $FF
RAM:86B4 FF                          .BYTE $FF
RAM:86B5 FF                          .BYTE $FF
RAM:86B6 FF                          .BYTE $FF
RAM:86B7 FF                          .BYTE $FF
RAM:86B8 FF                          .BYTE $FF
RAM:86B9 FF                          .BYTE $FF
RAM:86BA FF                          .BYTE $FF
RAM:86BB FF                          .BYTE $FF
RAM:86BC FF                          .BYTE $FF
RAM:86BD FF                          .BYTE $FF
RAM:86BE FF                          .BYTE $FF
RAM:86BF FF                          .BYTE $FF
RAM:86C0 FF                          .BYTE $FF
RAM:86C1 FF                          .BYTE $FF
RAM:86C2 FF                          .BYTE $FF
RAM:86C3 FF                          .BYTE $FF
RAM:86C4 FF                          .BYTE $FF
RAM:86C5 FF                          .BYTE $FF
RAM:86C6 FF                          .BYTE $FF
RAM:86C7 FF                          .BYTE $FF
RAM:86C8 FF                          .BYTE $FF
RAM:86C9 FF                          .BYTE $FF
RAM:86CA FF                          .BYTE $FF
RAM:86CB FF                          .BYTE $FF
RAM:86CC FF                          .BYTE $FF
RAM:86CD FF                          .BYTE $FF
RAM:86CE FF                          .BYTE $FF
RAM:86CF FF                          .BYTE $FF
RAM:86D0 FF                          .BYTE $FF
RAM:86D1 FF                          .BYTE $FF
RAM:86D2 FF                          .BYTE $FF
RAM:86D3 FF                          .BYTE $FF
RAM:86D4 FF                          .BYTE $FF
RAM:86D5 FF                          .BYTE $FF
RAM:86D6 FF                          .BYTE $FF
RAM:86D7 FF                          .BYTE $FF
RAM:86D8 FF                          .BYTE $FF
RAM:86D9 FF                          .BYTE $FF
RAM:86DA FF                          .BYTE $FF
RAM:86DB FF                          .BYTE $FF
RAM:86DC FF                          .BYTE $FF
RAM:86DD FF                          .BYTE $FF
RAM:86DE FF                          .BYTE $FF
RAM:86DF FF                          .BYTE $FF
RAM:86E0 FF                          .BYTE $FF
RAM:86E1 FF                          .BYTE $FF
RAM:86E2 FF                          .BYTE $FF
RAM:86E3 FF                          .BYTE $FF
RAM:86E4 FF                          .BYTE $FF
RAM:86E5 FF                          .BYTE $FF
RAM:86E6 FF                          .BYTE $FF
RAM:86E7 FF                          .BYTE $FF
RAM:86E8 FF                          .BYTE $FF
RAM:86E9 FF                          .BYTE $FF
RAM:86EA FF                          .BYTE $FF
RAM:86EB FF                          .BYTE $FF
RAM:86EC FF                          .BYTE $FF
RAM:86ED FF                          .BYTE $FF
RAM:86EE FF                          .BYTE $FF
RAM:86EF FF                          .BYTE $FF
RAM:86F0 FF                          .BYTE $FF
RAM:86F1 FF                          .BYTE $FF
RAM:86F2 FF                          .BYTE $FF
RAM:86F3 FF                          .BYTE $FF
RAM:86F4 FF                          .BYTE $FF
RAM:86F5 FF                          .BYTE $FF
RAM:86F6 FF                          .BYTE $FF
RAM:86F7 FF                          .BYTE $FF
RAM:86F8 FF                          .BYTE $FF
RAM:86F9 FF                          .BYTE $FF
RAM:86FA FF                          .BYTE $FF
RAM:86FB FF                          .BYTE $FF
RAM:86FC FF                          .BYTE $FF
RAM:86FD FF                          .BYTE $FF
RAM:86FE FF                          .BYTE $FF
RAM:86FF FF                          .BYTE $FF
RAM:8700 FF                          .BYTE $FF
RAM:8701 FF                          .BYTE $FF
RAM:8702 FF                          .BYTE $FF
RAM:8703 FF                          .BYTE $FF
RAM:8704 FF                          .BYTE $FF
RAM:8705 FF                          .BYTE $FF
RAM:8706 FF                          .BYTE $FF
RAM:8707 FF                          .BYTE $FF
RAM:8708 FF                          .BYTE $FF
RAM:8709 FF                          .BYTE $FF
RAM:870A FF                          .BYTE $FF
RAM:870B FF                          .BYTE $FF
RAM:870C FF                          .BYTE $FF
RAM:870D FF                          .BYTE $FF
RAM:870E FF                          .BYTE $FF
RAM:870F FF                          .BYTE $FF
RAM:8710 FF                          .BYTE $FF
RAM:8711 FF                          .BYTE $FF
RAM:8712 FF                          .BYTE $FF
RAM:8713 FF                          .BYTE $FF
RAM:8714 FF                          .BYTE $FF
RAM:8715 FF                          .BYTE $FF
RAM:8716 FF                          .BYTE $FF
RAM:8717 FF                          .BYTE $FF
RAM:8718 FF                          .BYTE $FF
RAM:8719 FF                          .BYTE $FF
RAM:871A FF                          .BYTE $FF
RAM:871B FF                          .BYTE $FF
RAM:871C FF                          .BYTE $FF
RAM:871D FF                          .BYTE $FF
RAM:871E FF                          .BYTE $FF
RAM:871F FF                          .BYTE $FF
RAM:8720 FF                          .BYTE $FF
RAM:8721 FF                          .BYTE $FF
RAM:8722 FF                          .BYTE $FF
RAM:8723 FF                          .BYTE $FF
RAM:8724 FF                          .BYTE $FF
RAM:8725 FF                          .BYTE $FF
RAM:8726 FF                          .BYTE $FF
RAM:8727 FF                          .BYTE $FF
RAM:8728 FF                          .BYTE $FF
RAM:8729 FF                          .BYTE $FF
RAM:872A FF                          .BYTE $FF
RAM:872B FF                          .BYTE $FF
RAM:872C FF                          .BYTE $FF
RAM:872D FF                          .BYTE $FF
RAM:872E FF                          .BYTE $FF
RAM:872F FF                          .BYTE $FF
RAM:8730 FF                          .BYTE $FF
RAM:8731 FF                          .BYTE $FF
RAM:8732 FF                          .BYTE $FF
RAM:8733 FF                          .BYTE $FF
RAM:8734 FF                          .BYTE $FF
RAM:8735 FF                          .BYTE $FF
RAM:8736 FF                          .BYTE $FF
RAM:8737 FF                          .BYTE $FF
RAM:8738 FF                          .BYTE $FF
RAM:8739 FF                          .BYTE $FF
RAM:873A FF                          .BYTE $FF
RAM:873B FF                          .BYTE $FF
RAM:873C FF                          .BYTE $FF
RAM:873D FF                          .BYTE $FF
RAM:873E FF                          .BYTE $FF
RAM:873F FF                          .BYTE $FF
RAM:8740 FF                          .BYTE $FF
RAM:8741 FF                          .BYTE $FF
RAM:8742 FF                          .BYTE $FF
RAM:8743 FF                          .BYTE $FF
RAM:8744 FF                          .BYTE $FF
RAM:8745 FF                          .BYTE $FF
RAM:8746 FF                          .BYTE $FF
RAM:8747 FF                          .BYTE $FF
RAM:8748 FF                          .BYTE $FF
RAM:8749 FF                          .BYTE $FF
RAM:874A FF                          .BYTE $FF
RAM:874B FF                          .BYTE $FF
RAM:874C FF                          .BYTE $FF
RAM:874D FF                          .BYTE $FF
RAM:874E FF                          .BYTE $FF
RAM:874F FF                          .BYTE $FF
RAM:8750 FF                          .BYTE $FF
RAM:8751 FF                          .BYTE $FF
RAM:8752 FF                          .BYTE $FF
RAM:8753 FF                          .BYTE $FF
RAM:8754 FF                          .BYTE $FF
RAM:8755 FF                          .BYTE $FF
RAM:8756 FF                          .BYTE $FF
RAM:8757 FF                          .BYTE $FF
RAM:8758 FF                          .BYTE $FF
RAM:8759 FF                          .BYTE $FF
RAM:875A FF                          .BYTE $FF
RAM:875B FF                          .BYTE $FF
RAM:875C FF                          .BYTE $FF
RAM:875D FF                          .BYTE $FF
RAM:875E FF                          .BYTE $FF
RAM:875F FF                          .BYTE $FF
RAM:8760 FF                          .BYTE $FF
RAM:8761 FF                          .BYTE $FF
RAM:8762 FF                          .BYTE $FF
RAM:8763 FF                          .BYTE $FF
RAM:8764 FF                          .BYTE $FF
RAM:8765 FF                          .BYTE $FF
RAM:8766 FF                          .BYTE $FF
RAM:8767 FF                          .BYTE $FF
RAM:8768 FF                          .BYTE $FF
RAM:8769 FF                          .BYTE $FF
RAM:876A FF                          .BYTE $FF
RAM:876B FF                          .BYTE $FF
RAM:876C FF                          .BYTE $FF
RAM:876D FF                          .BYTE $FF
RAM:876E FF                          .BYTE $FF
RAM:876F FF                          .BYTE $FF
RAM:8770 FF                          .BYTE $FF
RAM:8771 FF                          .BYTE $FF
RAM:8772 FF                          .BYTE $FF
RAM:8773 FF                          .BYTE $FF
RAM:8774 FF                          .BYTE $FF
RAM:8775 FF                          .BYTE $FF
RAM:8776 FF                          .BYTE $FF
RAM:8777 FF                          .BYTE $FF
RAM:8778 FF                          .BYTE $FF
RAM:8779 FF                          .BYTE $FF
RAM:877A FF                          .BYTE $FF
RAM:877B FF                          .BYTE $FF
RAM:877C FF                          .BYTE $FF
RAM:877D FF                          .BYTE $FF
RAM:877E FF                          .BYTE $FF
RAM:877F FF                          .BYTE $FF
RAM:8780 FF                          .BYTE $FF
RAM:8781 FF                          .BYTE $FF
RAM:8782 FF                          .BYTE $FF
RAM:8783 FF                          .BYTE $FF
RAM:8784 FF                          .BYTE $FF
RAM:8785 FF                          .BYTE $FF
RAM:8786 FF                          .BYTE $FF
RAM:8787 FF                          .BYTE $FF
RAM:8788 FF                          .BYTE $FF
RAM:8789 FF                          .BYTE $FF
RAM:878A FF                          .BYTE $FF
RAM:878B FF                          .BYTE $FF
RAM:878C FF                          .BYTE $FF
RAM:878D FF                          .BYTE $FF
RAM:878E FF                          .BYTE $FF
RAM:878F FF                          .BYTE $FF
RAM:8790 FF                          .BYTE $FF
RAM:8791 FF                          .BYTE $FF
RAM:8792 FF                          .BYTE $FF
RAM:8793 FF                          .BYTE $FF
RAM:8794 FF                          .BYTE $FF
RAM:8795 FF                          .BYTE $FF
RAM:8796 FF                          .BYTE $FF
RAM:8797 FF                          .BYTE $FF
RAM:8798 FF                          .BYTE $FF
RAM:8799 FF                          .BYTE $FF
RAM:879A FF                          .BYTE $FF
RAM:879B FF                          .BYTE $FF
RAM:879C FF                          .BYTE $FF
RAM:879D FF                          .BYTE $FF
RAM:879E FF                          .BYTE $FF
RAM:879F FF                          .BYTE $FF
RAM:87A0 FF                          .BYTE $FF
RAM:87A1 FF                          .BYTE $FF
RAM:87A2 FF                          .BYTE $FF
RAM:87A3 FF                          .BYTE $FF
RAM:87A4 FF                          .BYTE $FF
RAM:87A5 FF                          .BYTE $FF
RAM:87A6 FF                          .BYTE $FF
RAM:87A7 FF                          .BYTE $FF
RAM:87A8 FF                          .BYTE $FF
RAM:87A9 FF                          .BYTE $FF
RAM:87AA FF                          .BYTE $FF
RAM:87AB FF                          .BYTE $FF
RAM:87AC FF                          .BYTE $FF
RAM:87AD FF                          .BYTE $FF
RAM:87AE FF                          .BYTE $FF
RAM:87AF FF                          .BYTE $FF
RAM:87B0 FF                          .BYTE $FF
RAM:87B1 FF                          .BYTE $FF
RAM:87B2 FF                          .BYTE $FF
RAM:87B3 FF                          .BYTE $FF
RAM:87B4 FF                          .BYTE $FF
RAM:87B5 FF                          .BYTE $FF
RAM:87B6 FF                          .BYTE $FF
RAM:87B7 FF                          .BYTE $FF
RAM:87B8 FF                          .BYTE $FF
RAM:87B9 FF                          .BYTE $FF
RAM:87BA FF                          .BYTE $FF
RAM:87BB FF                          .BYTE $FF
RAM:87BC FF                          .BYTE $FF
RAM:87BD FF                          .BYTE $FF
RAM:87BE FF                          .BYTE $FF
RAM:87BF FF                          .BYTE $FF
RAM:87C0 FF                          .BYTE $FF
RAM:87C1 FF                          .BYTE $FF
RAM:87C2 FF                          .BYTE $FF
RAM:87C3 FF                          .BYTE $FF
RAM:87C4 FF                          .BYTE $FF
RAM:87C5 FF                          .BYTE $FF
RAM:87C6 FF                          .BYTE $FF
RAM:87C7 FF                          .BYTE $FF
RAM:87C8 FF                          .BYTE $FF
RAM:87C9 FF                          .BYTE $FF
RAM:87CA FF                          .BYTE $FF
RAM:87CB FF                          .BYTE $FF
RAM:87CC FF                          .BYTE $FF
RAM:87CD FF                          .BYTE $FF
RAM:87CE FF                          .BYTE $FF
RAM:87CF FF                          .BYTE $FF
RAM:87D0 FF                          .BYTE $FF
RAM:87D1 FF                          .BYTE $FF
RAM:87D2 FF                          .BYTE $FF
RAM:87D3 FF                          .BYTE $FF
RAM:87D4 FF                          .BYTE $FF
RAM:87D5 FF                          .BYTE $FF
RAM:87D6 FF                          .BYTE $FF
RAM:87D7 FF                          .BYTE $FF
RAM:87D8 FF                          .BYTE $FF
RAM:87D9 FF                          .BYTE $FF
RAM:87DA FF                          .BYTE $FF
RAM:87DB FF                          .BYTE $FF
RAM:87DC FF                          .BYTE $FF
RAM:87DD FF                          .BYTE $FF
RAM:87DE FF                          .BYTE $FF
RAM:87DF FF                          .BYTE $FF
RAM:87E0 FF                          .BYTE $FF
RAM:87E1 FF                          .BYTE $FF
RAM:87E2 FF                          .BYTE $FF
RAM:87E3 FF                          .BYTE $FF
RAM:87E4 FF                          .BYTE $FF
RAM:87E5 FF                          .BYTE $FF
RAM:87E6 FF                          .BYTE $FF
RAM:87E7 FF                          .BYTE $FF
RAM:87E8 FF                          .BYTE $FF
RAM:87E9 FF                          .BYTE $FF
RAM:87EA FF                          .BYTE $FF
RAM:87EB FF                          .BYTE $FF
RAM:87EC FF                          .BYTE $FF
RAM:87ED FF                          .BYTE $FF
RAM:87EE FF                          .BYTE $FF
RAM:87EF FF                          .BYTE $FF
RAM:87F0 FF                          .BYTE $FF
RAM:87F1 FF                          .BYTE $FF
RAM:87F2 FF                          .BYTE $FF
RAM:87F3 FF                          .BYTE $FF
RAM:87F4 FF                          .BYTE $FF
RAM:87F5 FF                          .BYTE $FF
RAM:87F6 FF                          .BYTE $FF
RAM:87F7 FF                          .BYTE $FF
RAM:87F8 FF                          .BYTE $FF
RAM:87F9 FF                          .BYTE $FF
RAM:87FA FF                          .BYTE $FF
RAM:87FB FF                          .BYTE $FF
RAM:87FC FF                          .BYTE $FF
RAM:87FD FF                          .BYTE $FF
RAM:87FE FF                          .BYTE $FF
RAM:87FF FF                          .BYTE $FF
RAM:8800 FF                          .BYTE $FF
RAM:8801 FF                          .BYTE $FF
RAM:8802 FF                          .BYTE $FF
RAM:8803 FF                          .BYTE $FF
RAM:8804 FF                          .BYTE $FF
RAM:8805 FF                          .BYTE $FF
RAM:8806 FF                          .BYTE $FF
RAM:8807 FF                          .BYTE $FF
RAM:8808 FF                          .BYTE $FF
RAM:8809 FF                          .BYTE $FF
RAM:880A FF                          .BYTE $FF
RAM:880B FF                          .BYTE $FF
RAM:880C FF                          .BYTE $FF
RAM:880D FF                          .BYTE $FF
RAM:880E FF                          .BYTE $FF
RAM:880F FF                          .BYTE $FF
RAM:8810 FF                          .BYTE $FF
RAM:8811 FF                          .BYTE $FF
RAM:8812 FF                          .BYTE $FF
RAM:8813 FF                          .BYTE $FF
RAM:8814 FF                          .BYTE $FF
RAM:8815 FF                          .BYTE $FF
RAM:8816 FF                          .BYTE $FF
RAM:8817 FF                          .BYTE $FF
RAM:8818 FF                          .BYTE $FF
RAM:8819 FF                          .BYTE $FF
RAM:881A FF                          .BYTE $FF
RAM:881B FF                          .BYTE $FF
RAM:881C FF                          .BYTE $FF
RAM:881D FF                          .BYTE $FF
RAM:881E FF                          .BYTE $FF
RAM:881F FF                          .BYTE $FF
RAM:8820 FF                          .BYTE $FF
RAM:8821 FF                          .BYTE $FF
RAM:8822 FF                          .BYTE $FF
RAM:8823 FF                          .BYTE $FF
RAM:8824 FF                          .BYTE $FF
RAM:8825 FF                          .BYTE $FF
RAM:8826 FF                          .BYTE $FF
RAM:8827 FF                          .BYTE $FF
RAM:8828 FF                          .BYTE $FF
RAM:8829 FF                          .BYTE $FF
RAM:882A FF                          .BYTE $FF
RAM:882B FF                          .BYTE $FF
RAM:882C FF                          .BYTE $FF
RAM:882D FF                          .BYTE $FF
RAM:882E FF                          .BYTE $FF
RAM:882F FF                          .BYTE $FF
RAM:8830 FF                          .BYTE $FF
RAM:8831 FF                          .BYTE $FF
RAM:8832 FF                          .BYTE $FF
RAM:8833 FF                          .BYTE $FF
RAM:8834 FF                          .BYTE $FF
RAM:8835 FF                          .BYTE $FF
RAM:8836 FF                          .BYTE $FF
RAM:8837 FF                          .BYTE $FF
RAM:8838 FF                          .BYTE $FF
RAM:8839 FF                          .BYTE $FF
RAM:883A FF                          .BYTE $FF
RAM:883B FF                          .BYTE $FF
RAM:883C FF                          .BYTE $FF
RAM:883D FF                          .BYTE $FF
RAM:883E FF                          .BYTE $FF
RAM:883F FF                          .BYTE $FF
RAM:8840 FF                          .BYTE $FF
RAM:8841 FF                          .BYTE $FF
RAM:8842 FF                          .BYTE $FF
RAM:8843 FF                          .BYTE $FF
RAM:8844 FF                          .BYTE $FF
RAM:8845 FF                          .BYTE $FF
RAM:8846 FF                          .BYTE $FF
RAM:8847 FF                          .BYTE $FF
RAM:8848 FF                          .BYTE $FF
RAM:8849 FF                          .BYTE $FF
RAM:884A FF                          .BYTE $FF
RAM:884B FF                          .BYTE $FF
RAM:884C FF                          .BYTE $FF
RAM:884D FF                          .BYTE $FF
RAM:884E FF                          .BYTE $FF
RAM:884F FF                          .BYTE $FF
RAM:8850 FF                          .BYTE $FF
RAM:8851 FF                          .BYTE $FF
RAM:8852 FF                          .BYTE $FF
RAM:8853 FF                          .BYTE $FF
RAM:8854 FF                          .BYTE $FF
RAM:8855 FF                          .BYTE $FF
RAM:8856 FF                          .BYTE $FF
RAM:8857 FF                          .BYTE $FF
RAM:8858 FF                          .BYTE $FF
RAM:8859 FF                          .BYTE $FF
RAM:885A FF                          .BYTE $FF
RAM:885B FF                          .BYTE $FF
RAM:885C FF                          .BYTE $FF
RAM:885D FF                          .BYTE $FF
RAM:885E FF                          .BYTE $FF
RAM:885F FF                          .BYTE $FF
RAM:8860 FF                          .BYTE $FF
RAM:8861 FF                          .BYTE $FF
RAM:8862 FF                          .BYTE $FF
RAM:8863 FF                          .BYTE $FF
RAM:8864 FF                          .BYTE $FF
RAM:8865 FF                          .BYTE $FF
RAM:8866 FF                          .BYTE $FF
RAM:8867 FF                          .BYTE $FF
RAM:8868 FF                          .BYTE $FF
RAM:8869 FF                          .BYTE $FF
RAM:886A FF                          .BYTE $FF
RAM:886B FF                          .BYTE $FF
RAM:886C FF                          .BYTE $FF
RAM:886D FF                          .BYTE $FF
RAM:886E FF                          .BYTE $FF
RAM:886F FF                          .BYTE $FF
RAM:8870 FF                          .BYTE $FF
RAM:8871 FF                          .BYTE $FF
RAM:8872 FF                          .BYTE $FF
RAM:8873 FF                          .BYTE $FF
RAM:8874 FF                          .BYTE $FF
RAM:8875 FF                          .BYTE $FF
RAM:8876 FF                          .BYTE $FF
RAM:8877 FF                          .BYTE $FF
RAM:8878 FF                          .BYTE $FF
RAM:8879 FF                          .BYTE $FF
RAM:887A FF                          .BYTE $FF
RAM:887B FF                          .BYTE $FF
RAM:887C FF                          .BYTE $FF
RAM:887D FF                          .BYTE $FF
RAM:887E FF                          .BYTE $FF
RAM:887F FF                          .BYTE $FF
RAM:8880 FF                          .BYTE $FF
RAM:8881 FF                          .BYTE $FF
RAM:8882 FF                          .BYTE $FF
RAM:8883 FF                          .BYTE $FF
RAM:8884 FF                          .BYTE $FF
RAM:8885 FF                          .BYTE $FF
RAM:8886 FF                          .BYTE $FF
RAM:8887 FF                          .BYTE $FF
RAM:8888 FF                          .BYTE $FF
RAM:8889 FF                          .BYTE $FF
RAM:888A FF                          .BYTE $FF
RAM:888B FF                          .BYTE $FF
RAM:888C FF                          .BYTE $FF
RAM:888D FF                          .BYTE $FF
RAM:888E FF                          .BYTE $FF
RAM:888F FF                          .BYTE $FF
RAM:8890 FF                          .BYTE $FF
RAM:8891 FF                          .BYTE $FF
RAM:8892 FF                          .BYTE $FF
RAM:8893 FF                          .BYTE $FF
RAM:8894 FF                          .BYTE $FF
RAM:8895 FF                          .BYTE $FF
RAM:8896 FF                          .BYTE $FF
RAM:8897 FF                          .BYTE $FF
RAM:8898 FF                          .BYTE $FF
RAM:8899 FF                          .BYTE $FF
RAM:889A FF                          .BYTE $FF
RAM:889B FF                          .BYTE $FF
RAM:889C FF                          .BYTE $FF
RAM:889D FF                          .BYTE $FF
RAM:889E FF                          .BYTE $FF
RAM:889F FF                          .BYTE $FF
RAM:88A0 FF                          .BYTE $FF
RAM:88A1 FF                          .BYTE $FF
RAM:88A2 FF                          .BYTE $FF
RAM:88A3 FF                          .BYTE $FF
RAM:88A4 FF                          .BYTE $FF
RAM:88A5 FF                          .BYTE $FF
RAM:88A6 FF                          .BYTE $FF
RAM:88A7 FF                          .BYTE $FF
RAM:88A8 FF                          .BYTE $FF
RAM:88A9 FF                          .BYTE $FF
RAM:88AA FF                          .BYTE $FF
RAM:88AB FF                          .BYTE $FF
RAM:88AC FF                          .BYTE $FF
RAM:88AD FF                          .BYTE $FF
RAM:88AE FF                          .BYTE $FF
RAM:88AF FF                          .BYTE $FF
RAM:88B0 FF                          .BYTE $FF
RAM:88B1 FF                          .BYTE $FF
RAM:88B2 FF                          .BYTE $FF
RAM:88B3 FF                          .BYTE $FF
RAM:88B4 FF                          .BYTE $FF
RAM:88B5 FF                          .BYTE $FF
RAM:88B6 FF                          .BYTE $FF
RAM:88B7 FF                          .BYTE $FF
RAM:88B8 FF                          .BYTE $FF
RAM:88B9 FF                          .BYTE $FF
RAM:88BA FF                          .BYTE $FF
RAM:88BB FF                          .BYTE $FF
RAM:88BC FF                          .BYTE $FF
RAM:88BD FF                          .BYTE $FF
RAM:88BE FF                          .BYTE $FF
RAM:88BF FF                          .BYTE $FF
RAM:88C0 FF                          .BYTE $FF
RAM:88C1 FF                          .BYTE $FF
RAM:88C2 FF                          .BYTE $FF
RAM:88C3 FF                          .BYTE $FF
RAM:88C4 FF                          .BYTE $FF
RAM:88C5 FF                          .BYTE $FF
RAM:88C6 FF                          .BYTE $FF
RAM:88C7 FF                          .BYTE $FF
RAM:88C8 FF                          .BYTE $FF
RAM:88C9 FF                          .BYTE $FF
RAM:88CA FF                          .BYTE $FF
RAM:88CB FF                          .BYTE $FF
RAM:88CC FF                          .BYTE $FF
RAM:88CD FF                          .BYTE $FF
RAM:88CE FF                          .BYTE $FF
RAM:88CF FF                          .BYTE $FF
RAM:88D0 FF                          .BYTE $FF
RAM:88D1 FF                          .BYTE $FF
RAM:88D2 FF                          .BYTE $FF
RAM:88D3 FF                          .BYTE $FF
RAM:88D4 FF                          .BYTE $FF
RAM:88D5 FF                          .BYTE $FF
RAM:88D6 FF                          .BYTE $FF
RAM:88D7 FF                          .BYTE $FF
RAM:88D8 FF                          .BYTE $FF
RAM:88D9 FF                          .BYTE $FF
RAM:88DA FF                          .BYTE $FF
RAM:88DB FF                          .BYTE $FF
RAM:88DC FF                          .BYTE $FF
RAM:88DD FF                          .BYTE $FF
RAM:88DE FF                          .BYTE $FF
RAM:88DF FF                          .BYTE $FF
RAM:88E0 FF                          .BYTE $FF
RAM:88E1 FF                          .BYTE $FF
RAM:88E2 FF                          .BYTE $FF
RAM:88E3 FF                          .BYTE $FF
RAM:88E4 FF                          .BYTE $FF
RAM:88E5 FF                          .BYTE $FF
RAM:88E6 FF                          .BYTE $FF
RAM:88E7 FF                          .BYTE $FF
RAM:88E8 FF                          .BYTE $FF
RAM:88E9 FF                          .BYTE $FF
RAM:88EA FF                          .BYTE $FF
RAM:88EB FF                          .BYTE $FF
RAM:88EC FF                          .BYTE $FF
RAM:88ED FF                          .BYTE $FF
RAM:88EE FF                          .BYTE $FF
RAM:88EF FF                          .BYTE $FF
RAM:88F0 FF                          .BYTE $FF
RAM:88F1 FF                          .BYTE $FF
RAM:88F2 FF                          .BYTE $FF
RAM:88F3 FF                          .BYTE $FF
RAM:88F4 FF                          .BYTE $FF
RAM:88F5 FF                          .BYTE $FF
RAM:88F6 FF                          .BYTE $FF
RAM:88F7 FF                          .BYTE $FF
RAM:88F8 FF                          .BYTE $FF
RAM:88F9 FF                          .BYTE $FF
RAM:88FA FF                          .BYTE $FF
RAM:88FB FF                          .BYTE $FF
RAM:88FC FF                          .BYTE $FF
RAM:88FD FF                          .BYTE $FF
RAM:88FE FF                          .BYTE $FF
RAM:88FF FF                          .BYTE $FF
RAM:8900 FF                          .BYTE $FF
RAM:8901 FF                          .BYTE $FF
RAM:8902 FF                          .BYTE $FF
RAM:8903 FF                          .BYTE $FF
RAM:8904 FF                          .BYTE $FF
RAM:8905 FF                          .BYTE $FF
RAM:8906 FF                          .BYTE $FF
RAM:8907 FF                          .BYTE $FF
RAM:8908 FF                          .BYTE $FF
RAM:8909 FF                          .BYTE $FF
RAM:890A FF                          .BYTE $FF
RAM:890B FF                          .BYTE $FF
RAM:890C FF                          .BYTE $FF
RAM:890D FF                          .BYTE $FF
RAM:890E FF                          .BYTE $FF
RAM:890F FF                          .BYTE $FF
RAM:8910 FF                          .BYTE $FF
RAM:8911 FF                          .BYTE $FF
RAM:8912 FF                          .BYTE $FF
RAM:8913 FF                          .BYTE $FF
RAM:8914 FF                          .BYTE $FF
RAM:8915 FF                          .BYTE $FF
RAM:8916 FF                          .BYTE $FF
RAM:8917 FF                          .BYTE $FF
RAM:8918 FF                          .BYTE $FF
RAM:8919 FF                          .BYTE $FF
RAM:891A FF                          .BYTE $FF
RAM:891B FF                          .BYTE $FF
RAM:891C FF                          .BYTE $FF
RAM:891D FF                          .BYTE $FF
RAM:891E FF                          .BYTE $FF
RAM:891F FF                          .BYTE $FF
RAM:8920 FF                          .BYTE $FF
RAM:8921 FF                          .BYTE $FF
RAM:8922 FF                          .BYTE $FF
RAM:8923 FF                          .BYTE $FF
RAM:8924 FF                          .BYTE $FF
RAM:8925 FF                          .BYTE $FF
RAM:8926 FF                          .BYTE $FF
RAM:8927 FF                          .BYTE $FF
RAM:8928 FF                          .BYTE $FF
RAM:8929 FF                          .BYTE $FF
RAM:892A FF                          .BYTE $FF
RAM:892B FF                          .BYTE $FF
RAM:892C FF                          .BYTE $FF
RAM:892D FF                          .BYTE $FF
RAM:892E FF                          .BYTE $FF
RAM:892F FF                          .BYTE $FF
RAM:8930 FF                          .BYTE $FF
RAM:8931 FF                          .BYTE $FF
RAM:8932 FF                          .BYTE $FF
RAM:8933 FF                          .BYTE $FF
RAM:8934 FF                          .BYTE $FF
RAM:8935 FF                          .BYTE $FF
RAM:8936 FF                          .BYTE $FF
RAM:8937 FF                          .BYTE $FF
RAM:8938 FF                          .BYTE $FF
RAM:8939 FF                          .BYTE $FF
RAM:893A FF                          .BYTE $FF
RAM:893B FF                          .BYTE $FF
RAM:893C FF                          .BYTE $FF
RAM:893D FF                          .BYTE $FF
RAM:893E FF                          .BYTE $FF
RAM:893F FF                          .BYTE $FF
RAM:8940 FF                          .BYTE $FF
RAM:8941 FF                          .BYTE $FF
RAM:8942 FF                          .BYTE $FF
RAM:8943 FF                          .BYTE $FF
RAM:8944 FF                          .BYTE $FF
RAM:8945 FF                          .BYTE $FF
RAM:8946 FF                          .BYTE $FF
RAM:8947 FF                          .BYTE $FF
RAM:8948 FF                          .BYTE $FF
RAM:8949 FF                          .BYTE $FF
RAM:894A FF                          .BYTE $FF
RAM:894B FF                          .BYTE $FF
RAM:894C FF                          .BYTE $FF
RAM:894D FF                          .BYTE $FF
RAM:894E FF                          .BYTE $FF
RAM:894F FF                          .BYTE $FF
RAM:8950 FF                          .BYTE $FF
RAM:8951 FF                          .BYTE $FF
RAM:8952 FF                          .BYTE $FF
RAM:8953 FF                          .BYTE $FF
RAM:8954 FF                          .BYTE $FF
RAM:8955 FF                          .BYTE $FF
RAM:8956 FF                          .BYTE $FF
RAM:8957 FF                          .BYTE $FF
RAM:8958 FF                          .BYTE $FF
RAM:8959 FF                          .BYTE $FF
RAM:895A FF                          .BYTE $FF
RAM:895B FF                          .BYTE $FF
RAM:895C FF                          .BYTE $FF
RAM:895D FF                          .BYTE $FF
RAM:895E FF                          .BYTE $FF
RAM:895F FF                          .BYTE $FF
RAM:8960 FF                          .BYTE $FF
RAM:8961 FF                          .BYTE $FF
RAM:8962 FF                          .BYTE $FF
RAM:8963 FF                          .BYTE $FF
RAM:8964 FF                          .BYTE $FF
RAM:8965 FF                          .BYTE $FF
RAM:8966 FF                          .BYTE $FF
RAM:8967 FF                          .BYTE $FF
RAM:8968 FF                          .BYTE $FF
RAM:8969 FF                          .BYTE $FF
RAM:896A FF                          .BYTE $FF
RAM:896B FF                          .BYTE $FF
RAM:896C FF                          .BYTE $FF
RAM:896D FF                          .BYTE $FF
RAM:896E FF                          .BYTE $FF
RAM:896F FF                          .BYTE $FF
RAM:8970 FF                          .BYTE $FF
RAM:8971 FF                          .BYTE $FF
RAM:8972 FF                          .BYTE $FF
RAM:8973 FF                          .BYTE $FF
RAM:8974 FF                          .BYTE $FF
RAM:8975 FF                          .BYTE $FF
RAM:8976 FF                          .BYTE $FF
RAM:8977 FF                          .BYTE $FF
RAM:8978 FF                          .BYTE $FF
RAM:8979 FF                          .BYTE $FF
RAM:897A FF                          .BYTE $FF
RAM:897B FF                          .BYTE $FF
RAM:897C FF                          .BYTE $FF
RAM:897D FF                          .BYTE $FF
RAM:897E FF                          .BYTE $FF
RAM:897F FF                          .BYTE $FF
RAM:8980 FF                          .BYTE $FF
RAM:8981 FF                          .BYTE $FF
RAM:8982 FF                          .BYTE $FF
RAM:8983 FF                          .BYTE $FF
RAM:8984 FF                          .BYTE $FF
RAM:8985 FF                          .BYTE $FF
RAM:8986 FF                          .BYTE $FF
RAM:8987 FF                          .BYTE $FF
RAM:8988 FF                          .BYTE $FF
RAM:8989 FF                          .BYTE $FF
RAM:898A FF                          .BYTE $FF
RAM:898B FF                          .BYTE $FF
RAM:898C FF                          .BYTE $FF
RAM:898D FF                          .BYTE $FF
RAM:898E FF                          .BYTE $FF
RAM:898F FF                          .BYTE $FF
RAM:8990 FF                          .BYTE $FF
RAM:8991 FF                          .BYTE $FF
RAM:8992 FF                          .BYTE $FF
RAM:8993 FF                          .BYTE $FF
RAM:8994 FF                          .BYTE $FF
RAM:8995 FF                          .BYTE $FF
RAM:8996 FF                          .BYTE $FF
RAM:8997 FF                          .BYTE $FF
RAM:8998 FF                          .BYTE $FF
RAM:8999 FF                          .BYTE $FF
RAM:899A FF                          .BYTE $FF
RAM:899B FF                          .BYTE $FF
RAM:899C FF                          .BYTE $FF
RAM:899D FF                          .BYTE $FF
RAM:899E FF                          .BYTE $FF
RAM:899F FF                          .BYTE $FF
RAM:89A0 FF                          .BYTE $FF
RAM:89A1 FF                          .BYTE $FF
RAM:89A2 FF                          .BYTE $FF
RAM:89A3 FF                          .BYTE $FF
RAM:89A4 FF                          .BYTE $FF
RAM:89A5 FF                          .BYTE $FF
RAM:89A6 FF                          .BYTE $FF
RAM:89A7 FF                          .BYTE $FF
RAM:89A8 FF                          .BYTE $FF
RAM:89A9 FF                          .BYTE $FF
RAM:89AA FF                          .BYTE $FF
RAM:89AB FF                          .BYTE $FF
RAM:89AC FF                          .BYTE $FF
RAM:89AD FF                          .BYTE $FF
RAM:89AE FF                          .BYTE $FF
RAM:89AF FF                          .BYTE $FF
RAM:89B0 FF                          .BYTE $FF
RAM:89B1 FF                          .BYTE $FF
RAM:89B2 FF                          .BYTE $FF
RAM:89B3 FF                          .BYTE $FF
RAM:89B4 FF                          .BYTE $FF
RAM:89B5 FF                          .BYTE $FF
RAM:89B6 FF                          .BYTE $FF
RAM:89B7 FF                          .BYTE $FF
RAM:89B8 FF                          .BYTE $FF
RAM:89B9 FF                          .BYTE $FF
RAM:89BA FF                          .BYTE $FF
RAM:89BB FF                          .BYTE $FF
RAM:89BC FF                          .BYTE $FF
RAM:89BD FF                          .BYTE $FF
RAM:89BE FF                          .BYTE $FF
RAM:89BF FF                          .BYTE $FF
RAM:89C0 FF                          .BYTE $FF
RAM:89C1 FF                          .BYTE $FF
RAM:89C2 FF                          .BYTE $FF
RAM:89C3 FF                          .BYTE $FF
RAM:89C4 FF                          .BYTE $FF
RAM:89C5 FF                          .BYTE $FF
RAM:89C6 FF                          .BYTE $FF
RAM:89C7 FF                          .BYTE $FF
RAM:89C8 FF                          .BYTE $FF
RAM:89C9 FF                          .BYTE $FF
RAM:89CA FF                          .BYTE $FF
RAM:89CB FF                          .BYTE $FF
RAM:89CC FF                          .BYTE $FF
RAM:89CD FF                          .BYTE $FF
RAM:89CE FF                          .BYTE $FF
RAM:89CF FF                          .BYTE $FF
RAM:89D0 FF                          .BYTE $FF
RAM:89D1 FF                          .BYTE $FF
RAM:89D2 FF                          .BYTE $FF
RAM:89D3 FF                          .BYTE $FF
RAM:89D4 FF                          .BYTE $FF
RAM:89D5 FF                          .BYTE $FF
RAM:89D6 FF                          .BYTE $FF
RAM:89D7 FF                          .BYTE $FF
RAM:89D8 FF                          .BYTE $FF
RAM:89D9 FF                          .BYTE $FF
RAM:89DA FF                          .BYTE $FF
RAM:89DB FF                          .BYTE $FF
RAM:89DC FF                          .BYTE $FF
RAM:89DD FF                          .BYTE $FF
RAM:89DE FF                          .BYTE $FF
RAM:89DF FF                          .BYTE $FF
RAM:89E0 FF                          .BYTE $FF
RAM:89E1 FF                          .BYTE $FF
RAM:89E2 FF                          .BYTE $FF
RAM:89E3 FF                          .BYTE $FF
RAM:89E4 FF                          .BYTE $FF
RAM:89E5 FF                          .BYTE $FF
RAM:89E6 FF                          .BYTE $FF
RAM:89E7 FF                          .BYTE $FF
RAM:89E8 FF                          .BYTE $FF
RAM:89E9 FF                          .BYTE $FF
RAM:89EA FF                          .BYTE $FF
RAM:89EB FF                          .BYTE $FF
RAM:89EC FF                          .BYTE $FF
RAM:89ED FF                          .BYTE $FF
RAM:89EE FF                          .BYTE $FF
RAM:89EF FF                          .BYTE $FF
RAM:89F0 FF                          .BYTE $FF
RAM:89F1 FF                          .BYTE $FF
RAM:89F2 FF                          .BYTE $FF
RAM:89F3 FF                          .BYTE $FF
RAM:89F4 FF                          .BYTE $FF
RAM:89F5 FF                          .BYTE $FF
RAM:89F6 FF                          .BYTE $FF
RAM:89F7 FF                          .BYTE $FF
RAM:89F8 FF                          .BYTE $FF
RAM:89F9 FF                          .BYTE $FF
RAM:89FA FF                          .BYTE $FF
RAM:89FB FF                          .BYTE $FF
RAM:89FC FF                          .BYTE $FF
RAM:89FD FF                          .BYTE $FF
RAM:89FE FF                          .BYTE $FF
RAM:89FF FF                          .BYTE $FF
RAM:8A00 FF                          .BYTE $FF
RAM:8A01 FF                          .BYTE $FF
RAM:8A02 FF                          .BYTE $FF
RAM:8A03 FF                          .BYTE $FF
RAM:8A04 FF                          .BYTE $FF
RAM:8A05 FF                          .BYTE $FF
RAM:8A06 FF                          .BYTE $FF
RAM:8A07 FF                          .BYTE $FF
RAM:8A08 FF                          .BYTE $FF
RAM:8A09 FF                          .BYTE $FF
RAM:8A0A FF                          .BYTE $FF
RAM:8A0B FF                          .BYTE $FF
RAM:8A0C FF                          .BYTE $FF
RAM:8A0D FF                          .BYTE $FF
RAM:8A0E FF                          .BYTE $FF
RAM:8A0F FF                          .BYTE $FF
RAM:8A10 FF                          .BYTE $FF
RAM:8A11 FF                          .BYTE $FF
RAM:8A12 FF                          .BYTE $FF
RAM:8A13 FF                          .BYTE $FF
RAM:8A14 FF                          .BYTE $FF
RAM:8A15 FF                          .BYTE $FF
RAM:8A16 FF                          .BYTE $FF
RAM:8A17 FF                          .BYTE $FF
RAM:8A18 FF                          .BYTE $FF
RAM:8A19 FF                          .BYTE $FF
RAM:8A1A FF                          .BYTE $FF
RAM:8A1B FF                          .BYTE $FF
RAM:8A1C FF                          .BYTE $FF
RAM:8A1D FF                          .BYTE $FF
RAM:8A1E FF                          .BYTE $FF
RAM:8A1F FF                          .BYTE $FF
RAM:8A20 FF                          .BYTE $FF
RAM:8A21 FF                          .BYTE $FF
RAM:8A22 FF                          .BYTE $FF
RAM:8A23 FF                          .BYTE $FF
RAM:8A24 FF                          .BYTE $FF
RAM:8A25 FF                          .BYTE $FF
RAM:8A26 FF                          .BYTE $FF
RAM:8A27 FF                          .BYTE $FF
RAM:8A28 FF                          .BYTE $FF
RAM:8A29 FF                          .BYTE $FF
RAM:8A2A FF                          .BYTE $FF
RAM:8A2B FF                          .BYTE $FF
RAM:8A2C FF                          .BYTE $FF
RAM:8A2D FF                          .BYTE $FF
RAM:8A2E FF                          .BYTE $FF
RAM:8A2F FF                          .BYTE $FF
RAM:8A30 FF                          .BYTE $FF
RAM:8A31 FF                          .BYTE $FF
RAM:8A32 FF                          .BYTE $FF
RAM:8A33 FF                          .BYTE $FF
RAM:8A34 FF                          .BYTE $FF
RAM:8A35 FF                          .BYTE $FF
RAM:8A36 FF                          .BYTE $FF
RAM:8A37 FF                          .BYTE $FF
RAM:8A38 FF                          .BYTE $FF
RAM:8A39 FF                          .BYTE $FF
RAM:8A3A FF                          .BYTE $FF
RAM:8A3B FF                          .BYTE $FF
RAM:8A3C FF                          .BYTE $FF
RAM:8A3D FF                          .BYTE $FF
RAM:8A3E FF                          .BYTE $FF
RAM:8A3F FF                          .BYTE $FF
RAM:8A40 FF                          .BYTE $FF
RAM:8A41 FF                          .BYTE $FF
RAM:8A42 FF                          .BYTE $FF
RAM:8A43 FF                          .BYTE $FF
RAM:8A44 FF                          .BYTE $FF
RAM:8A45 FF                          .BYTE $FF
RAM:8A46 FF                          .BYTE $FF
RAM:8A47 FF                          .BYTE $FF
RAM:8A48 FF                          .BYTE $FF
RAM:8A49 FF                          .BYTE $FF
RAM:8A4A FF                          .BYTE $FF
RAM:8A4B FF                          .BYTE $FF
RAM:8A4C FF                          .BYTE $FF
RAM:8A4D FF                          .BYTE $FF
RAM:8A4E FF                          .BYTE $FF
RAM:8A4F FF                          .BYTE $FF
RAM:8A50 FF                          .BYTE $FF
RAM:8A51 FF                          .BYTE $FF
RAM:8A52 FF                          .BYTE $FF
RAM:8A53 FF                          .BYTE $FF
RAM:8A54 FF                          .BYTE $FF
RAM:8A55 FF                          .BYTE $FF
RAM:8A56 FF                          .BYTE $FF
RAM:8A57 FF                          .BYTE $FF
RAM:8A58 FF                          .BYTE $FF
RAM:8A59 FF                          .BYTE $FF
RAM:8A5A FF                          .BYTE $FF
RAM:8A5B FF                          .BYTE $FF
RAM:8A5C FF                          .BYTE $FF
RAM:8A5D FF                          .BYTE $FF
RAM:8A5E FF                          .BYTE $FF
RAM:8A5F FF                          .BYTE $FF
RAM:8A60 FF                          .BYTE $FF
RAM:8A61 FF                          .BYTE $FF
RAM:8A62 FF                          .BYTE $FF
RAM:8A63 FF                          .BYTE $FF
RAM:8A64 FF                          .BYTE $FF
RAM:8A65 FF                          .BYTE $FF
RAM:8A66 FF                          .BYTE $FF
RAM:8A67 FF                          .BYTE $FF
RAM:8A68 FF                          .BYTE $FF
RAM:8A69 FF                          .BYTE $FF
RAM:8A6A FF                          .BYTE $FF
RAM:8A6B FF                          .BYTE $FF
RAM:8A6C FF                          .BYTE $FF
RAM:8A6D FF                          .BYTE $FF
RAM:8A6E FF                          .BYTE $FF
RAM:8A6F FF                          .BYTE $FF
RAM:8A70 FF                          .BYTE $FF
RAM:8A71 FF                          .BYTE $FF
RAM:8A72 FF                          .BYTE $FF
RAM:8A73 FF                          .BYTE $FF
RAM:8A74 FF                          .BYTE $FF
RAM:8A75 FF                          .BYTE $FF
RAM:8A76 FF                          .BYTE $FF
RAM:8A77 FF                          .BYTE $FF
RAM:8A78 FF                          .BYTE $FF
RAM:8A79 FF                          .BYTE $FF
RAM:8A7A FF                          .BYTE $FF
RAM:8A7B FF                          .BYTE $FF
RAM:8A7C FF                          .BYTE $FF
RAM:8A7D FF                          .BYTE $FF
RAM:8A7E FF                          .BYTE $FF
RAM:8A7F FF                          .BYTE $FF
RAM:8A80 FF                          .BYTE $FF
RAM:8A81 FF                          .BYTE $FF
RAM:8A82 FF                          .BYTE $FF
RAM:8A83 FF                          .BYTE $FF
RAM:8A84 FF                          .BYTE $FF
RAM:8A85 FF                          .BYTE $FF
RAM:8A86 FF                          .BYTE $FF
RAM:8A87 FF                          .BYTE $FF
RAM:8A88 FF                          .BYTE $FF
RAM:8A89 FF                          .BYTE $FF
RAM:8A8A FF                          .BYTE $FF
RAM:8A8B FF                          .BYTE $FF
RAM:8A8C FF                          .BYTE $FF
RAM:8A8D FF                          .BYTE $FF
RAM:8A8E FF                          .BYTE $FF
RAM:8A8F FF                          .BYTE $FF
RAM:8A90 FF                          .BYTE $FF
RAM:8A91 FF                          .BYTE $FF
RAM:8A92 FF                          .BYTE $FF
RAM:8A93 FF                          .BYTE $FF
RAM:8A94 FF                          .BYTE $FF
RAM:8A95 FF                          .BYTE $FF
RAM:8A96 FF                          .BYTE $FF
RAM:8A97 FF                          .BYTE $FF
RAM:8A98 FF                          .BYTE $FF
RAM:8A99 FF                          .BYTE $FF
RAM:8A9A FF                          .BYTE $FF
RAM:8A9B FF                          .BYTE $FF
RAM:8A9C FF                          .BYTE $FF
RAM:8A9D FF                          .BYTE $FF
RAM:8A9E FF                          .BYTE $FF
RAM:8A9F FF                          .BYTE $FF
RAM:8AA0 FF                          .BYTE $FF
RAM:8AA1 FF                          .BYTE $FF
RAM:8AA2 FF                          .BYTE $FF
RAM:8AA3 FF                          .BYTE $FF
RAM:8AA4 FF                          .BYTE $FF
RAM:8AA5 FF                          .BYTE $FF
RAM:8AA6 FF                          .BYTE $FF
RAM:8AA7 FF                          .BYTE $FF
RAM:8AA8 FF                          .BYTE $FF
RAM:8AA9 FF                          .BYTE $FF
RAM:8AAA FF                          .BYTE $FF
RAM:8AAB FF                          .BYTE $FF
RAM:8AAC FF                          .BYTE $FF
RAM:8AAD FF                          .BYTE $FF
RAM:8AAE FF                          .BYTE $FF
RAM:8AAF FF                          .BYTE $FF
RAM:8AB0 FF                          .BYTE $FF
RAM:8AB1 FF                          .BYTE $FF
RAM:8AB2 FF                          .BYTE $FF
RAM:8AB3 FF                          .BYTE $FF
RAM:8AB4 FF                          .BYTE $FF
RAM:8AB5 FF                          .BYTE $FF
RAM:8AB6 FF                          .BYTE $FF
RAM:8AB7 FF                          .BYTE $FF
RAM:8AB8 FF                          .BYTE $FF
RAM:8AB9 FF                          .BYTE $FF
RAM:8ABA FF                          .BYTE $FF
RAM:8ABB FF                          .BYTE $FF
RAM:8ABC FF                          .BYTE $FF
RAM:8ABD FF                          .BYTE $FF
RAM:8ABE FF                          .BYTE $FF
RAM:8ABF FF                          .BYTE $FF
RAM:8AC0 FF                          .BYTE $FF
RAM:8AC1 FF                          .BYTE $FF
RAM:8AC2 FF                          .BYTE $FF
RAM:8AC3 FF                          .BYTE $FF
RAM:8AC4 FF                          .BYTE $FF
RAM:8AC5 FF                          .BYTE $FF
RAM:8AC6 FF                          .BYTE $FF
RAM:8AC7 FF                          .BYTE $FF
RAM:8AC8 FF                          .BYTE $FF
RAM:8AC9 FF                          .BYTE $FF
RAM:8ACA FF                          .BYTE $FF
RAM:8ACB FF                          .BYTE $FF
RAM:8ACC FF                          .BYTE $FF
RAM:8ACD FF                          .BYTE $FF
RAM:8ACE FF                          .BYTE $FF
RAM:8ACF FF                          .BYTE $FF
RAM:8AD0 FF                          .BYTE $FF
RAM:8AD1 FF                          .BYTE $FF
RAM:8AD2 FF                          .BYTE $FF
RAM:8AD3 FF                          .BYTE $FF
RAM:8AD4 FF                          .BYTE $FF
RAM:8AD5 FF                          .BYTE $FF
RAM:8AD6 FF                          .BYTE $FF
RAM:8AD7 FF                          .BYTE $FF
RAM:8AD8 FF                          .BYTE $FF
RAM:8AD9 FF                          .BYTE $FF
RAM:8ADA FF                          .BYTE $FF
RAM:8ADB FF                          .BYTE $FF
RAM:8ADC FF                          .BYTE $FF
RAM:8ADD FF                          .BYTE $FF
RAM:8ADE FF                          .BYTE $FF
RAM:8ADF FF                          .BYTE $FF
RAM:8AE0 FF                          .BYTE $FF
RAM:8AE1 FF                          .BYTE $FF
RAM:8AE2 FF                          .BYTE $FF
RAM:8AE3 FF                          .BYTE $FF
RAM:8AE4 FF                          .BYTE $FF
RAM:8AE5 FF                          .BYTE $FF
RAM:8AE6 FF                          .BYTE $FF
RAM:8AE7 FF                          .BYTE $FF
RAM:8AE8 FF                          .BYTE $FF
RAM:8AE9 FF                          .BYTE $FF
RAM:8AEA FF                          .BYTE $FF
RAM:8AEB FF                          .BYTE $FF
RAM:8AEC FF                          .BYTE $FF
RAM:8AED FF                          .BYTE $FF
RAM:8AEE FF                          .BYTE $FF
RAM:8AEF FF                          .BYTE $FF
RAM:8AF0 FF                          .BYTE $FF
RAM:8AF1 FF                          .BYTE $FF
RAM:8AF2 FF                          .BYTE $FF
RAM:8AF3 FF                          .BYTE $FF
RAM:8AF4 FF                          .BYTE $FF
RAM:8AF5 FF                          .BYTE $FF
RAM:8AF6 FF                          .BYTE $FF
RAM:8AF7 FF                          .BYTE $FF
RAM:8AF8 FF                          .BYTE $FF
RAM:8AF9 FF                          .BYTE $FF
RAM:8AFA FF                          .BYTE $FF
RAM:8AFB FF                          .BYTE $FF
RAM:8AFC FF                          .BYTE $FF
RAM:8AFD FF                          .BYTE $FF
RAM:8AFE FF                          .BYTE $FF
RAM:8AFF FF                          .BYTE $FF
RAM:8B00 FF                          .BYTE $FF
RAM:8B01 FF                          .BYTE $FF
RAM:8B02 FF                          .BYTE $FF
RAM:8B03 FF                          .BYTE $FF
RAM:8B04 FF                          .BYTE $FF
RAM:8B05 FF                          .BYTE $FF
RAM:8B06 FF                          .BYTE $FF
RAM:8B07 FF                          .BYTE $FF
RAM:8B08 FF                          .BYTE $FF
RAM:8B09 FF                          .BYTE $FF
RAM:8B0A FF                          .BYTE $FF
RAM:8B0B FF                          .BYTE $FF
RAM:8B0C FF                          .BYTE $FF
RAM:8B0D FF                          .BYTE $FF
RAM:8B0E FF                          .BYTE $FF
RAM:8B0F FF                          .BYTE $FF
RAM:8B10 FF                          .BYTE $FF
RAM:8B11 FF                          .BYTE $FF
RAM:8B12 FF                          .BYTE $FF
RAM:8B13 FF                          .BYTE $FF
RAM:8B14 FF                          .BYTE $FF
RAM:8B15 FF                          .BYTE $FF
RAM:8B16 FF                          .BYTE $FF
RAM:8B17 FF                          .BYTE $FF
RAM:8B18 FF                          .BYTE $FF
RAM:8B19 FF                          .BYTE $FF
RAM:8B1A FF                          .BYTE $FF
RAM:8B1B FF                          .BYTE $FF
RAM:8B1C FF                          .BYTE $FF
RAM:8B1D FF                          .BYTE $FF
RAM:8B1E FF                          .BYTE $FF
RAM:8B1F FF                          .BYTE $FF
RAM:8B20 FF                          .BYTE $FF
RAM:8B21 FF                          .BYTE $FF
RAM:8B22 FF                          .BYTE $FF
RAM:8B23 FF                          .BYTE $FF
RAM:8B24 FF                          .BYTE $FF
RAM:8B25 FF                          .BYTE $FF
RAM:8B26 FF                          .BYTE $FF
RAM:8B27 FF                          .BYTE $FF
RAM:8B28 FF                          .BYTE $FF
RAM:8B29 FF                          .BYTE $FF
RAM:8B2A FF                          .BYTE $FF
RAM:8B2B FF                          .BYTE $FF
RAM:8B2C FF                          .BYTE $FF
RAM:8B2D FF                          .BYTE $FF
RAM:8B2E FF                          .BYTE $FF
RAM:8B2F FF                          .BYTE $FF
RAM:8B30 FF                          .BYTE $FF
RAM:8B31 FF                          .BYTE $FF
RAM:8B32 FF                          .BYTE $FF
RAM:8B33 FF                          .BYTE $FF
RAM:8B34 FF                          .BYTE $FF
RAM:8B35 FF                          .BYTE $FF
RAM:8B36 FF                          .BYTE $FF
RAM:8B37 FF                          .BYTE $FF
RAM:8B38 FF                          .BYTE $FF
RAM:8B39 FF                          .BYTE $FF
RAM:8B3A FF                          .BYTE $FF
RAM:8B3B FF                          .BYTE $FF
RAM:8B3C FF                          .BYTE $FF
RAM:8B3D FF                          .BYTE $FF
RAM:8B3E FF                          .BYTE $FF
RAM:8B3F FF                          .BYTE $FF
RAM:8B40 FF                          .BYTE $FF
RAM:8B41 FF                          .BYTE $FF
RAM:8B42 FF                          .BYTE $FF
RAM:8B43 FF                          .BYTE $FF
RAM:8B44 FF                          .BYTE $FF
RAM:8B45 FF                          .BYTE $FF
RAM:8B46 FF                          .BYTE $FF
RAM:8B47 FF                          .BYTE $FF
RAM:8B48 FF                          .BYTE $FF
RAM:8B49 FF                          .BYTE $FF
RAM:8B4A FF                          .BYTE $FF
RAM:8B4B FF                          .BYTE $FF
RAM:8B4C FF                          .BYTE $FF
RAM:8B4D FF                          .BYTE $FF
RAM:8B4E FF                          .BYTE $FF
RAM:8B4F FF                          .BYTE $FF
RAM:8B50 FF                          .BYTE $FF
RAM:8B51 FF                          .BYTE $FF
RAM:8B52 FF                          .BYTE $FF
RAM:8B53 FF                          .BYTE $FF
RAM:8B54 FF                          .BYTE $FF
RAM:8B55 FF                          .BYTE $FF
RAM:8B56 FF                          .BYTE $FF
RAM:8B57 FF                          .BYTE $FF
RAM:8B58 FF                          .BYTE $FF
RAM:8B59 FF                          .BYTE $FF
RAM:8B5A FF                          .BYTE $FF
RAM:8B5B FF                          .BYTE $FF
RAM:8B5C FF                          .BYTE $FF
RAM:8B5D FF                          .BYTE $FF
RAM:8B5E FF                          .BYTE $FF
RAM:8B5F FF                          .BYTE $FF
RAM:8B60 FF                          .BYTE $FF
RAM:8B61 FF                          .BYTE $FF
RAM:8B62 FF                          .BYTE $FF
RAM:8B63 FF                          .BYTE $FF
RAM:8B64 FF                          .BYTE $FF
RAM:8B65 FF                          .BYTE $FF
RAM:8B66 FF                          .BYTE $FF
RAM:8B67 FF                          .BYTE $FF
RAM:8B68 FF                          .BYTE $FF
RAM:8B69 FF                          .BYTE $FF
RAM:8B6A FF                          .BYTE $FF
RAM:8B6B FF                          .BYTE $FF
RAM:8B6C FF                          .BYTE $FF
RAM:8B6D FF                          .BYTE $FF
RAM:8B6E FF                          .BYTE $FF
RAM:8B6F FF                          .BYTE $FF
RAM:8B70 FF                          .BYTE $FF
RAM:8B71 FF                          .BYTE $FF
RAM:8B72 FF                          .BYTE $FF
RAM:8B73 FF                          .BYTE $FF
RAM:8B74 FF                          .BYTE $FF
RAM:8B75 FF                          .BYTE $FF
RAM:8B76 FF                          .BYTE $FF
RAM:8B77 FF                          .BYTE $FF
RAM:8B78 FF                          .BYTE $FF
RAM:8B79 FF                          .BYTE $FF
RAM:8B7A FF                          .BYTE $FF
RAM:8B7B FF                          .BYTE $FF
RAM:8B7C FF                          .BYTE $FF
RAM:8B7D FF                          .BYTE $FF
RAM:8B7E FF                          .BYTE $FF
RAM:8B7F FF                          .BYTE $FF
RAM:8B80 FF                          .BYTE $FF
RAM:8B81 FF                          .BYTE $FF
RAM:8B82 FF                          .BYTE $FF
RAM:8B83 FF                          .BYTE $FF
RAM:8B84 FF                          .BYTE $FF
RAM:8B85 FF                          .BYTE $FF
RAM:8B86 FF                          .BYTE $FF
RAM:8B87 FF                          .BYTE $FF
RAM:8B88 FF                          .BYTE $FF
RAM:8B89 FF                          .BYTE $FF
RAM:8B8A FF                          .BYTE $FF
RAM:8B8B FF                          .BYTE $FF
RAM:8B8C FF                          .BYTE $FF
RAM:8B8D FF                          .BYTE $FF
RAM:8B8E FF                          .BYTE $FF
RAM:8B8F FF                          .BYTE $FF
RAM:8B90 FF                          .BYTE $FF
RAM:8B91 FF                          .BYTE $FF
RAM:8B92 FF                          .BYTE $FF
RAM:8B93 FF                          .BYTE $FF
RAM:8B94 FF                          .BYTE $FF
RAM:8B95 FF                          .BYTE $FF
RAM:8B96 FF                          .BYTE $FF
RAM:8B97 FF                          .BYTE $FF
RAM:8B98 FF                          .BYTE $FF
RAM:8B99 FF                          .BYTE $FF
RAM:8B9A FF                          .BYTE $FF
RAM:8B9B FF                          .BYTE $FF
RAM:8B9C FF                          .BYTE $FF
RAM:8B9D FF                          .BYTE $FF
RAM:8B9E FF                          .BYTE $FF
RAM:8B9F FF                          .BYTE $FF
RAM:8BA0 FF                          .BYTE $FF
RAM:8BA1 FF                          .BYTE $FF
RAM:8BA2 FF                          .BYTE $FF
RAM:8BA3 FF                          .BYTE $FF
RAM:8BA4 FF                          .BYTE $FF
RAM:8BA5 FF                          .BYTE $FF
RAM:8BA6 FF                          .BYTE $FF
RAM:8BA7 FF                          .BYTE $FF
RAM:8BA8 FF                          .BYTE $FF
RAM:8BA9 FF                          .BYTE $FF
RAM:8BAA FF                          .BYTE $FF
RAM:8BAB FF                          .BYTE $FF
RAM:8BAC FF                          .BYTE $FF
RAM:8BAD FF                          .BYTE $FF
RAM:8BAE FF                          .BYTE $FF
RAM:8BAF FF                          .BYTE $FF
RAM:8BB0 FF                          .BYTE $FF
RAM:8BB1 FF                          .BYTE $FF
RAM:8BB2 FF                          .BYTE $FF
RAM:8BB3 FF                          .BYTE $FF
RAM:8BB4 FF                          .BYTE $FF
RAM:8BB5 FF                          .BYTE $FF
RAM:8BB6 FF                          .BYTE $FF
RAM:8BB7 FF                          .BYTE $FF
RAM:8BB8 FF                          .BYTE $FF
RAM:8BB9 FF                          .BYTE $FF
RAM:8BBA FF                          .BYTE $FF
RAM:8BBB FF                          .BYTE $FF
RAM:8BBC FF                          .BYTE $FF
RAM:8BBD FF                          .BYTE $FF
RAM:8BBE FF                          .BYTE $FF
RAM:8BBF FF                          .BYTE $FF
RAM:8BC0 FF                          .BYTE $FF
RAM:8BC1 FF                          .BYTE $FF
RAM:8BC2 FF                          .BYTE $FF
RAM:8BC3 FF                          .BYTE $FF
RAM:8BC4 FF                          .BYTE $FF
RAM:8BC5 FF                          .BYTE $FF
RAM:8BC6 FF                          .BYTE $FF
RAM:8BC7 FF                          .BYTE $FF
RAM:8BC8 FF                          .BYTE $FF
RAM:8BC9 FF                          .BYTE $FF
RAM:8BCA FF                          .BYTE $FF
RAM:8BCB FF                          .BYTE $FF
RAM:8BCC FF                          .BYTE $FF
RAM:8BCD FF                          .BYTE $FF
RAM:8BCE FF                          .BYTE $FF
RAM:8BCF FF                          .BYTE $FF
RAM:8BD0 FF                          .BYTE $FF
RAM:8BD1 FF                          .BYTE $FF
RAM:8BD2 FF                          .BYTE $FF
RAM:8BD3 FF                          .BYTE $FF
RAM:8BD4 FF                          .BYTE $FF
RAM:8BD5 FF                          .BYTE $FF
RAM:8BD6 FF                          .BYTE $FF
RAM:8BD7 FF                          .BYTE $FF
RAM:8BD8 FF                          .BYTE $FF
RAM:8BD9 FF                          .BYTE $FF
RAM:8BDA FF                          .BYTE $FF
RAM:8BDB FF                          .BYTE $FF
RAM:8BDC FF                          .BYTE $FF
RAM:8BDD FF                          .BYTE $FF
RAM:8BDE FF                          .BYTE $FF
RAM:8BDF FF                          .BYTE $FF
RAM:8BE0 FF                          .BYTE $FF
RAM:8BE1 FF                          .BYTE $FF
RAM:8BE2 FF                          .BYTE $FF
RAM:8BE3 FF                          .BYTE $FF
RAM:8BE4 FF                          .BYTE $FF
RAM:8BE5 FF                          .BYTE $FF
RAM:8BE6 FF                          .BYTE $FF
RAM:8BE7 FF                          .BYTE $FF
RAM:8BE8 FF                          .BYTE $FF
RAM:8BE9 FF                          .BYTE $FF
RAM:8BEA FF                          .BYTE $FF
RAM:8BEB FF                          .BYTE $FF
RAM:8BEC FF                          .BYTE $FF
RAM:8BED FF                          .BYTE $FF
RAM:8BEE FF                          .BYTE $FF
RAM:8BEF FF                          .BYTE $FF
RAM:8BF0 FF                          .BYTE $FF
RAM:8BF1 FF                          .BYTE $FF
RAM:8BF2 FF                          .BYTE $FF
RAM:8BF3 FF                          .BYTE $FF
RAM:8BF4 FF                          .BYTE $FF
RAM:8BF5 FF                          .BYTE $FF
RAM:8BF6 FF                          .BYTE $FF
RAM:8BF7 FF                          .BYTE $FF
RAM:8BF8 FF                          .BYTE $FF
RAM:8BF9 FF                          .BYTE $FF
RAM:8BFA FF                          .BYTE $FF
RAM:8BFB FF                          .BYTE $FF
RAM:8BFC FF                          .BYTE $FF
RAM:8BFD FF                          .BYTE $FF
RAM:8BFE FF                          .BYTE $FF
RAM:8BFF FF                          .BYTE $FF
RAM:8C00 FF                          .BYTE $FF
RAM:8C01 FF                          .BYTE $FF
RAM:8C02 FF                          .BYTE $FF
RAM:8C03 FF                          .BYTE $FF
RAM:8C04 FF                          .BYTE $FF
RAM:8C05 FF                          .BYTE $FF
RAM:8C06 FF                          .BYTE $FF
RAM:8C07 FF                          .BYTE $FF
RAM:8C08 FF                          .BYTE $FF
RAM:8C09 FF                          .BYTE $FF
RAM:8C0A FF                          .BYTE $FF
RAM:8C0B FF                          .BYTE $FF
RAM:8C0C FF                          .BYTE $FF
RAM:8C0D FF                          .BYTE $FF
RAM:8C0E FF                          .BYTE $FF
RAM:8C0F FF                          .BYTE $FF
RAM:8C10 FF                          .BYTE $FF
RAM:8C11 FF                          .BYTE $FF
RAM:8C12 FF                          .BYTE $FF
RAM:8C13 FF                          .BYTE $FF
RAM:8C14 FF                          .BYTE $FF
RAM:8C15 FF                          .BYTE $FF
RAM:8C16 FF                          .BYTE $FF
RAM:8C17 FF                          .BYTE $FF
RAM:8C18 FF                          .BYTE $FF
RAM:8C19 FF                          .BYTE $FF
RAM:8C1A FF                          .BYTE $FF
RAM:8C1B FF                          .BYTE $FF
RAM:8C1C FF                          .BYTE $FF
RAM:8C1D FF                          .BYTE $FF
RAM:8C1E FF                          .BYTE $FF
RAM:8C1F FF                          .BYTE $FF
RAM:8C20 FF                          .BYTE $FF
RAM:8C21 FF                          .BYTE $FF
RAM:8C22 FF                          .BYTE $FF
RAM:8C23 FF                          .BYTE $FF
RAM:8C24 FF                          .BYTE $FF
RAM:8C25 FF                          .BYTE $FF
RAM:8C26 FF                          .BYTE $FF
RAM:8C27 FF                          .BYTE $FF
RAM:8C28 FF                          .BYTE $FF
RAM:8C29 FF                          .BYTE $FF
RAM:8C2A FF                          .BYTE $FF
RAM:8C2B FF                          .BYTE $FF
RAM:8C2C FF                          .BYTE $FF
RAM:8C2D FF                          .BYTE $FF
RAM:8C2E FF                          .BYTE $FF
RAM:8C2F FF                          .BYTE $FF
RAM:8C30 FF                          .BYTE $FF
RAM:8C31 FF                          .BYTE $FF
RAM:8C32 FF                          .BYTE $FF
RAM:8C33 FF                          .BYTE $FF
RAM:8C34 FF                          .BYTE $FF
RAM:8C35 FF                          .BYTE $FF
RAM:8C36 FF                          .BYTE $FF
RAM:8C37 FF                          .BYTE $FF
RAM:8C38 FF                          .BYTE $FF
RAM:8C39 FF                          .BYTE $FF
RAM:8C3A FF                          .BYTE $FF
RAM:8C3B FF                          .BYTE $FF
RAM:8C3C FF                          .BYTE $FF
RAM:8C3D FF                          .BYTE $FF
RAM:8C3E FF                          .BYTE $FF
RAM:8C3F FF                          .BYTE $FF
RAM:8C40 FF                          .BYTE $FF
RAM:8C41 FF                          .BYTE $FF
RAM:8C42 FF                          .BYTE $FF
RAM:8C43 FF                          .BYTE $FF
RAM:8C44 FF                          .BYTE $FF
RAM:8C45 FF                          .BYTE $FF
RAM:8C46 FF                          .BYTE $FF
RAM:8C47 FF                          .BYTE $FF
RAM:8C48 FF                          .BYTE $FF
RAM:8C49 FF                          .BYTE $FF
RAM:8C4A FF                          .BYTE $FF
RAM:8C4B FF                          .BYTE $FF
RAM:8C4C FF                          .BYTE $FF
RAM:8C4D FF                          .BYTE $FF
RAM:8C4E FF                          .BYTE $FF
RAM:8C4F FF                          .BYTE $FF
RAM:8C50 FF                          .BYTE $FF
RAM:8C51 FF                          .BYTE $FF
RAM:8C52 FF                          .BYTE $FF
RAM:8C53 FF                          .BYTE $FF
RAM:8C54 FF                          .BYTE $FF
RAM:8C55 FF                          .BYTE $FF
RAM:8C56 FF                          .BYTE $FF
RAM:8C57 FF                          .BYTE $FF
RAM:8C58 FF                          .BYTE $FF
RAM:8C59 FF                          .BYTE $FF
RAM:8C5A FF                          .BYTE $FF
RAM:8C5B FF                          .BYTE $FF
RAM:8C5C FF                          .BYTE $FF
RAM:8C5D FF                          .BYTE $FF
RAM:8C5E FF                          .BYTE $FF
RAM:8C5F FF                          .BYTE $FF
RAM:8C60 FF                          .BYTE $FF
RAM:8C61 FF                          .BYTE $FF
RAM:8C62 FF                          .BYTE $FF
RAM:8C63 FF                          .BYTE $FF
RAM:8C64 FF                          .BYTE $FF
RAM:8C65 FF                          .BYTE $FF
RAM:8C66 FF                          .BYTE $FF
RAM:8C67 FF                          .BYTE $FF
RAM:8C68 FF                          .BYTE $FF
RAM:8C69 FF                          .BYTE $FF
RAM:8C6A FF                          .BYTE $FF
RAM:8C6B FF                          .BYTE $FF
RAM:8C6C FF                          .BYTE $FF
RAM:8C6D FF                          .BYTE $FF
RAM:8C6E FF                          .BYTE $FF
RAM:8C6F FF                          .BYTE $FF
RAM:8C70 FF                          .BYTE $FF
RAM:8C71 FF                          .BYTE $FF
RAM:8C72 FF                          .BYTE $FF
RAM:8C73 FF                          .BYTE $FF
RAM:8C74 FF                          .BYTE $FF
RAM:8C75 FF                          .BYTE $FF
RAM:8C76 FF                          .BYTE $FF
RAM:8C77 FF                          .BYTE $FF
RAM:8C78 FF                          .BYTE $FF
RAM:8C79 FF                          .BYTE $FF
RAM:8C7A FF                          .BYTE $FF
RAM:8C7B FF                          .BYTE $FF
RAM:8C7C FF                          .BYTE $FF
RAM:8C7D FF                          .BYTE $FF
RAM:8C7E FF                          .BYTE $FF
RAM:8C7F FF                          .BYTE $FF
RAM:8C80 FF                          .BYTE $FF
RAM:8C81 FF                          .BYTE $FF
RAM:8C82 FF                          .BYTE $FF
RAM:8C83 FF                          .BYTE $FF
RAM:8C84 FF                          .BYTE $FF
RAM:8C85 FF                          .BYTE $FF
RAM:8C86 FF                          .BYTE $FF
RAM:8C87 FF                          .BYTE $FF
RAM:8C88 FF                          .BYTE $FF
RAM:8C89 FF                          .BYTE $FF
RAM:8C8A FF                          .BYTE $FF
RAM:8C8B FF                          .BYTE $FF
RAM:8C8C FF                          .BYTE $FF
RAM:8C8D FF                          .BYTE $FF
RAM:8C8E FF                          .BYTE $FF
RAM:8C8F FF                          .BYTE $FF
RAM:8C90 FF                          .BYTE $FF
RAM:8C91 FF                          .BYTE $FF
RAM:8C92 FF                          .BYTE $FF
RAM:8C93 FF                          .BYTE $FF
RAM:8C94 FF                          .BYTE $FF
RAM:8C95 FF                          .BYTE $FF
RAM:8C96 FF                          .BYTE $FF
RAM:8C97 FF                          .BYTE $FF
RAM:8C98 FF                          .BYTE $FF
RAM:8C99 FF                          .BYTE $FF
RAM:8C9A FF                          .BYTE $FF
RAM:8C9B FF                          .BYTE $FF
RAM:8C9C FF                          .BYTE $FF
RAM:8C9D FF                          .BYTE $FF
RAM:8C9E FF                          .BYTE $FF
RAM:8C9F FF                          .BYTE $FF
RAM:8CA0 FF                          .BYTE $FF
RAM:8CA1 FF                          .BYTE $FF
RAM:8CA2 FF                          .BYTE $FF
RAM:8CA3 FF                          .BYTE $FF
RAM:8CA4 FF                          .BYTE $FF
RAM:8CA5 FF                          .BYTE $FF
RAM:8CA6 FF                          .BYTE $FF
RAM:8CA7 FF                          .BYTE $FF
RAM:8CA8 FF                          .BYTE $FF
RAM:8CA9 FF                          .BYTE $FF
RAM:8CAA FF                          .BYTE $FF
RAM:8CAB FF                          .BYTE $FF
RAM:8CAC FF                          .BYTE $FF
RAM:8CAD FF                          .BYTE $FF
RAM:8CAE FF                          .BYTE $FF
RAM:8CAF FF                          .BYTE $FF
RAM:8CB0 FF                          .BYTE $FF
RAM:8CB1 FF                          .BYTE $FF
RAM:8CB2 FF                          .BYTE $FF
RAM:8CB3 FF                          .BYTE $FF
RAM:8CB4 FF                          .BYTE $FF
RAM:8CB5 FF                          .BYTE $FF
RAM:8CB6 FF                          .BYTE $FF
RAM:8CB7 FF                          .BYTE $FF
RAM:8CB8 FF                          .BYTE $FF
RAM:8CB9 FF                          .BYTE $FF
RAM:8CBA FF                          .BYTE $FF
RAM:8CBB FF                          .BYTE $FF
RAM:8CBC FF                          .BYTE $FF
RAM:8CBD FF                          .BYTE $FF
RAM:8CBE FF                          .BYTE $FF
RAM:8CBF FF                          .BYTE $FF
RAM:8CC0 FF                          .BYTE $FF
RAM:8CC1 FF                          .BYTE $FF
RAM:8CC2 FF                          .BYTE $FF
RAM:8CC3 FF                          .BYTE $FF
RAM:8CC4 FF                          .BYTE $FF
RAM:8CC5 FF                          .BYTE $FF
RAM:8CC6 FF                          .BYTE $FF
RAM:8CC7 FF                          .BYTE $FF
RAM:8CC8 FF                          .BYTE $FF
RAM:8CC9 FF                          .BYTE $FF
RAM:8CCA FF                          .BYTE $FF
RAM:8CCB FF                          .BYTE $FF
RAM:8CCC FF                          .BYTE $FF
RAM:8CCD FF                          .BYTE $FF
RAM:8CCE FF                          .BYTE $FF
RAM:8CCF FF                          .BYTE $FF
RAM:8CD0 FF                          .BYTE $FF
RAM:8CD1 FF                          .BYTE $FF
RAM:8CD2 FF                          .BYTE $FF
RAM:8CD3 FF                          .BYTE $FF
RAM:8CD4 FF                          .BYTE $FF
RAM:8CD5 FF                          .BYTE $FF
RAM:8CD6 FF                          .BYTE $FF
RAM:8CD7 FF                          .BYTE $FF
RAM:8CD8 FF                          .BYTE $FF
RAM:8CD9 FF                          .BYTE $FF
RAM:8CDA FF                          .BYTE $FF
RAM:8CDB FF                          .BYTE $FF
RAM:8CDC FF                          .BYTE $FF
RAM:8CDD FF                          .BYTE $FF
RAM:8CDE FF                          .BYTE $FF
RAM:8CDF FF                          .BYTE $FF
RAM:8CE0 FF                          .BYTE $FF
RAM:8CE1 FF                          .BYTE $FF
RAM:8CE2 FF                          .BYTE $FF
RAM:8CE3 FF                          .BYTE $FF
RAM:8CE4 FF                          .BYTE $FF
RAM:8CE5 FF                          .BYTE $FF
RAM:8CE6 FF                          .BYTE $FF
RAM:8CE7 FF                          .BYTE $FF
RAM:8CE8 FF                          .BYTE $FF
RAM:8CE9 FF                          .BYTE $FF
RAM:8CEA FF                          .BYTE $FF
RAM:8CEB FF                          .BYTE $FF
RAM:8CEC FF                          .BYTE $FF
RAM:8CED FF                          .BYTE $FF
RAM:8CEE FF                          .BYTE $FF
RAM:8CEF FF                          .BYTE $FF
RAM:8CF0 FF                          .BYTE $FF
RAM:8CF1 FF                          .BYTE $FF
RAM:8CF2 FF                          .BYTE $FF
RAM:8CF3 FF                          .BYTE $FF
RAM:8CF4 FF                          .BYTE $FF
RAM:8CF5 FF                          .BYTE $FF
RAM:8CF6 FF                          .BYTE $FF
RAM:8CF7 FF                          .BYTE $FF
RAM:8CF8 FF                          .BYTE $FF
RAM:8CF9 FF                          .BYTE $FF
RAM:8CFA FF                          .BYTE $FF
RAM:8CFB FF                          .BYTE $FF
RAM:8CFC FF                          .BYTE $FF
RAM:8CFD FF                          .BYTE $FF
RAM:8CFE FF                          .BYTE $FF
RAM:8CFF FF                          .BYTE $FF
RAM:8D00 FF                          .BYTE $FF
RAM:8D01 FF                          .BYTE $FF
RAM:8D02 FF                          .BYTE $FF
RAM:8D03 FF                          .BYTE $FF
RAM:8D04 FF                          .BYTE $FF
RAM:8D05 FF                          .BYTE $FF
RAM:8D06 FF                          .BYTE $FF
RAM:8D07 FF                          .BYTE $FF
RAM:8D08 FF                          .BYTE $FF
RAM:8D09 FF                          .BYTE $FF
RAM:8D0A FF                          .BYTE $FF
RAM:8D0B FF                          .BYTE $FF
RAM:8D0C FF                          .BYTE $FF
RAM:8D0D FF                          .BYTE $FF
RAM:8D0E FF                          .BYTE $FF
RAM:8D0F FF                          .BYTE $FF
RAM:8D10 FF                          .BYTE $FF
RAM:8D11 FF                          .BYTE $FF
RAM:8D12 FF                          .BYTE $FF
RAM:8D13 FF                          .BYTE $FF
RAM:8D14 FF                          .BYTE $FF
RAM:8D15 FF                          .BYTE $FF
RAM:8D16 FF                          .BYTE $FF
RAM:8D17 FF                          .BYTE $FF
RAM:8D18 FF                          .BYTE $FF
RAM:8D19 FF                          .BYTE $FF
RAM:8D1A FF                          .BYTE $FF
RAM:8D1B FF                          .BYTE $FF
RAM:8D1C FF                          .BYTE $FF
RAM:8D1D FF                          .BYTE $FF
RAM:8D1E FF                          .BYTE $FF
RAM:8D1F FF                          .BYTE $FF
RAM:8D20 FF                          .BYTE $FF
RAM:8D21 FF                          .BYTE $FF
RAM:8D22 FF                          .BYTE $FF
RAM:8D23 FF                          .BYTE $FF
RAM:8D24 FF                          .BYTE $FF
RAM:8D25 FF                          .BYTE $FF
RAM:8D26 FF                          .BYTE $FF
RAM:8D27 FF                          .BYTE $FF
RAM:8D28 FF                          .BYTE $FF
RAM:8D29 FF                          .BYTE $FF
RAM:8D2A FF                          .BYTE $FF
RAM:8D2B FF                          .BYTE $FF
RAM:8D2C FF                          .BYTE $FF
RAM:8D2D FF                          .BYTE $FF
RAM:8D2E FF                          .BYTE $FF
RAM:8D2F FF                          .BYTE $FF
RAM:8D30 FF                          .BYTE $FF
RAM:8D31 FF                          .BYTE $FF
RAM:8D32 FF                          .BYTE $FF
RAM:8D33 FF                          .BYTE $FF
RAM:8D34 FF                          .BYTE $FF
RAM:8D35 FF                          .BYTE $FF
RAM:8D36 FF                          .BYTE $FF
RAM:8D37 FF                          .BYTE $FF
RAM:8D38 FF                          .BYTE $FF
RAM:8D39 FF                          .BYTE $FF
RAM:8D3A FF                          .BYTE $FF
RAM:8D3B FF                          .BYTE $FF
RAM:8D3C FF                          .BYTE $FF
RAM:8D3D FF                          .BYTE $FF
RAM:8D3E FF                          .BYTE $FF
RAM:8D3F FF                          .BYTE $FF
RAM:8D40 FF                          .BYTE $FF
RAM:8D41 FF                          .BYTE $FF
RAM:8D42 FF                          .BYTE $FF
RAM:8D43 FF                          .BYTE $FF
RAM:8D44 FF                          .BYTE $FF
RAM:8D45 FF                          .BYTE $FF
RAM:8D46 FF                          .BYTE $FF
RAM:8D47 FF                          .BYTE $FF
RAM:8D48 FF                          .BYTE $FF
RAM:8D49 FF                          .BYTE $FF
RAM:8D4A FF                          .BYTE $FF
RAM:8D4B FF                          .BYTE $FF
RAM:8D4C FF                          .BYTE $FF
RAM:8D4D FF                          .BYTE $FF
RAM:8D4E FF                          .BYTE $FF
RAM:8D4F FF                          .BYTE $FF
RAM:8D50 FF                          .BYTE $FF
RAM:8D51 FF                          .BYTE $FF
RAM:8D52 FF                          .BYTE $FF
RAM:8D53 FF                          .BYTE $FF
RAM:8D54 FF                          .BYTE $FF
RAM:8D55 FF                          .BYTE $FF
RAM:8D56 FF                          .BYTE $FF
RAM:8D57 FF                          .BYTE $FF
RAM:8D58 FF                          .BYTE $FF
RAM:8D59 FF                          .BYTE $FF
RAM:8D5A FF                          .BYTE $FF
RAM:8D5B FF                          .BYTE $FF
RAM:8D5C FF                          .BYTE $FF
RAM:8D5D FF                          .BYTE $FF
RAM:8D5E FF                          .BYTE $FF
RAM:8D5F FF                          .BYTE $FF
RAM:8D60 FF                          .BYTE $FF
RAM:8D61 FF                          .BYTE $FF
RAM:8D62 FF                          .BYTE $FF
RAM:8D63 FF                          .BYTE $FF
RAM:8D64 FF                          .BYTE $FF
RAM:8D65 FF                          .BYTE $FF
RAM:8D66 FF                          .BYTE $FF
RAM:8D67 FF                          .BYTE $FF
RAM:8D68 FF                          .BYTE $FF
RAM:8D69 FF                          .BYTE $FF
RAM:8D6A FF                          .BYTE $FF
RAM:8D6B FF                          .BYTE $FF
RAM:8D6C FF                          .BYTE $FF
RAM:8D6D FF                          .BYTE $FF
RAM:8D6E FF                          .BYTE $FF
RAM:8D6F FF                          .BYTE $FF
RAM:8D70 FF                          .BYTE $FF
RAM:8D71 FF                          .BYTE $FF
RAM:8D72 FF                          .BYTE $FF
RAM:8D73 FF                          .BYTE $FF
RAM:8D74 FF                          .BYTE $FF
RAM:8D75 FF                          .BYTE $FF
RAM:8D76 FF                          .BYTE $FF
RAM:8D77 FF                          .BYTE $FF
RAM:8D78 FF                          .BYTE $FF
RAM:8D79 FF                          .BYTE $FF
RAM:8D7A FF                          .BYTE $FF
RAM:8D7B FF                          .BYTE $FF
RAM:8D7C FF                          .BYTE $FF
RAM:8D7D FF                          .BYTE $FF
RAM:8D7E FF                          .BYTE $FF
RAM:8D7F FF                          .BYTE $FF
RAM:8D80 FF                          .BYTE $FF
RAM:8D81 FF                          .BYTE $FF
RAM:8D82 FF                          .BYTE $FF
RAM:8D83 FF                          .BYTE $FF
RAM:8D84 FF                          .BYTE $FF
RAM:8D85 FF                          .BYTE $FF
RAM:8D86 FF                          .BYTE $FF
RAM:8D87 FF                          .BYTE $FF
RAM:8D88 FF                          .BYTE $FF
RAM:8D89 FF                          .BYTE $FF
RAM:8D8A FF                          .BYTE $FF
RAM:8D8B FF                          .BYTE $FF
RAM:8D8C FF                          .BYTE $FF
RAM:8D8D FF                          .BYTE $FF
RAM:8D8E FF                          .BYTE $FF
RAM:8D8F FF                          .BYTE $FF
RAM:8D90 FF                          .BYTE $FF
RAM:8D91 FF                          .BYTE $FF
RAM:8D92 FF                          .BYTE $FF
RAM:8D93 FF                          .BYTE $FF
RAM:8D94 FF                          .BYTE $FF
RAM:8D95 FF                          .BYTE $FF
RAM:8D96 FF                          .BYTE $FF
RAM:8D97 FF                          .BYTE $FF
RAM:8D98 FF                          .BYTE $FF
RAM:8D99 FF                          .BYTE $FF
RAM:8D9A FF                          .BYTE $FF
RAM:8D9B FF                          .BYTE $FF
RAM:8D9C FF                          .BYTE $FF
RAM:8D9D FF                          .BYTE $FF
RAM:8D9E FF                          .BYTE $FF
RAM:8D9F FF                          .BYTE $FF
RAM:8DA0 FF                          .BYTE $FF
RAM:8DA1 FF                          .BYTE $FF
RAM:8DA2 FF                          .BYTE $FF
RAM:8DA3 FF                          .BYTE $FF
RAM:8DA4 FF                          .BYTE $FF
RAM:8DA5 FF                          .BYTE $FF
RAM:8DA6 FF                          .BYTE $FF
RAM:8DA7 FF                          .BYTE $FF
RAM:8DA8 FF                          .BYTE $FF
RAM:8DA9 FF                          .BYTE $FF
RAM:8DAA FF                          .BYTE $FF
RAM:8DAB FF                          .BYTE $FF
RAM:8DAC FF                          .BYTE $FF
RAM:8DAD FF                          .BYTE $FF
RAM:8DAE FF                          .BYTE $FF
RAM:8DAF FF                          .BYTE $FF
RAM:8DB0 FF                          .BYTE $FF
RAM:8DB1 FF                          .BYTE $FF
RAM:8DB2 FF                          .BYTE $FF
RAM:8DB3 FF                          .BYTE $FF
RAM:8DB4 FF                          .BYTE $FF
RAM:8DB5 FF                          .BYTE $FF
RAM:8DB6 FF                          .BYTE $FF
RAM:8DB7 FF                          .BYTE $FF
RAM:8DB8 FF                          .BYTE $FF
RAM:8DB9 FF                          .BYTE $FF
RAM:8DBA FF                          .BYTE $FF
RAM:8DBB FF                          .BYTE $FF
RAM:8DBC FF                          .BYTE $FF
RAM:8DBD FF                          .BYTE $FF
RAM:8DBE FF                          .BYTE $FF
RAM:8DBF FF                          .BYTE $FF
RAM:8DC0 FF                          .BYTE $FF
RAM:8DC1 FF                          .BYTE $FF
RAM:8DC2 FF                          .BYTE $FF
RAM:8DC3 FF                          .BYTE $FF
RAM:8DC4 FF                          .BYTE $FF
RAM:8DC5 FF                          .BYTE $FF
RAM:8DC6 FF                          .BYTE $FF
RAM:8DC7 FF                          .BYTE $FF
RAM:8DC8 FF                          .BYTE $FF
RAM:8DC9 FF                          .BYTE $FF
RAM:8DCA FF                          .BYTE $FF
RAM:8DCB FF                          .BYTE $FF
RAM:8DCC FF                          .BYTE $FF
RAM:8DCD FF                          .BYTE $FF
RAM:8DCE FF                          .BYTE $FF
RAM:8DCF FF                          .BYTE $FF
RAM:8DD0 FF                          .BYTE $FF
RAM:8DD1 FF                          .BYTE $FF
RAM:8DD2 FF                          .BYTE $FF
RAM:8DD3 FF                          .BYTE $FF
RAM:8DD4 FF                          .BYTE $FF
RAM:8DD5 FF                          .BYTE $FF
RAM:8DD6 FF                          .BYTE $FF
RAM:8DD7 FF                          .BYTE $FF
RAM:8DD8 FF                          .BYTE $FF
RAM:8DD9 FF                          .BYTE $FF
RAM:8DDA FF                          .BYTE $FF
RAM:8DDB FF                          .BYTE $FF
RAM:8DDC FF                          .BYTE $FF
RAM:8DDD FF                          .BYTE $FF
RAM:8DDE FF                          .BYTE $FF
RAM:8DDF FF                          .BYTE $FF
RAM:8DE0 FF                          .BYTE $FF
RAM:8DE1 FF                          .BYTE $FF
RAM:8DE2 FF                          .BYTE $FF
RAM:8DE3 FF                          .BYTE $FF
RAM:8DE4 FF                          .BYTE $FF
RAM:8DE5 FF                          .BYTE $FF
RAM:8DE6 FF                          .BYTE $FF
RAM:8DE7 FF                          .BYTE $FF
RAM:8DE8 FF                          .BYTE $FF
RAM:8DE9 FF                          .BYTE $FF
RAM:8DEA FF                          .BYTE $FF
RAM:8DEB FF                          .BYTE $FF
RAM:8DEC FF                          .BYTE $FF
RAM:8DED FF                          .BYTE $FF
RAM:8DEE FF                          .BYTE $FF
RAM:8DEF FF                          .BYTE $FF
RAM:8DF0 FF                          .BYTE $FF
RAM:8DF1 FF                          .BYTE $FF
RAM:8DF2 FF                          .BYTE $FF
RAM:8DF3 FF                          .BYTE $FF
RAM:8DF4 FF                          .BYTE $FF
RAM:8DF5 FF                          .BYTE $FF
RAM:8DF6 FF                          .BYTE $FF
RAM:8DF7 FF                          .BYTE $FF
RAM:8DF8 FF                          .BYTE $FF
RAM:8DF9 FF                          .BYTE $FF
RAM:8DFA FF                          .BYTE $FF
RAM:8DFB FF                          .BYTE $FF
RAM:8DFC FF                          .BYTE $FF
RAM:8DFD FF                          .BYTE $FF
RAM:8DFE FF                          .BYTE $FF
RAM:8DFF FF                          .BYTE $FF
RAM:8E00 FF                          .BYTE $FF
RAM:8E01 FF                          .BYTE $FF
RAM:8E02 FF                          .BYTE $FF
RAM:8E03 FF                          .BYTE $FF
RAM:8E04 FF                          .BYTE $FF
RAM:8E05 FF                          .BYTE $FF
RAM:8E06 FF                          .BYTE $FF
RAM:8E07 FF                          .BYTE $FF
RAM:8E08 FF                          .BYTE $FF
RAM:8E09 FF                          .BYTE $FF
RAM:8E0A FF                          .BYTE $FF
RAM:8E0B FF                          .BYTE $FF
RAM:8E0C FF                          .BYTE $FF
RAM:8E0D FF                          .BYTE $FF
RAM:8E0E FF                          .BYTE $FF
RAM:8E0F FF                          .BYTE $FF
RAM:8E10 FF                          .BYTE $FF
RAM:8E11 FF                          .BYTE $FF
RAM:8E12 FF                          .BYTE $FF
RAM:8E13 FF                          .BYTE $FF
RAM:8E14 FF                          .BYTE $FF
RAM:8E15 FF                          .BYTE $FF
RAM:8E16 FF                          .BYTE $FF
RAM:8E17 FF                          .BYTE $FF
RAM:8E18 FF                          .BYTE $FF
RAM:8E19 FF                          .BYTE $FF
RAM:8E1A FF                          .BYTE $FF
RAM:8E1B FF                          .BYTE $FF
RAM:8E1C FF                          .BYTE $FF
RAM:8E1D FF                          .BYTE $FF
RAM:8E1E FF                          .BYTE $FF
RAM:8E1F FF                          .BYTE $FF
RAM:8E20 FF                          .BYTE $FF
RAM:8E21 FF                          .BYTE $FF
RAM:8E22 FF                          .BYTE $FF
RAM:8E23 FF                          .BYTE $FF
RAM:8E24 FF                          .BYTE $FF
RAM:8E25 FF                          .BYTE $FF
RAM:8E26 FF                          .BYTE $FF
RAM:8E27 FF                          .BYTE $FF
RAM:8E28 FF                          .BYTE $FF
RAM:8E29 FF                          .BYTE $FF
RAM:8E2A FF                          .BYTE $FF
RAM:8E2B FF                          .BYTE $FF
RAM:8E2C FF                          .BYTE $FF
RAM:8E2D FF                          .BYTE $FF
RAM:8E2E FF                          .BYTE $FF
RAM:8E2F FF                          .BYTE $FF
RAM:8E30 FF                          .BYTE $FF
RAM:8E31 FF                          .BYTE $FF
RAM:8E32 FF                          .BYTE $FF
RAM:8E33 FF                          .BYTE $FF
RAM:8E34 FF                          .BYTE $FF
RAM:8E35 FF                          .BYTE $FF
RAM:8E36 FF                          .BYTE $FF
RAM:8E37 FF                          .BYTE $FF
RAM:8E38 FF                          .BYTE $FF
RAM:8E39 FF                          .BYTE $FF
RAM:8E3A FF                          .BYTE $FF
RAM:8E3B FF                          .BYTE $FF
RAM:8E3C FF                          .BYTE $FF
RAM:8E3D FF                          .BYTE $FF
RAM:8E3E FF                          .BYTE $FF
RAM:8E3F FF                          .BYTE $FF
RAM:8E40 FF                          .BYTE $FF
RAM:8E41 FF                          .BYTE $FF
RAM:8E42 FF                          .BYTE $FF
RAM:8E43 FF                          .BYTE $FF
RAM:8E44 FF                          .BYTE $FF
RAM:8E45 FF                          .BYTE $FF
RAM:8E46 FF                          .BYTE $FF
RAM:8E47 FF                          .BYTE $FF
RAM:8E48 FF                          .BYTE $FF
RAM:8E49 FF                          .BYTE $FF
RAM:8E4A FF                          .BYTE $FF
RAM:8E4B FF                          .BYTE $FF
RAM:8E4C FF                          .BYTE $FF
RAM:8E4D FF                          .BYTE $FF
RAM:8E4E FF                          .BYTE $FF
RAM:8E4F FF                          .BYTE $FF
RAM:8E50 FF                          .BYTE $FF
RAM:8E51 FF                          .BYTE $FF
RAM:8E52 FF                          .BYTE $FF
RAM:8E53 FF                          .BYTE $FF
RAM:8E54 FF                          .BYTE $FF
RAM:8E55 FF                          .BYTE $FF
RAM:8E56 FF                          .BYTE $FF
RAM:8E57 FF                          .BYTE $FF
RAM:8E58 FF                          .BYTE $FF
RAM:8E59 FF                          .BYTE $FF
RAM:8E5A FF                          .BYTE $FF
RAM:8E5B FF                          .BYTE $FF
RAM:8E5C FF                          .BYTE $FF
RAM:8E5D FF                          .BYTE $FF
RAM:8E5E FF                          .BYTE $FF
RAM:8E5F FF                          .BYTE $FF
RAM:8E60 FF                          .BYTE $FF
RAM:8E61 FF                          .BYTE $FF
RAM:8E62 FF                          .BYTE $FF
RAM:8E63 FF                          .BYTE $FF
RAM:8E64 FF                          .BYTE $FF
RAM:8E65 FF                          .BYTE $FF
RAM:8E66 FF                          .BYTE $FF
RAM:8E67 FF                          .BYTE $FF
RAM:8E68 FF                          .BYTE $FF
RAM:8E69 FF                          .BYTE $FF
RAM:8E6A FF                          .BYTE $FF
RAM:8E6B FF                          .BYTE $FF
RAM:8E6C FF                          .BYTE $FF
RAM:8E6D FF                          .BYTE $FF
RAM:8E6E FF                          .BYTE $FF
RAM:8E6F FF                          .BYTE $FF
RAM:8E70 FF                          .BYTE $FF
RAM:8E71 FF                          .BYTE $FF
RAM:8E72 FF                          .BYTE $FF
RAM:8E73 FF                          .BYTE $FF
RAM:8E74 FF                          .BYTE $FF
RAM:8E75 FF                          .BYTE $FF
RAM:8E76 FF                          .BYTE $FF
RAM:8E77 FF                          .BYTE $FF
RAM:8E78 FF                          .BYTE $FF
RAM:8E79 FF                          .BYTE $FF
RAM:8E7A FF                          .BYTE $FF
RAM:8E7B FF                          .BYTE $FF
RAM:8E7C FF                          .BYTE $FF
RAM:8E7D FF                          .BYTE $FF
RAM:8E7E FF                          .BYTE $FF
RAM:8E7F FF                          .BYTE $FF
RAM:8E80 FF                          .BYTE $FF
RAM:8E81 FF                          .BYTE $FF
RAM:8E82 FF                          .BYTE $FF
RAM:8E83 FF                          .BYTE $FF
RAM:8E84 FF                          .BYTE $FF
RAM:8E85 FF                          .BYTE $FF
RAM:8E86 FF                          .BYTE $FF
RAM:8E87 FF                          .BYTE $FF
RAM:8E88 FF                          .BYTE $FF
RAM:8E89 FF                          .BYTE $FF
RAM:8E8A FF                          .BYTE $FF
RAM:8E8B FF                          .BYTE $FF
RAM:8E8C FF                          .BYTE $FF
RAM:8E8D FF                          .BYTE $FF
RAM:8E8E FF                          .BYTE $FF
RAM:8E8F FF                          .BYTE $FF
RAM:8E90 FF                          .BYTE $FF
RAM:8E91 FF                          .BYTE $FF
RAM:8E92 FF                          .BYTE $FF
RAM:8E93 FF                          .BYTE $FF
RAM:8E94 FF                          .BYTE $FF
RAM:8E95 FF                          .BYTE $FF
RAM:8E96 FF                          .BYTE $FF
RAM:8E97 FF                          .BYTE $FF
RAM:8E98 FF                          .BYTE $FF
RAM:8E99 FF                          .BYTE $FF
RAM:8E9A FF                          .BYTE $FF
RAM:8E9B FF                          .BYTE $FF
RAM:8E9C FF                          .BYTE $FF
RAM:8E9D FF                          .BYTE $FF
RAM:8E9E FF                          .BYTE $FF
RAM:8E9F FF                          .BYTE $FF
RAM:8EA0 FF                          .BYTE $FF
RAM:8EA1 FF                          .BYTE $FF
RAM:8EA2 FF                          .BYTE $FF
RAM:8EA3 FF                          .BYTE $FF
RAM:8EA4 FF                          .BYTE $FF
RAM:8EA5 FF                          .BYTE $FF
RAM:8EA6 FF                          .BYTE $FF
RAM:8EA7 FF                          .BYTE $FF
RAM:8EA8 FF                          .BYTE $FF
RAM:8EA9 FF                          .BYTE $FF
RAM:8EAA FF                          .BYTE $FF
RAM:8EAB FF                          .BYTE $FF
RAM:8EAC FF                          .BYTE $FF
RAM:8EAD FF                          .BYTE $FF
RAM:8EAE FF                          .BYTE $FF
RAM:8EAF FF                          .BYTE $FF
RAM:8EB0 FF                          .BYTE $FF
RAM:8EB1 FF                          .BYTE $FF
RAM:8EB2 FF                          .BYTE $FF
RAM:8EB3 FF                          .BYTE $FF
RAM:8EB4 FF                          .BYTE $FF
RAM:8EB5 FF                          .BYTE $FF
RAM:8EB6 FF                          .BYTE $FF
RAM:8EB7 FF                          .BYTE $FF
RAM:8EB8 FF                          .BYTE $FF
RAM:8EB9 FF                          .BYTE $FF
RAM:8EBA FF                          .BYTE $FF
RAM:8EBB FF                          .BYTE $FF
RAM:8EBC FF                          .BYTE $FF
RAM:8EBD FF                          .BYTE $FF
RAM:8EBE FF                          .BYTE $FF
RAM:8EBF FF                          .BYTE $FF
RAM:8EC0 FF                          .BYTE $FF
RAM:8EC1 FF                          .BYTE $FF
RAM:8EC2 FF                          .BYTE $FF
RAM:8EC3 FF                          .BYTE $FF
RAM:8EC4 FF                          .BYTE $FF
RAM:8EC5 FF                          .BYTE $FF
RAM:8EC6 FF                          .BYTE $FF
RAM:8EC7 FF                          .BYTE $FF
RAM:8EC8 FF                          .BYTE $FF
RAM:8EC9 FF                          .BYTE $FF
RAM:8ECA FF                          .BYTE $FF
RAM:8ECB FF                          .BYTE $FF
RAM:8ECC FF                          .BYTE $FF
RAM:8ECD FF                          .BYTE $FF
RAM:8ECE FF                          .BYTE $FF
RAM:8ECF FF                          .BYTE $FF
RAM:8ED0 FF                          .BYTE $FF
RAM:8ED1 FF                          .BYTE $FF
RAM:8ED2 FF                          .BYTE $FF
RAM:8ED3 FF                          .BYTE $FF
RAM:8ED4 FF                          .BYTE $FF
RAM:8ED5 FF                          .BYTE $FF
RAM:8ED6 FF                          .BYTE $FF
RAM:8ED7 FF                          .BYTE $FF
RAM:8ED8 FF                          .BYTE $FF
RAM:8ED9 FF                          .BYTE $FF
RAM:8EDA FF                          .BYTE $FF
RAM:8EDB FF                          .BYTE $FF
RAM:8EDC FF                          .BYTE $FF
RAM:8EDD FF                          .BYTE $FF
RAM:8EDE FF                          .BYTE $FF
RAM:8EDF FF                          .BYTE $FF
RAM:8EE0 FF                          .BYTE $FF
RAM:8EE1 FF                          .BYTE $FF
RAM:8EE2 FF                          .BYTE $FF
RAM:8EE3 FF                          .BYTE $FF
RAM:8EE4 FF                          .BYTE $FF
RAM:8EE5 FF                          .BYTE $FF
RAM:8EE6 FF                          .BYTE $FF
RAM:8EE7 FF                          .BYTE $FF
RAM:8EE8 FF                          .BYTE $FF
RAM:8EE9 FF                          .BYTE $FF
RAM:8EEA FF                          .BYTE $FF
RAM:8EEB FF                          .BYTE $FF
RAM:8EEC FF                          .BYTE $FF
RAM:8EED FF                          .BYTE $FF
RAM:8EEE FF                          .BYTE $FF
RAM:8EEF FF                          .BYTE $FF
RAM:8EF0 FF                          .BYTE $FF
RAM:8EF1 FF                          .BYTE $FF
RAM:8EF2 FF                          .BYTE $FF
RAM:8EF3 FF                          .BYTE $FF
RAM:8EF4 FF                          .BYTE $FF
RAM:8EF5 FF                          .BYTE $FF
RAM:8EF6 FF                          .BYTE $FF
RAM:8EF7 FF                          .BYTE $FF
RAM:8EF8 FF                          .BYTE $FF
RAM:8EF9 FF                          .BYTE $FF
RAM:8EFA FF                          .BYTE $FF
RAM:8EFB FF                          .BYTE $FF
RAM:8EFC FF                          .BYTE $FF
RAM:8EFD FF                          .BYTE $FF
RAM:8EFE FF                          .BYTE $FF
RAM:8EFF FF                          .BYTE $FF
RAM:8F00 FF                          .BYTE $FF
RAM:8F01 FF                          .BYTE $FF
RAM:8F02 FF                          .BYTE $FF
RAM:8F03 FF                          .BYTE $FF
RAM:8F04 FF                          .BYTE $FF
RAM:8F05 FF                          .BYTE $FF
RAM:8F06 FF                          .BYTE $FF
RAM:8F07 FF                          .BYTE $FF
RAM:8F08 FF                          .BYTE $FF
RAM:8F09 FF                          .BYTE $FF
RAM:8F0A FF                          .BYTE $FF
RAM:8F0B FF                          .BYTE $FF
RAM:8F0C FF                          .BYTE $FF
RAM:8F0D FF                          .BYTE $FF
RAM:8F0E FF                          .BYTE $FF
RAM:8F0F FF                          .BYTE $FF
RAM:8F10 FF                          .BYTE $FF
RAM:8F11 FF                          .BYTE $FF
RAM:8F12 FF                          .BYTE $FF
RAM:8F13 FF                          .BYTE $FF
RAM:8F14 FF                          .BYTE $FF
RAM:8F15 FF                          .BYTE $FF
RAM:8F16 FF                          .BYTE $FF
RAM:8F17 FF                          .BYTE $FF
RAM:8F18 FF                          .BYTE $FF
RAM:8F19 FF                          .BYTE $FF
RAM:8F1A FF                          .BYTE $FF
RAM:8F1B FF                          .BYTE $FF
RAM:8F1C FF                          .BYTE $FF
RAM:8F1D FF                          .BYTE $FF
RAM:8F1E FF                          .BYTE $FF
RAM:8F1F FF                          .BYTE $FF
RAM:8F20 FF                          .BYTE $FF
RAM:8F21 FF                          .BYTE $FF
RAM:8F22 FF                          .BYTE $FF
RAM:8F23 FF                          .BYTE $FF
RAM:8F24 FF                          .BYTE $FF
RAM:8F25 FF                          .BYTE $FF
RAM:8F26 FF                          .BYTE $FF
RAM:8F27 FF                          .BYTE $FF
RAM:8F28 FF                          .BYTE $FF
RAM:8F29 FF                          .BYTE $FF
RAM:8F2A FF                          .BYTE $FF
RAM:8F2B FF                          .BYTE $FF
RAM:8F2C FF                          .BYTE $FF
RAM:8F2D FF                          .BYTE $FF
RAM:8F2E FF                          .BYTE $FF
RAM:8F2F FF                          .BYTE $FF
RAM:8F30 FF                          .BYTE $FF
RAM:8F31 FF                          .BYTE $FF
RAM:8F32 FF                          .BYTE $FF
RAM:8F33 FF                          .BYTE $FF
RAM:8F34 FF                          .BYTE $FF
RAM:8F35 FF                          .BYTE $FF
RAM:8F36 FF                          .BYTE $FF
RAM:8F37 FF                          .BYTE $FF
RAM:8F38 FF                          .BYTE $FF
RAM:8F39 FF                          .BYTE $FF
RAM:8F3A FF                          .BYTE $FF
RAM:8F3B FF                          .BYTE $FF
RAM:8F3C FF                          .BYTE $FF
RAM:8F3D FF                          .BYTE $FF
RAM:8F3E FF                          .BYTE $FF
RAM:8F3F FF                          .BYTE $FF
RAM:8F40 FF                          .BYTE $FF
RAM:8F41 FF                          .BYTE $FF
RAM:8F42 FF                          .BYTE $FF
RAM:8F43 FF                          .BYTE $FF
RAM:8F44 FF                          .BYTE $FF
RAM:8F45 FF                          .BYTE $FF
RAM:8F46 FF                          .BYTE $FF
RAM:8F47 FF                          .BYTE $FF
RAM:8F48 FF                          .BYTE $FF
RAM:8F49 FF                          .BYTE $FF
RAM:8F4A FF                          .BYTE $FF
RAM:8F4B FF                          .BYTE $FF
RAM:8F4C FF                          .BYTE $FF
RAM:8F4D FF                          .BYTE $FF
RAM:8F4E FF                          .BYTE $FF
RAM:8F4F FF                          .BYTE $FF
RAM:8F50 FF                          .BYTE $FF
RAM:8F51 FF                          .BYTE $FF
RAM:8F52 FF                          .BYTE $FF
RAM:8F53 FF                          .BYTE $FF
RAM:8F54 FF                          .BYTE $FF
RAM:8F55 FF                          .BYTE $FF
RAM:8F56 FF                          .BYTE $FF
RAM:8F57 FF                          .BYTE $FF
RAM:8F58 FF                          .BYTE $FF
RAM:8F59 FF                          .BYTE $FF
RAM:8F5A FF                          .BYTE $FF
RAM:8F5B FF                          .BYTE $FF
RAM:8F5C FF                          .BYTE $FF
RAM:8F5D FF                          .BYTE $FF
RAM:8F5E FF                          .BYTE $FF
RAM:8F5F FF                          .BYTE $FF
RAM:8F60 FF                          .BYTE $FF
RAM:8F61 FF                          .BYTE $FF
RAM:8F62 FF                          .BYTE $FF
RAM:8F63 FF                          .BYTE $FF
RAM:8F64 FF                          .BYTE $FF
RAM:8F65 FF                          .BYTE $FF
RAM:8F66 FF                          .BYTE $FF
RAM:8F67 FF                          .BYTE $FF
RAM:8F68 FF                          .BYTE $FF
RAM:8F69 FF                          .BYTE $FF
RAM:8F6A FF                          .BYTE $FF
RAM:8F6B FF                          .BYTE $FF
RAM:8F6C FF                          .BYTE $FF
RAM:8F6D FF                          .BYTE $FF
RAM:8F6E FF                          .BYTE $FF
RAM:8F6F FF                          .BYTE $FF
RAM:8F70 FF                          .BYTE $FF
RAM:8F71 FF                          .BYTE $FF
RAM:8F72 FF                          .BYTE $FF
RAM:8F73 FF                          .BYTE $FF
RAM:8F74 FF                          .BYTE $FF
RAM:8F75 FF                          .BYTE $FF
RAM:8F76 FF                          .BYTE $FF
RAM:8F77 FF                          .BYTE $FF
RAM:8F78 FF                          .BYTE $FF
RAM:8F79 FF                          .BYTE $FF
RAM:8F7A FF                          .BYTE $FF
RAM:8F7B FF                          .BYTE $FF
RAM:8F7C FF                          .BYTE $FF
RAM:8F7D FF                          .BYTE $FF
RAM:8F7E FF                          .BYTE $FF
RAM:8F7F FF                          .BYTE $FF
RAM:8F80 FF                          .BYTE $FF
RAM:8F81 FF                          .BYTE $FF
RAM:8F82 FF                          .BYTE $FF
RAM:8F83 FF                          .BYTE $FF
RAM:8F84 FF                          .BYTE $FF
RAM:8F85 FF                          .BYTE $FF
RAM:8F86 FF                          .BYTE $FF
RAM:8F87 FF                          .BYTE $FF
RAM:8F88 FF                          .BYTE $FF
RAM:8F89 FF                          .BYTE $FF
RAM:8F8A FF                          .BYTE $FF
RAM:8F8B FF                          .BYTE $FF
RAM:8F8C FF                          .BYTE $FF
RAM:8F8D FF                          .BYTE $FF
RAM:8F8E FF                          .BYTE $FF
RAM:8F8F FF                          .BYTE $FF
RAM:8F90 FF                          .BYTE $FF
RAM:8F91 FF                          .BYTE $FF
RAM:8F92 FF                          .BYTE $FF
RAM:8F93 FF                          .BYTE $FF
RAM:8F94 FF                          .BYTE $FF
RAM:8F95 FF                          .BYTE $FF
RAM:8F96 FF                          .BYTE $FF
RAM:8F97 FF                          .BYTE $FF
RAM:8F98 FF                          .BYTE $FF
RAM:8F99 FF                          .BYTE $FF
RAM:8F9A FF                          .BYTE $FF
RAM:8F9B FF                          .BYTE $FF
RAM:8F9C FF                          .BYTE $FF
RAM:8F9D FF                          .BYTE $FF
RAM:8F9E FF                          .BYTE $FF
RAM:8F9F FF                          .BYTE $FF
RAM:8FA0 FF                          .BYTE $FF
RAM:8FA1 FF                          .BYTE $FF
RAM:8FA2 FF                          .BYTE $FF
RAM:8FA3 FF                          .BYTE $FF
RAM:8FA4 FF                          .BYTE $FF
RAM:8FA5 FF                          .BYTE $FF
RAM:8FA6 FF                          .BYTE $FF
RAM:8FA7 FF                          .BYTE $FF
RAM:8FA8 FF                          .BYTE $FF
RAM:8FA9 FF                          .BYTE $FF
RAM:8FAA FF                          .BYTE $FF
RAM:8FAB FF                          .BYTE $FF
RAM:8FAC FF                          .BYTE $FF
RAM:8FAD FF                          .BYTE $FF
RAM:8FAE FF                          .BYTE $FF
RAM:8FAF FF                          .BYTE $FF
RAM:8FB0 FF                          .BYTE $FF
RAM:8FB1 FF                          .BYTE $FF
RAM:8FB2 FF                          .BYTE $FF
RAM:8FB3 FF                          .BYTE $FF
RAM:8FB4 FF                          .BYTE $FF
RAM:8FB5 FF                          .BYTE $FF
RAM:8FB6 FF                          .BYTE $FF
RAM:8FB7 FF                          .BYTE $FF
RAM:8FB8 FF                          .BYTE $FF
RAM:8FB9 FF                          .BYTE $FF
RAM:8FBA FF                          .BYTE $FF
RAM:8FBB FF                          .BYTE $FF
RAM:8FBC FF                          .BYTE $FF
RAM:8FBD FF                          .BYTE $FF
RAM:8FBE FF                          .BYTE $FF
RAM:8FBF FF                          .BYTE $FF
RAM:8FC0 FF                          .BYTE $FF
RAM:8FC1 FF                          .BYTE $FF
RAM:8FC2 FF                          .BYTE $FF
RAM:8FC3 FF                          .BYTE $FF
RAM:8FC4 FF                          .BYTE $FF
RAM:8FC5 FF                          .BYTE $FF
RAM:8FC6 FF                          .BYTE $FF
RAM:8FC7 FF                          .BYTE $FF
RAM:8FC8 FF                          .BYTE $FF
RAM:8FC9 FF                          .BYTE $FF
RAM:8FCA FF                          .BYTE $FF
RAM:8FCB FF                          .BYTE $FF
RAM:8FCC FF                          .BYTE $FF
RAM:8FCD FF                          .BYTE $FF
RAM:8FCE FF                          .BYTE $FF
RAM:8FCF FF                          .BYTE $FF
RAM:8FD0 FF                          .BYTE $FF
RAM:8FD1 FF                          .BYTE $FF
RAM:8FD2 FF                          .BYTE $FF
RAM:8FD3 FF                          .BYTE $FF
RAM:8FD4 FF                          .BYTE $FF
RAM:8FD5 FF                          .BYTE $FF
RAM:8FD6 FF                          .BYTE $FF
RAM:8FD7 FF                          .BYTE $FF
RAM:8FD8 FF                          .BYTE $FF
RAM:8FD9 FF                          .BYTE $FF
RAM:8FDA FF                          .BYTE $FF
RAM:8FDB FF                          .BYTE $FF
RAM:8FDC FF                          .BYTE $FF
RAM:8FDD FF                          .BYTE $FF
RAM:8FDE FF                          .BYTE $FF
RAM:8FDF FF                          .BYTE $FF
RAM:8FE0 FF                          .BYTE $FF
RAM:8FE1 FF                          .BYTE $FF
RAM:8FE2 FF                          .BYTE $FF
RAM:8FE3 FF                          .BYTE $FF
RAM:8FE4 FF                          .BYTE $FF
RAM:8FE5 FF                          .BYTE $FF
RAM:8FE6 FF                          .BYTE $FF
RAM:8FE7 FF                          .BYTE $FF
RAM:8FE8 FF                          .BYTE $FF
RAM:8FE9 FF                          .BYTE $FF
RAM:8FEA FF                          .BYTE $FF
RAM:8FEB FF                          .BYTE $FF
RAM:8FEC FF                          .BYTE $FF
RAM:8FED FF                          .BYTE $FF
RAM:8FEE FF                          .BYTE $FF
RAM:8FEF FF                          .BYTE $FF
RAM:8FF0 FF                          .BYTE $FF
RAM:8FF1 FF                          .BYTE $FF
RAM:8FF2 FF                          .BYTE $FF
RAM:8FF3 FF                          .BYTE $FF
RAM:8FF4 FF                          .BYTE $FF
RAM:8FF5 FF                          .BYTE $FF
RAM:8FF6 FF                          .BYTE $FF
RAM:8FF7 FF                          .BYTE $FF
RAM:8FF8 FF                          .BYTE $FF
RAM:8FF9 FF                          .BYTE $FF
RAM:8FFA FF                          .BYTE $FF
RAM:8FFB FF                          .BYTE $FF
RAM:8FFC FF                          .BYTE $FF
RAM:8FFD FF                          .BYTE $FF
RAM:8FFE FF                          .BYTE $FF
RAM:8FFF FF                          .BYTE $FF
RAM:9000 4E          ERROR_TEXT:     .BYTE $4E ; N
RAM:9001 45                          .BYTE $45 ; E
RAM:9002 58                          .BYTE $58 ; X
RAM:9003 54                          .BYTE $54 ; T
RAM:9004 20                          .BYTE $20
RAM:9005 57                          .BYTE $57 ; W
RAM:9006 49                          .BYTE $49 ; I
RAM:9007 54                          .BYTE $54 ; T
RAM:9008 48                          .BYTE $48 ; H
RAM:9009 4F                          .BYTE $4F ; O
RAM:900A 55                          .BYTE $55 ; U
RAM:900B 54                          .BYTE $54 ; T
RAM:900C 20                          .BYTE $20
RAM:900D 46                          .BYTE $46 ; F
RAM:900E 4F                          .BYTE $4F ; O
RAM:900F D2                          .BYTE $D2
RAM:9010 53                          .BYTE $53 ; S
RAM:9011 59                          .BYTE $59 ; Y
RAM:9012 4E                          .BYTE $4E ; N
RAM:9013 54                          .BYTE $54 ; T
RAM:9014 41                          .BYTE $41 ; A
RAM:9015 D8                          .BYTE $D8
RAM:9016 52                          .BYTE $52 ; R
RAM:9017 45                          .BYTE $45 ; E
RAM:9018 54                          .BYTE $54 ; T
RAM:9019 55                          .BYTE $55 ; U
RAM:901A 52                          .BYTE $52 ; R
RAM:901B 4E                          .BYTE $4E ; N
RAM:901C 20                          .BYTE $20
RAM:901D 57                          .BYTE $57 ; W
RAM:901E 49                          .BYTE $49 ; I
RAM:901F 54                          .BYTE $54 ; T
RAM:9020 48                          .BYTE $48 ; H
RAM:9021 4F                          .BYTE $4F ; O
RAM:9022 55                          .BYTE $55 ; U
RAM:9023 54                          .BYTE $54 ; T
RAM:9024 20                          .BYTE $20
RAM:9025 47                          .BYTE $47 ; G
RAM:9026 4F                          .BYTE $4F ; O
RAM:9027 53                          .BYTE $53 ; S
RAM:9028 55                          .BYTE $55 ; U
RAM:9029 C2                          .BYTE $C2
RAM:902A 4F                          .BYTE $4F ; O
RAM:902B 55                          .BYTE $55 ; U
RAM:902C 54                          .BYTE $54 ; T
RAM:902D 20                          .BYTE $20
RAM:902E 4F                          .BYTE $4F ; O
RAM:902F 46                          .BYTE $46 ; F
RAM:9030 20                          .BYTE $20
RAM:9031 44                          .BYTE $44 ; D
RAM:9032 41                          .BYTE $41 ; A
RAM:9033 54                          .BYTE $54 ; T
RAM:9034 C1                          .BYTE $C1
RAM:9035 49                          .BYTE $49 ; I
RAM:9036 4C                          .BYTE $4C ; L
RAM:9037 4C                          .BYTE $4C ; L
RAM:9038 45                          .BYTE $45 ; E
RAM:9039 47                          .BYTE $47 ; G
RAM:903A 41                          .BYTE $41 ; A
RAM:903B 4C                          .BYTE $4C ; L
RAM:903C 20                          .BYTE $20
RAM:903D 51                          .BYTE $51 ; Q
RAM:903E 55                          .BYTE $55 ; U
RAM:903F 41                          .BYTE $41 ; A
RAM:9040 4E                          .BYTE $4E ; N
RAM:9041 54                          .BYTE $54 ; T
RAM:9042 49                          .BYTE $49 ; I
RAM:9043 54                          .BYTE $54 ; T
RAM:9044 D9                          .BYTE $D9
RAM:9045 4F                          .BYTE $4F ; O
RAM:9046 56                          .BYTE $56 ; V
RAM:9047 45                          .BYTE $45 ; E
RAM:9048 52                          .BYTE $52 ; R
RAM:9049 46                          .BYTE $46 ; F
RAM:904A 4C                          .BYTE $4C ; L
RAM:904B 4F                          .BYTE $4F ; O
RAM:904C D7                          .BYTE $D7
RAM:904D 4F                          .BYTE $4F ; O
RAM:904E 55                          .BYTE $55 ; U
RAM:904F 54                          .BYTE $54 ; T
RAM:9050 20                          .BYTE $20
RAM:9051 4F                          .BYTE $4F ; O
RAM:9052 46                          .BYTE $46 ; F
RAM:9053 20                          .BYTE $20
RAM:9054 4D                          .BYTE $4D ; M
RAM:9055 45                          .BYTE $45 ; E
RAM:9056 4D                          .BYTE $4D ; M
RAM:9057 4F                          .BYTE $4F ; O
RAM:9058 52                          .BYTE $52 ; R
RAM:9059 D9                          .BYTE $D9
RAM:905A 55                          .BYTE $55 ; U
RAM:905B 4E                          .BYTE $4E ; N
RAM:905C 44                          .BYTE $44 ; D
RAM:905D 45                          .BYTE $45 ; E
RAM:905E 46                          .BYTE $46 ; F
RAM:905F 27                          .BYTE $27 ; '
RAM:9060 44                          .BYTE $44 ; D
RAM:9061 20                          .BYTE $20
RAM:9062 53                          .BYTE $53 ; S
RAM:9063 54                          .BYTE $54 ; T
RAM:9064 41                          .BYTE $41 ; A
RAM:9065 54                          .BYTE $54 ; T
RAM:9066 45                          .BYTE $45 ; E
RAM:9067 4D                          .BYTE $4D ; M
RAM:9068 45                          .BYTE $45 ; E
RAM:9069 4E                          .BYTE $4E ; N
RAM:906A D4                          .BYTE $D4
RAM:906B 42                          .BYTE $42 ; B
RAM:906C 41                          .BYTE $41 ; A
RAM:906D 44                          .BYTE $44 ; D
RAM:906E 20                          .BYTE $20
RAM:906F 53                          .BYTE $53 ; S
RAM:9070 55                          .BYTE $55 ; U
RAM:9071 42                          .BYTE $42 ; B
RAM:9072 53                          .BYTE $53 ; S
RAM:9073 43                          .BYTE $43 ; C
RAM:9074 52                          .BYTE $52 ; R
RAM:9075 49                          .BYTE $49 ; I
RAM:9076 50                          .BYTE $50 ; P
RAM:9077 D4                          .BYTE $D4
RAM:9078 52                          .BYTE $52 ; R
RAM:9079 45                          .BYTE $45 ; E
RAM:907A 44                          .BYTE $44 ; D
RAM:907B 49                          .BYTE $49 ; I
RAM:907C 4D                          .BYTE $4D ; M
RAM:907D 27                          .BYTE $27 ; '
RAM:907E 44                          .BYTE $44 ; D
RAM:907F 20                          .BYTE $20
RAM:9080 41                          .BYTE $41 ; A
RAM:9081 52                          .BYTE $52 ; R
RAM:9082 52                          .BYTE $52 ; R
RAM:9083 41                          .BYTE $41 ; A
RAM:9084 D9                          .BYTE $D9
RAM:9085 44                          .BYTE $44 ; D
RAM:9086 49                          .BYTE $49 ; I
RAM:9087 56                          .BYTE $56 ; V
RAM:9088 49                          .BYTE $49 ; I
RAM:9089 53                          .BYTE $53 ; S
RAM:908A 49                          .BYTE $49 ; I
RAM:908B 4F                          .BYTE $4F ; O
RAM:908C 4E                          .BYTE $4E ; N
RAM:908D 20                          .BYTE $20
RAM:908E 42                          .BYTE $42 ; B
RAM:908F 59                          .BYTE $59 ; Y
RAM:9090 20                          .BYTE $20
RAM:9091 5A                          .BYTE $5A ; Z
RAM:9092 45                          .BYTE $45 ; E
RAM:9093 52                          .BYTE $52 ; R
RAM:9094 CF                          .BYTE $CF
RAM:9095 49                          .BYTE $49 ; I
RAM:9096 4C                          .BYTE $4C ; L
RAM:9097 4C                          .BYTE $4C ; L
RAM:9098 45                          .BYTE $45 ; E
RAM:9099 47                          .BYTE $47 ; G
RAM:909A 41                          .BYTE $41 ; A
RAM:909B 4C                          .BYTE $4C ; L
RAM:909C 20                          .BYTE $20
RAM:909D 44                          .BYTE $44 ; D
RAM:909E 49                          .BYTE $49 ; I
RAM:909F 52                          .BYTE $52 ; R
RAM:90A0 45                          .BYTE $45 ; E
RAM:90A1 43                          .BYTE $43 ; C
RAM:90A2 D4                          .BYTE $D4
RAM:90A3 54                          .BYTE $54 ; T
RAM:90A4 59                          .BYTE $59 ; Y
RAM:90A5 50                          .BYTE $50 ; P
RAM:90A6 45                          .BYTE $45 ; E
RAM:90A7 20                          .BYTE $20
RAM:90A8 4D                          .BYTE $4D ; M
RAM:90A9 49                          .BYTE $49 ; I
RAM:90AA 53                          .BYTE $53 ; S
RAM:90AB 4D                          .BYTE $4D ; M
RAM:90AC 41                          .BYTE $41 ; A
RAM:90AD 54                          .BYTE $54 ; T
RAM:90AE 43                          .BYTE $43 ; C
RAM:90AF C8                          .BYTE $C8
RAM:90B0 53                          .BYTE $53 ; S
RAM:90B1 54                          .BYTE $54 ; T
RAM:90B2 52                          .BYTE $52 ; R
RAM:90B3 49                          .BYTE $49 ; I
RAM:90B4 4E                          .BYTE $4E ; N
RAM:90B5 47                          .BYTE $47 ; G
RAM:90B6 20                          .BYTE $20
RAM:90B7 54                          .BYTE $54 ; T
RAM:90B8 4F                          .BYTE $4F ; O
RAM:90B9 4F                          .BYTE $4F ; O
RAM:90BA 20                          .BYTE $20
RAM:90BB 4C                          .BYTE $4C ; L
RAM:90BC 4F                          .BYTE $4F ; O
RAM:90BD 4E                          .BYTE $4E ; N
RAM:90BE C7                          .BYTE $C7
RAM:90BF 46                          .BYTE $46 ; F
RAM:90C0 4F                          .BYTE $4F ; O
RAM:90C1 52                          .BYTE $52 ; R
RAM:90C2 4D                          .BYTE $4D ; M
RAM:90C3 55                          .BYTE $55 ; U
RAM:90C4 4C                          .BYTE $4C ; L
RAM:90C5 41                          .BYTE $41 ; A
RAM:90C6 20                          .BYTE $20
RAM:90C7 54                          .BYTE $54 ; T
RAM:90C8 4F                          .BYTE $4F ; O
RAM:90C9 4F                          .BYTE $4F ; O
RAM:90CA 20                          .BYTE $20
RAM:90CB 43                          .BYTE $43 ; C
RAM:90CC 4F                          .BYTE $4F ; O
RAM:90CD 4D                          .BYTE $4D ; M
RAM:90CE 50                          .BYTE $50 ; P
RAM:90CF 4C                          .BYTE $4C ; L
RAM:90D0 45                          .BYTE $45 ; E
RAM:90D1 D8                          .BYTE $D8
RAM:90D2 43                          .BYTE $43 ; C
RAM:90D3 41                          .BYTE $41 ; A
RAM:90D4 4E                          .BYTE $4E ; N
RAM:90D5 27                          .BYTE $27 ; '
RAM:90D6 54                          .BYTE $54 ; T
RAM:90D7 20                          .BYTE $20
RAM:90D8 43                          .BYTE $43 ; C
RAM:90D9 4F                          .BYTE $4F ; O
RAM:90DA 4E                          .BYTE $4E ; N
RAM:90DB 54                          .BYTE $54 ; T
RAM:90DC 49                          .BYTE $49 ; I
RAM:90DD 4E                          .BYTE $4E ; N
RAM:90DE 55                          .BYTE $55 ; U
RAM:90DF C5                          .BYTE $C5
RAM:90E0 55                          .BYTE $55 ; U
RAM:90E1 4E                          .BYTE $4E ; N
RAM:90E2 44                          .BYTE $44 ; D
RAM:90E3 45                          .BYTE $45 ; E
RAM:90E4 46                          .BYTE $46 ; F
RAM:90E5 27                          .BYTE $27 ; '
RAM:90E6 44                          .BYTE $44 ; D
RAM:90E7 20                          .BYTE $20
RAM:90E8 46                          .BYTE $46 ; F
RAM:90E9 55                          .BYTE $55 ; U
RAM:90EA 4E                          .BYTE $4E ; N
RAM:90EB 43                          .BYTE $43 ; C
RAM:90EC 54                          .BYTE $54 ; T
RAM:90ED 49                          .BYTE $49 ; I
RAM:90EE 4F                          .BYTE $4F ; O
RAM:90EF CE                          .BYTE $CE
RAM:90F0 4C          DEFAULT_FN_KEYS:.BYTE $4C ; L           ; default FN key settings at power up
RAM:90F1 49                          .BYTE $49 ; I
RAM:90F2 53                          .BYTE $53 ; S
RAM:90F3 54                          .BYTE $54 ; T
RAM:90F4 8D                          .BYTE $8D
RAM:90F5 52                          .BYTE $52 ; R
RAM:90F6 55                          .BYTE $55 ; U
RAM:90F7 4E                          .BYTE $4E ; N
RAM:90F8 A0                          .BYTE $A0
RAM:90F9 48                          .BYTE $48 ; H
RAM:90FA 4F                          .BYTE $4F ; O
RAM:90FB 4D                          .BYTE $4D ; M
RAM:90FC 45                          .BYTE $45 ; E
RAM:90FD 8D                          .BYTE $8D
RAM:90FE 54                          .BYTE $54 ; T
RAM:90FF 45                          .BYTE $45 ; E
RAM:9100 58                          .BYTE $58 ; X
RAM:9101 54                          .BYTE $54 ; T
RAM:9102 8D                          .BYTE $8D
RAM:9103 54                          .BYTE $54 ; T
RAM:9104 45                          .BYTE $45 ; E
RAM:9105 58                          .BYTE $58 ; X
RAM:9106 54                          .BYTE $54 ; T
RAM:9107 20                          .BYTE $20
RAM:9108 4E                          .BYTE $4E ; N
RAM:9109 4F                          .BYTE $4F ; O
RAM:910A 52                          .BYTE $52 ; R
RAM:910B 4D                          .BYTE $4D ; M
RAM:910C 41                          .BYTE $41 ; A
RAM:910D 4C                          .BYTE $4C ; L
RAM:910E 2C                          .BYTE $2C ; ,
RAM:910F 2C                          .BYTE $2C ; ,
RAM:9110 42                          .BYTE $42 ; B
RAM:9111 4C                          .BYTE $4C ; L
RAM:9112 41                          .BYTE $41 ; A
RAM:9113 43                          .BYTE $43 ; C
RAM:9114 4B                          .BYTE $4B ; K
RAM:9115 8D                          .BYTE $8D
RAM:9116 57                          .BYTE $57 ; W
RAM:9117 49                          .BYTE $49 ; I
RAM:9118 44                          .BYTE $44 ; D
RAM:9119 54                          .BYTE $54 ; T
RAM:911A 48                          .BYTE $48 ; H
RAM:911B 38                          .BYTE $38 ; 8
RAM:911C 30                          .BYTE $30 ; 0
RAM:911D 8D                          .BYTE $8D
RAM:911E 57                          .BYTE $57 ; W
RAM:911F 49                          .BYTE $49 ; I
RAM:9120 44                          .BYTE $44 ; D
RAM:9121 54                          .BYTE $54 ; T
RAM:9122 48                          .BYTE $48 ; H
RAM:9123 34                          .BYTE $34 ; 4
RAM:9124 30                          .BYTE $30 ; 0
RAM:9125 8D                          .BYTE $8D
RAM:9126 50                          .BYTE $50 ; P
RAM:9127 52                          .BYTE $52 ; R
RAM:9128 23                          .BYTE $23 ; #
RAM:9129 38                          .BYTE $38 ; 8
RAM:912A 8D                          .BYTE $8D
RAM:912B 43                          .BYTE $43 ; C
RAM:912C 41                          .BYTE $41 ; A
RAM:912D 4C                          .BYTE $4C ; L
RAM:912E 4C                          .BYTE $4C ; L
RAM:912F 2D                          .BYTE $2D ; -
RAM:9130 31                          .BYTE $31 ; 1
RAM:9131 35                          .BYTE $35 ; 5
RAM:9132 31                          .BYTE $31 ; 1
RAM:9133 8D                          .BYTE $8D
RAM:9134 53                          .BYTE $53 ; S
RAM:9135 4F                          .BYTE $4F ; O
RAM:9136 55                          .BYTE $55 ; U
RAM:9137 4E                          .BYTE $4E ; N
RAM:9138 44                          .BYTE $44 ; D
RAM:9139 20                          .BYTE $20
RAM:913A 44                          .BYTE $44 ; D
RAM:913B 45                          .BYTE $45 ; E
RAM:913C 46                          .BYTE $46 ; F
RAM:913D A0                          .BYTE $A0
RAM:913E 53                          .BYTE $53 ; S
RAM:913F 4F                          .BYTE $4F ; O
RAM:9140 55                          .BYTE $55 ; U
RAM:9141 4E                          .BYTE $4E ; N
RAM:9142 44                          .BYTE $44 ; D
RAM:9143 20                          .BYTE $20
RAM:9144 54                          .BYTE $54 ; T
RAM:9145 45                          .BYTE $45 ; E
RAM:9146 4D                          .BYTE $4D ; M
RAM:9147 50                          .BYTE $50 ; P
RAM:9148 4F                          .BYTE $4F ; O
RAM:9149 A0                          .BYTE $A0
RAM:914A 53                          .BYTE $53 ; S
RAM:914B 4F                          .BYTE $4F ; O
RAM:914C 55                          .BYTE $55 ; U
RAM:914D 4E                          .BYTE $4E ; N
RAM:914E 44                          .BYTE $44 ; D
RAM:914F A0                          .BYTE $A0
RAM:9150 44                          .BYTE $44 ; D
RAM:9151 52                          .BYTE $52 ; R
RAM:9152 41                          .BYTE $41 ; A
RAM:9153 57                          .BYTE $57 ; W
RAM:9154 20                          .BYTE $20
RAM:9155 53                          .BYTE $53 ; S
RAM:9156 43                          .BYTE $43 ; C
RAM:9157 49                          .BYTE $49 ; I
RAM:9158 52                          .BYTE $52 ; R
RAM:9159 43                          .BYTE $43 ; C
RAM:915A 4C                          .BYTE $4C ; L
RAM:915B 45                          .BYTE $45 ; E
RAM:915C 20                          .BYTE $20
RAM:915D A8                          .BYTE $A8
RAM:915E 44                          .BYTE $44 ; D
RAM:915F 52                          .BYTE $52 ; R
RAM:9160 41                          .BYTE $41 ; A
RAM:9161 57                          .BYTE $57 ; W
RAM:9162 20                          .BYTE $20
RAM:9163 48                          .BYTE $48 ; H
RAM:9164 43                          .BYTE $43 ; C
RAM:9165 49                          .BYTE $49 ; I
RAM:9166 52                          .BYTE $52 ; R
RAM:9167 43                          .BYTE $43 ; C
RAM:9168 4C                          .BYTE $4C ; L
RAM:9169 45                          .BYTE $45 ; E
RAM:916A 20                          .BYTE $20
RAM:916B A8                          .BYTE $A8
RAM:916C 44                          .BYTE $44 ; D
RAM:916D 52                          .BYTE $52 ; R
RAM:916E 41                          .BYTE $41 ; A
RAM:916F 57                          .BYTE $57 ; W
RAM:9170 20                          .BYTE $20
RAM:9171 53                          .BYTE $53 ; S
RAM:9172 53                          .BYTE $53 ; S
RAM:9173 51                          .BYTE $51 ; Q
RAM:9174 55                          .BYTE $55 ; U
RAM:9175 41                          .BYTE $41 ; A
RAM:9176 52                          .BYTE $52 ; R
RAM:9177 45                          .BYTE $45 ; E
RAM:9178 20                          .BYTE $20
RAM:9179 A8                          .BYTE $A8
RAM:917A 44                          .BYTE $44 ; D
RAM:917B 52                          .BYTE $52 ; R
RAM:917C 41                          .BYTE $41 ; A
RAM:917D 57                          .BYTE $57 ; W
RAM:917E 20                          .BYTE $20
RAM:917F 48                          .BYTE $48 ; H
RAM:9180 53                          .BYTE $53 ; S
RAM:9181 51                          .BYTE $51 ; Q
RAM:9182 55                          .BYTE $55 ; U
RAM:9183 41                          .BYTE $41 ; A
RAM:9184 52                          .BYTE $52 ; R
RAM:9185 45                          .BYTE $45 ; E
RAM:9186 20                          .BYTE $20
RAM:9187 A8                          .BYTE $A8
RAM:9188 50                          .BYTE $50 ; P
RAM:9189 52                          .BYTE $52 ; R
RAM:918A 23                          .BYTE $23 ; #
RAM:918B 31                          .BYTE $31 ; 1
RAM:918C 8D                          .BYTE $8D
RAM:918D 48                          .BYTE $48 ; H
RAM:918E 47                          .BYTE $47 ; G
RAM:918F 52                          .BYTE $52 ; R
RAM:9190 A0                          .BYTE $A0
RAM:9191 48                          .BYTE $48 ; H
RAM:9192 43                          .BYTE $43 ; C
RAM:9193 4F                          .BYTE $4F ; O
RAM:9194 4C                          .BYTE $4C ; L
RAM:9195 4F                          .BYTE $4F ; O
RAM:9196 52                          .BYTE $52 ; R
RAM:9197 BD                          .BYTE $BD
RAM:9198 48                          .BYTE $48 ; H
RAM:9199 50                          .BYTE $50 ; P
RAM:919A 4C                          .BYTE $4C ; L
RAM:919B 4F                          .BYTE $4F ; O
RAM:919C 54                          .BYTE $54 ; T
RAM:919D A0                          .BYTE $A0
RAM:919E 50                          .BYTE $50 ; P
RAM:919F 41                          .BYTE $41 ; A
RAM:91A0 49                          .BYTE $49 ; I
RAM:91A1 4E                          .BYTE $4E ; N
RAM:91A2 54                          .BYTE $54 ; T
RAM:91A3 20                          .BYTE $20
RAM:91A4 A8                          .BYTE $A8
RAM:91A5 50                          .BYTE $50 ; P
RAM:91A6 52                          .BYTE $52 ; R
RAM:91A7 23                          .BYTE $23 ; #
RAM:91A8 36                          .BYTE $36 ; 6
RAM:91A9 8D                          .BYTE $8D
RAM:91AA 4E                          .BYTE $4E ; N
RAM:91AB 4F                          .BYTE $4F ; O
RAM:91AC 49                          .BYTE $49 ; I
RAM:91AD 53                          .BYTE $53 ; S
RAM:91AE 45                          .BYTE $45 ; E
RAM:91AF A0                          .BYTE $A0
RAM:91B0 50                          .BYTE $50 ; P
RAM:91B1 52                          .BYTE $52 ; R
RAM:91B2 49                          .BYTE $49 ; I
RAM:91B3 4E                          .BYTE $4E ; N
RAM:91B4 54                          .BYTE $54 ; T
RAM:91B5 20                          .BYTE $20
RAM:91B6 55                          .BYTE $55 ; U
RAM:91B7 53                          .BYTE $53 ; S
RAM:91B8 49                          .BYTE $49 ; I
RAM:91B9 4E                          .BYTE $4E ; N
RAM:91BA 47                          .BYTE $47 ; G
RAM:91BB A0                          .BYTE $A0
RAM:91BC 00                          .BYTE   0
RAM:91BD             ; ---------------------------------------------------------------------------
RAM:91BD
RAM:91BD             CRUNCH_EXT:                             ; CODE XREF: CRUNCH+3↓p
RAM:91BD A6 B8                       LDX     byte_B8
RAM:91BF A0 04                       LDY     #4
RAM:91C1 84 13                       STY     byte_13
RAM:91C3
RAM:91C3             KLOOP:                                  ; CODE XREF: RAM:91D5↓j
RAM:91C3                                                     ; RAM:9256↓j
RAM:91C3 BD 00 02                    LDA     $200,X
RAM:91C6 C9 7B                       CMP     #$7B ; '{'
RAM:91C8 B0 06                       BCS     loc_91D0
RAM:91CA C9 61                       CMP     #$61 ; 'a'
RAM:91CC 90 02                       BCC     loc_91D0
RAM:91CE 29 DF                       AND     #$DF
RAM:91D0
RAM:91D0             loc_91D0:                               ; CODE XREF: RAM:91C8↑j
RAM:91D0                                                     ; RAM:91CC↑j
RAM:91D0 EA                          NOP
RAM:91D1 4C 00 AF                    JMP     loc_AF00
RAM:91D4             ; ---------------------------------------------------------------------------
RAM:91D4
RAM:91D4             loc_91D4:                               ; CODE XREF: RAM:AF0B↓j
RAM:91D4 E8                          INX
RAM:91D5 4C C3 91                    JMP     KLOOP
RAM:91D8             ; ---------------------------------------------------------------------------
RAM:91D8
RAM:91D8             loc_91D8:                               ; CODE XREF: RAM:AF04↓j
RAM:91D8                                                     ; RAM:loc_AF0E↓j
RAM:91D8 85 0E                       STA     byte_E
RAM:91DA C9 22                       CMP     #$22 ; '"'
RAM:91DC D0 03                       BNE     loc_91E1
RAM:91DE 4C 64 92                    JMP     loc_9264
RAM:91E1             ; ---------------------------------------------------------------------------
RAM:91E1
RAM:91E1             loc_91E1:                               ; CODE XREF: RAM:91DC↑j
RAM:91E1 24 13                       BIT     byte_13
RAM:91E3 70 57                       BVS     loc_923C
RAM:91E5 C9 3F                       CMP     #$3F ; '?'
RAM:91E7 D0 04                       BNE     KLOOP1
RAM:91E9 A9 BA                       LDA     #$BA
RAM:91EB D0 4F                       BNE     loc_923C
RAM:91ED
RAM:91ED             KLOOP1:                                 ; CODE XREF: RAM:91E7↑j
RAM:91ED C9 30                       CMP     #$30 ; '0'
RAM:91EF 90 04                       BCC     MUSTCR
RAM:91F1 C9 3C                       CMP     #$3C ; '<'
RAM:91F3 90 47                       BCC     loc_923C
RAM:91F5
RAM:91F5             MUSTCR:                                 ; CODE XREF: RAM:91EF↑j
RAM:91F5 84 AD                       STY     byte_AD
RAM:91F7 A9 D0                       LDA     #$D0
RAM:91F9 85 9D                       STA     byte_9D
RAM:91FB A9 CF                       LDA     #$CF
RAM:91FD 85 9E                       STA     byte_9E
RAM:91FF A0 00                       LDY     #0
RAM:9201 84 0F                       STY     byte_F
RAM:9203 88                          DEY
RAM:9204 86 B8                       STX     byte_B8
RAM:9206 CA                          DEX
RAM:9207
RAM:9207             loc_9207:                               ; CODE XREF: RAM:9221↓j
RAM:9207 C8                          INY
RAM:9208 D0 02                       BNE     loc_920C
RAM:920A E6 9E                       INC     byte_9E
RAM:920C
RAM:920C             loc_920C:                               ; CODE XREF: RAM:9208↑j
RAM:920C                                                     ; RAM:921C↓j
RAM:920C E8                          INX
RAM:920D
RAM:920D             loc_920D:                               ; CODE XREF: RAM:927C↓j
RAM:920D BD 00 02                    LDA     $200,X
RAM:9210 C9 7B                       CMP     #$7B ; '{'
RAM:9212 B0 06                       BCS     loc_921A
RAM:9214 C9 61                       CMP     #$61 ; 'a'
RAM:9216 90 02                       BCC     loc_921A
RAM:9218 29 DF                       AND     #$DF
RAM:921A
RAM:921A             loc_921A:                               ; CODE XREF: RAM:9212↑j
RAM:921A                                                     ; RAM:9216↑j
RAM:921A C9 20                       CMP     #$20 ; ' '
RAM:921C F0 EE                       BEQ     loc_920C
RAM:921E 38                          SEC
RAM:921F F1 9D                       SBC     ($9D),Y
RAM:9221 F0 E4                       BEQ     loc_9207
RAM:9223 C9 80                       CMP     #$80
RAM:9225 D0 44                       BNE     loc_926B
RAM:9227 05 0F                       ORA     byte_F
RAM:9229 C9 C5                       CMP     #$C5
RAM:922B D0 0D                       BNE     loc_923A
RAM:922D BD 01 02                    LDA     $201,X
RAM:9230 C9 4E                       CMP     #$4E ; 'N'
RAM:9232 F0 37                       BEQ     loc_926B
RAM:9234 C9 4F                       CMP     #$4F ; 'O'
RAM:9236 F0 33                       BEQ     loc_926B
RAM:9238 A9 C5                       LDA     #$C5
RAM:923A
RAM:923A             loc_923A:                               ; CODE XREF: RAM:922B↑j
RAM:923A                                                     ; RAM:9281↓j
RAM:923A A4 AD                       LDY     byte_AD
RAM:923C
RAM:923C             loc_923C:                               ; CODE XREF: RAM:91E3↑j
RAM:923C                                                     ; RAM:91EB↑j ...
RAM:923C E8                          INX
RAM:923D C8                          INY
RAM:923E 99 FB 01                    STA     $1FB,Y
RAM:9241 B9 FB 01                    LDA     $1FB,Y
RAM:9244 F0 3D                       BEQ     loc_9283
RAM:9246 38                          SEC
RAM:9247 E9 3A                       SBC     #$3A ; ':'
RAM:9249 F0 04                       BEQ     loc_924F
RAM:924B C9 49                       CMP     #$49 ; 'I'
RAM:924D D0 02                       BNE     loc_9251
RAM:924F
RAM:924F             loc_924F:                               ; CODE XREF: RAM:9249↑j
RAM:924F 85 13                       STA     byte_13
RAM:9251
RAM:9251             loc_9251:                               ; CODE XREF: RAM:924D↑j
RAM:9251 38                          SEC
RAM:9252 E9 78                       SBC     #$78 ; 'x'
RAM:9254 F0 03                       BEQ     loc_9259
RAM:9256 4C C3 91                    JMP     KLOOP
RAM:9259             ; ---------------------------------------------------------------------------
RAM:9259
RAM:9259             loc_9259:                               ; CODE XREF: RAM:9254↑j
RAM:9259 85 0E                       STA     byte_E
RAM:925B
RAM:925B             loc_925B:                               ; CODE XREF: RAM:9269↓j
RAM:925B BD 00 02                    LDA     $200,X
RAM:925E F0 DC                       BEQ     loc_923C
RAM:9260 C5 0E                       CMP     byte_E
RAM:9262 F0 D8                       BEQ     loc_923C
RAM:9264
RAM:9264             loc_9264:                               ; CODE XREF: RAM:91DE↑j
RAM:9264 C8                          INY
RAM:9265 99 FB 01                    STA     $1FB,Y
RAM:9268 E8                          INX
RAM:9269 D0 F0                       BNE     loc_925B
RAM:926B
RAM:926B             loc_926B:                               ; CODE XREF: RAM:9225↑j
RAM:926B                                                     ; RAM:9232↑j ...
RAM:926B A6 B8                       LDX     byte_B8
RAM:926D E6 0F                       INC     byte_F
RAM:926F
RAM:926F             loc_926F:                               ; CODE XREF: RAM:9278↓j
RAM:926F B1 9D                       LDA     ($9D),Y
RAM:9271 C8                          INY
RAM:9272 D0 02                       BNE     loc_9276
RAM:9274 E6 9E                       INC     byte_9E
RAM:9276
RAM:9276             loc_9276:                               ; CODE XREF: RAM:9272↑j
RAM:9276 29 FF                       AND     #$FF
RAM:9278 10 F5                       BPL     loc_926F
RAM:927A B1 9D                       LDA     ($9D),Y
RAM:927C D0 8F                       BNE     loc_920D
RAM:927E BD 00 02                    LDA     $200,X
RAM:9281 10 B7                       BPL     loc_923A
RAM:9283
RAM:9283             loc_9283:                               ; CODE XREF: RAM:9244↑j
RAM:9283 99 FD 01                    STA     $1FD,Y
RAM:9286 C6 B9                       DEC     byte_B9
RAM:9288 A9 FF                       LDA     #$FF
RAM:928A 85 B8                       STA     byte_B8
RAM:928C 60                          RTS
RAM:928C             ; ---------------------------------------------------------------------------
RAM:928D 00          byte_928D:      .BYTE 0
RAM:928E 00                          .BYTE 0
RAM:928F 00                          .BYTE 0
RAM:9290 00                          .BYTE 0
RAM:9291 00                          .BYTE 0
RAM:9292 00                          .BYTE 0
RAM:9293 00                          .BYTE 0
RAM:9294 00                          .BYTE 0
RAM:9295 80                          .BYTE $80
RAM:9296 80                          .BYTE $80
RAM:9297 80                          .BYTE $80
RAM:9298 80                          .BYTE $80
RAM:9299 80                          .BYTE $80
RAM:929A 80                          .BYTE $80
RAM:929B 80                          .BYTE $80
RAM:929C 80                          .BYTE $80
RAM:929D 00                          .BYTE 0
RAM:929E 00                          .BYTE 0
RAM:929F 00                          .BYTE 0
RAM:92A0 00                          .BYTE 0
RAM:92A1 00                          .BYTE 0
RAM:92A2 00                          .BYTE 0
RAM:92A3 00                          .BYTE 0
RAM:92A4 00                          .BYTE 0
RAM:92A5 80                          .BYTE $80
RAM:92A6 80                          .BYTE $80
RAM:92A7 80                          .BYTE $80
RAM:92A8 80          byte_92A8:      .BYTE $80               ; CODE XREF: ROM:D8ED↓p
RAM:92A9 80                          .BYTE $80
RAM:92AA 80                          .BYTE $80
RAM:92AB 80                          .BYTE $80
RAM:92AC 80                          .BYTE $80
RAM:92AD 00                          .BYTE 0
RAM:92AE 00                          .BYTE 0
RAM:92AF 00                          .BYTE 0
RAM:92B0 00                          .BYTE 0
RAM:92B1 00                          .BYTE 0
RAM:92B2 00                          .BYTE 0
RAM:92B3 00                          .BYTE 0
RAM:92B4 00                          .BYTE 0
RAM:92B5 80                          .BYTE $80
RAM:92B6 80                          .BYTE $80
RAM:92B7 80                          .BYTE $80
RAM:92B8 80                          .BYTE $80
RAM:92B9 80                          .BYTE $80
RAM:92BA 80                          .BYTE $80
RAM:92BB 80                          .BYTE $80
RAM:92BC 80                          .BYTE $80
RAM:92BD 00                          .BYTE 0
RAM:92BE 00                          .BYTE 0
RAM:92BF 00                          .BYTE 0
RAM:92C0 00                          .BYTE 0
RAM:92C1 00                          .BYTE 0
RAM:92C2 00                          .BYTE 0
RAM:92C3 00                          .BYTE 0
RAM:92C4 00                          .BYTE 0
RAM:92C5 80                          .BYTE $80
RAM:92C6 80                          .BYTE $80
RAM:92C7 80                          .BYTE $80
RAM:92C8 80                          .BYTE $80
RAM:92C9 80                          .BYTE $80
RAM:92CA 80                          .BYTE $80
RAM:92CB 80                          .BYTE $80
RAM:92CC 80                          .BYTE $80
RAM:92CD 28                          .BYTE $28
RAM:92CE 28                          .BYTE $28
RAM:92CF 28                          .BYTE $28
RAM:92D0 28                          .BYTE $28
RAM:92D1 28                          .BYTE $28
RAM:92D2 28                          .BYTE $28
RAM:92D3 28                          .BYTE $28
RAM:92D4 28                          .BYTE $28
RAM:92D5 A8                          .BYTE $A8
RAM:92D6 A8                          .BYTE $A8
RAM:92D7 A8                          .BYTE $A8
RAM:92D8 A8                          .BYTE $A8
RAM:92D9 A8                          .BYTE $A8
RAM:92DA A8                          .BYTE $A8
RAM:92DB A8                          .BYTE $A8
RAM:92DC A8                          .BYTE $A8
RAM:92DD 28                          .BYTE $28
RAM:92DE 28                          .BYTE $28
RAM:92DF 28                          .BYTE $28
RAM:92E0 28                          .BYTE $28
RAM:92E1 28                          .BYTE $28
RAM:92E2 28                          .BYTE $28
RAM:92E3 28                          .BYTE $28
RAM:92E4 28                          .BYTE $28
RAM:92E5 A8                          .BYTE $A8
RAM:92E6 A8                          .BYTE $A8
RAM:92E7 A8                          .BYTE $A8
RAM:92E8 A8                          .BYTE $A8
RAM:92E9 A8                          .BYTE $A8
RAM:92EA A8                          .BYTE $A8
RAM:92EB A8                          .BYTE $A8
RAM:92EC A8                          .BYTE $A8
RAM:92ED 28                          .BYTE $28
RAM:92EE 28                          .BYTE $28
RAM:92EF 28                          .BYTE $28
RAM:92F0 28                          .BYTE $28
RAM:92F1 28                          .BYTE $28
RAM:92F2 28                          .BYTE $28
RAM:92F3 28                          .BYTE $28
RAM:92F4 28                          .BYTE $28
RAM:92F5 A8                          .BYTE $A8
RAM:92F6 A8                          .BYTE $A8
RAM:92F7 A8                          .BYTE $A8
RAM:92F8 A8                          .BYTE $A8
RAM:92F9 A8                          .BYTE $A8
RAM:92FA A8                          .BYTE $A8
RAM:92FB A8                          .BYTE $A8
RAM:92FC A8                          .BYTE $A8
RAM:92FD 28                          .BYTE $28
RAM:92FE 28                          .BYTE $28
RAM:92FF 28                          .BYTE $28
RAM:9300 28                          .BYTE $28
RAM:9301 28                          .BYTE $28
RAM:9302 28                          .BYTE $28
RAM:9303 28                          .BYTE $28
RAM:9304 28                          .BYTE $28
RAM:9305 A8                          .BYTE $A8
RAM:9306 A8                          .BYTE $A8
RAM:9307 A8                          .BYTE $A8
RAM:9308 A8                          .BYTE $A8
RAM:9309 A8                          .BYTE $A8
RAM:930A A8                          .BYTE $A8
RAM:930B A8                          .BYTE $A8
RAM:930C A8                          .BYTE $A8
RAM:930D 50                          .BYTE $50
RAM:930E 50                          .BYTE $50
RAM:930F 50                          .BYTE $50
RAM:9310 50                          .BYTE $50
RAM:9311 50                          .BYTE $50
RAM:9312 50                          .BYTE $50
RAM:9313 50                          .BYTE $50
RAM:9314 50                          .BYTE $50
RAM:9315 D0                          .BYTE $D0
RAM:9316 D0                          .BYTE $D0
RAM:9317 D0                          .BYTE $D0
RAM:9318 D0                          .BYTE $D0
RAM:9319 D0                          .BYTE $D0
RAM:931A D0                          .BYTE $D0
RAM:931B D0                          .BYTE $D0
RAM:931C D0                          .BYTE $D0
RAM:931D 50                          .BYTE $50
RAM:931E 50                          .BYTE $50
RAM:931F 50                          .BYTE $50
RAM:9320 50                          .BYTE $50
RAM:9321 50                          .BYTE $50
RAM:9322 50                          .BYTE $50
RAM:9323 50                          .BYTE $50
RAM:9324 50                          .BYTE $50
RAM:9325 D0                          .BYTE $D0
RAM:9326 D0                          .BYTE $D0
RAM:9327 D0                          .BYTE $D0
RAM:9328 D0                          .BYTE $D0
RAM:9329 D0                          .BYTE $D0
RAM:932A D0                          .BYTE $D0
RAM:932B D0                          .BYTE $D0
RAM:932C D0                          .BYTE $D0
RAM:932D 50                          .BYTE $50
RAM:932E 50                          .BYTE $50
RAM:932F 50                          .BYTE $50
RAM:9330 50                          .BYTE $50
RAM:9331 50                          .BYTE $50
RAM:9332 50                          .BYTE $50
RAM:9333 50                          .BYTE $50
RAM:9334 50                          .BYTE $50
RAM:9335 D0                          .BYTE $D0
RAM:9336 D0                          .BYTE $D0
RAM:9337 D0                          .BYTE $D0
RAM:9338 D0                          .BYTE $D0
RAM:9339 D0                          .BYTE $D0
RAM:933A D0                          .BYTE $D0
RAM:933B D0                          .BYTE $D0
RAM:933C D0                          .BYTE $D0
RAM:933D 50                          .BYTE $50
RAM:933E 50                          .BYTE $50
RAM:933F 50                          .BYTE $50
RAM:9340 50                          .BYTE $50
RAM:9341 50                          .BYTE $50
RAM:9342 50                          .BYTE $50
RAM:9343 50                          .BYTE $50
RAM:9344 50                          .BYTE $50
RAM:9345 D0                          .BYTE $D0
RAM:9346 D0                          .BYTE $D0
RAM:9347 D0                          .BYTE $D0
RAM:9348 D0                          .BYTE $D0
RAM:9349 D0                          .BYTE $D0
RAM:934A D0                          .BYTE $D0
RAM:934B D0                          .BYTE $D0
RAM:934C D0                          .BYTE $D0
RAM:934D 00          byte_934D:      .BYTE 0
RAM:934E 04                          .BYTE 4
RAM:934F 08                          .BYTE 8
RAM:9350 0C                          .BYTE $C
RAM:9351 10                          .BYTE $10
RAM:9352 14                          .BYTE $14
RAM:9353 18                          .BYTE $18
RAM:9354 1C                          .BYTE $1C
RAM:9355 00                          .BYTE 0
RAM:9356 04                          .BYTE 4
RAM:9357 08                          .BYTE 8
RAM:9358 0C                          .BYTE $C
RAM:9359 10                          .BYTE $10
RAM:935A 14                          .BYTE $14
RAM:935B 18                          .BYTE $18
RAM:935C 1C                          .BYTE $1C
RAM:935D 01                          .BYTE 1
RAM:935E 05                          .BYTE 5
RAM:935F 09                          .BYTE 9
RAM:9360 0D                          .BYTE $D
RAM:9361 11                          .BYTE $11
RAM:9362 15                          .BYTE $15
RAM:9363 19                          .BYTE $19
RAM:9364 1D                          .BYTE $1D
RAM:9365 01                          .BYTE 1
RAM:9366 05                          .BYTE 5
RAM:9367 09                          .BYTE 9
RAM:9368 0D                          .BYTE $D
RAM:9369 11                          .BYTE $11
RAM:936A 15                          .BYTE $15
RAM:936B 19                          .BYTE $19
RAM:936C 1D                          .BYTE $1D
RAM:936D 02                          .BYTE   2
RAM:936E 06                          .BYTE   6
RAM:936F 0A                          .BYTE  $A
RAM:9370 0E                          .BYTE  $E
RAM:9371 12                          .BYTE $12
RAM:9372 16                          .BYTE $16
RAM:9373 1A                          .BYTE $1A
RAM:9374 1E                          .BYTE $1E
RAM:9375 02                          .BYTE   2
RAM:9376 06                          .BYTE   6
RAM:9377 0A                          .BYTE  $A
RAM:9378 0E                          .BYTE  $E
RAM:9379 12                          .BYTE $12
RAM:937A 16                          .BYTE $16
RAM:937B 1A                          .BYTE $1A
RAM:937C 1E                          .BYTE $1E
RAM:937D 03                          .BYTE   3
RAM:937E 07                          .BYTE   7
RAM:937F 0B                          .BYTE  $B
RAM:9380 0F                          .BYTE  $F
RAM:9381 13                          .BYTE $13
RAM:9382 17                          .BYTE $17
RAM:9383 1B                          .BYTE $1B
RAM:9384 1F                          .BYTE $1F
RAM:9385 03                          .BYTE   3
RAM:9386 07                          .BYTE   7
RAM:9387 0B                          .BYTE  $B
RAM:9388 0F                          .BYTE  $F
RAM:9389 13                          .BYTE $13
RAM:938A 17                          .BYTE $17
RAM:938B 1B                          .BYTE $1B
RAM:938C 1F                          .BYTE $1F
RAM:938D 00                          .BYTE   0
RAM:938E 04                          .BYTE   4
RAM:938F 08                          .BYTE   8
RAM:9390 0C                          .BYTE  $C
RAM:9391 10                          .BYTE $10
RAM:9392 14                          .BYTE $14
RAM:9393 18                          .BYTE $18
RAM:9394 1C                          .BYTE $1C
RAM:9395 00                          .BYTE   0
RAM:9396 04                          .BYTE   4
RAM:9397 08                          .BYTE   8
RAM:9398 0C                          .BYTE  $C
RAM:9399 10                          .BYTE $10
RAM:939A 14                          .BYTE $14
RAM:939B 18                          .BYTE $18
RAM:939C 1C                          .BYTE $1C
RAM:939D 01                          .BYTE   1
RAM:939E 05                          .BYTE   5
RAM:939F 09                          .BYTE   9
RAM:93A0 0D                          .BYTE  $D
RAM:93A1 11                          .BYTE $11
RAM:93A2 15                          .BYTE $15
RAM:93A3 19                          .BYTE $19
RAM:93A4 1D                          .BYTE $1D
RAM:93A5 01                          .BYTE   1
RAM:93A6 05                          .BYTE   5
RAM:93A7 09                          .BYTE   9
RAM:93A8 0D                          .BYTE  $D
RAM:93A9 11                          .BYTE $11
RAM:93AA 15                          .BYTE $15
RAM:93AB 19                          .BYTE $19
RAM:93AC 1D                          .BYTE $1D
RAM:93AD 02                          .BYTE   2
RAM:93AE 06                          .BYTE   6
RAM:93AF 0A                          .BYTE  $A
RAM:93B0 0E                          .BYTE  $E
RAM:93B1 12                          .BYTE $12
RAM:93B2 16                          .BYTE $16
RAM:93B3 1A                          .BYTE $1A
RAM:93B4 1E                          .BYTE $1E
RAM:93B5 02                          .BYTE   2
RAM:93B6 06                          .BYTE   6
RAM:93B7 0A                          .BYTE  $A
RAM:93B8 0E                          .BYTE  $E
RAM:93B9 12                          .BYTE $12
RAM:93BA 16                          .BYTE $16
RAM:93BB 1A                          .BYTE $1A
RAM:93BC 1E                          .BYTE $1E
RAM:93BD 03                          .BYTE   3
RAM:93BE 07                          .BYTE   7
RAM:93BF 0B                          .BYTE  $B
RAM:93C0 0F                          .BYTE  $F
RAM:93C1 13                          .BYTE $13
RAM:93C2 17                          .BYTE $17
RAM:93C3 1B                          .BYTE $1B
RAM:93C4 1F                          .BYTE $1F
RAM:93C5 03                          .BYTE   3
RAM:93C6 07                          .BYTE   7
RAM:93C7 0B                          .BYTE  $B
RAM:93C8 0F                          .BYTE  $F
RAM:93C9 13                          .BYTE $13
RAM:93CA 17                          .BYTE $17
RAM:93CB 1B                          .BYTE $1B
RAM:93CC 1F                          .BYTE $1F
RAM:93CD 00                          .BYTE   0
RAM:93CE 04                          .BYTE   4
RAM:93CF 08                          .BYTE   8
RAM:93D0 0C                          .BYTE  $C
RAM:93D1 10                          .BYTE $10
RAM:93D2 14                          .BYTE $14
RAM:93D3 18                          .BYTE $18
RAM:93D4 1C                          .BYTE $1C
RAM:93D5 00                          .BYTE   0
RAM:93D6 04                          .BYTE   4
RAM:93D7 08                          .BYTE   8
RAM:93D8 0C                          .BYTE  $C
RAM:93D9 10                          .BYTE $10
RAM:93DA 14                          .BYTE $14
RAM:93DB 18                          .BYTE $18
RAM:93DC 1C                          .BYTE $1C
RAM:93DD 01                          .BYTE   1
RAM:93DE 05                          .BYTE   5
RAM:93DF 09                          .BYTE   9
RAM:93E0 0D                          .BYTE  $D
RAM:93E1 11                          .BYTE $11
RAM:93E2 15                          .BYTE $15
RAM:93E3 19                          .BYTE $19
RAM:93E4 1D                          .BYTE $1D
RAM:93E5 01                          .BYTE   1
RAM:93E6 05                          .BYTE   5
RAM:93E7 09                          .BYTE   9
RAM:93E8 0D                          .BYTE  $D
RAM:93E9 11                          .BYTE $11
RAM:93EA 15                          .BYTE $15
RAM:93EB 19                          .BYTE $19
RAM:93EC 1D                          .BYTE $1D
RAM:93ED 02                          .BYTE   2
RAM:93EE 06                          .BYTE   6
RAM:93EF 0A                          .BYTE  $A
RAM:93F0 0E                          .BYTE  $E
RAM:93F1 12                          .BYTE $12
RAM:93F2 16                          .BYTE $16
RAM:93F3 1A                          .BYTE $1A
RAM:93F4 1E                          .BYTE $1E
RAM:93F5 02                          .BYTE   2
RAM:93F6 06                          .BYTE   6
RAM:93F7 0A                          .BYTE  $A
RAM:93F8 0E                          .BYTE  $E
RAM:93F9 12                          .BYTE $12
RAM:93FA 16                          .BYTE $16
RAM:93FB 1A                          .BYTE $1A
RAM:93FC 1E                          .BYTE $1E
RAM:93FD 03                          .BYTE   3
RAM:93FE 07                          .BYTE   7
RAM:93FF 0B                          .BYTE  $B
RAM:9400 0F                          .BYTE  $F
RAM:9401 13                          .BYTE $13
RAM:9402 17                          .BYTE $17
RAM:9403 1B                          .BYTE $1B
RAM:9404 1F                          .BYTE $1F
RAM:9405 03                          .BYTE   3
RAM:9406 07                          .BYTE   7
RAM:9407 0B                          .BYTE  $B
RAM:9408 0F                          .BYTE  $F
RAM:9409 13                          .BYTE $13
RAM:940A 17                          .BYTE $17
RAM:940B 1B                          .BYTE $1B
RAM:940C 1F                          .BYTE $1F
RAM:940D
RAM:940D             ; =============== S U B R O U T I N E =======================================
RAM:940D
RAM:940D
RAM:940D             sub_940D:                               ; CODE XREF: sub_9B75-50E↓p
RAM:940D                                                     ; sub_97C7:loc_9802↓p
RAM:940D B9 8D 92                    LDA     byte_928D,Y
RAM:9410 85 26                       STA     FKEYPL
RAM:9412 B9 4D 93                    LDA     byte_934D,Y
RAM:9415 85 27                       STA     FKEYPH
RAM:9417 60                          RTS
RAM:9417             ; End of function sub_940D
RAM:9417
RAM:9418
RAM:9418             ; =============== S U B R O U T I N E =======================================
RAM:9418
RAM:9418
RAM:9418             sub_9418:                               ; CODE XREF: sub_9418+C↓j
RAM:9418                                                     ; sub_97C7+31↓p ...
RAM:9418 B9 8D 92                    LDA     byte_928D,Y
RAM:941B C5 26                       CMP     FKEYPL
RAM:941D F0 07                       BEQ     loc_9426
RAM:941F
RAM:941F             loc_941F:                               ; CODE XREF: sub_9418+15↓j
RAM:941F 98                          TYA
RAM:9420 18                          CLC
RAM:9421 69 08                       ADC     #8
RAM:9423 A8                          TAY
RAM:9424 D0 F2                       BNE     sub_9418
RAM:9426
RAM:9426             loc_9426:                               ; CODE XREF: sub_9418+5↑j
RAM:9426 A5 27                       LDA     FKEYPH
RAM:9428 29 1F                       AND     #$1F
RAM:942A D9 4D 93                    CMP     byte_934D,Y
RAM:942D D0 F0                       BNE     loc_941F
RAM:942F 60                          RTS
RAM:942F             ; End of function sub_9418
RAM:942F
RAM:9430
RAM:9430             ; =============== S U B R O U T I N E =======================================
RAM:9430
RAM:9430
RAM:9430             sub_9430:                               ; CODE XREF: sub_9E34+A↓p
RAM:9430                                                     ; ROM:F5CE↓p
RAM:9430 98                          TYA
RAM:9431 48                          PHA
RAM:9432 A0 FF                       LDY     #$FF
RAM:9434
RAM:9434             loc_9434:                               ; CODE XREF: sub_9430+13↓j
RAM:9434 A5 26                       LDA     FKEYPL
RAM:9436
RAM:9436             loc_9436:                               ; CODE XREF: sub_9430+A↓j
RAM:9436 C8                          INY
RAM:9437 D9 8D 92                    CMP     byte_928D,Y
RAM:943A D0 FA                       BNE     loc_9436
RAM:943C A5 27                       LDA     FKEYPH
RAM:943E 29 1F                       AND     #$1F
RAM:9440 D9 4D 93                    CMP     byte_934D,Y
RAM:9443 D0 EF                       BNE     loc_9434
RAM:9445 84 E2                       STY     byte_E2
RAM:9447 68                          PLA
RAM:9448 A8                          TAY
RAM:9449 A9 00                       LDA     #0
RAM:944B 85 E1                       STA     byte_E1
RAM:944D A5 E5                       LDA     byte_E5
RAM:944F 0A                          ASL     A
RAM:9450 0A                          ASL     A
RAM:9451 26 E1                       ROL     byte_E1
RAM:9453 0A                          ASL     A
RAM:9454 26 E1                       ROL     byte_E1
RAM:9456 38                          SEC
RAM:9457 E5 E5                       SBC     byte_E5
RAM:9459 85 E0                       STA     byte_E0
RAM:945B A5 E1                       LDA     byte_E1
RAM:945D E9 00                       SBC     #0
RAM:945F 85 E1                       STA     byte_E1
RAM:9461 A5 30                       LDA     byte_30
RAM:9463 49 80                       EOR     #$80
RAM:9465
RAM:9465             loc_9465:                               ; CODE XREF: sub_9430+3A↓j
RAM:9465                                                     ; sub_9430+3E↓j
RAM:9465 4A                          LSR     A
RAM:9466 F0 08                       BEQ     locret_9470
RAM:9468 E6 E0                       INC     byte_E0
RAM:946A D0 F9                       BNE     loc_9465
RAM:946C E6 E1                       INC     byte_E1
RAM:946E D0 F5                       BNE     loc_9465
RAM:9470
RAM:9470             locret_9470:                            ; CODE XREF: sub_9430+36↑j
RAM:9470 60                          RTS
RAM:9470             ; End of function sub_9430
RAM:9470
RAM:9471             ; ---------------------------------------------------------------------------
RAM:9471 84 1B                       STY     byte_1B
RAM:9473 86 1A                       STX     byte_1A
RAM:9475
RAM:9475             ; =============== S U B R O U T I N E =======================================
RAM:9475
RAM:9475
RAM:9475             sub_9475:                               ; CODE XREF: RAM:94E5↓j
RAM:9475                                                     ; sub_F601+7↓p
RAM:9475 4A                          LSR     A
RAM:9476 4A                          LSR     A
RAM:9477 4A                          LSR     A
RAM:9478 4A                          LSR     A
RAM:9479 85 D3                       STA     byte_D3
RAM:947B A4 E5                       LDY     byte_E5
RAM:947D A2 00                       LDX     #0
RAM:947F 20 70 F4                    JSR     AUX_GET1AX      ; Get byte at ($1A,X), ensure $8000 ROM is switched out
RAM:9482
RAM:9482             loc_9482:                               ; CODE XREF: sub_9475+1C↓j
RAM:9482                                                     ; sub_9475+27↓j
RAM:9482 85 D1                       STA     byte_D1
RAM:9484 A6 E7                       LDX     byte_E7
RAM:9486
RAM:9486             loc_9486:                               ; CODE XREF: sub_9475+15↓j
RAM:9486 20 C6 97                    JSR     sub_97C6
RAM:9489 CA                          DEX
RAM:948A D0 FA                       BNE     loc_9486
RAM:948C A5 D1                       LDA     byte_D1
RAM:948E 4A                          LSR     A
RAM:948F 4A                          LSR     A
RAM:9490 4A                          LSR     A
RAM:9491 D0 EF                       BNE     loc_9482
RAM:9493 E6 1A                       INC     byte_1A
RAM:9495 D0 02                       BNE     loc_9499
RAM:9497 E6 1B                       INC     byte_1B
RAM:9499
RAM:9499             loc_9499:                               ; CODE XREF: sub_9475+20↑j
RAM:9499 20 70 F4                    JSR     AUX_GET1AX      ; Get byte at ($1A,X), ensure $8000 ROM is switched out
RAM:949C D0 E4                       BNE     loc_9482
RAM:949E 60                          RTS
RAM:949E             ; End of function sub_9475
RAM:949E
RAM:949F
RAM:949F             ; =============== S U B R O U T I N E =======================================
RAM:949F
RAM:949F
RAM:949F             sub_949F:                               ; CODE XREF: RAM:94E2↓p
RAM:949F
RAM:949F             ; FUNCTION CHUNK AT ROM:F3FF SIZE 00000008 BYTES
RAM:949F
RAM:949F A5 E8                       LDA     byte_E8
RAM:94A1 85 1A                       STA     byte_1A
RAM:94A3 A5 E9                       LDA     byte_E9
RAM:94A5 85 1B                       STA     byte_1B
RAM:94A7 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:94AA 8A                          TXA
RAM:94AB A2 00                       LDX     #0
RAM:94AD 20 16 F5                    JSR     AUX_CMP_1AX
RAM:94B0 F0 05                       BEQ     loc_94B7
RAM:94B2 90 03                       BCC     loc_94B7
RAM:94B4 4C FF F3                    JMP     loc_F3FF
RAM:94B7             ; ---------------------------------------------------------------------------
RAM:94B7
RAM:94B7             loc_94B7:                               ; CODE XREF: sub_949F+11↑j
RAM:94B7                                                     ; sub_949F+13↑j
RAM:94B7 0A                          ASL     A
RAM:94B8 90 03                       BCC     loc_94BD
RAM:94BA E6 1B                       INC     byte_1B
RAM:94BC 18                          CLC
RAM:94BD
RAM:94BD             loc_94BD:                               ; CODE XREF: sub_949F+19↑j
RAM:94BD A8                          TAY
RAM:94BE 20 E7 F4                    JSR     AUX_GET_1AY
RAM:94C1 65 1A                       ADC     byte_1A
RAM:94C3 48                          PHA
RAM:94C4 C8                          INY
RAM:94C5 20 E7 F4                    JSR     AUX_GET_1AY
RAM:94C8 65 E9                       ADC     byte_E9
RAM:94CA 85 1B                       STA     byte_1B
RAM:94CC 68                          PLA
RAM:94CD 85 1A                       STA     byte_1A
RAM:94CF 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:94D2 C9 C5                       CMP     #$C5
RAM:94D4 D0 09                       BNE     loc_94DF
RAM:94D6 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:94D9 20 37 99                    JSR     sub_9937
RAM:94DC 20 60 96                    JSR     loc_9660
RAM:94DF
RAM:94DF             loc_94DF:                               ; CODE XREF: sub_949F+35↑j
RAM:94DF A5 F9                       LDA     byte_F9
RAM:94E1 60                          RTS
RAM:94E1             ; End of function sub_949F
RAM:94E1
RAM:94E2             ; ---------------------------------------------------------------------------
RAM:94E2 20 9F 94                    JSR     sub_949F
RAM:94E5 4C 75 94                    JMP     sub_9475
RAM:94E8             ; ---------------------------------------------------------------------------
RAM:94E8
RAM:94E8             SET_HGR_MODE:                           ; CODE XREF: ROM:F439↓p
RAM:94E8 0E B8 03                    ASL     byte_3B8
RAM:94EB AE B8 03                    LDX     byte_3B8
RAM:94EE BD F8 94                    LDA     HGR_VECTORS+1,X ; set up vectors on stack
RAM:94F1 48                          PHA
RAM:94F2 BD F7 94                    LDA     HGR_VECTORS,X
RAM:94F5 48                          PHA
RAM:94F6 60                          RTS                     ; jump to correct routine via RTS
RAM:94F6             ; ---------------------------------------------------------------------------
RAM:94F7 88 95       HGR_VECTORS:    .WORD set_HGR6-1        ; vectors for setting screenmodes - 1
RAM:94F9 56 95                       .WORD set_HGR1-1
RAM:94FB 6A 95                       .WORD set_HGR3-1
RAM:94FD 74 95                       .WORD set_HGR4-1
RAM:94FF 7E 95                       .WORD set_HGR5-1
RAM:9501 60 95                       .WORD set_HGR2-1
RAM:9503 4C 95                       .WORD set_HGR-1
RAM:9505
RAM:9505             ; =============== S U B R O U T I N E =======================================
RAM:9505
RAM:9505             ; set LORES, 40 char wide, Page 1, Mixed Text/Gfx
RAM:9505
RAM:9505             LO_HGR_PG1_MIX:                         ; CODE XREF: RAM:set_HGR↓p
RAM:9505 20 2F A6                    JSR     WINDOW_WIDTH_40 ; set window with to 40 bytes
RAM:9508 20 38 95                    JSR     HGR_ON
RAM:950B 2C 54 C0                    BIT     VZPAGE1         ; display primary page
RAM:950E 2C 53 C0                    BIT     MIXED           ; mixed text and graphics
RAM:9511 60                          RTS
RAM:9511             ; End of function LO_HGR_PG1_MIX
RAM:9511
RAM:9512
RAM:9512             ; =============== S U B R O U T I N E =======================================
RAM:9512
RAM:9512
RAM:9512             RGB_HGR_PG1_GFX:                        ; CODE XREF: RAM:set_HGR3↓p
RAM:9512 20 32 A6                    JSR     WINDOW_WIDTH_80 ; set window width to 80 bytes
RAM:9515 4C 1B 95                    JMP     loc_951B
RAM:9515             ; End of function RGB_HGR_PG1_GFX
RAM:9515
RAM:9518
RAM:9518             ; =============== S U B R O U T I N E =======================================
RAM:9518
RAM:9518             ; set LORES, 40 char wide, Page 1, Gfx Only
RAM:9518
RAM:9518             LO_HGR_PG1_GFX:                         ; CODE XREF: RAM:set_HGR1↓p
RAM:9518                                                     ; RAM:set_HGR5↓p
RAM:9518 20 2F A6                    JSR     WINDOW_WIDTH_40 ; set window with to 40 bytes
RAM:951B
RAM:951B             loc_951B:                               ; CODE XREF: RGB_HGR_PG1_GFX+3↑j
RAM:951B 20 38 95                    JSR     HGR_ON
RAM:951E 2C 54 C0                    BIT     VZPAGE1         ; display primary page
RAM:9521 2C 52 C0                    BIT     PURE            ; pure text or graphics *only*
RAM:9524 60                          RTS
RAM:9524             ; End of function LO_HGR_PG1_GFX
RAM:9524
RAM:9525
RAM:9525             ; =============== S U B R O U T I N E =======================================
RAM:9525
RAM:9525
RAM:9525             RGB_HGR_PG2_GFX:                        ; CODE XREF: RAM:set_HGR4↓p
RAM:9525 20 32 A6                    JSR     WINDOW_WIDTH_80 ; set window width to 80 bytes
RAM:9528 4C 2E 95                    JMP     loc_952E
RAM:9528             ; End of function RGB_HGR_PG2_GFX
RAM:9528
RAM:952B
RAM:952B             ; =============== S U B R O U T I N E =======================================
RAM:952B
RAM:952B             ; set LORES, 40 char wide, Page 2, Gfx Only
RAM:952B
RAM:952B             LO_HGR_PG2_GFX:                         ; CODE XREF: RAM:set_HGR2↓p
RAM:952B                                                     ; RAM:set_HGR6↓p
RAM:952B 20 2F A6                    JSR     WINDOW_WIDTH_40 ; set window with to 40 bytes
RAM:952E
RAM:952E             loc_952E:                               ; CODE XREF: RGB_HGR_PG2_GFX+3↑j
RAM:952E 20 38 95                    JSR     HGR_ON
RAM:9531 2C 55 C0                    BIT     VZPAGE2         ; display secondary page
RAM:9534 2C 52 C0                    BIT     PURE            ; pure text or graphics *only*
RAM:9537 60                          RTS
RAM:9537             ; End of function LO_HGR_PG2_GFX
RAM:9537
RAM:9538
RAM:9538             ; =============== S U B R O U T I N E =======================================
RAM:9538
RAM:9538
RAM:9538             HGR_ON:                                 ; CODE XREF: LO_HGR_PG1_MIX+3↑p
RAM:9538                                                     ; LO_HGR_PG1_GFX:loc_951B↑p ...
RAM:9538 2C C3 C1                    BIT     VERTSC          ; Read Vertical blank status
RAM:953B 30 FB                       BMI     HGR_ON          ; wait for vblank before swapping modes
RAM:953D EA                          NOP
RAM:953E EA                          NOP
RAM:953F EA                          NOP
RAM:9540 EA                          NOP
RAM:9541 EA                          NOP
RAM:9542 EA                          NOP
RAM:9543 EA                          NOP
RAM:9544 EA                          NOP
RAM:9545 EA                          NOP
RAM:9546 2C 56 C0                    BIT     VZSELF          ; disable RGB/DOUBLE RES MODE selection
RAM:9549 2C 50 C0                    BIT     VZGRAPHICS      ; Graphics mode on
RAM:954C
RAM:954C             locret_954C:
RAM:954C 60                          RTS
RAM:954C             ; End of function HGR_ON
RAM:954C
RAM:954D             ; ---------------------------------------------------------------------------
RAM:954D
RAM:954D             set_HGR:                                ; DATA XREF: RAM:9503↑t
RAM:954D 20 05 95                    JSR     LO_HGR_PG1_MIX  ; set LORES, 40 char wide, Page 1, Mixed Text/Gfx
RAM:9550 2C 4C C0                    BIT     VZTX40          ; 40 char wide LORES modes, also switches to 1MHz
RAM:9553 A9 20                       LDA     #$20 ; ' '      ; begins at $2000 in Bank #0
RAM:9555 D0 3A                       BNE     set_GFX_mode
RAM:9557
RAM:9557             set_HGR1:                               ; DATA XREF: RAM:94F9↑t
RAM:9557 20 18 95                    JSR     LO_HGR_PG1_GFX  ; set LORES, 40 char wide, Page 1, Gfx Only
RAM:955A 2C 4C C0                    BIT     VZTX40          ; 40 char wide LORES modes, also switches to 1MHz
RAM:955D A9 20                       LDA     #$20 ; ' '      ; begins at $2000 in Bank #0
RAM:955F D0 30                       BNE     set_GFX_mode
RAM:9561
RAM:9561             set_HGR2:                               ; CODE XREF: ROM:F3DB↓p
RAM:9561                                                     ; DATA XREF: RAM:9501↑t
RAM:9561 20 2B 95                    JSR     LO_HGR_PG2_GFX  ; set LORES, 40 char wide, Page 2, Gfx Only
RAM:9564 2C 4C C0                    BIT     VZTX40          ; 40 char wide LORES modes, also switches to 1MHz
RAM:9567 A9 40                       LDA     #$40 ; '@'      ; begins at $4000 in Bank #0
RAM:9569 D0 26                       BNE     set_GFX_mode
RAM:956B
RAM:956B             set_HGR3:                               ; DATA XREF: RAM:94FB↑t
RAM:956B 20 12 95                    JSR     RGB_HGR_PG1_GFX
RAM:956E 2C 4E C0                    BIT     HIRES_MODE
RAM:9571 A9 22                       LDA     #$22 ; '"'      ; begins at $2000 in Bank #2 ?
RAM:9573 D0 1C                       BNE     set_GFX_mode
RAM:9575
RAM:9575             set_HGR4:                               ; DATA XREF: RAM:94FD↑t
RAM:9575 20 25 95                    JSR     RGB_HGR_PG2_GFX
RAM:9578 2C 4E C0                    BIT     HIRES_MODE
RAM:957B A9 42                       LDA     #$42 ; 'B'      ; begins at $4000 in Bank #2 ?
RAM:957D D0 12                       BNE     set_GFX_mode
RAM:957F
RAM:957F             set_HGR5:                               ; DATA XREF: RAM:94FF↑t
RAM:957F 20 18 95                    JSR     LO_HGR_PG1_GFX  ; set LORES, 40 char wide, Page 1, Gfx Only
RAM:9582 2C 4D C0                    BIT     RGB_MODE
RAM:9585 A9 21                       LDA     #$21 ; '!'      ; begins at $2000 in Bank #1 ?
RAM:9587 D0 08                       BNE     set_GFX_mode
RAM:9589
RAM:9589             set_HGR6:                               ; DATA XREF: RAM:HGR_VECTORS↑t
RAM:9589 20 2B 95                    JSR     LO_HGR_PG2_GFX  ; set LORES, 40 char wide, Page 2, Gfx Only
RAM:958C 2C 4D C0                    BIT     RGB_MODE
RAM:958F A9 41                       LDA     #$41 ; 'A'      ; begins at $4000 in Bank #1
RAM:9591
RAM:9591             set_GFX_mode:                           ; CODE XREF: RAM:9555↑j
RAM:9591                                                     ; RAM:955F↑j ...
RAM:9591 85 E6                       STA     byte_E6
RAM:9593 A9 00                       LDA     #0
RAM:9595 85 1C                       STA     byte_1C
RAM:9597
RAM:9597             loc_9597:                               ; CODE XREF: ROM:F3F9↓p
RAM:9597 A5 E6                       LDA     byte_E6
RAM:9599 29 03                       AND     #3
RAM:959B D0 20                       BNE     loc_95BD
RAM:959D A5 E6                       LDA     byte_E6
RAM:959F 29 40                       AND     #$40 ; '@'
RAM:95A1 D0 03                       BNE     loc_95A6
RAM:95A3 A9 00                       LDA     #0              ; bring in bank# 0
RAM:95A3             ; ---------------------------------------------------------------------------
RAM:95A5 2C                          .BYTE $2C               ; BIT
RAM:95A6             ; ---------------------------------------------------------------------------
RAM:95A6
RAM:95A6             loc_95A6:                               ; CODE XREF: RAM:95A1↑j
RAM:95A6 A9 01                       LDA     #1              ; bring in bank# 1
RAM:95A8 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:95AB A5 E6                       LDA     byte_E6
RAM:95AD 29 20                       AND     #$20 ; ' '
RAM:95AF F0 06                       BEQ     loc_95B7
RAM:95B1 20 3B 96                    JSR     loc_963B
RAM:95B4 4C 03 F8                    JMP     j_FRAMOU
RAM:95B7             ; ---------------------------------------------------------------------------
RAM:95B7
RAM:95B7             loc_95B7:                               ; CODE XREF: RAM:95AF↑j
RAM:95B7 20 38 96                    JSR     sub_9638
RAM:95BA 4C 03 F8                    JMP     j_FRAMOU
RAM:95BD             ; ---------------------------------------------------------------------------
RAM:95BD
RAM:95BD             loc_95BD:                               ; CODE XREF: RAM:959B↑j
RAM:95BD 6A                          ROR     A
RAM:95BE B0 17                       BCS     loc_95D7
RAM:95C0 A5 E6                       LDA     byte_E6
RAM:95C2 29 40                       AND     #$40 ; '@'
RAM:95C4 D0 03                       BNE     loc_95C9
RAM:95C6 A9 01                       LDA     #1
RAM:95C6             ; ---------------------------------------------------------------------------
RAM:95C8 2C                          .BYTE $2C
RAM:95C9             ; ---------------------------------------------------------------------------
RAM:95C9
RAM:95C9             loc_95C9:                               ; CODE XREF: RAM:95C4↑j
RAM:95C9 A9 02                       LDA     #2
RAM:95CB 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:95CE 20 38 96                    JSR     sub_9638
RAM:95D1 20 3B 96                    JSR     loc_963B
RAM:95D4 4C 03 F8                    JMP     j_FRAMOU
RAM:95D7             ; ---------------------------------------------------------------------------
RAM:95D7
RAM:95D7             loc_95D7:                               ; CODE XREF: RAM:95BE↑j
RAM:95D7 A5 E6                       LDA     byte_E6
RAM:95D9 29 40                       AND     #$40 ; '@'
RAM:95DB D0 2C                       BNE     loc_9609
RAM:95DD A9 02                       LDA     #2
RAM:95DF 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:95E2 A5 1C                       LDA     byte_1C
RAM:95E4 48                          PHA
RAM:95E5 6A                          ROR     A
RAM:95E6 20 56 96                    JSR     loc_9656
RAM:95E9 20 38 96                    JSR     sub_9638
RAM:95EC A9 01                       LDA     #1
RAM:95EE 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:95F1 68                          PLA
RAM:95F2 48                          PHA
RAM:95F3 6A                          ROR     A
RAM:95F4 6A                          ROR     A
RAM:95F5 20 56 96                    JSR     loc_9656
RAM:95F8 20 3B 96                    JSR     loc_963B
RAM:95FB 68                          PLA
RAM:95FC 48                          PHA
RAM:95FD 6A                          ROR     A
RAM:95FE 6A                          ROR     A
RAM:95FF 6A                          ROR     A
RAM:9600 20 56 96                    JSR     loc_9656
RAM:9603 20 38 96                    JSR     sub_9638
RAM:9606 4C 32 96                    JMP     loc_9632
RAM:9609             ; ---------------------------------------------------------------------------
RAM:9609
RAM:9609             loc_9609:                               ; CODE XREF: RAM:95DB↑j
RAM:9609 A9 03                       LDA     #3
RAM:960B 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:960E A5 1C                       LDA     byte_1C
RAM:9610 48                          PHA
RAM:9611 6A                          ROR     A
RAM:9612 20 56 96                    JSR     loc_9656
RAM:9615 20 3B 96                    JSR     loc_963B
RAM:9618 68                          PLA
RAM:9619 48                          PHA
RAM:961A 6A                          ROR     A
RAM:961B 6A                          ROR     A
RAM:961C 20 56 96                    JSR     loc_9656
RAM:961F 20 38 96                    JSR     sub_9638
RAM:9622 A9 02                       LDA     #2
RAM:9624 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:9627 68                          PLA
RAM:9628 48                          PHA
RAM:9629 6A                          ROR     A
RAM:962A 6A                          ROR     A
RAM:962B 6A                          ROR     A
RAM:962C 20 56 96                    JSR     loc_9656
RAM:962F 20 3B 96                    JSR     loc_963B
RAM:9632
RAM:9632             loc_9632:                               ; CODE XREF: RAM:9606↑j
RAM:9632 68                          PLA
RAM:9633 85 1C                       STA     byte_1C
RAM:9635 4C 03 F8                    JMP     j_FRAMOU
RAM:9638
RAM:9638             ; =============== S U B R O U T I N E =======================================
RAM:9638
RAM:9638
RAM:9638             sub_9638:                               ; CODE XREF: RAM:loc_95B7↑p
RAM:9638                                                     ; RAM:95CE↑p ...
RAM:9638 A9 40                       LDA     #$40 ; '@'
RAM:9638             ; End of function sub_9638
RAM:9638
RAM:9638             ; ---------------------------------------------------------------------------
RAM:963A 2C                          .BYTE $2C               ; BIT
RAM:963B             ; ---------------------------------------------------------------------------
RAM:963B
RAM:963B             loc_963B:                               ; CODE XREF: RAM:95B1↑p
RAM:963B                                                     ; RAM:95D1↑p ...
RAM:963B A9 60                       LDA     #$60 ; '`'
RAM:963D 85 1B                       STA     byte_1B
RAM:963F A0 00                       LDY     #0
RAM:9641 84 1A                       STY     byte_1A
RAM:9643
RAM:9643             loc_9643:                               ; CODE XREF: RAM:964B↓j
RAM:9643                                                     ; RAM:9653↓j
RAM:9643 A5 1C                       LDA     byte_1C
RAM:9645 91 1A                       STA     ($1A),Y
RAM:9647 20 8A 97                    JSR     loc_978A
RAM:964A C8                          INY
RAM:964B D0 F6                       BNE     loc_9643
RAM:964D E6 1B                       INC     byte_1B
RAM:964F A5 1B                       LDA     byte_1B
RAM:9651 29 1F                       AND     #$1F
RAM:9653 D0 EE                       BNE     loc_9643
RAM:9655 60                          RTS
RAM:9656             ; ---------------------------------------------------------------------------
RAM:9656
RAM:9656             loc_9656:                               ; CODE XREF: RAM:95E6↑p
RAM:9656                                                     ; RAM:95F5↑p ...
RAM:9656 B0 03                       BCS     loc_965B
RAM:9658 A9 00                       LDA     #0
RAM:9658             ; ---------------------------------------------------------------------------
RAM:965A 2C                          .BYTE $2C               ; BIT
RAM:965B             ; ---------------------------------------------------------------------------
RAM:965B
RAM:965B             loc_965B:                               ; CODE XREF: RAM:loc_9656↑j
RAM:965B A9 7F                       LDA     #$7F
RAM:965D 85 1C                       STA     byte_1C
RAM:965F 60                          RTS
RAM:9660             ; ---------------------------------------------------------------------------
RAM:9660             ; START OF FUNCTION CHUNK FOR sub_9B75
RAM:9660
RAM:9660             loc_9660:                               ; CODE XREF: sub_949F+3D↑p
RAM:9660                                                     ; sub_96C1↓p ...
RAM:9660 86 E0                       STX     byte_E0
RAM:9662 84 E1                       STY     byte_E1
RAM:9664 85 E2                       STA     byte_E2
RAM:9666 A8                          TAY
RAM:9667 20 0D 94                    JSR     sub_940D
RAM:966A A4 E1                       LDY     byte_E1
RAM:966C A5 E6                       LDA     byte_E6
RAM:966E
RAM:966E             loc_966E:                               ; DATA XREF: sub_9EB2+C↓r
RAM:966E 29 03                       AND     #3
RAM:9670 D0 0C                       BNE     loc_967E
RAM:9672 A5 E6                       LDA     byte_E6
RAM:9674 29 20                       AND     #$20 ; ' '
RAM:9676 09 40                       ORA     #$40 ; '@'
RAM:9678 05 27                       ORA     FKEYPH
RAM:967A 85 27                       STA     FKEYPH
RAM:967C D0 1E                       BNE     loc_969C
RAM:967E
RAM:967E             loc_967E:                               ; CODE XREF: sub_9B75-505↑j
RAM:967E 6A                          ROR     A
RAM:967F B0 15                       BCS     loc_9696
RAM:9681 C0 01                       CPY     #1
RAM:9683 90 11                       BCC     loc_9696
RAM:9685 D0 04                       BNE     loc_968B
RAM:9687 E0 18                       CPX     #$18
RAM:9689 90 0B                       BCC     loc_9696
RAM:968B
RAM:968B             loc_968B:                               ; CODE XREF: sub_9B75-4F0↑j
RAM:968B 8A                          TXA
RAM:968C E9 18                       SBC     #$18
RAM:968E AA                          TAX
RAM:968F 88                          DEY
RAM:9690 B0 01                       BCS     loc_9693
RAM:9692 88                          DEY
RAM:9693
RAM:9693             loc_9693:                               ; CODE XREF: sub_9B75-4E5↑j
RAM:9693 A9 60                       LDA     #$60 ; '`'
RAM:9693             ; END OF FUNCTION CHUNK FOR sub_9B75
RAM:9693             ; ---------------------------------------------------------------------------
RAM:9695 2C                          .BYTE $2C               ; BIT
RAM:9696             ; ---------------------------------------------------------------------------
RAM:9696             ; START OF FUNCTION CHUNK FOR sub_9B75
RAM:9696
RAM:9696             loc_9696:                               ; CODE XREF: sub_9B75-4F6↑j
RAM:9696                                                     ; sub_9B75-4F2↑j ...
RAM:9696 A9 40                       LDA     #$40 ; '@'
RAM:9698 05 27                       ORA     FKEYPH
RAM:969A 85 27                       STA     FKEYPH
RAM:969C
RAM:969C             loc_969C:                               ; CODE XREF: sub_9B75-4F9↑j
RAM:969C 8A                          TXA
RAM:969D C0 00                       CPY     #0
RAM:969F F0 05                       BEQ     loc_96A6
RAM:96A1 A0 23                       LDY     #$23 ; '#'
RAM:96A3 69 03                       ADC     #3
RAM:96A5
RAM:96A5             loc_96A5:                               ; CODE XREF: sub_9B75-4CC↓j
RAM:96A5 C8                          INY
RAM:96A6
RAM:96A6             loc_96A6:                               ; CODE XREF: sub_9B75-4D6↑j
RAM:96A6 38                          SEC
RAM:96A7 E9 07                       SBC     #7
RAM:96A9 B0 FA                       BCS     loc_96A5
RAM:96AB 84 E5                       STY     byte_E5
RAM:96AD 69 07                       ADC     #7
RAM:96AF AA                          TAX
RAM:96B0 BD 78 99                    LDA     $9978,X
RAM:96B3 85 30                       STA     byte_30
RAM:96B5 98                          TYA
RAM:96B6 4A                          LSR     A
RAM:96B7 A5 E4                       LDA     byte_E4
RAM:96B9 85 1C                       STA     byte_1C
RAM:96BB 90 03                       BCC     locret_96C0
RAM:96BD 4C 8A 97                    JMP     loc_978A
RAM:96C0             ; ---------------------------------------------------------------------------
RAM:96C0
RAM:96C0             locret_96C0:                            ; CODE XREF: sub_9B75-4BA↑j
RAM:96C0 60                          RTS
RAM:96C0             ; END OF FUNCTION CHUNK FOR sub_9B75
RAM:96C1
RAM:96C1             ; =============== S U B R O U T I N E =======================================
RAM:96C1
RAM:96C1
RAM:96C1             sub_96C1:                               ; CODE XREF: HPLOT+7↓p
RAM:96C1                                                     ; RAM:99A7↓p ...
RAM:96C1 20 60 96                    JSR     loc_9660
RAM:96C1             ; End of function sub_96C1
RAM:96C1
RAM:96C4
RAM:96C4             loc_96C4:                               ; CODE XREF: sub_97C7+7↓p
RAM:96C4                                                     ; sub_982C+80↓p ...
RAM:96C4 A5 E6                       LDA     byte_E6
RAM:96C6 6A                          ROR     A
RAM:96C7 B0 2B                       BCS     loc_96F4
RAM:96C9 6A                          ROR     A
RAM:96CA 90 0F                       BCC     loc_96DB
RAM:96CC 29 08                       AND     #8
RAM:96CE F0 03                       BEQ     loc_96D3
RAM:96D0 A9 01                       LDA     #1
RAM:96D0             ; ---------------------------------------------------------------------------
RAM:96D2 2C                          .BYTE $2C               ; BIT
RAM:96D3             ; ---------------------------------------------------------------------------
RAM:96D3
RAM:96D3             loc_96D3:                               ; CODE XREF: RAM:96CE↑j
RAM:96D3 A9 02                       LDA     #2
RAM:96D5 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:96D8 4C E7 96                    JMP     loc_96E7
RAM:96DB             ; ---------------------------------------------------------------------------
RAM:96DB
RAM:96DB             loc_96DB:                               ; CODE XREF: RAM:96CA↑j
RAM:96DB 29 08                       AND     #8
RAM:96DD F0 03                       BEQ     loc_96E2
RAM:96DF A9 00                       LDA     #0
RAM:96DF             ; ---------------------------------------------------------------------------
RAM:96E1 2C                          .BYTE $2C               ; BIT
RAM:96E2             ; ---------------------------------------------------------------------------
RAM:96E2
RAM:96E2             loc_96E2:                               ; CODE XREF: RAM:96DD↑j
RAM:96E2 A9 01                       LDA     #1
RAM:96E4 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:96E7
RAM:96E7             loc_96E7:                               ; CODE XREF: RAM:96D8↑j
RAM:96E7 A5 1C                       LDA     byte_1C
RAM:96E9 51 26                       EOR     ($26),Y
RAM:96EB 25 30                       AND     byte_30
RAM:96ED 51 26                       EOR     ($26),Y
RAM:96EF 91 26                       STA     ($26),Y
RAM:96F1 4C 4C 97                    JMP     loc_974C
RAM:96F4             ; ---------------------------------------------------------------------------
RAM:96F4
RAM:96F4             loc_96F4:                               ; CODE XREF: RAM:96C7↑j
RAM:96F4 29 10                       AND     #$10
RAM:96F6 F0 2B                       BEQ     loc_9723
RAM:96F8 A9 02                       LDA     #2
RAM:96FA 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:96FD A5 1C                       LDA     byte_1C
RAM:96FF 6A                          ROR     A
RAM:9700 48                          PHA
RAM:9701 20 4F 97                    JSR     sub_974F
RAM:9704 A9 01                       LDA     #1
RAM:9706 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:9709 68                          PLA
RAM:970A 6A                          ROR     A
RAM:970B 48                          PHA
RAM:970C A5 27                       LDA     FKEYPH
RAM:970E 49 20                       EOR     #$20 ; ' '
RAM:9710 85 27                       STA     FKEYPH
RAM:9712 20 4F 97                    JSR     sub_974F
RAM:9715 68                          PLA
RAM:9716 6A                          ROR     A
RAM:9717 A5 27                       LDA     FKEYPH
RAM:9719 49 20                       EOR     #$20 ; ' '
RAM:971B 85 27                       STA     FKEYPH
RAM:971D 20 4F 97                    JSR     sub_974F
RAM:9720 4C 4C 97                    JMP     loc_974C
RAM:9723             ; ---------------------------------------------------------------------------
RAM:9723
RAM:9723             loc_9723:                               ; CODE XREF: RAM:96F6↑j
RAM:9723 A9 03                       LDA     #3
RAM:9725 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:9728 A5 1C                       LDA     byte_1C
RAM:972A 6A                          ROR     A
RAM:972B 6A                          ROR     A
RAM:972C 48                          PHA
RAM:972D 48                          PHA
RAM:972E 20 4F 97                    JSR     sub_974F
RAM:9731 68                          PLA
RAM:9732 2A                          ROL     A
RAM:9733 A5 27                       LDA     FKEYPH
RAM:9735 49 20                       EOR     #$20 ; ' '
RAM:9737 85 27                       STA     FKEYPH
RAM:9739 20 4F 97                    JSR     sub_974F
RAM:973C A9 02                       LDA     #2
RAM:973E 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:9741 68                          PLA
RAM:9742 6A                          ROR     A
RAM:9743 20 4F 97                    JSR     sub_974F
RAM:9746 A5 27                       LDA     FKEYPH
RAM:9748 49 20                       EOR     #$20 ; ' '
RAM:974A 85 27                       STA     FKEYPH
RAM:974C
RAM:974C             loc_974C:                               ; CODE XREF: RAM:96F1↑j
RAM:974C                                                     ; RAM:9720↑j
RAM:974C 4C 03 F8                    JMP     j_FRAMOU
RAM:974F
RAM:974F             ; =============== S U B R O U T I N E =======================================
RAM:974F
RAM:974F
RAM:974F             sub_974F:                               ; CODE XREF: RAM:9701↑p
RAM:974F                                                     ; RAM:9712↑p ...
RAM:974F A5 30                       LDA     byte_30
RAM:9751 11 26                       ORA     ($26),Y
RAM:9753 B0 04                       BCS     loc_9759
RAM:9755 45 30                       EOR     byte_30
RAM:9757 49 80                       EOR     #$80
RAM:9759
RAM:9759             loc_9759:                               ; CODE XREF: sub_974F+4↑j
RAM:9759 91 26                       STA     ($26),Y
RAM:975B 60                          RTS
RAM:975B             ; End of function sub_974F
RAM:975B
RAM:975C
RAM:975C             ; =============== S U B R O U T I N E =======================================
RAM:975C
RAM:975C
RAM:975C             sub_975C:                               ; CODE XREF: sub_97C7+16↓j
RAM:975C                                                     ; sub_982C+97↓p
RAM:975C 10 41                       BPL     sub_979F
RAM:975C             ; End of function sub_975C
RAM:975C
RAM:975E
RAM:975E             ; =============== S U B R O U T I N E =======================================
RAM:975E
RAM:975E
RAM:975E             sub_975E:                               ; CODE XREF: ROM:F46A↓p
RAM:975E A5 30                       LDA     byte_30
RAM:9760 4A                          LSR     A
RAM:9761 B0 07                       BCS     loc_976A
RAM:9763 09 80                       ORA     #$80
RAM:9765 49 40                       EOR     #$40 ; '@'
RAM:9767
RAM:9767             loc_9767:                               ; CODE XREF: sub_979F+5↓j
RAM:9767 85 30                       STA     byte_30
RAM:9769 60                          RTS
RAM:976A             ; ---------------------------------------------------------------------------
RAM:976A
RAM:976A             loc_976A:                               ; CODE XREF: sub_975E+3↑j
RAM:976A 88                          DEY
RAM:976B 10 10                       BPL     loc_977D
RAM:976D A0 27                       LDY     #$27 ; '''
RAM:976F A5 E6                       LDA     byte_E6
RAM:9771 29 03                       AND     #3
RAM:9773 18                          CLC
RAM:9774 6A                          ROR     A
RAM:9775 F0 06                       BEQ     loc_977D
RAM:9777 A5 27                       LDA     FKEYPH
RAM:9779 49 20                       EOR     #$20 ; ' '
RAM:977B 85 27                       STA     FKEYPH
RAM:977D
RAM:977D             loc_977D:                               ; CODE XREF: sub_975E+D↑j
RAM:977D                                                     ; sub_975E+17↑j
RAM:977D A9 C0                       LDA     #$C0
RAM:977F
RAM:977F             loc_977F:                               ; CODE XREF: sub_979F+C↓j
RAM:977F                                                     ; sub_979F+1A↓j ...
RAM:977F 85 30                       STA     byte_30
RAM:9781 84 E5                       STY     byte_E5
RAM:9783 A5 E6                       LDA     byte_E6
RAM:9785 6A                          ROR     A
RAM:9786 B0 16                       BCS     locret_979E
RAM:9788 A5 1C                       LDA     byte_1C
RAM:978A
RAM:978A             loc_978A:                               ; CODE XREF: RAM:9647↑p
RAM:978A                                                     ; sub_9B75-4B8↑j
RAM:978A 0A                          ASL     A
RAM:978B 48                          PHA
RAM:978C A5 E6                       LDA     byte_E6
RAM:978E 6A                          ROR     A
RAM:978F 90 02                       BCC     loc_9793
RAM:9791 68                          PLA
RAM:9792 60                          RTS
RAM:9793             ; ---------------------------------------------------------------------------
RAM:9793
RAM:9793             loc_9793:                               ; CODE XREF: sub_975E+31↑j
RAM:9793 68                          PLA
RAM:9794 C9 C0                       CMP     #$C0
RAM:9796 10 06                       BPL     locret_979E
RAM:9798 A5 1C                       LDA     byte_1C
RAM:979A 49 7F                       EOR     #$7F
RAM:979C 85 1C                       STA     byte_1C
RAM:979E
RAM:979E             locret_979E:                            ; CODE XREF: sub_975E+28↑j
RAM:979E                                                     ; sub_975E+38↑j
RAM:979E 60                          RTS
RAM:979E             ; End of function sub_975E
RAM:979E
RAM:979F
RAM:979F             ; =============== S U B R O U T I N E =======================================
RAM:979F
RAM:979F
RAM:979F             sub_979F:                               ; CODE XREF: sub_975C↑j
RAM:979F                                                     ; ROM:F48D↓p
RAM:979F A5 30                       LDA     byte_30
RAM:97A1 0A                          ASL     A
RAM:97A2 49 80                       EOR     #$80
RAM:97A4 30 C1                       BMI     loc_9767
RAM:97A6 A9 81                       LDA     #$81
RAM:97A8 C8                          INY
RAM:97A9 C0 28                       CPY     #$28 ; '('
RAM:97AB 90 D2                       BCC     loc_977F
RAM:97AD A0 00                       LDY     #0
RAM:97AF 48                          PHA
RAM:97B0 A5 E6                       LDA     byte_E6
RAM:97B2 29 03                       AND     #3
RAM:97B4 18                          CLC
RAM:97B5 6A                          ROR     A
RAM:97B6 D0 04                       BNE     loc_97BC
RAM:97B8 68                          PLA
RAM:97B9 4C 7F 97                    JMP     loc_977F
RAM:97BC             ; ---------------------------------------------------------------------------
RAM:97BC
RAM:97BC             loc_97BC:                               ; CODE XREF: sub_979F+17↑j
RAM:97BC A5 27                       LDA     FKEYPH
RAM:97BE 49 20                       EOR     #$20 ; ' '
RAM:97C0 85 27                       STA     FKEYPH
RAM:97C2 68                          PLA
RAM:97C3 4C 7F 97                    JMP     loc_977F
RAM:97C3             ; End of function sub_979F
RAM:97C3
RAM:97C6
RAM:97C6             ; =============== S U B R O U T I N E =======================================
RAM:97C6
RAM:97C6
RAM:97C6             sub_97C6:                               ; CODE XREF: sub_9475:loc_9486↑p
RAM:97C6 18                          CLC
RAM:97C6             ; End of function sub_97C6
RAM:97C6
RAM:97C7
RAM:97C7             ; =============== S U B R O U T I N E =======================================
RAM:97C7
RAM:97C7
RAM:97C7             sub_97C7:                               ; CODE XREF: sub_F4B4+3↓p
RAM:97C7 A5 D1                       LDA     byte_D1
RAM:97C9 29 04                       AND     #4
RAM:97CB 08                          PHP
RAM:97CC F0 03                       BEQ     loc_97D1
RAM:97CE 20 C4 96                    JSR     loc_96C4
RAM:97D1
RAM:97D1             loc_97D1:                               ; CODE XREF: sub_97C7+5↑j
RAM:97D1 A5 D1                       LDA     byte_D1
RAM:97D3 28                          PLP
RAM:97D4 65 D3                       ADC     byte_D3
RAM:97D6 29 03                       AND     #3
RAM:97D8 C9 02                       CMP     #2
RAM:97DA 6A                          ROR     A
RAM:97DB 90 03                       BCC     loc_97E0
RAM:97DD 4C 5C 97                    JMP     sub_975C
RAM:97E0             ; ---------------------------------------------------------------------------
RAM:97E0
RAM:97E0             loc_97E0:                               ; CODE XREF: sub_97C7+14↑j
RAM:97E0                                                     ; sub_982C+A0↓p ...
RAM:97E0 18                          CLC
RAM:97E1 30 2A                       BMI     loc_980D
RAM:97E3 A5 27                       LDA     FKEYPH
RAM:97E5 2C 7F 99                    BIT     byte_997F
RAM:97E8 F0 05                       BEQ     loc_97EF
RAM:97EA 69 FC                       ADC     #$FC
RAM:97EC
RAM:97EC             loc_97EC:                               ; CODE XREF: sub_97C7+4D↓j
RAM:97EC 85 27                       STA     FKEYPH
RAM:97EE 60                          RTS
RAM:97EF             ; ---------------------------------------------------------------------------
RAM:97EF
RAM:97EF             loc_97EF:                               ; CODE XREF: sub_97C7+21↑j
RAM:97EF 98                          TYA
RAM:97F0 48                          PHA
RAM:97F1 A5 27                       LDA     FKEYPH
RAM:97F3 29 E0                       AND     #$E0
RAM:97F5 48                          PHA
RAM:97F6 A0 00                       LDY     #0
RAM:97F8 20 18 94                    JSR     sub_9418
RAM:97FB C0 00                       CPY     #0
RAM:97FD D0 02                       BNE     loc_9801
RAM:97FF A0 C0                       LDY     #$C0
RAM:9801
RAM:9801             loc_9801:                               ; CODE XREF: sub_97C7+36↑j
RAM:9801 88                          DEY
RAM:9802
RAM:9802             loc_9802:                               ; CODE XREF: sub_97C7+62↓j
RAM:9802 20 0D 94                    JSR     sub_940D
RAM:9805 68                          PLA
RAM:9806 05 27                       ORA     FKEYPH
RAM:9808 85 27                       STA     FKEYPH
RAM:980A 68                          PLA
RAM:980B A8                          TAY
RAM:980C 60                          RTS
RAM:980D             ; ---------------------------------------------------------------------------
RAM:980D
RAM:980D             loc_980D:                               ; CODE XREF: sub_97C7+1A↑j
RAM:980D                                                     ; ROM:F507↓p
RAM:980D A5 27                       LDA     FKEYPH
RAM:980F
RAM:980F             loc_980F:                               ; DATA XREF: sub_9EEA+11↓r
RAM:980F 69 04                       ADC     #4
RAM:9811 2C 7F 99                    BIT     byte_997F
RAM:9814 D0 D6                       BNE     loc_97EC
RAM:9816 98                          TYA
RAM:9817 48                          PHA
RAM:9818 A5 27                       LDA     FKEYPH
RAM:981A 29 E0                       AND     #$E0
RAM:981C 48                          PHA
RAM:981D A0 07                       LDY     #7
RAM:981F 20 18 94                    JSR     sub_9418
RAM:9822 C0 BF                       CPY     #$BF
RAM:9824 D0 02                       BNE     loc_9828
RAM:9826 A0 FF                       LDY     #$FF
RAM:9828
RAM:9828             loc_9828:                               ; CODE XREF: sub_97C7+5D↑j
RAM:9828 C8                          INY
RAM:9829 4C 02 98                    JMP     loc_9802
RAM:9829             ; End of function sub_97C7
RAM:9829
RAM:982C
RAM:982C             ; =============== S U B R O U T I N E =======================================
RAM:982C
RAM:982C
RAM:982C             sub_982C:                               ; CODE XREF: HPLOT+1D↓p
RAM:982C                                                     ; RAM:9995↓p ...
RAM:982C 48                          PHA
RAM:982D 8A                          TXA
RAM:982E 48                          PHA
RAM:982F BA                          TSX
RAM:9830 C5 E1                       CMP     byte_E1
RAM:9832 D0 08                       BNE     loc_983C
RAM:9834 BD 02 01                    LDA     $102,X
RAM:9837 C5 E0                       CMP     byte_E0
RAM:9839 4C 3F 98                    JMP     loc_983F
RAM:983C             ; ---------------------------------------------------------------------------
RAM:983C
RAM:983C             loc_983C:                               ; CODE XREF: sub_982C+6↑j
RAM:983C BD 02 01                    LDA     $102,X
RAM:983F
RAM:983F             loc_983F:                               ; CODE XREF: sub_982C+D↑j
RAM:983F 90 1B                       BCC     loc_985C
RAM:9841 E5 E0                       SBC     byte_E0
RAM:9843 85 D0                       STA     byte_D0
RAM:9845 85 D4                       STA     byte_D4
RAM:9847 A9 00                       LDA     #0
RAM:9849 85 D3                       STA     byte_D3
RAM:984B 68                          PLA
RAM:984C 48                          PHA
RAM:984D E5 E1                       SBC     byte_E1
RAM:984F
RAM:984F             loc_984F:                               ; CODE XREF: sub_982C+47↓j
RAM:984F 85 D1                       STA     byte_D1
RAM:9851 85 D5                       STA     byte_D5
RAM:9853 68                          PLA
RAM:9854 85 E1                       STA     byte_E1
RAM:9856 68                          PLA
RAM:9857 85 E0                       STA     byte_E0
RAM:9859 4C 76 98                    JMP     loc_9876
RAM:985C             ; ---------------------------------------------------------------------------
RAM:985C
RAM:985C             loc_985C:                               ; CODE XREF: sub_982C:loc_983F↑j
RAM:985C 85 D0                       STA     byte_D0
RAM:985E A5 E0                       LDA     byte_E0
RAM:9860 38                          SEC
RAM:9861 E5 D0                       SBC     byte_D0
RAM:9863 85 D0                       STA     byte_D0
RAM:9865 85 D4                       STA     byte_D4
RAM:9867 A9 80                       LDA     #$80
RAM:9869 85 D3                       STA     byte_D3
RAM:986B 68                          PLA
RAM:986C 48                          PHA
RAM:986D 85 D1                       STA     byte_D1
RAM:986F A5 E1                       LDA     byte_E1
RAM:9871 E5 D1                       SBC     byte_D1
RAM:9873 4C 4F 98                    JMP     loc_984F
RAM:9876             ; ---------------------------------------------------------------------------
RAM:9876
RAM:9876             loc_9876:                               ; CODE XREF: sub_982C+2D↑j
RAM:9876 C4 E2                       CPY     byte_E2
RAM:9878 90 0E                       BCC     loc_9888
RAM:987A A5 D3                       LDA     byte_D3
RAM:987C 09 40                       ORA     #$40 ; '@'
RAM:987E 85 D3                       STA     byte_D3
RAM:9880 98                          TYA
RAM:9881 E5 E2                       SBC     byte_E2
RAM:9883 84 E2                       STY     byte_E2
RAM:9885 4C 8F 98                    JMP     loc_988F
RAM:9888             ; ---------------------------------------------------------------------------
RAM:9888
RAM:9888             loc_9888:                               ; CODE XREF: sub_982C+4C↑j
RAM:9888 A5 E2                       LDA     byte_E2
RAM:988A 84 E2                       STY     byte_E2
RAM:988C 38                          SEC
RAM:988D E5 E2                       SBC     byte_E2
RAM:988F
RAM:988F             loc_988F:                               ; CODE XREF: sub_982C+59↑j
RAM:988F 85 D2                       STA     byte_D2
RAM:9891 38                          SEC
RAM:9892 65 D0                       ADC     byte_D0
RAM:9894 85 4E                       STA     RNDNOL
RAM:9896 A5 D1                       LDA     byte_D1
RAM:9898 69 00                       ADC     #0
RAM:989A 85 4F                       STA     RNDNOH
RAM:989C A4 E5                       LDY     byte_E5
RAM:989E
RAM:989E             loc_989E:                               ; CODE XREF: sub_982C+9A↓j
RAM:989E A5 D4                       LDA     byte_D4
RAM:98A0 38                          SEC
RAM:98A1 E5 D2                       SBC     byte_D2
RAM:98A3 85 D4                       STA     byte_D4
RAM:98A5 A5 D5                       LDA     byte_D5
RAM:98A7 E9 00                       SBC     #0
RAM:98A9 85 D5                       STA     byte_D5
RAM:98AB
RAM:98AB             loc_98AB:                               ; CODE XREF: sub_982C+B0↓j
RAM:98AB 08                          PHP
RAM:98AC 20 C4 96                    JSR     loc_96C4
RAM:98AF 28                          PLP
RAM:98B0 A5 4E                       LDA     RNDNOL
RAM:98B2 D0 02                       BNE     loc_98B6
RAM:98B4 C6 4F                       DEC     RNDNOH
RAM:98B6
RAM:98B6             loc_98B6:                               ; CODE XREF: sub_982C+86↑j
RAM:98B6 C6 4E                       DEC     RNDNOL
RAM:98B8 D0 05                       BNE     loc_98BF
RAM:98BA A5 4F                       LDA     RNDNOH
RAM:98BC D0 01                       BNE     loc_98BF
RAM:98BE 60                          RTS
RAM:98BF             ; ---------------------------------------------------------------------------
RAM:98BF
RAM:98BF             loc_98BF:                               ; CODE XREF: sub_982C+8C↑j
RAM:98BF                                                     ; sub_982C+90↑j
RAM:98BF 90 08                       BCC     loc_98C9
RAM:98C1 A5 D3                       LDA     byte_D3
RAM:98C3 20 5C 97                    JSR     sub_975C
RAM:98C6 4C 9E 98                    JMP     loc_989E
RAM:98C9             ; ---------------------------------------------------------------------------
RAM:98C9
RAM:98C9             loc_98C9:                               ; CODE XREF: sub_982C:loc_98BF↑j
RAM:98C9 A5 D3                       LDA     byte_D3
RAM:98CB 0A                          ASL     A
RAM:98CC 20 E0 97                    JSR     loc_97E0
RAM:98CF A5 D4                       LDA     byte_D4
RAM:98D1 18                          CLC
RAM:98D2 65 D0                       ADC     byte_D0
RAM:98D4 85 D4                       STA     byte_D4
RAM:98D6 A5 D5                       LDA     byte_D5
RAM:98D8 65 D1                       ADC     byte_D1
RAM:98DA 85 D5                       STA     byte_D5
RAM:98DC 4C AB 98                    JMP     loc_98AB
RAM:98DC             ; End of function sub_982C
RAM:98DC
RAM:98DC             ; ---------------------------------------------------------------------------
RAM:98DF 00          byte_98DF:      .BYTE 0
RAM:98E0 2A                          .BYTE $2A
RAM:98E1 55                          .BYTE $55
RAM:98E2 7F                          .BYTE $7F
RAM:98E3 80                          .BYTE $80
RAM:98E4 AA                          .BYTE $AA
RAM:98E5 D5                          .BYTE $D5
RAM:98E6 FF                          .BYTE $FF
RAM:98E7 30                          .BYTE '0'
RAM:98E8 32                          .BYTE '2'
RAM:98E9 35                          .BYTE '5'
RAM:98EA 33                          .BYTE '3'
RAM:98EB 36                          .BYTE '6'
RAM:98EC 34                          .BYTE '4'
RAM:98ED 31                          .BYTE '1'
RAM:98EE 37                          .BYTE '7'
RAM:98EF
RAM:98EF             ; =============== S U B R O U T I N E =======================================
RAM:98EF
RAM:98EF
RAM:98EF             sub_98EF:                               ; CODE XREF: PAINT+1D↓p
RAM:98EF
RAM:98EF             ; FUNCTION CHUNK AT RAM:9952 SIZE 00000003 BYTES
RAM:98EF             ; FUNCTION CHUNK AT RAM:AF30 SIZE 00000014 BYTES
RAM:98EF
RAM:98EF 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:98F2
RAM:98F2             HCOLOR:                                 ; CODE XREF: ROM:F6EF↓p
RAM:98F2 E0 08                       CPX     #8              ; HCOLOR= colour code (0 => 7)
RAM:98F4 B0 5C                       BCS     loc_9952
RAM:98F6 86 E4                       STX     byte_E4
RAM:98F8 A5 E6                       LDA     byte_E6
RAM:98FA 6A                          ROR     A
RAM:98FB 4C 30 AF                    JMP     loc_AF30
RAM:98FB             ; End of function sub_98EF
RAM:98FB
RAM:98FB             ; ---------------------------------------------------------------------------
RAM:98FE 69                          .BYTE $69 ; i
RAM:98FF 07                          .BYTE   7
RAM:9900 AA                          .BYTE $AA
RAM:9901 4C                          .BYTE $4C ; L
RAM:9902 30                          .BYTE $30 ; 0
RAM:9903 AF                          .BYTE $AF
RAM:9904 85                          .BYTE $85
RAM:9905 E4                          .BYTE $E4
RAM:9906 85                          .BYTE $85
RAM:9907 1C                          .BYTE $1C
RAM:9908 60                          .BYTE $60 ; `
RAM:9909
RAM:9909             ; =============== S U B R O U T I N E =======================================
RAM:9909
RAM:9909
RAM:9909             sub_9909:                               ; CODE XREF: sub_9937+3↓p
RAM:9909                                                     ; sub_9AB9+8F↓p ...
RAM:9909
RAM:9909             ; FUNCTION CHUNK AT RAM:9952 SIZE 00000003 BYTES
RAM:9909             ; FUNCTION CHUNK AT ROM:F3FF SIZE 00000008 BYTES
RAM:9909
RAM:9909 20 17 F6                    JSR     AUX_GETADR      ; Call GETADR , ensure $8000 ROM switched out
RAM:990C A4 51                       LDY     byte_51
RAM:990E A6 50                       LDX     byte_50
RAM:9910 C0 01                       CPY     #1
RAM:9912 90 1A                       BCC     locret_992E
RAM:9914 D0 04                       BNE     loc_991A
RAM:9916 E0 18                       CPX     #$18
RAM:9918 90 14                       BCC     locret_992E
RAM:991A
RAM:991A             loc_991A:                               ; CODE XREF: sub_9909+B↑j
RAM:991A C0 03                       CPY     #3
RAM:991C B0 34                       BCS     loc_9952
RAM:991E A5 E6                       LDA     byte_E6
RAM:9920 29 03                       AND     #3
RAM:9922 49 02                       EOR     #2
RAM:9924 D0 2C                       BNE     loc_9952
RAM:9926 C0 02                       CPY     #2
RAM:9928 90 04                       BCC     locret_992E
RAM:992A E0 30                       CPX     #$30 ; '0'
RAM:992C B0 24                       BCS     loc_9952
RAM:992E
RAM:992E             locret_992E:                            ; CODE XREF: sub_9909+9↑j
RAM:992E                                                     ; sub_9909+F↑j ...
RAM:992E 60                          RTS
RAM:992E             ; End of function sub_9909
RAM:992E
RAM:992F
RAM:992F             ; =============== S U B R O U T I N E =======================================
RAM:992F
RAM:992F
RAM:992F             sub_992F:                               ; CODE XREF: sub_9937+F↓p
RAM:992F
RAM:992F             ; FUNCTION CHUNK AT RAM:9952 SIZE 00000003 BYTES
RAM:992F
RAM:992F 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:9932
RAM:9932             loc_9932:                               ; CODE XREF: sub_9AB9+87↓p
RAM:9932                                                     ; sub_9B75+A↓p
RAM:9932 E0 C0                       CPX     #$C0
RAM:9934 B0 1C                       BCS     loc_9952
RAM:9936 60                          RTS
RAM:9936             ; End of function sub_992F
RAM:9936
RAM:9937
RAM:9937             ; =============== S U B R O U T I N E =======================================
RAM:9937
RAM:9937
RAM:9937             sub_9937:                               ; CODE XREF: sub_949F+3A↑p
RAM:9937                                                     ; HPLOT+4↓p ...
RAM:9937 20 20 F6                    JSR     AUX_FRMNUM      ; Call FRMNUM , ensure $8000 ROM switched out
RAM:993A 20 09 99                    JSR     sub_9909
RAM:993D 8A                          TXA
RAM:993E 48                          PHA
RAM:993F 98                          TYA
RAM:9940 48                          PHA
RAM:9941 A9 2C                       LDA     #$2C ; ','
RAM:9943 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:9946 20 2F 99                    JSR     sub_992F
RAM:9949 86 9D                       STX     byte_9D
RAM:994B 68                          PLA
RAM:994C A8                          TAY
RAM:994D 68                          PLA
RAM:994E AA                          TAX
RAM:994F A5 9D                       LDA     byte_9D
RAM:9951
RAM:9951             locret_9951:                            ; CODE XREF: HPLOT+F↓j
RAM:9951 60                          RTS
RAM:9951             ; End of function sub_9937
RAM:9951
RAM:9952             ; ---------------------------------------------------------------------------
RAM:9952             ; START OF FUNCTION CHUNK FOR sub_9909
RAM:9952             ;   ADDITIONAL PARENT FUNCTION sub_98EF
RAM:9952             ;   ADDITIONAL PARENT FUNCTION sub_992F
RAM:9952
RAM:9952             loc_9952:                               ; CODE XREF: sub_98EF+5↑j
RAM:9952                                                     ; sub_9909+13↑j ...
RAM:9952 4C FF F3                    JMP     loc_F3FF
RAM:9952             ; END OF FUNCTION CHUNK FOR sub_9909
RAM:9955
RAM:9955             ; =============== S U B R O U T I N E =======================================
RAM:9955
RAM:9955
RAM:9955             HPLOT:                                  ; CODE XREF: ROM:F701↓p
RAM:9955 C9 C1                       CMP     #$C1
RAM:9957 F0 0D                       BEQ     loc_9966
RAM:9959 20 37 99                    JSR     sub_9937
RAM:995C 20 C1 96                    JSR     sub_96C1
RAM:995F
RAM:995F             loc_995F:                               ; CODE XREF: HPLOT+20↓j
RAM:995F 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9962 C9 C1                       CMP     #$C1
RAM:9964 D0 EB                       BNE     locret_9951
RAM:9966
RAM:9966             loc_9966:                               ; CODE XREF: HPLOT+2↑j
RAM:9966 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:9969 20 37 99                    JSR     sub_9937
RAM:996C 84 9D                       STY     byte_9D
RAM:996E A8                          TAY
RAM:996F 8A                          TXA
RAM:9970 A6 9D                       LDX     byte_9D
RAM:9972 20 2C 98                    JSR     sub_982C
RAM:9975 4C 5F 99                    JMP     loc_995F
RAM:9975             ; End of function HPLOT
RAM:9975
RAM:9975             ; ---------------------------------------------------------------------------
RAM:9978 81                          .BYTE $81
RAM:9979 82                          .BYTE $82
RAM:997A 84                          .BYTE $84
RAM:997B 88                          .BYTE $88
RAM:997C 90                          .BYTE $90
RAM:997D A0                          .BYTE $A0
RAM:997E C0                          .BYTE $C0
RAM:997F 1C          byte_997F:      .BYTE $1C               ; DATA XREF: sub_97C7+1E↑r
RAM:997F                                                     ; sub_97C7+4A↑r ...
RAM:9980             ; ---------------------------------------------------------------------------
RAM:9980
RAM:9980             SCIRCLE:                                ; DATA XREF: RAM:DRAW_OPT_VECTORS↓t
RAM:9980 20 C8 99                    JSR     sub_99C8
RAM:9983 4C 89 99                    JMP     loc_9989
RAM:9986             ; ---------------------------------------------------------------------------
RAM:9986
RAM:9986             loc_9986:                               ; CODE XREF: RAM:9998↓j
RAM:9986 20 AD 99                    JSR     sub_99AD
RAM:9989
RAM:9989             loc_9989:                               ; CODE XREF: RAM:9983↑j
RAM:9989 20 75 9B                    JSR     sub_9B75
RAM:998C 20 B9 9A                    JSR     sub_9AB9
RAM:998F 84 9D                       STY     byte_9D
RAM:9991 A8                          TAY
RAM:9992 8A                          TXA
RAM:9993 A6 9D                       LDX     byte_9D
RAM:9995 20 2C 98                    JSR     sub_982C
RAM:9998 4C 86 99                    JMP     loc_9986
RAM:999B             ; ---------------------------------------------------------------------------
RAM:999B
RAM:999B             HCIRCLE:                                ; DATA XREF: RAM:9C81↓t
RAM:999B 20 C8 99                    JSR     sub_99C8
RAM:999E 4C A4 99                    JMP     loc_99A4
RAM:99A1             ; ---------------------------------------------------------------------------
RAM:99A1
RAM:99A1             loc_99A1:                               ; CODE XREF: RAM:99AA↓j
RAM:99A1 20 AD 99                    JSR     sub_99AD
RAM:99A4
RAM:99A4             loc_99A4:                               ; CODE XREF: RAM:999E↑j
RAM:99A4 20 B9 9A                    JSR     sub_9AB9
RAM:99A7 20 C1 96                    JSR     sub_96C1
RAM:99AA 4C A1 99                    JMP     loc_99A1
RAM:99AD
RAM:99AD             ; =============== S U B R O U T I N E =======================================
RAM:99AD
RAM:99AD
RAM:99AD             sub_99AD:                               ; CODE XREF: RAM:loc_9986↑p
RAM:99AD                                                     ; RAM:loc_99A1↑p
RAM:99AD 20 B2 9A                    JSR     sub_9AB2
RAM:99B0 A9 B0                       LDA     #$B0
RAM:99B2 A0 02                       LDY     #2
RAM:99B4 20 1D A6                    JSR     sub_A61D
RAM:99B7 20 5F 9B                    JSR     loc_9B5F
RAM:99BA A0 02                       LDY     #2
RAM:99BC A9 A5                       LDA     #$A5
RAM:99BE 20 0D F5                    JSR     AUX_FCOMP
RAM:99C1 C9 01                       CMP     #1
RAM:99C3 D0 02                       BNE     locret_99C7
RAM:99C5 68                          PLA
RAM:99C6 68                          PLA
RAM:99C7
RAM:99C7             locret_99C7:                            ; CODE XREF: sub_99AD+16↑j
RAM:99C7 60                          RTS
RAM:99C7             ; End of function sub_99AD
RAM:99C7
RAM:99C8
RAM:99C8             ; =============== S U B R O U T I N E =======================================
RAM:99C8
RAM:99C8
RAM:99C8             sub_99C8:                               ; CODE XREF: RAM:SCIRCLE↑p
RAM:99C8                                                     ; RAM:HCIRCLE↑p
RAM:99C8
RAM:99C8             ; FUNCTION CHUNK AT ROM:D9DC SIZE 00000010 BYTES
RAM:99C8             ; FUNCTION CHUNK AT ROM:F3E5 SIZE 00000006 BYTES
RAM:99C8             ; FUNCTION CHUNK AT ROM:F3FF SIZE 00000008 BYTES
RAM:99C8
RAM:99C8 A5 F9                       LDA     byte_F9
RAM:99CA 49 FF                       EOR     #$FF
RAM:99CC A8                          TAY
RAM:99CD 20 D4 F5                    JSR     AUX_SNGFLT
RAM:99D0 A9 6B                       LDA     #$6B ; 'k'
RAM:99D2 A0 F0                       LDY     #$F0
RAM:99D4 20 7F E9                    JSR     FMULT
RAM:99D7 20 50 9B                    JSR     loc_9B50
RAM:99DA A9 7A                       LDA     #$7A ; 'z'
RAM:99DC A0 9C                       LDY     #$9C
RAM:99DE 20 F9 EA                    JSR     MOVFM
RAM:99E1 A9 F0                       LDA     #$F0
RAM:99E3 A0 02                       LDY     #2
RAM:99E5 20 29 A6                    JSR     sub_A629
RAM:99E8 20 50 9B                    JSR     loc_9B50
RAM:99EB 20 EA EF                    JSR     COS             ; SINE, COSINE AND TANGENT FUNCTIONS.
RAM:99EE 20 4D 9B                    JSR     sub_9B4D
RAM:99F1 A9 F0                       LDA     #$F0
RAM:99F3 A0 02                       LDY     #2
RAM:99F5 20 F9 EA                    JSR     MOVFM
RAM:99F8 20 F1 EF                    JSR     SIN
RAM:99FB 20 50 9B                    JSR     loc_9B50
RAM:99FE 20 72 F6                    JSR     CMP_LPAR_B8_Y_ROM_OUT ; CMP ($B8),Y for a "(", with low ROM switched out. SNERR if not equal
RAM:9A01 20 20 F6                    JSR     AUX_FRMNUM      ; Call FRMNUM , ensure $8000 ROM switched out
RAM:9A04 20 56 9B                    JSR     loc_9B56
RAM:9A07 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:9A0A 20 20 F6                    JSR     AUX_FRMNUM      ; Call FRMNUM , ensure $8000 ROM switched out
RAM:9A0D 20 59 9B                    JSR     loc_9B59
RAM:9A10 20 6F F6                    JSR     CMP_RPAR_B8_Y_ROM_OUT ; CMP ($B8),Y for a ")", with low ROM switched out. SNERR if not equal
RAM:9A13 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:9A16 20 20 F6                    JSR     AUX_FRMNUM      ; Call FRMNUM , ensure $8000 ROM switched out
RAM:9A19 20 89 9C                    JSR     sub_9C89
RAM:9A1C 20 65 9B                    JSR     loc_9B65
RAM:9A1F A6 9D                       LDX     byte_9D
RAM:9A21 D0 07                       BNE     loc_9A2A
RAM:9A23 68                          PLA
RAM:9A24 68                          PLA
RAM:9A25 68                          PLA
RAM:9A26 68                          PLA
RAM:9A27 4C E5 F3                    JMP     loc_F3E5
RAM:9A2A             ; ---------------------------------------------------------------------------
RAM:9A2A
RAM:9A2A             loc_9A2A:                               ; CODE XREF: sub_99C8+59↑j
RAM:9A2A 20 A1 9A                    JSR     sub_9AA1
RAM:9A2D 20 62 9B                    JSR     loc_9B62
RAM:9A30 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9A33 C9 2C                       CMP     #$2C ; ','
RAM:9A35 D0 48                       BNE     loc_9A7F
RAM:9A37 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:9A3A 20 20 F6                    JSR     AUX_FRMNUM      ; Call FRMNUM , ensure $8000 ROM switched out
RAM:9A3D 20 89 9C                    JSR     sub_9C89
RAM:9A40 A9 13                       LDA     #$13
RAM:9A42 A0 E9                       LDY     #$E9
RAM:9A44 20 B2 EB                    JSR     FCOMP
RAM:9A47 C9 01                       CMP     #1
RAM:9A49 D0 03                       BNE     loc_9A4E
RAM:9A4B 4C FF F3                    JMP     loc_F3FF
RAM:9A4E             ; ---------------------------------------------------------------------------
RAM:9A4E
RAM:9A4E             loc_9A4E:                               ; CODE XREF: sub_99C8+81↑j
RAM:9A4E 20 5C 9B                    JSR     loc_9B5C
RAM:9A51 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9A54 C9 2C                       CMP     #$2C ; ','
RAM:9A56 D0 32                       BNE     loc_9A8A
RAM:9A58 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:9A5B 20 20 F6                    JSR     AUX_FRMNUM      ; Call FRMNUM , ensure $8000 ROM switched out
RAM:9A5E 20 5F 9B                    JSR     loc_9B5F
RAM:9A61 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9A64 C9 2C                       CMP     #$2C ; ','
RAM:9A66 D0 2D                       BNE     loc_9A95
RAM:9A68 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:9A6B 20 20 F6                    JSR     AUX_FRMNUM      ; Call FRMNUM , ensure $8000 ROM switched out
RAM:9A6E A9 A0                       LDA     #$A0
RAM:9A70 A0 02                       LDY     #2
RAM:9A72 20 B2 EB                    JSR     FCOMP
RAM:9A75 C9 01                       CMP     #1
RAM:9A77 F0 03                       BEQ     loc_9A7C
RAM:9A79 4C FF F3                    JMP     loc_F3FF
RAM:9A7C             ; ---------------------------------------------------------------------------
RAM:9A7C
RAM:9A7C             loc_9A7C:                               ; CODE XREF: sub_99C8+AF↑j
RAM:9A7C 4C 53 9B                    JMP     loc_9B53
RAM:9A7F             ; ---------------------------------------------------------------------------
RAM:9A7F
RAM:9A7F             loc_9A7F:                               ; CODE XREF: sub_99C8+6D↑j
RAM:9A7F A0 04                       LDY     #4
RAM:9A81
RAM:9A81             loc_9A81:                               ; CODE XREF: sub_99C8+C0↓j
RAM:9A81 B9 13 E9                    LDA     FONE,Y
RAM:9A84 99 C0 02                    STA     $2C0,Y
RAM:9A87 88                          DEY
RAM:9A88 10 F7                       BPL     loc_9A81
RAM:9A8A
RAM:9A8A             loc_9A8A:                               ; CODE XREF: sub_99C8+8E↑j
RAM:9A8A A0 04                       LDY     #4
RAM:9A8C
RAM:9A8C             loc_9A8C:                               ; CODE XREF: sub_99C8+CB↓j
RAM:9A8C B9 9A E0                    LDA     $E09A,Y
RAM:9A8F 99 A0 02                    STA     $2A0,Y
RAM:9A92 88                          DEY
RAM:9A93 10 F7                       BPL     loc_9A8C
RAM:9A95
RAM:9A95             loc_9A95:                               ; CODE XREF: sub_99C8+9E↑j
RAM:9A95 A0 04                       LDY     #4
RAM:9A97
RAM:9A97             loc_9A97:                               ; CODE XREF: sub_99C8+D6↓j
RAM:9A97 B9 6B F0                    LDA     $F06B,Y
RAM:9A9A 99 A5 02                    STA     $2A5,Y
RAM:9A9D 88                          DEY
RAM:9A9E 10 F7                       BPL     loc_9A97
RAM:9AA0 60                          RTS
RAM:9AA0             ; End of function sub_99C8
RAM:9AA0
RAM:9AA1
RAM:9AA1             ; =============== S U B R O U T I N E =======================================
RAM:9AA1
RAM:9AA1
RAM:9AA1             sub_9AA1:                               ; CODE XREF: sub_99C8:loc_9A2A↑p
RAM:9AA1 A0 E9                       LDY     #$E9
RAM:9AA3 A9 13                       LDA     #$13
RAM:9AA5 A2 00                       LDX     #0
RAM:9AA7 86 AB                       STX     byte_AB
RAM:9AA9 4C 29 A6                    JMP     sub_A629
RAM:9AA9             ; End of function sub_9AA1
RAM:9AA9
RAM:9AAC
RAM:9AAC             ; =============== S U B R O U T I N E =======================================
RAM:9AAC
RAM:9AAC
RAM:9AAC             sub_9AAC:                               ; CODE XREF: sub_9AB9+31↓p
RAM:9AAC                                                     ; sub_9AB9+48↓p ...
RAM:9AAC A9 D5                       LDA     #$D5
RAM:9AAC             ; End of function sub_9AAC
RAM:9AAC
RAM:9AAC             ; ---------------------------------------------------------------------------
RAM:9AAE 2C                          .BYTE $2C               ; BIT
RAM:9AAF             ; ---------------------------------------------------------------------------
RAM:9AAF
RAM:9AAF             loc_9AAF:                               ; CODE XREF: sub_9AB9+55↓p
RAM:9AAF                                                     ; sub_9AB9+81↓p
RAM:9AAF A9 E0                       LDA     #$E0
RAM:9AAF             ; ---------------------------------------------------------------------------
RAM:9AB1 2C                          .BYTE $2C ; ,           ; BIT
RAM:9AB2
RAM:9AB2             ; =============== S U B R O U T I N E =======================================
RAM:9AB2
RAM:9AB2
RAM:9AB2             sub_9AB2:                               ; CODE XREF: sub_99AD↑p
RAM:9AB2                                                     ; sub_9AB9↓p ...
RAM:9AB2 A9 A0                       LDA     #$A0
RAM:9AB4 A0 02                       LDY     #2
RAM:9AB6 4C F9 EA                    JMP     MOVFM
RAM:9AB6             ; End of function sub_9AB2
RAM:9AB6
RAM:9AB9
RAM:9AB9             ; =============== S U B R O U T I N E =======================================
RAM:9AB9
RAM:9AB9
RAM:9AB9             sub_9AB9:                               ; CODE XREF: RAM:998C↑p
RAM:9AB9                                                     ; RAM:loc_99A4↑p
RAM:9AB9 20 B2 9A                    JSR     sub_9AB2
RAM:9ABC 20 EA EF                    JSR     COS             ; SINE, COSINE AND TANGENT FUNCTIONS.
RAM:9ABF A9 B5                       LDA     #$B5
RAM:9AC1 A0 02                       LDY     #2
RAM:9AC3 20 7F E9                    JSR     FMULT
RAM:9AC6 20 6E 9B                    JSR     loc_9B6E
RAM:9AC9 20 B2 9A                    JSR     sub_9AB2
RAM:9ACC 20 F1 EF                    JSR     SIN
RAM:9ACF A9 C0                       LDA     #$C0
RAM:9AD1 A0 02                       LDY     #2
RAM:9AD3 20 7F E9                    JSR     FMULT
RAM:9AD6 A9 B5                       LDA     #$B5
RAM:9AD8 A0 02                       LDY     #2
RAM:9ADA 20 7F E9                    JSR     FMULT
RAM:9ADD 20 6B 9B                    JSR     loc_9B6B
RAM:9AE0 A9 F0                       LDA     #$F0
RAM:9AE2 A0 02                       LDY     #2
RAM:9AE4 20 7F E9                    JSR     FMULT
RAM:9AE7 20 68 9B                    JSR     loc_9B68
RAM:9AEA 20 AC 9A                    JSR     sub_9AAC
RAM:9AED A9 F5                       LDA     #$F5
RAM:9AEF A0 02                       LDY     #2
RAM:9AF1 20 7F E9                    JSR     FMULT
RAM:9AF4 A9 E5                       LDA     #$E5
RAM:9AF6 A0 02                       LDY     #2
RAM:9AF8 20 23 A6                    JSR     sub_A623
RAM:9AFB 20 D0 EE                    JSR     NEGOP
RAM:9AFE 20 68 9B                    JSR     loc_9B68
RAM:9B01 20 AC 9A                    JSR     sub_9AAC
RAM:9B04 A9 F0                       LDA     #$F0
RAM:9B06 A0 02                       LDY     #2
RAM:9B08 20 7F E9                    JSR     FMULT
RAM:9B0B 20 6E 9B                    JSR     loc_9B6E
RAM:9B0E 20 AF 9A                    JSR     loc_9AAF
RAM:9B11 A9 F5                       LDA     #$F5
RAM:9B13 A0 02                       LDY     #2
RAM:9B15 20 7F E9                    JSR     FMULT
RAM:9B18 A9 D5                       LDA     #$D5
RAM:9B1A A0 02                       LDY     #2
RAM:9B1C 20 1D A6                    JSR     sub_A61D
RAM:9B1F A9 D0                       LDA     #$D0
RAM:9B21 A0 02                       LDY     #2
RAM:9B23 20 23 A6                    JSR     sub_A623
RAM:9B26 20 6B 9B                    JSR     loc_9B6B
RAM:9B29 A9 C5                       LDA     #$C5
RAM:9B2B A0 02                       LDY     #2
RAM:9B2D 20 F9 EA                    JSR     MOVFM
RAM:9B30 A9 E5                       LDA     #$E5
RAM:9B32 A0 02                       LDY     #2
RAM:9B34 20 1D A6                    JSR     sub_A61D
RAM:9B37 20 6E 9B                    JSR     loc_9B6E
RAM:9B3A 20 AF 9A                    JSR     loc_9AAF
RAM:9B3D 20 8C F6                    JSR     AUX_CONINT      ; Call CONINT, ensure $8000 ROM switched out
RAM:9B40 20 32 99                    JSR     loc_9932
RAM:9B43 8A                          TXA
RAM:9B44 48                          PHA
RAM:9B45 20 AC 9A                    JSR     sub_9AAC
RAM:9B48 20 09 99                    JSR     sub_9909
RAM:9B4B 68                          PLA
RAM:9B4C 60                          RTS
RAM:9B4C             ; End of function sub_9AB9
RAM:9B4C
RAM:9B4D
RAM:9B4D             ; =============== S U B R O U T I N E =======================================
RAM:9B4D
RAM:9B4D
RAM:9B4D             sub_9B4D:                               ; CODE XREF: sub_99C8+26↑p
RAM:9B4D A2 F5                       LDX     #$F5
RAM:9B4D             ; End of function sub_9B4D
RAM:9B4D
RAM:9B4D             ; ---------------------------------------------------------------------------
RAM:9B4F 2C                          .BYTE $2C
RAM:9B50             ; ---------------------------------------------------------------------------
RAM:9B50
RAM:9B50             loc_9B50:                               ; CODE XREF: sub_99C8+F↑p
RAM:9B50                                                     ; sub_99C8+20↑p ...
RAM:9B50 A2 F0                       LDX     #$F0
RAM:9B50             ; ---------------------------------------------------------------------------
RAM:9B52 2C                          .BYTE $2C
RAM:9B53             ; ---------------------------------------------------------------------------
RAM:9B53
RAM:9B53             loc_9B53:                               ; CODE XREF: sub_99C8:loc_9A7C↑j
RAM:9B53 A2 A5                       LDX     #$A5
RAM:9B53             ; ---------------------------------------------------------------------------
RAM:9B55 2C                          .BYTE $2C
RAM:9B56             ; ---------------------------------------------------------------------------
RAM:9B56
RAM:9B56             loc_9B56:                               ; CODE XREF: sub_99C8+3C↑p
RAM:9B56 A2 C5                       LDX     #$C5
RAM:9B56             ; ---------------------------------------------------------------------------
RAM:9B58 2C                          .BYTE $2C
RAM:9B59             ; ---------------------------------------------------------------------------
RAM:9B59
RAM:9B59             loc_9B59:                               ; CODE XREF: sub_99C8+45↑p
RAM:9B59 A2 D0                       LDX     #$D0
RAM:9B59             ; ---------------------------------------------------------------------------
RAM:9B5B 2C                          .BYTE $2C
RAM:9B5C             ; ---------------------------------------------------------------------------
RAM:9B5C
RAM:9B5C             loc_9B5C:                               ; CODE XREF: sub_99C8:loc_9A4E↑p
RAM:9B5C A2 C0                       LDX     #$C0
RAM:9B5C             ; ---------------------------------------------------------------------------
RAM:9B5E 2C                          .BYTE $2C
RAM:9B5F             ; ---------------------------------------------------------------------------
RAM:9B5F
RAM:9B5F             loc_9B5F:                               ; CODE XREF: sub_99AD+A↑p
RAM:9B5F                                                     ; sub_99C8+96↑p
RAM:9B5F A2 A0                       LDX     #$A0
RAM:9B5F             ; ---------------------------------------------------------------------------
RAM:9B61 2C                          .BYTE $2C
RAM:9B62             ; ---------------------------------------------------------------------------
RAM:9B62
RAM:9B62             loc_9B62:                               ; CODE XREF: sub_99C8+65↑p
RAM:9B62 A2 B0                       LDX     #$B0
RAM:9B62             ; ---------------------------------------------------------------------------
RAM:9B64 2C                          .BYTE $2C
RAM:9B65             ; ---------------------------------------------------------------------------
RAM:9B65
RAM:9B65             loc_9B65:                               ; CODE XREF: sub_99C8+54↑p
RAM:9B65 A2 B5                       LDX     #$B5
RAM:9B65             ; ---------------------------------------------------------------------------
RAM:9B67 2C                          .BYTE $2C
RAM:9B68             ; ---------------------------------------------------------------------------
RAM:9B68
RAM:9B68             loc_9B68:                               ; CODE XREF: sub_9AB9+2E↑p
RAM:9B68                                                     ; sub_9AB9+45↑p
RAM:9B68 A2 E5                       LDX     #$E5
RAM:9B68             ; ---------------------------------------------------------------------------
RAM:9B6A 2C                          .BYTE $2C
RAM:9B6B             ; ---------------------------------------------------------------------------
RAM:9B6B
RAM:9B6B             loc_9B6B:                               ; CODE XREF: sub_9AB9+24↑p
RAM:9B6B                                                     ; sub_9AB9+6D↑p
RAM:9B6B A2 E0                       LDX     #$E0
RAM:9B6B             ; ---------------------------------------------------------------------------
RAM:9B6D 2C                          .BYTE $2C
RAM:9B6E             ; ---------------------------------------------------------------------------
RAM:9B6E
RAM:9B6E             loc_9B6E:                               ; CODE XREF: sub_9AB9+D↑p
RAM:9B6E                                                     ; sub_9AB9+52↑p ...
RAM:9B6E A2 D5                       LDX     #$D5
RAM:9B70 A0 02                       LDY     #2
RAM:9B72 4C 2B EB                    JMP     MOVMF
RAM:9B75
RAM:9B75             ; =============== S U B R O U T I N E =======================================
RAM:9B75
RAM:9B75
RAM:9B75             sub_9B75:                               ; CODE XREF: RAM:loc_9989↑p
RAM:9B75
RAM:9B75             ; FUNCTION CHUNK AT RAM:9660 SIZE 00000035 BYTES
RAM:9B75             ; FUNCTION CHUNK AT RAM:9696 SIZE 0000002B BYTES
RAM:9B75
RAM:9B75 A9 D0                       LDA     #$D0
RAM:9B77 A0 02                       LDY     #2
RAM:9B79 20 F9 EA                    JSR     MOVFM
RAM:9B7C 20 8C F6                    JSR     AUX_CONINT      ; Call CONINT, ensure $8000 ROM switched out
RAM:9B7F 20 32 99                    JSR     loc_9932
RAM:9B82 8A                          TXA
RAM:9B83 48                          PHA
RAM:9B84 A9 C5                       LDA     #$C5
RAM:9B86 A0 02                       LDY     #2
RAM:9B88 20 F9 EA                    JSR     MOVFM
RAM:9B8B 20 09 99                    JSR     sub_9909
RAM:9B8E 68                          PLA
RAM:9B8F
RAM:9B8F             loc_9B8F:
RAM:9B8F 4C 60 96                    JMP     loc_9660
RAM:9B8F             ; End of function sub_9B75
RAM:9B8F
RAM:9B92             ; ---------------------------------------------------------------------------
RAM:9B92
RAM:9B92             HSQUARE:                                ; DATA XREF: RAM:9C85↓t
RAM:9B92 20 72 F6                    JSR     CMP_LPAR_B8_Y_ROM_OUT ; CMP ($B8),Y for a "(", with low ROM switched out. SNERR if not equal
RAM:9B95 C9 C1                       CMP     #$C1
RAM:9B97 F0 0D                       BEQ     loc_9BA6
RAM:9B99 20 37 99                    JSR     sub_9937
RAM:9B9C 20 C1 96                    JSR     sub_96C1
RAM:9B9F
RAM:9B9F             loc_9B9F:                               ; CODE XREF: RAM:9BEC↓j
RAM:9B9F 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9BA2 C9 C1                       CMP     #$C1
RAM:9BA4 D0 53                       BNE     loc_9BF9
RAM:9BA6
RAM:9BA6             loc_9BA6:                               ; CODE XREF: RAM:9B97↑j
RAM:9BA6 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:9BA9 20 45 9C                    JSR     sub_9C45
RAM:9BAC 20 37 99                    JSR     sub_9937
RAM:9BAF 20 EF 9B                    JSR     sub_9BEF
RAM:9BB2 84 9D                       STY     byte_9D
RAM:9BB4 8A                          TXA
RAM:9BB5 A6 9D                       LDX     byte_9D
RAM:9BB7 A4 E2                       LDY     byte_E2
RAM:9BB9 20 2C 98                    JSR     sub_982C
RAM:9BBC AE A5 02                    LDX     byte_2A5
RAM:9BBF AD A4 02                    LDA     byte_2A4
RAM:9BC2 AC A3 02                    LDY     byte_2A3
RAM:9BC5 20 2C 98                    JSR     sub_982C
RAM:9BC8 AC A2 02                    LDY     byte_2A2
RAM:9BCB AE A1 02                    LDX     byte_2A1
RAM:9BCE AD A0 02                    LDA     byte_2A0
RAM:9BD1 20 60 96                    JSR     loc_9660
RAM:9BD4 AE A2 02                    LDX     byte_2A2
RAM:9BD7 AD A1 02                    LDA     byte_2A1
RAM:9BDA AC A3 02                    LDY     byte_2A3
RAM:9BDD 20 2C 98                    JSR     sub_982C
RAM:9BE0 AE A5 02                    LDX     byte_2A5
RAM:9BE3 AD A4 02                    LDA     byte_2A4
RAM:9BE6 AC A3 02                    LDY     byte_2A3
RAM:9BE9 20 2C 98                    JSR     sub_982C
RAM:9BEC 4C 9F 9B                    JMP     loc_9B9F
RAM:9BEF
RAM:9BEF             ; =============== S U B R O U T I N E =======================================
RAM:9BEF
RAM:9BEF
RAM:9BEF             sub_9BEF:                               ; CODE XREF: RAM:9BAF↑p
RAM:9BEF                                                     ; RAM:9C19↓p
RAM:9BEF 8D A3 02                    STA     byte_2A3
RAM:9BF2 8E A4 02                    STX     byte_2A4
RAM:9BF5 8C A5 02                    STY     byte_2A5
RAM:9BF8 60                          RTS
RAM:9BF8             ; End of function sub_9BEF
RAM:9BF8
RAM:9BF9             ; ---------------------------------------------------------------------------
RAM:9BF9
RAM:9BF9             loc_9BF9:                               ; CODE XREF: RAM:9BA4↑j
RAM:9BF9                                                     ; RAM:9C0E↓j
RAM:9BF9 4C 6F F6                    JMP     CMP_RPAR_B8_Y_ROM_OUT ; CMP ($B8),Y for a ")", with low ROM switched out. SNERR if not equal
RAM:9BFC             ; ---------------------------------------------------------------------------
RAM:9BFC
RAM:9BFC             SSQUARE:                                ; DATA XREF: RAM:9C83↓t
RAM:9BFC 20 72 F6                    JSR     CMP_LPAR_B8_Y_ROM_OUT ; CMP ($B8),Y for a "(", with low ROM switched out. SNERR if not equal
RAM:9BFF C9 C1                       CMP     #$C1
RAM:9C01 F0 0D                       BEQ     loc_9C10
RAM:9C03 20 37 99                    JSR     sub_9937
RAM:9C06 20 C1 96                    JSR     sub_96C1
RAM:9C09
RAM:9C09             loc_9C09:                               ; CODE XREF: RAM:9C35↓j
RAM:9C09 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9C0C C9 C1                       CMP     #$C1
RAM:9C0E D0 E9                       BNE     loc_9BF9
RAM:9C10
RAM:9C10             loc_9C10:                               ; CODE XREF: RAM:9C01↑j
RAM:9C10 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:9C13 20 45 9C                    JSR     sub_9C45
RAM:9C16 20 37 99                    JSR     sub_9937
RAM:9C19 20 EF 9B                    JSR     sub_9BEF
RAM:9C1C 84 9D                       STY     byte_9D
RAM:9C1E 8A                          TXA
RAM:9C1F A6 9D                       LDX     byte_9D
RAM:9C21 A4 E2                       LDY     byte_E2
RAM:9C23 20 2C 98                    JSR     sub_982C
RAM:9C26 4C 2F 9C                    JMP     loc_9C2F
RAM:9C29             ; ---------------------------------------------------------------------------
RAM:9C29
RAM:9C29             loc_9C29:                               ; CODE XREF: RAM:9C3C↓j
RAM:9C29                                                     ; RAM:9C42↓j
RAM:9C29 20 55 9C                    JSR     sub_9C55
RAM:9C2C 20 2C 98                    JSR     sub_982C
RAM:9C2F
RAM:9C2F             loc_9C2F:                               ; CODE XREF: RAM:9C26↑j
RAM:9C2F AD A0 02                    LDA     byte_2A0
RAM:9C32 CD A3 02                    CMP     byte_2A3
RAM:9C35 F0 D2                       BEQ     loc_9C09
RAM:9C37 90 06                       BCC     loc_9C3F
RAM:9C39 CE A0 02                    DEC     byte_2A0
RAM:9C3C 4C 29 9C                    JMP     loc_9C29
RAM:9C3F             ; ---------------------------------------------------------------------------
RAM:9C3F
RAM:9C3F             loc_9C3F:                               ; CODE XREF: RAM:9C37↑j
RAM:9C3F EE A0 02                    INC     byte_2A0
RAM:9C42 4C 29 9C                    JMP     loc_9C29
RAM:9C45
RAM:9C45             ; =============== S U B R O U T I N E =======================================
RAM:9C45
RAM:9C45
RAM:9C45             sub_9C45:                               ; CODE XREF: RAM:9BA9↑p
RAM:9C45                                                     ; RAM:9C13↑p
RAM:9C45 A5 E2                       LDA     byte_E2
RAM:9C47 8D A0 02                    STA     byte_2A0
RAM:9C4A A6 E0                       LDX     byte_E0
RAM:9C4C 8E A1 02                    STX     byte_2A1
RAM:9C4F A4 E1                       LDY     byte_E1
RAM:9C51 8C A2 02                    STY     byte_2A2
RAM:9C54 60                          RTS
RAM:9C54             ; End of function sub_9C45
RAM:9C54
RAM:9C55
RAM:9C55             ; =============== S U B R O U T I N E =======================================
RAM:9C55
RAM:9C55
RAM:9C55             sub_9C55:                               ; CODE XREF: RAM:loc_9C29↑p
RAM:9C55 AD A0 02                    LDA     byte_2A0
RAM:9C58 AC A2 02                    LDY     byte_2A2
RAM:9C5B AE A1 02                    LDX     byte_2A1
RAM:9C5E 20 C1 96                    JSR     sub_96C1
RAM:9C61 AC A0 02                    LDY     byte_2A0
RAM:9C64 AE A5 02                    LDX     byte_2A5
RAM:9C67 AD A4 02                    LDA     byte_2A4
RAM:9C6A 60                          RTS
RAM:9C6A             ; End of function sub_9C55
RAM:9C6A
RAM:9C6B
RAM:9C6B             ; =============== S U B R O U T I N E =======================================
RAM:9C6B
RAM:9C6B
RAM:9C6B             sub_9C6B:                               ; CODE XREF: do_DRAW+26↓p
RAM:9C6B 0E B8 03                    ASL     byte_3B8
RAM:9C6E AE B8 03                    LDX     byte_3B8
RAM:9C71 BD 80 9C                    LDA     DRAW_OPT_VECTORS+1,X
RAM:9C74 48                          PHA
RAM:9C75 BD 7F 9C                    LDA     DRAW_OPT_VECTORS,X
RAM:9C78 48                          PHA
RAM:9C79 60                          RTS
RAM:9C79             ; End of function sub_9C6B
RAM:9C79
RAM:9C79             ; ---------------------------------------------------------------------------
RAM:9C7A 88                          .BYTE $88
RAM:9C7B FF                          .BYTE $FF
RAM:9C7C FF                          .BYTE $FF
RAM:9C7D FF                          .BYTE $FF
RAM:9C7E 69                          .BYTE $69 ; i
RAM:9C7F 7F 99       DRAW_OPT_VECTORS:.WORD SCIRCLE-1
RAM:9C81 9A 99                       .WORD HCIRCLE-1
RAM:9C83 FB 9B                       .WORD SSQUARE-1
RAM:9C85 91 9B                       .WORD HSQUARE-1
RAM:9C87 E1 94                       .WORD $94E1
RAM:9C89
RAM:9C89             ; =============== S U B R O U T I N E =======================================
RAM:9C89
RAM:9C89
RAM:9C89             sub_9C89:                               ; CODE XREF: sub_99C8+51↑p
RAM:9C89                                                     ; sub_99C8+75↑p
RAM:9C89
RAM:9C89             ; FUNCTION CHUNK AT ROM:F3FF SIZE 00000008 BYTES
RAM:9C89
RAM:9C89 20 82 EB                    JSR     SIGN
RAM:9C8C C9 01                       CMP     #1
RAM:9C8E F0 03                       BEQ     locret_9C93
RAM:9C90 4C FF F3                    JMP     loc_F3FF
RAM:9C93             ; ---------------------------------------------------------------------------
RAM:9C93
RAM:9C93             locret_9C93:                            ; CODE XREF: sub_9C89+5↑j
RAM:9C93 60                          RTS
RAM:9C93             ; End of function sub_9C89
RAM:9C93
RAM:9C94
RAM:9C94             ; =============== S U B R O U T I N E =======================================
RAM:9C94
RAM:9C94             ; paint (x,y), colour, boundary
RAM:9C94
RAM:9C94             PAINT:                                  ; CODE XREF: ROM:F650↓p
RAM:9C94
RAM:9C94             ; FUNCTION CHUNK AT ROM:F3FF SIZE 00000008 BYTES
RAM:9C94
RAM:9C94 A5 E6                       LDA     byte_E6
RAM:9C96 4A                          LSR     A
RAM:9C97 B0 03                       BCS     loc_9C9C
RAM:9C99 4C 86 F6                    JMP     AUX_SNERR       ; Call Syntax Error, ensure $8000 ROM switched out
RAM:9C9C             ; ---------------------------------------------------------------------------
RAM:9C9C
RAM:9C9C             loc_9C9C:                               ; CODE XREF: PAINT+3↑j
RAM:9C9C 20 72 F6                    JSR     CMP_LPAR_B8_Y_ROM_OUT ; CMP ($B8),Y for a "(", with low ROM switched out. SNERR if not equal
RAM:9C9F 20 37 99                    JSR     sub_9937
RAM:9CA2 20 60 96                    JSR     loc_9660
RAM:9CA5 20 6F F6                    JSR     CMP_RPAR_B8_Y_ROM_OUT ; CMP ($B8),Y for a ")", with low ROM switched out. SNERR if not equal
RAM:9CA8 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:9CAB A5 E4                       LDA     byte_E4
RAM:9CAD 48                          PHA
RAM:9CAE A5 1C                       LDA     byte_1C
RAM:9CB0 48                          PHA
RAM:9CB1 20 EF 98                    JSR     sub_98EF
RAM:9CB4 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:9CB7 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:9CBA E0 08                       CPX     #8
RAM:9CBC 90 03                       BCC     loc_9CC1
RAM:9CBE 4C FF F3                    JMP     loc_F3FF
RAM:9CC1             ; ---------------------------------------------------------------------------
RAM:9CC1
RAM:9CC1             loc_9CC1:                               ; CODE XREF: PAINT+28↑j
RAM:9CC1 8A                          TXA
RAM:9CC2 69 08                       ADC     #8
RAM:9CC4 AA                          TAX
RAM:9CC5 BD DF 98                    LDA     byte_98DF,X
RAM:9CC8 29 07                       AND     #7
RAM:9CCA 85 9E                       STA     byte_9E
RAM:9CCC BA                          TSX
RAM:9CCD 86 9F                       STX     byte_9F
RAM:9CCF A5 E2                       LDA     byte_E2
RAM:9CD1 A4 E1                       LDY     byte_E1
RAM:9CD3 A6 E0                       LDX     byte_E0
RAM:9CD5 20 60 96                    JSR     loc_9660
RAM:9CD8 20 18 9E                    JSR     sub_9E18
RAM:9CDB D0 03                       BNE     loc_9CE0
RAM:9CDD 4C DD 9D                    JMP     loc_9DDD
RAM:9CE0             ; ---------------------------------------------------------------------------
RAM:9CE0
RAM:9CE0             loc_9CE0:                               ; CODE XREF: PAINT+47↑j
RAM:9CE0                                                     ; PAINT+54↓j
RAM:9CE0 20 18 9E                    JSR     sub_9E18
RAM:9CE3 F0 05                       BEQ     loc_9CEA
RAM:9CE5 20 E4 9D                    JSR     sub_9DE4
RAM:9CE8 D0 F6                       BNE     loc_9CE0
RAM:9CEA
RAM:9CEA             loc_9CEA:                               ; CODE XREF: PAINT+4F↑j
RAM:9CEA 20 F9 9D                    JSR     sub_9DF9
RAM:9CED 20 34 9E                    JSR     sub_9E34
RAM:9CF0 A5 E1                       LDA     byte_E1
RAM:9CF2 85 A6                       STA     byte_A6
RAM:9CF4 A5 E0                       LDA     byte_E0
RAM:9CF6 85 A5                       STA     byte_A5
RAM:9CF8 A5 E2                       LDA     byte_E2
RAM:9CFA 85 A7                       STA     byte_A7
RAM:9CFC
RAM:9CFC             loc_9CFC:                               ; CODE XREF: PAINT+146↓j
RAM:9CFC 20 B2 9E                    JSR     sub_9EB2
RAM:9CFF F0 05                       BEQ     loc_9D06
RAM:9D01 20 22 9E                    JSR     sub_9E22
RAM:9D04 D0 06                       BNE     loc_9D0C
RAM:9D06
RAM:9D06             loc_9D06:                               ; CODE XREF: PAINT+6B↑j
RAM:9D06 A9 FF                       LDA     #$FF
RAM:9D08 85 A0                       STA     byte_A0
RAM:9D0A D0 1D                       BNE     loc_9D29
RAM:9D0C
RAM:9D0C             loc_9D0C:                               ; CODE XREF: PAINT+70↑j
RAM:9D0C A9 00                       LDA     #0
RAM:9D0E 85 A0                       STA     byte_A0
RAM:9D10
RAM:9D10             loc_9D10:                               ; CODE XREF: PAINT+84↓j
RAM:9D10 20 18 9E                    JSR     sub_9E18
RAM:9D13 F0 05                       BEQ     loc_9D1A
RAM:9D15 20 E4 9D                    JSR     sub_9DE4
RAM:9D18 D0 F6                       BNE     loc_9D10
RAM:9D1A
RAM:9D1A             loc_9D1A:                               ; CODE XREF: PAINT+7F↑j
RAM:9D1A 20 F9 9D                    JSR     sub_9DF9
RAM:9D1D 20 34 9E                    JSR     sub_9E34
RAM:9D20 A5 E2                       LDA     byte_E2
RAM:9D22 48                          PHA
RAM:9D23 A5 E1                       LDA     byte_E1
RAM:9D25 48                          PHA
RAM:9D26 A5 E0                       LDA     byte_E0
RAM:9D28 48                          PHA
RAM:9D29
RAM:9D29             loc_9D29:                               ; CODE XREF: PAINT+76↑j
RAM:9D29 A5 A7                       LDA     byte_A7
RAM:9D2B A6 A5                       LDX     byte_A5
RAM:9D2D A4 A6                       LDY     byte_A6
RAM:9D2F 20 60 96                    JSR     loc_9660
RAM:9D32 20 EA 9E                    JSR     sub_9EEA
RAM:9D35 F0 05                       BEQ     loc_9D3C
RAM:9D37 20 22 9E                    JSR     sub_9E22
RAM:9D3A D0 06                       BNE     loc_9D42
RAM:9D3C
RAM:9D3C             loc_9D3C:                               ; CODE XREF: PAINT+A1↑j
RAM:9D3C A9 FF                       LDA     #$FF
RAM:9D3E 85 A1                       STA     byte_A1
RAM:9D40 D0 1D                       BNE     loc_9D5F
RAM:9D42
RAM:9D42             loc_9D42:                               ; CODE XREF: PAINT+A6↑j
RAM:9D42 A9 00                       LDA     #0
RAM:9D44 85 A1                       STA     byte_A1
RAM:9D46
RAM:9D46             loc_9D46:                               ; CODE XREF: PAINT+BA↓j
RAM:9D46 20 18 9E                    JSR     sub_9E18
RAM:9D49 F0 05                       BEQ     loc_9D50
RAM:9D4B 20 E4 9D                    JSR     sub_9DE4
RAM:9D4E D0 F6                       BNE     loc_9D46
RAM:9D50
RAM:9D50             loc_9D50:                               ; CODE XREF: PAINT+B5↑j
RAM:9D50 20 F9 9D                    JSR     sub_9DF9
RAM:9D53 20 34 9E                    JSR     sub_9E34
RAM:9D56 A5 E2                       LDA     byte_E2
RAM:9D58 48                          PHA
RAM:9D59 A5 E1                       LDA     byte_E1
RAM:9D5B 48                          PHA
RAM:9D5C A5 E0                       LDA     byte_E0
RAM:9D5E 48                          PHA
RAM:9D5F
RAM:9D5F             loc_9D5F:                               ; CODE XREF: PAINT+AC↑j
RAM:9D5F A5 A7                       LDA     byte_A7
RAM:9D61 A6 A5                       LDX     byte_A5
RAM:9D63 A4 A6                       LDY     byte_A6
RAM:9D65 20 60 96                    JSR     loc_9660
RAM:9D68
RAM:9D68             loc_9D68:                               ; CODE XREF: PAINT+12D↓j
RAM:9D68 20 C4 96                    JSR     loc_96C4
RAM:9D6B 20 B2 9E                    JSR     sub_9EB2
RAM:9D6E F0 05                       BEQ     loc_9D75
RAM:9D70 20 22 9E                    JSR     sub_9E22
RAM:9D73 D0 06                       BNE     loc_9D7B
RAM:9D75
RAM:9D75             loc_9D75:                               ; CODE XREF: PAINT+DA↑j
RAM:9D75 A9 FF                       LDA     #$FF
RAM:9D77 85 A0                       STA     byte_A0
RAM:9D79 D0 14                       BNE     loc_9D8F
RAM:9D7B
RAM:9D7B             loc_9D7B:                               ; CODE XREF: PAINT+DF↑j
RAM:9D7B A5 A0                       LDA     byte_A0
RAM:9D7D F0 10                       BEQ     loc_9D8F
RAM:9D7F A9 00                       LDA     #0
RAM:9D81 85 A0                       STA     byte_A0
RAM:9D83 20 34 9E                    JSR     sub_9E34
RAM:9D86 A5 E2                       LDA     byte_E2
RAM:9D88 48                          PHA
RAM:9D89 A5 E1                       LDA     byte_E1
RAM:9D8B 48                          PHA
RAM:9D8C A5 E0                       LDA     byte_E0
RAM:9D8E 48                          PHA
RAM:9D8F
RAM:9D8F             loc_9D8F:                               ; CODE XREF: PAINT+E5↑j
RAM:9D8F                                                     ; PAINT+E9↑j
RAM:9D8F 20 EA 9E                    JSR     sub_9EEA
RAM:9D92 20 EA 9E                    JSR     sub_9EEA
RAM:9D95 F0 05                       BEQ     loc_9D9C
RAM:9D97 20 22 9E                    JSR     sub_9E22
RAM:9D9A D0 06                       BNE     loc_9DA2
RAM:9D9C
RAM:9D9C             loc_9D9C:                               ; CODE XREF: PAINT+101↑j
RAM:9D9C A9 FF                       LDA     #$FF
RAM:9D9E 85 A1                       STA     byte_A1
RAM:9DA0 D0 14                       BNE     loc_9DB6
RAM:9DA2
RAM:9DA2             loc_9DA2:                               ; CODE XREF: PAINT+106↑j
RAM:9DA2 A5 A1                       LDA     byte_A1
RAM:9DA4 F0 10                       BEQ     loc_9DB6
RAM:9DA6 A9 00                       LDA     #0
RAM:9DA8 85 A1                       STA     byte_A1
RAM:9DAA 20 34 9E                    JSR     sub_9E34
RAM:9DAD A5 E2                       LDA     byte_E2
RAM:9DAF 48                          PHA
RAM:9DB0 A5 E1                       LDA     byte_E1
RAM:9DB2 48                          PHA
RAM:9DB3 A5 E0                       LDA     byte_E0
RAM:9DB5 48                          PHA
RAM:9DB6
RAM:9DB6             loc_9DB6:                               ; CODE XREF: PAINT+10C↑j
RAM:9DB6                                                     ; PAINT+110↑j
RAM:9DB6 20 B2 9E                    JSR     sub_9EB2
RAM:9DB9 20 F9 9D                    JSR     sub_9DF9
RAM:9DBC F0 05                       BEQ     loc_9DC3
RAM:9DBE 20 18 9E                    JSR     sub_9E18
RAM:9DC1 D0 A5                       BNE     loc_9D68
RAM:9DC3
RAM:9DC3             loc_9DC3:                               ; CODE XREF: PAINT+128↑j
RAM:9DC3 BA                          TSX
RAM:9DC4 E4 9F                       CPX     byte_9F
RAM:9DC6 F0 15                       BEQ     loc_9DDD
RAM:9DC8 68                          PLA
RAM:9DC9 85 A5                       STA     byte_A5
RAM:9DCB 68                          PLA
RAM:9DCC 85 A6                       STA     byte_A6
RAM:9DCE 68                          PLA
RAM:9DCF 85 A7                       STA     byte_A7
RAM:9DD1 A5 A7                       LDA     byte_A7
RAM:9DD3 A6 A5                       LDX     byte_A5
RAM:9DD5 A4 A6                       LDY     byte_A6
RAM:9DD7 20 60 96                    JSR     loc_9660
RAM:9DDA 4C FC 9C                    JMP     loc_9CFC
RAM:9DDD             ; ---------------------------------------------------------------------------
RAM:9DDD
RAM:9DDD             loc_9DDD:                               ; CODE XREF: PAINT+49↑j
RAM:9DDD                                                     ; PAINT+132↑j
RAM:9DDD 68                          PLA
RAM:9DDE 85 1C                       STA     byte_1C
RAM:9DE0 68                          PLA
RAM:9DE1 85 E4                       STA     byte_E4
RAM:9DE3 60                          RTS
RAM:9DE3             ; End of function PAINT
RAM:9DE3
RAM:9DE4
RAM:9DE4             ; =============== S U B R O U T I N E =======================================
RAM:9DE4
RAM:9DE4
RAM:9DE4             sub_9DE4:                               ; CODE XREF: PAINT+51↑p
RAM:9DE4                                                     ; PAINT+81↑p ...
RAM:9DE4 A5 30                       LDA     byte_30
RAM:9DE6 0A                          ASL     A
RAM:9DE7 49 80                       EOR     #$80
RAM:9DE9 30 15                       BMI     loc_9E00
RAM:9DEB A9 81                       LDA     #$81
RAM:9DED C8                          INY
RAM:9DEE C0 28                       CPY     #$28 ; '('
RAM:9DF0 90 02                       BCC     loc_9DF4
RAM:9DF2 A0 00                       LDY     #0
RAM:9DF4
RAM:9DF4             loc_9DF4:                               ; CODE XREF: sub_9DE4+C↑j
RAM:9DF4 85 30                       STA     byte_30
RAM:9DF6 84 E5                       STY     byte_E5
RAM:9DF8 60                          RTS
RAM:9DF8             ; End of function sub_9DE4
RAM:9DF8
RAM:9DF9
RAM:9DF9             ; =============== S U B R O U T I N E =======================================
RAM:9DF9
RAM:9DF9
RAM:9DF9             sub_9DF9:                               ; CODE XREF: PAINT:loc_9CEA↑p
RAM:9DF9                                                     ; PAINT:loc_9D1A↑p ...
RAM:9DF9 A5 30                       LDA     byte_30
RAM:9DFB 4A                          LSR     A
RAM:9DFC B0 05                       BCS     loc_9E03
RAM:9DFE 49 C0                       EOR     #$C0
RAM:9E00
RAM:9E00             loc_9E00:                               ; CODE XREF: sub_9DE4+5↑j
RAM:9E00 85 30                       STA     byte_30
RAM:9E02 60                          RTS
RAM:9E03             ; ---------------------------------------------------------------------------
RAM:9E03
RAM:9E03             loc_9E03:                               ; CODE XREF: sub_9DF9+3↑j
RAM:9E03 88                          DEY
RAM:9E04 10 0B                       BPL     loc_9E11
RAM:9E06 A0 27                       LDY     #$27 ; '''
RAM:9E08 A9 C0                       LDA     #$C0
RAM:9E0A 85 30                       STA     byte_30
RAM:9E0C 84 E5                       STY     byte_E5
RAM:9E0E A9 00                       LDA     #0
RAM:9E10 60                          RTS
RAM:9E11             ; ---------------------------------------------------------------------------
RAM:9E11
RAM:9E11             loc_9E11:                               ; CODE XREF: sub_9DF9+B↑j
RAM:9E11 A9 C0                       LDA     #$C0
RAM:9E13 85 30                       STA     byte_30
RAM:9E15 84 E5                       STY     byte_E5
RAM:9E17 60                          RTS
RAM:9E17             ; End of function sub_9DF9
RAM:9E17
RAM:9E18
RAM:9E18             ; =============== S U B R O U T I N E =======================================
RAM:9E18
RAM:9E18
RAM:9E18             sub_9E18:                               ; CODE XREF: PAINT+44↑p
RAM:9E18                                                     ; PAINT:loc_9CE0↑p ...
RAM:9E18 20 4C 9E                    JSR     sub_9E4C
RAM:9E1B A5 9E                       LDA     byte_9E
RAM:9E1D 45 A8                       EOR     byte_A8
RAM:9E1F 29 07                       AND     #7
RAM:9E21 60                          RTS
RAM:9E21             ; End of function sub_9E18
RAM:9E21
RAM:9E22
RAM:9E22             ; =============== S U B R O U T I N E =======================================
RAM:9E22
RAM:9E22
RAM:9E22             sub_9E22:                               ; CODE XREF: PAINT+6D↑p
RAM:9E22                                                     ; PAINT+A3↑p ...
RAM:9E22 20 4C 9E                    JSR     sub_9E4C
RAM:9E25 A5 A8                       LDA     byte_A8
RAM:9E27 45 1C                       EOR     byte_1C
RAM:9E29 29 07                       AND     #7
RAM:9E2B F0 06                       BEQ     locret_9E33
RAM:9E2D A5 A8                       LDA     byte_A8
RAM:9E2F 45 9E                       EOR     byte_9E
RAM:9E31 29 07                       AND     #7
RAM:9E33
RAM:9E33             locret_9E33:                            ; CODE XREF: sub_9E22+9↑j
RAM:9E33 60                          RTS
RAM:9E33             ; End of function sub_9E22
RAM:9E33
RAM:9E34
RAM:9E34             ; =============== S U B R O U T I N E =======================================
RAM:9E34
RAM:9E34
RAM:9E34             sub_9E34:                               ; CODE XREF: PAINT+59↑p
RAM:9E34                                                     ; PAINT+89↑p ...
RAM:9E34 48                          PHA
RAM:9E35 98                          TYA
RAM:9E36 48                          PHA
RAM:9E37 8A                          TXA
RAM:9E38 48                          PHA
RAM:9E39 BA                          TSX
RAM:9E3A E0 FD                       CPX     #$FD
RAM:9E3C B0 09                       BCS     loc_9E47
RAM:9E3E 20 30 94                    JSR     sub_9430
RAM:9E41 68                          PLA
RAM:9E42 AA                          TAX
RAM:9E43 68                          PLA
RAM:9E44 A8                          TAY
RAM:9E45 68                          PLA
RAM:9E46 60                          RTS
RAM:9E47             ; ---------------------------------------------------------------------------
RAM:9E47
RAM:9E47             loc_9E47:                               ; CODE XREF: sub_9E34+8↑j
RAM:9E47 A2 C7                       LDX     #$C7
RAM:9E49 4C 01 F4                    JMP     loc_F401
RAM:9E49             ; End of function sub_9E34
RAM:9E49
RAM:9E4C
RAM:9E4C             ; =============== S U B R O U T I N E =======================================
RAM:9E4C
RAM:9E4C
RAM:9E4C             sub_9E4C:                               ; CODE XREF: sub_9E18↑p
RAM:9E4C                                                     ; sub_9E22↑p
RAM:9E4C A5 E6                       LDA     byte_E6
RAM:9E4E 29 20                       AND     #$20 ; ' '
RAM:9E50 F0 22                       BEQ     loc_9E74
RAM:9E52 A9 01                       LDA     #1
RAM:9E54 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:9E57 20 9E 9E                    JSR     sub_9E9E
RAM:9E5A A5 27                       LDA     FKEYPH
RAM:9E5C 49 20                       EOR     #$20 ; ' '
RAM:9E5E 85 27                       STA     FKEYPH
RAM:9E60 20 9E 9E                    JSR     sub_9E9E
RAM:9E63 A5 27                       LDA     FKEYPH
RAM:9E65 49 20                       EOR     #$20 ; ' '
RAM:9E67 85 27                       STA     FKEYPH
RAM:9E69 A9 02                       LDA     #2
RAM:9E6B 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:9E6E 20 9E 9E                    JSR     sub_9E9E
RAM:9E71 4C 9B 9E                    JMP     loc_9E9B
RAM:9E74             ; ---------------------------------------------------------------------------
RAM:9E74
RAM:9E74             loc_9E74:                               ; CODE XREF: sub_9E4C+4↑j
RAM:9E74 A9 02                       LDA     #2
RAM:9E76 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:9E79 A5 27                       LDA     FKEYPH
RAM:9E7B 48                          PHA
RAM:9E7C 49 20                       EOR     #$20 ; ' '
RAM:9E7E 85 27                       STA     FKEYPH
RAM:9E80 20 9E 9E                    JSR     sub_9E9E
RAM:9E83 A9 03                       LDA     #3
RAM:9E85 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
RAM:9E88 68                          PLA
RAM:9E89 48                          PHA
RAM:9E8A 85 27                       STA     FKEYPH
RAM:9E8C 20 9E 9E                    JSR     sub_9E9E
RAM:9E8F A5 27                       LDA     FKEYPH
RAM:9E91 49 20                       EOR     #$20 ; ' '
RAM:9E93 85 27                       STA     FKEYPH
RAM:9E95 20 9E 9E                    JSR     sub_9E9E
RAM:9E98 68                          PLA
RAM:9E99 85 27                       STA     FKEYPH
RAM:9E9B
RAM:9E9B             loc_9E9B:                               ; CODE XREF: sub_9E4C+25↑j
RAM:9E9B 4C 03 F8                    JMP     j_FRAMOU
RAM:9E9B             ; End of function sub_9E4C
RAM:9E9B
RAM:9E9E
RAM:9E9E             ; =============== S U B R O U T I N E =======================================
RAM:9E9E
RAM:9E9E
RAM:9E9E             sub_9E9E:                               ; CODE XREF: sub_9E4C+B↑p
RAM:9E9E                                                     ; sub_9E4C+14↑p ...
RAM:9E9E A5 30                       LDA     byte_30
RAM:9EA0 29 7F                       AND     #$7F
RAM:9EA2 31 26                       AND     ($26),Y
RAM:9EA4 F0 02                       BEQ     loc_9EA7+1
RAM:9EA6 38                          SEC
RAM:9EA7
RAM:9EA7             loc_9EA7:                               ; CODE XREF: sub_9E9E+6↑j
RAM:9EA7 90 18                       BCC     loc_9EC1
RAM:9EA9 26 A8                       ROL     byte_A8
RAM:9EAB A5 A8                       LDA     byte_A8
RAM:9EAD 29 07                       AND     #7
RAM:9EAF 85 A8                       STA     byte_A8
RAM:9EB1 60                          RTS
RAM:9EB1             ; End of function sub_9E9E
RAM:9EB1
RAM:9EB2
RAM:9EB2             ; =============== S U B R O U T I N E =======================================
RAM:9EB2
RAM:9EB2
RAM:9EB2             sub_9EB2:                               ; CODE XREF: PAINT:loc_9CFC↑p
RAM:9EB2                                                     ; PAINT+D7↑p ...
RAM:9EB2
RAM:9EB2             ; FUNCTION CHUNK AT RAM:9EDF SIZE 0000000B BYTES
RAM:9EB2
RAM:9EB2 18                          CLC
RAM:9EB3 A5 27                       LDA     FKEYPH
RAM:9EB5 2C 7F 99                    BIT     byte_997F
RAM:9EB8 D0 20                       BNE     loc_9EDA
RAM:9EBA 06 26                       ASL     FKEYPL
RAM:9EBC B0 18                       BCS     loc_9ED6
RAM:9EBE 2C 6F 96                    BIT     loc_966E+1
RAM:9EC1
RAM:9EC1             loc_9EC1:                               ; CODE XREF: sub_9E9E:loc_9EA7↑j
RAM:9EC1 F0 05                       BEQ     loc_9EC8
RAM:9EC3 69 1F                       ADC     #$1F
RAM:9EC5 38                          SEC
RAM:9EC6 B0 10                       BCS     sub_9ED8
RAM:9EC8
RAM:9EC8             loc_9EC8:                               ; CODE XREF: sub_9EB2:loc_9EC1↑j
RAM:9EC8 69 23                       ADC     #$23 ; '#'
RAM:9ECA 48                          PHA
RAM:9ECB A5 26                       LDA     FKEYPL
RAM:9ECD 69 B0                       ADC     #$B0
RAM:9ECF 90 0E                       BCC     loc_9EDF
RAM:9ED1 85 26                       STA     FKEYPL
RAM:9ED3 68                          PLA
RAM:9ED4 B0 02                       BCS     sub_9ED8
RAM:9ED6
RAM:9ED6             loc_9ED6:                               ; CODE XREF: sub_9EB2+A↑j
RAM:9ED6 69 1F                       ADC     #$1F
RAM:9ED6             ; End of function sub_9EB2
RAM:9ED6
RAM:9ED8
RAM:9ED8             ; =============== S U B R O U T I N E =======================================
RAM:9ED8
RAM:9ED8
RAM:9ED8             sub_9ED8:                               ; CODE XREF: sub_9EB2+14↑j
RAM:9ED8                                                     ; sub_9EB2+22↑j ...
RAM:9ED8 66 26                       ROR     FKEYPL
RAM:9EDA
RAM:9EDA             loc_9EDA:                               ; CODE XREF: sub_9EB2+6↑j
RAM:9EDA 69 FC                       ADC     #$FC
RAM:9EDC
RAM:9EDC             loc_9EDC:                               ; CODE XREF: sub_9EEA+8↓j
RAM:9EDC 85 27                       STA     FKEYPH
RAM:9EDE 60                          RTS
RAM:9EDE             ; End of function sub_9ED8
RAM:9EDE
RAM:9EDF             ; ---------------------------------------------------------------------------
RAM:9EDF             ; START OF FUNCTION CHUNK FOR sub_9EB2
RAM:9EDF
RAM:9EDF             loc_9EDF:                               ; CODE XREF: sub_9EB2+1D↑j
RAM:9EDF 69 F0                       ADC     #$F0
RAM:9EE1 85 26                       STA     FKEYPL
RAM:9EE3 68                          PLA
RAM:9EE4 20 D8 9E                    JSR     sub_9ED8
RAM:9EE7 A9 00                       LDA     #0
RAM:9EE9 60                          RTS
RAM:9EE9             ; END OF FUNCTION CHUNK FOR sub_9EB2
RAM:9EEA
RAM:9EEA             ; =============== S U B R O U T I N E =======================================
RAM:9EEA
RAM:9EEA
RAM:9EEA             sub_9EEA:                               ; CODE XREF: PAINT+9E↑p
RAM:9EEA                                                     ; PAINT:loc_9D8F↑p ...
RAM:9EEA
RAM:9EEA             ; FUNCTION CHUNK AT RAM:9F1B SIZE 00000009 BYTES
RAM:9EEA
RAM:9EEA 18                          CLC
RAM:9EEB A5 27                       LDA     FKEYPH
RAM:9EED 69 04                       ADC     #4
RAM:9EEF 2C 7F 99                    BIT     byte_997F
RAM:9EF2 D0 E8                       BNE     loc_9EDC
RAM:9EF4 06 26                       ASL     FKEYPL
RAM:9EF6 90 1A                       BCC     loc_9F12
RAM:9EF8 69 E0                       ADC     #$E0
RAM:9EFA 18                          CLC
RAM:9EFB 2C 10 98                    BIT     loc_980F+1
RAM:9EFE F0 14                       BEQ     loc_9F14
RAM:9F00 48                          PHA
RAM:9F01 A5 26                       LDA     FKEYPL
RAM:9F03 69 50                       ADC     #$50 ; 'P'
RAM:9F05 49 F0                       EOR     #$F0
RAM:9F07 F0 12                       BEQ     loc_9F1B
RAM:9F09 49 F0                       EOR     #$F0
RAM:9F0B 85 26                       STA     FKEYPL
RAM:9F0D 68                          PLA
RAM:9F0D             ; End of function sub_9EEA
RAM:9F0D
RAM:9F0E
RAM:9F0E             ; =============== S U B R O U T I N E =======================================
RAM:9F0E
RAM:9F0E
RAM:9F0E             sub_9F0E:                               ; CODE XREF: sub_9EEA+34↓p
RAM:9F0E 29 F0                       AND     #$F0
RAM:9F10 90 02                       BCC     loc_9F14
RAM:9F12
RAM:9F12             loc_9F12:                               ; CODE XREF: sub_9EEA+C↑j
RAM:9F12 69 E0                       ADC     #$E0
RAM:9F14
RAM:9F14             loc_9F14:                               ; CODE XREF: sub_9EEA+14↑j
RAM:9F14                                                     ; sub_9F0E+2↑j
RAM:9F14 66 26                       ROR     FKEYPL
RAM:9F16 85 27                       STA     FKEYPH
RAM:9F18 A9 FF                       LDA     #$FF
RAM:9F1A 60                          RTS
RAM:9F1A             ; End of function sub_9F0E
RAM:9F1A
RAM:9F1B             ; ---------------------------------------------------------------------------
RAM:9F1B             ; START OF FUNCTION CHUNK FOR sub_9EEA
RAM:9F1B
RAM:9F1B             loc_9F1B:                               ; CODE XREF: sub_9EEA+1D↑j
RAM:9F1B 85 26                       STA     FKEYPL
RAM:9F1D 68                          PLA
RAM:9F1E 20 0E 9F                    JSR     sub_9F0E
RAM:9F21 A9 00                       LDA     #0
RAM:9F23 60                          RTS
RAM:9F23             ; END OF FUNCTION CHUNK FOR sub_9EEA
RAM:9F24             ; ---------------------------------------------------------------------------
RAM:9F24
RAM:9F24             EXT_PRINTC:                             ; CODE XREF: ROM:DADA↓j
RAM:9F24 D0 07                       BNE     loc_9F2D
RAM:9F26
RAM:9F26             loc_9F26:                               ; CODE XREF: RAM:9F99↓j
RAM:9F26                                                     ; RAM:9FEA↓j ...
RAM:9F26 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
RAM:9F29             ; ---------------------------------------------------------------------------
RAM:9F29
RAM:9F29             loc_9F29:                               ; CODE XREF: RAM:9F53↓j
RAM:9F29 68                          PLA
RAM:9F2A
RAM:9F2A             loc_9F2A:                               ; CODE XREF: RAM:9F2F↓j
RAM:9F2A                                                     ; RAM:9F34↓j
RAM:9F2A 4C DD DA                    JMP     loc_DADD
RAM:9F2D             ; ---------------------------------------------------------------------------
RAM:9F2D
RAM:9F2D             loc_9F2D:                               ; CODE XREF: RAM:EXT_PRINTC↑j
RAM:9F2D C9 C0                       CMP     #$C0
RAM:9F2F F0 F9                       BEQ     loc_9F2A
RAM:9F31 C9 C3                       CMP     #$C3
RAM:9F33 18                          CLC
RAM:9F34 F0 F4                       BEQ     loc_9F2A
RAM:9F36 A0 00                       LDY     #0
RAM:9F38 48                          PHA
RAM:9F39
RAM:9F39             loc_9F39:                               ; CODE XREF: RAM:9F44↓j
RAM:9F39 B9 46 9F                    LDA     $9F46,Y
RAM:9F3C F0 2B                       BEQ     loc_9F69
RAM:9F3E 20 9E F5                    JSR     AUX_CMP_B8Y
RAM:9F41 D0 06                       BNE     loc_9F49
RAM:9F43 C8                          INY
RAM:9F44 D0 F3                       BNE     loc_9F39
RAM:9F46 D7 22                       DCP     $22,X
RAM:9F48 00                          BRK
RAM:9F49             ; ---------------------------------------------------------------------------
RAM:9F49
RAM:9F49             loc_9F49:                               ; CODE XREF: RAM:9F41↑j
RAM:9F49 A0 00                       LDY     #0
RAM:9F4B
RAM:9F4B             loc_9F4B:                               ; CODE XREF: RAM:9F56↓j
RAM:9F4B B9 58 9F                    LDA     $9F58,Y
RAM:9F4E F0 0F                       BEQ     loc_9F5F
RAM:9F50 20 9E F5                    JSR     AUX_CMP_B8Y
RAM:9F53 D0 D4                       BNE     loc_9F29
RAM:9F55 C8                          INY
RAM:9F56 D0 F3                       BNE     loc_9F4B
RAM:9F58 53 43                       SRE     ($43),Y
RAM:9F58             ; ---------------------------------------------------------------------------
RAM:9F5A 52                          .BYTE $52 ; R
RAM:9F5B 45                          .BYTE $45 ; E
RAM:9F5C 45                          .BYTE $45 ; E
RAM:9F5D 4E                          .BYTE $4E ; N
RAM:9F5E 00                          .BYTE   0
RAM:9F5F             ; ---------------------------------------------------------------------------
RAM:9F5F
RAM:9F5F             loc_9F5F:                               ; CODE XREF: RAM:9F4E↑j
RAM:9F5F 68                          PLA
RAM:9F60 20 0E F6                    JSR     AUX_ADDON
RAM:9F63 20 9F AE                    JSR     sub_AE9F
RAM:9F66 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
RAM:9F69             ; ---------------------------------------------------------------------------
RAM:9F69
RAM:9F69             loc_9F69:                               ; CODE XREF: RAM:9F3C↑j
RAM:9F69 68                          PLA
RAM:9F6A 20 0E F6                    JSR     AUX_ADDON
RAM:9F6D 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9F70 C9 21                       CMP     #$21 ; '!'
RAM:9F72 F0 0E                       BEQ     loc_9F82
RAM:9F74 C9 2F                       CMP     #$2F ; '/'
RAM:9F76 F0 41                       BEQ     loc_9FB9
RAM:9F78 C9 26                       CMP     #$26 ; '&'
RAM:9F7A D0 03                       BNE     loc_9F7F
RAM:9F7C 4C 4C A0                    JMP     loc_A04C
RAM:9F7F             ; ---------------------------------------------------------------------------
RAM:9F7F
RAM:9F7F             loc_9F7F:                               ; CODE XREF: RAM:9F7A↑j
RAM:9F7F 4C 9E A0                    JMP     loc_A09E
RAM:9F82             ; ---------------------------------------------------------------------------
RAM:9F82
RAM:9F82             loc_9F82:                               ; CODE XREF: RAM:9F72↑j
RAM:9F82 20 DE F4                    JSR     AUX_CHRGET
RAM:9F85 20 91 A0                    JSR     sub_A091
RAM:9F88 20 94 A0                    JSR     loc_A094
RAM:9F8B 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9F8E
RAM:9F8E             loc_9F8E:                               ; CODE XREF: RAM:9F97↓j
RAM:9F8E                                                     ; RAM:9FB4↓j
RAM:9F8E F0 26                       BEQ     loc_9FB6
RAM:9F90 C9 3B                       CMP     #$3B ; ';'
RAM:9F92 D0 08                       BNE     loc_9F9C
RAM:9F94 20 DE F4                    JSR     AUX_CHRGET
RAM:9F97 D0 F5                       BNE     loc_9F8E
RAM:9F99 4C 26 9F                    JMP     loc_9F26
RAM:9F9C             ; ---------------------------------------------------------------------------
RAM:9F9C
RAM:9F9C             loc_9F9C:                               ; CODE XREF: RAM:9F92↑j
RAM:9F9C 20 A6 F5                    JSR     AUX_FRMEVL
RAM:9F9F 24 11                       BIT     byte_11
RAM:9FA1 30 03                       BMI     loc_9FA6
RAM:9FA3 4C 99 A0                    JMP     loc_A099
RAM:9FA6             ; ---------------------------------------------------------------------------
RAM:9FA6
RAM:9FA6             loc_9FA6:                               ; CODE XREF: RAM:9FA1↑j
RAM:9FA6 20 F8 F4                    JSR     AUX_FREFAC
RAM:9FA9 A0 00                       LDY     #0
RAM:9FAB 20 B5 F5                    JSR     AUX_GET_5EY     ; get byte at ($5E),Y
RAM:9FAE 20 EF F4                    JSR     AUX_OUTDO
RAM:9FB1 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9FB4 D0 D8                       BNE     loc_9F8E
RAM:9FB6
RAM:9FB6             loc_9FB6:                               ; CODE XREF: RAM:loc_9F8E↑j
RAM:9FB6                                                     ; RAM:loc_9FDF↓j ...
RAM:9FB6 4C AF F5                    JMP     loc_F5AF
RAM:9FB9             ; ---------------------------------------------------------------------------
RAM:9FB9
RAM:9FB9             loc_9FB9:                               ; CODE XREF: RAM:9F76↑j
RAM:9FB9 A0 00                       LDY     #0
RAM:9FBB 84 E8                       STY     byte_E8
RAM:9FBD
RAM:9FBD             loc_9FBD:                               ; CODE XREF: RAM:9FC9↓j
RAM:9FBD E6 E8                       INC     byte_E8
RAM:9FBF C8                          INY
RAM:9FC0 20 BD F5                    JSR     AUX_GET_B8Y
RAM:9FC3 C9 2F                       CMP     #$2F ; '/'
RAM:9FC5 F0 07                       BEQ     loc_9FCE
RAM:9FC7 C9 20                       CMP     #$20 ; ' '
RAM:9FC9 F0 F2                       BEQ     loc_9FBD
RAM:9FCB 4C 86 F6                    JMP     AUX_SNERR       ; Call Syntax Error, ensure $8000 ROM switched out
RAM:9FCE             ; ---------------------------------------------------------------------------
RAM:9FCE
RAM:9FCE             loc_9FCE:                               ; CODE XREF: RAM:9FC5↑j
RAM:9FCE E6 E8                       INC     byte_E8
RAM:9FD0 20 0E F6                    JSR     AUX_ADDON
RAM:9FD3 20 DE F4                    JSR     AUX_CHRGET
RAM:9FD6 20 91 A0                    JSR     sub_A091
RAM:9FD9 20 94 A0                    JSR     loc_A094
RAM:9FDC 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:9FDF
RAM:9FDF             loc_9FDF:                               ; CODE XREF: RAM:9FE8↓j
RAM:9FDF                                                     ; RAM:A047↓j
RAM:9FDF F0 D5                       BEQ     loc_9FB6
RAM:9FE1 C9 3B                       CMP     #$3B ; ';'
RAM:9FE3 D0 08                       BNE     loc_9FED
RAM:9FE5 20 DE F4                    JSR     AUX_CHRGET
RAM:9FE8 D0 F5                       BNE     loc_9FDF
RAM:9FEA 4C 26 9F                    JMP     loc_9F26
RAM:9FED             ; ---------------------------------------------------------------------------
RAM:9FED
RAM:9FED             loc_9FED:                               ; CODE XREF: RAM:9FE3↑j
RAM:9FED 20 A6 F5                    JSR     AUX_FRMEVL
RAM:9FF0 24 11                       BIT     byte_11
RAM:9FF2 30 03                       BMI     loc_9FF7
RAM:9FF4 4C 99 A0                    JMP     loc_A099
RAM:9FF7             ; ---------------------------------------------------------------------------
RAM:9FF7
RAM:9FF7             loc_9FF7:                               ; CODE XREF: RAM:9FF2↑j
RAM:9FF7 20 F8 F4                    JSR     AUX_FREFAC
RAM:9FFA AA                          TAX
RAM:9FFB A0 00                       LDY     #0
RAM:9FFD E4 E8                       CPX     byte_E8
RAM:9FFF 90 15                       BCC     loc_A016
RAM:A001 A6 E8                       LDX     byte_E8
RAM:A003 E8                          INX
RAM:A004
RAM:A004             loc_A004:                               ; CODE XREF: RAM:A010↓j
RAM:A004                                                     ; RAM:A014↓j
RAM:A004 CA                          DEX
RAM:A005 F0 3D                       BEQ     loc_A044
RAM:A007 20 B5 F5                    JSR     AUX_GET_5EY     ; get byte at ($5E),Y
RAM:A00A 20 EF F4                    JSR     AUX_OUTDO
RAM:A00D C8                          INY
RAM:A00E C9 0D                       CMP     #$D
RAM:A010 D0 F2                       BNE     loc_A004
RAM:A012 49 FF                       EOR     #$FF
RAM:A014 D0 EE                       BNE     loc_A004
RAM:A016
RAM:A016             loc_A016:                               ; CODE XREF: RAM:9FFF↑j
RAM:A016 E8                          INX
RAM:A017 8A                          TXA
RAM:A018 48                          PHA
RAM:A019 48                          PHA
RAM:A01A
RAM:A01A             loc_A01A:                               ; CODE XREF: RAM:A02A↓j
RAM:A01A                                                     ; RAM:A02E↓j
RAM:A01A 68                          PLA
RAM:A01B AA                          TAX
RAM:A01C CA                          DEX
RAM:A01D F0 11                       BEQ     loc_A030
RAM:A01F 8A                          TXA
RAM:A020 48                          PHA
RAM:A021 20 B5 F5                    JSR     AUX_GET_5EY     ; get byte at ($5E),Y
RAM:A024 20 EF F4                    JSR     AUX_OUTDO
RAM:A027 C8                          INY
RAM:A028 C9 0D                       CMP     #$D
RAM:A02A D0 EE                       BNE     loc_A01A
RAM:A02C 49 FF                       EOR     #$FF
RAM:A02E D0 EA                       BNE     loc_A01A
RAM:A030
RAM:A030             loc_A030:                               ; CODE XREF: RAM:A01D↑j
RAM:A030 68                          PLA
RAM:A031 18                          CLC
RAM:A032 E5 E8                       SBC     byte_E8
RAM:A034 49 FF                       EOR     #$FF
RAM:A036 AA                          TAX
RAM:A037 E8                          INX
RAM:A038 E8                          INX
RAM:A039
RAM:A039             loc_A039:                               ; CODE XREF: RAM:A041↓j
RAM:A039 CA                          DEX
RAM:A03A F0 08                       BEQ     loc_A044
RAM:A03C A9 20                       LDA     #$20 ; ' '
RAM:A03E 20 EF F4                    JSR     AUX_OUTDO
RAM:A041 4C 39 A0                    JMP     loc_A039
RAM:A044             ; ---------------------------------------------------------------------------
RAM:A044
RAM:A044             loc_A044:                               ; CODE XREF: RAM:A005↑j
RAM:A044                                                     ; RAM:A03A↑j
RAM:A044 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A047 D0 96                       BNE     loc_9FDF
RAM:A049 4C B6 9F                    JMP     loc_9FB6
RAM:A04C             ; ---------------------------------------------------------------------------
RAM:A04C
RAM:A04C             loc_A04C:                               ; CODE XREF: RAM:9F7C↑j
RAM:A04C 20 DE F4                    JSR     AUX_CHRGET
RAM:A04F 20 91 A0                    JSR     sub_A091
RAM:A052 20 94 A0                    JSR     loc_A094
RAM:A055 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A058
RAM:A058             loc_A058:                               ; CODE XREF: RAM:A08C↓j
RAM:A058 D0 03                       BNE     loc_A05D
RAM:A05A 4C B6 9F                    JMP     loc_9FB6
RAM:A05D             ; ---------------------------------------------------------------------------
RAM:A05D
RAM:A05D             loc_A05D:                               ; CODE XREF: RAM:loc_A058↑j
RAM:A05D                                                     ; RAM:A064↓j
RAM:A05D C9 3B                       CMP     #$3B ; ';'
RAM:A05F D0 08                       BNE     loc_A069
RAM:A061 20 DE F4                    JSR     AUX_CHRGET
RAM:A064 D0 F7                       BNE     loc_A05D
RAM:A066 4C 26 9F                    JMP     loc_9F26
RAM:A069             ; ---------------------------------------------------------------------------
RAM:A069
RAM:A069             loc_A069:                               ; CODE XREF: RAM:A05F↑j
RAM:A069 20 A6 F5                    JSR     AUX_FRMEVL
RAM:A06C 24 11                       BIT     byte_11
RAM:A06E 10 29                       BPL     loc_A099
RAM:A070 20 F8 F4                    JSR     AUX_FREFAC
RAM:A073 AA                          TAX
RAM:A074 A0 00                       LDY     #0
RAM:A076 E8                          INX
RAM:A077
RAM:A077             loc_A077:                               ; CODE XREF: RAM:A083↓j
RAM:A077                                                     ; RAM:A087↓j
RAM:A077 CA                          DEX
RAM:A078 F0 0F                       BEQ     loc_A089
RAM:A07A 20 B5 F5                    JSR     AUX_GET_5EY     ; get byte at ($5E),Y
RAM:A07D 20 EF F4                    JSR     AUX_OUTDO
RAM:A080 C8                          INY
RAM:A081 C9 0D                       CMP     #$D
RAM:A083 D0 F2                       BNE     loc_A077
RAM:A085 49 FF                       EOR     #$FF
RAM:A087 D0 EE                       BNE     loc_A077
RAM:A089
RAM:A089             loc_A089:                               ; CODE XREF: RAM:A078↑j
RAM:A089 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A08C D0 CA                       BNE     loc_A058
RAM:A08E 4C B6 9F                    JMP     loc_9FB6
RAM:A091
RAM:A091             ; =============== S U B R O U T I N E =======================================
RAM:A091
RAM:A091
RAM:A091             sub_A091:                               ; CODE XREF: RAM:9F85↑p
RAM:A091                                                     ; RAM:9FD6↑p ...
RAM:A091 A9 22                       LDA     #$22 ; '"'
RAM:A091             ; End of function sub_A091
RAM:A091
RAM:A091             ; ---------------------------------------------------------------------------
RAM:A093 2C                          .BYTE $2C
RAM:A094             ; ---------------------------------------------------------------------------
RAM:A094
RAM:A094             loc_A094:                               ; CODE XREF: RAM:9F88↑p
RAM:A094                                                     ; RAM:9FD9↑p ...
RAM:A094 A9 3B                       LDA     #$3B ; ';'
RAM:A096 4C 77 F6                    JMP     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:A099             ; ---------------------------------------------------------------------------
RAM:A099
RAM:A099             loc_A099:                               ; CODE XREF: RAM:9FA3↑j
RAM:A099                                                     ; RAM:9FF4↑j ...
RAM:A099 A2 A3                       LDX     #$A3
RAM:A09B 4C 01 F4                    JMP     loc_F401
RAM:A09E             ; ---------------------------------------------------------------------------
RAM:A09E
RAM:A09E             loc_A09E:                               ; CODE XREF: RAM:loc_9F7F↑j
RAM:A09E 20 B5 A5                    JSR     sub_A5B5
RAM:A0A1 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A0A4 C9 2B                       CMP     #$2B ; '+'
RAM:A0A6 D0 06                       BNE     loc_A0AE
RAM:A0A8 20 C0 A5                    JSR     sub_A5C0
RAM:A0AB 20 DC A5                    JSR     sub_A5DC
RAM:A0AE
RAM:A0AE             loc_A0AE:                               ; CODE XREF: RAM:A0A6↑j
RAM:A0AE C9 2A                       CMP     #$2A ; '*'
RAM:A0B0 D0 15                       BNE     loc_A0C7
RAM:A0B2 E6 E8                       INC     byte_E8
RAM:A0B4 20 DC A5                    JSR     sub_A5DC
RAM:A0B7 C9 2A                       CMP     #$2A ; '*'
RAM:A0B9 D0 52                       BNE     loc_A10D
RAM:A0BB E6 E8                       INC     byte_E8
RAM:A0BD 20 C3 A5                    JSR     loc_A5C3
RAM:A0C0 20 DC A5                    JSR     sub_A5DC
RAM:A0C3 C9 24                       CMP     #$24 ; '$'
RAM:A0C5 F0 09                       BEQ     loc_A0D0
RAM:A0C7
RAM:A0C7             loc_A0C7:                               ; CODE XREF: RAM:A0B0↑j
RAM:A0C7 C9 24                       CMP     #$24 ; '$'
RAM:A0C9 D0 11                       BNE     loc_A0DC
RAM:A0CB E6 E8                       INC     byte_E8
RAM:A0CD 20 DC A5                    JSR     sub_A5DC
RAM:A0D0
RAM:A0D0             loc_A0D0:                               ; CODE XREF: RAM:A0C5↑j
RAM:A0D0 E6 E8                       INC     byte_E8
RAM:A0D2 C9 24                       CMP     #$24 ; '$'
RAM:A0D4 D0 37                       BNE     loc_A10D
RAM:A0D6 20 C6 A5                    JSR     loc_A5C6
RAM:A0D9 20 DC A5                    JSR     sub_A5DC
RAM:A0DC
RAM:A0DC             loc_A0DC:                               ; CODE XREF: RAM:A0C9↑j
RAM:A0DC C9 23                       CMP     #$23 ; '#'
RAM:A0DE D0 2D                       BNE     loc_A10D
RAM:A0E0 E6 E8                       INC     byte_E8
RAM:A0E2
RAM:A0E2             loc_A0E2:                               ; CODE XREF: RAM:A0EB↓j
RAM:A0E2 20 DC A5                    JSR     sub_A5DC
RAM:A0E5 C9 23                       CMP     #$23 ; '#'
RAM:A0E7 D0 05                       BNE     loc_A0EE
RAM:A0E9 E6 E8                       INC     byte_E8
RAM:A0EB 4C E2 A0                    JMP     loc_A0E2
RAM:A0EE             ; ---------------------------------------------------------------------------
RAM:A0EE
RAM:A0EE             loc_A0EE:                               ; CODE XREF: RAM:A0E7↑j
RAM:A0EE C9 2C                       CMP     #$2C ; ','
RAM:A0F0 D0 06                       BNE     loc_A0F8
RAM:A0F2 20 C9 A5                    JSR     loc_A5C9
RAM:A0F5 20 DC A5                    JSR     sub_A5DC
RAM:A0F8
RAM:A0F8             loc_A0F8:                               ; CODE XREF: RAM:A0F0↑j
RAM:A0F8 C9 2E                       CMP     #$2E ; '.'
RAM:A0FA D0 14                       BNE     loc_A110
RAM:A0FC 20 D5 A5                    JSR     loc_A5D5
RAM:A0FF
RAM:A0FF             loc_A0FF:                               ; CODE XREF: RAM:A10A↓j
RAM:A0FF 20 DC A5                    JSR     sub_A5DC
RAM:A102 C9 23                       CMP     #$23 ; '#'
RAM:A104 D0 0A                       BNE     loc_A110
RAM:A106 E6 E8                       INC     byte_E8
RAM:A108 E6 E9                       INC     byte_E9
RAM:A10A 4C FF A0                    JMP     loc_A0FF
RAM:A10D             ; ---------------------------------------------------------------------------
RAM:A10D
RAM:A10D             loc_A10D:                               ; CODE XREF: RAM:A0B9↑j
RAM:A10D                                                     ; RAM:A0D4↑j ...
RAM:A10D 4C 86 F6                    JMP     AUX_SNERR       ; Call Syntax Error, ensure $8000 ROM switched out
RAM:A110             ; ---------------------------------------------------------------------------
RAM:A110
RAM:A110             loc_A110:                               ; CODE XREF: RAM:A0FA↑j
RAM:A110                                                     ; RAM:A104↑j
RAM:A110 C9 5E                       CMP     #$5E ; '^'
RAM:A112 D0 1B                       BNE     loc_A12F
RAM:A114 20 DC A5                    JSR     sub_A5DC
RAM:A117 C9 5E                       CMP     #$5E ; '^'
RAM:A119 D0 F2                       BNE     loc_A10D
RAM:A11B 20 DC A5                    JSR     sub_A5DC
RAM:A11E C9 5E                       CMP     #$5E ; '^'
RAM:A120 D0 EB                       BNE     loc_A10D
RAM:A122 20 DC A5                    JSR     sub_A5DC
RAM:A125 C9 5E                       CMP     #$5E ; '^'
RAM:A127 D0 E4                       BNE     loc_A10D
RAM:A129 20 CC A5                    JSR     loc_A5CC
RAM:A12C 20 DC A5                    JSR     sub_A5DC
RAM:A12F
RAM:A12F             loc_A12F:                               ; CODE XREF: RAM:A112↑j
RAM:A12F C9 2D                       CMP     #$2D ; '-'
RAM:A131 D0 06                       BNE     loc_A139
RAM:A133 20 CF A5                    JSR     loc_A5CF
RAM:A136 20 DC A5                    JSR     sub_A5DC
RAM:A139
RAM:A139             loc_A139:                               ; CODE XREF: RAM:A131↑j
RAM:A139 C9 2C                       CMP     #$2C ; ','
RAM:A13B D0 06                       BNE     loc_A143
RAM:A13D 20 D2 A5                    JSR     loc_A5D2
RAM:A140
RAM:A140             loc_A140:                               ; CODE XREF: RAM:A149↓j
RAM:A140 20 DC A5                    JSR     sub_A5DC
RAM:A143
RAM:A143             loc_A143:                               ; CODE XREF: RAM:A13B↑j
RAM:A143 C9 20                       CMP     #$20 ; ' '
RAM:A145 D0 05                       BNE     loc_A14C
RAM:A147 E6 EB                       INC     byte_EB
RAM:A149 4C 40 A1                    JMP     loc_A140
RAM:A14C             ; ---------------------------------------------------------------------------
RAM:A14C
RAM:A14C             loc_A14C:                               ; CODE XREF: RAM:A145↑j
RAM:A14C C9 22                       CMP     #$22 ; '"'
RAM:A14E D0 BD                       BNE     loc_A10D
RAM:A150 20 DC A5                    JSR     sub_A5DC
RAM:A153 20 94 A0                    JSR     loc_A094
RAM:A156 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A159 C9 00                       CMP     #0
RAM:A15B F0 B0                       BEQ     loc_A10D
RAM:A15D D0 20                       BNE     loc_A17F
RAM:A15F
RAM:A15F             loc_A15F:                               ; CODE XREF: RAM:loc_A5B2↓j
RAM:A15F 68                          PLA
RAM:A160 85 EB                       STA     byte_EB
RAM:A162 68                          PLA
RAM:A163 85 EA                       STA     byte_EA
RAM:A165 68                          PLA
RAM:A166 85 E9                       STA     byte_E9
RAM:A168 68                          PLA
RAM:A169 85 E8                       STA     byte_E8
RAM:A16B 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A16E D0 03                       BNE     loc_A173
RAM:A170 4C B6 9F                    JMP     loc_9FB6
RAM:A173             ; ---------------------------------------------------------------------------
RAM:A173
RAM:A173             loc_A173:                               ; CODE XREF: RAM:A16E↑j
RAM:A173                                                     ; RAM:A17A↓j
RAM:A173 C9 3B                       CMP     #$3B ; ';'
RAM:A175 D0 08                       BNE     loc_A17F
RAM:A177 20 DC A5                    JSR     sub_A5DC
RAM:A17A D0 F7                       BNE     loc_A173
RAM:A17C 4C 26 9F                    JMP     loc_9F26
RAM:A17F             ; ---------------------------------------------------------------------------
RAM:A17F
RAM:A17F             loc_A17F:                               ; CODE XREF: RAM:A15D↑j
RAM:A17F                                                     ; RAM:A175↑j
RAM:A17F A5 E8                       LDA     byte_E8
RAM:A181 48                          PHA
RAM:A182 A5 E9                       LDA     byte_E9
RAM:A184 48                          PHA
RAM:A185 A5 EA                       LDA     byte_EA
RAM:A187 48                          PHA
RAM:A188 A5 EB                       LDA     byte_EB
RAM:A18A 48                          PHA
RAM:A18B 20 A6 F5                    JSR     AUX_FRMEVL
RAM:A18E 24 11                       BIT     byte_11
RAM:A190 10 03                       BPL     loc_A195
RAM:A192 4C 99 A0                    JMP     loc_A099
RAM:A195             ; ---------------------------------------------------------------------------
RAM:A195
RAM:A195             loc_A195:                               ; CODE XREF: RAM:A190↑j
RAM:A195 A5 EA                       LDA     byte_EA
RAM:A197 29 01                       AND     #1
RAM:A199 D0 11                       BNE     loc_A1AC
RAM:A19B A5 EA                       LDA     byte_EA
RAM:A19D 29 08                       AND     #8
RAM:A19F F0 07                       BEQ     loc_A1A8
RAM:A1A1 A5 E8                       LDA     byte_E8
RAM:A1A3 38                          SEC
RAM:A1A4 E9 01                       SBC     #1
RAM:A1A6 D0 06                       BNE     loc_A1AE
RAM:A1A8
RAM:A1A8             loc_A1A8:                               ; CODE XREF: RAM:A19F↑j
RAM:A1A8 A9 00                       LDA     #0
RAM:A1AA F0 02                       BEQ     loc_A1AE
RAM:A1AC
RAM:A1AC             loc_A1AC:                               ; CODE XREF: RAM:A199↑j
RAM:A1AC A5 E9                       LDA     byte_E9
RAM:A1AE
RAM:A1AE             loc_A1AE:                               ; CODE XREF: RAM:A1A6↑j
RAM:A1AE                                                     ; RAM:A1AA↑j
RAM:A1AE 85 E9                       STA     byte_E9
RAM:A1B0 E6 E8                       INC     byte_E8
RAM:A1B2 E6 E8                       INC     byte_E8
RAM:A1B4 20 44 F6                    JSR     AUX_FOUT        ; Call FOUT , ensure $8000 ROM switched out
RAM:A1B7 A0 00                       LDY     #0
RAM:A1B9
RAM:A1B9             loc_A1B9:                               ; CODE XREF: RAM:A1BF↓j
RAM:A1B9 C8                          INY
RAM:A1BA B9 00 01                    LDA     $100,Y
RAM:A1BD C9 00                       CMP     #0
RAM:A1BF D0 F8                       BNE     loc_A1B9
RAM:A1C1 84 ED                       STY     byte_ED
RAM:A1C3
RAM:A1C3             loc_A1C3:                               ; CODE XREF: RAM:A1C9↓j
RAM:A1C3 C8                          INY
RAM:A1C4 99 00 01                    STA     $100,Y
RAM:A1C7 C0 1A                       CPY     #$1A
RAM:A1C9 90 F8                       BCC     loc_A1C3
RAM:A1CB A5 E8                       LDA     byte_E8
RAM:A1CD C9 0F                       CMP     #$F
RAM:A1CF B0 06                       BCS     loc_A1D7
RAM:A1D1 E9 02                       SBC     #2
RAM:A1D3 C5 E9                       CMP     byte_E9
RAM:A1D5 B0 03                       BCS     loc_A1DA
RAM:A1D7
RAM:A1D7             loc_A1D7:                               ; CODE XREF: RAM:A1CF↑j
RAM:A1D7                                                     ; RAM:A519↓j
RAM:A1D7 4C 86 F6                    JMP     AUX_SNERR       ; Call Syntax Error, ensure $8000 ROM switched out
RAM:A1DA             ; ---------------------------------------------------------------------------
RAM:A1DA
RAM:A1DA             loc_A1DA:                               ; CODE XREF: RAM:A1D5↑j
RAM:A1DA A0 00                       LDY     #0
RAM:A1DC B9 00 01                    LDA     $100,Y
RAM:A1DF C9 2D                       CMP     #$2D ; '-'
RAM:A1E1 F0 18                       BEQ     loc_A1FB
RAM:A1E3 A5 EA                       LDA     byte_EA
RAM:A1E5 10 04                       BPL     loc_A1EB
RAM:A1E7 A9 2B                       LDA     #$2B ; '+'
RAM:A1E9 D0 02                       BNE     loc_A1ED
RAM:A1EB
RAM:A1EB             loc_A1EB:                               ; CODE XREF: RAM:A1E5↑j
RAM:A1EB A9 20                       LDA     #$20 ; ' '
RAM:A1ED
RAM:A1ED             loc_A1ED:                               ; CODE XREF: RAM:A1E9↑j
RAM:A1ED                                                     ; RAM:A1F7↓j
RAM:A1ED BE 00 01                    LDX     $100,Y
RAM:A1F0 99 00 01                    STA     $100,Y
RAM:A1F3 8A                          TXA
RAM:A1F4 C8                          INY
RAM:A1F5 E0 00                       CPX     #0
RAM:A1F7 D0 F4                       BNE     loc_A1ED
RAM:A1F9 E6 ED                       INC     byte_ED
RAM:A1FB
RAM:A1FB             loc_A1FB:                               ; CODE XREF: RAM:A1E1↑j
RAM:A1FB A4 ED                       LDY     byte_ED
RAM:A1FD C0 05                       CPY     #5
RAM:A1FF 90 0E                       BCC     loc_A20F
RAM:A201 88                          DEY
RAM:A202 88                          DEY
RAM:A203 88                          DEY
RAM:A204 88                          DEY
RAM:A205 B9 00 01                    LDA     $100,Y
RAM:A208 C9 45                       CMP     #$45 ; 'E'
RAM:A20A D0 03                       BNE     loc_A20F
RAM:A20C 4C C6 A2                    JMP     loc_A2C6
RAM:A20F             ; ---------------------------------------------------------------------------
RAM:A20F
RAM:A20F             loc_A20F:                               ; CODE XREF: RAM:A1FF↑j
RAM:A20F                                                     ; RAM:A20A↑j
RAM:A20F A0 01                       LDY     #1
RAM:A211
RAM:A211             loc_A211:                               ; CODE XREF: RAM:A219↓j
RAM:A211 B9 00 01                    LDA     $100,Y
RAM:A214 F0 05                       BEQ     loc_A21B
RAM:A216 C8                          INY
RAM:A217 C9 2E                       CMP     #$2E ; '.'
RAM:A219 D0 F6                       BNE     loc_A211
RAM:A21B
RAM:A21B             loc_A21B:                               ; CODE XREF: RAM:A214↑j
RAM:A21B C4 ED                       CPY     byte_ED
RAM:A21D D0 07                       BNE     loc_A226
RAM:A21F A9 2E                       LDA     #$2E ; '.'
RAM:A221 99 00 01                    STA     $100,Y
RAM:A224 E6 ED                       INC     byte_ED
RAM:A226
RAM:A226             loc_A226:                               ; CODE XREF: RAM:A21D↑j
RAM:A226 A0 00                       LDY     #0
RAM:A228 84 EC                       STY     byte_EC
RAM:A22A C8                          INY
RAM:A22B B9 00 01                    LDA     $100,Y
RAM:A22E C9 30                       CMP     #$30 ; '0'
RAM:A230 D0 06                       BNE     loc_A238
RAM:A232 A5 ED                       LDA     byte_ED
RAM:A234 C9 03                       CMP     #3
RAM:A236 F0 35                       BEQ     loc_A26D
RAM:A238
RAM:A238             loc_A238:                               ; CODE XREF: RAM:A230↑j
RAM:A238                                                     ; RAM:A26B↓j
RAM:A238 A0 01                       LDY     #1
RAM:A23A B9 00 01                    LDA     $100,Y
RAM:A23D C9 2E                       CMP     #$2E ; '.'
RAM:A23F D0 17                       BNE     loc_A258
RAM:A241
RAM:A241             loc_A241:                               ; CODE XREF: RAM:A249↓j
RAM:A241 B9 00 01                    LDA     $100,Y
RAM:A244 F0 12                       BEQ     loc_A258
RAM:A246 C8                          INY
RAM:A247 C9 2E                       CMP     #$2E ; '.'
RAM:A249 D0 F6                       BNE     loc_A241
RAM:A24B BE 00 01                    LDX     $100,Y
RAM:A24E 99 00 01                    STA     $100,Y
RAM:A251 8A                          TXA
RAM:A252 88                          DEY
RAM:A253 99 00 01                    STA     $100,Y
RAM:A256 C6 EC                       DEC     byte_EC
RAM:A258
RAM:A258             loc_A258:                               ; CODE XREF: RAM:A23F↑j
RAM:A258                                                     ; RAM:A244↑j
RAM:A258 C9 30                       CMP     #$30 ; '0'
RAM:A25A D0 11                       BNE     loc_A26D
RAM:A25C
RAM:A25C             loc_A25C:                               ; CODE XREF: RAM:A267↓j
RAM:A25C C8                          INY
RAM:A25D B9 00 01                    LDA     $100,Y
RAM:A260 88                          DEY
RAM:A261 99 00 01                    STA     $100,Y
RAM:A264 C8                          INY
RAM:A265 C9 00                       CMP     #0
RAM:A267 D0 F3                       BNE     loc_A25C
RAM:A269 C6 ED                       DEC     byte_ED
RAM:A26B D0 CB                       BNE     loc_A238
RAM:A26D
RAM:A26D             loc_A26D:                               ; CODE XREF: RAM:A236↑j
RAM:A26D                                                     ; RAM:A25A↑j ...
RAM:A26D A0 02                       LDY     #2
RAM:A26F B9 00 01                    LDA     $100,Y
RAM:A272 C9 2E                       CMP     #$2E ; '.'
RAM:A274 F0 23                       BEQ     loc_A299
RAM:A276
RAM:A276             loc_A276:                               ; CODE XREF: RAM:A27C↓j
RAM:A276 C8                          INY
RAM:A277 B9 00 01                    LDA     $100,Y
RAM:A27A C9 2E                       CMP     #$2E ; '.'
RAM:A27C D0 F8                       BNE     loc_A276
RAM:A27E
RAM:A27E             loc_A27E:                               ; CODE XREF: RAM:A286↓j
RAM:A27E B9 00 01                    LDA     $100,Y
RAM:A281 F0 16                       BEQ     loc_A299
RAM:A283 C8                          INY
RAM:A284 C9 2E                       CMP     #$2E ; '.'
RAM:A286 D0 F6                       BNE     loc_A27E
RAM:A288 88                          DEY
RAM:A289 88                          DEY
RAM:A28A BE 00 01                    LDX     $100,Y
RAM:A28D 99 00 01                    STA     $100,Y
RAM:A290 8A                          TXA
RAM:A291 C8                          INY
RAM:A292 99 00 01                    STA     $100,Y
RAM:A295 E6 EC                       INC     byte_EC
RAM:A297 D0 D4                       BNE     loc_A26D
RAM:A299
RAM:A299             loc_A299:                               ; CODE XREF: RAM:A274↑j
RAM:A299                                                     ; RAM:A281↑j
RAM:A299 C8                          INY
RAM:A29A A4 ED                       LDY     byte_ED
RAM:A29C A9 45                       LDA     #$45 ; 'E'
RAM:A29E 99 00 01                    STA     $100,Y
RAM:A2A1 A5 EC                       LDA     byte_EC
RAM:A2A3 AA                          TAX
RAM:A2A4 10 0A                       BPL     loc_A2B0
RAM:A2A6 18                          CLC
RAM:A2A7 49 FF                       EOR     #$FF
RAM:A2A9 69 01                       ADC     #1
RAM:A2AB AA                          TAX
RAM:A2AC A9 2D                       LDA     #$2D ; '-'
RAM:A2AE D0 02                       BNE     loc_A2B2
RAM:A2B0
RAM:A2B0             loc_A2B0:                               ; CODE XREF: RAM:A2A4↑j
RAM:A2B0 A9 2B                       LDA     #$2B ; '+'
RAM:A2B2
RAM:A2B2             loc_A2B2:                               ; CODE XREF: RAM:A2AE↑j
RAM:A2B2 C8                          INY
RAM:A2B3 99 00 01                    STA     $100,Y
RAM:A2B6 C8                          INY
RAM:A2B7 A9 30                       LDA     #$30 ; '0'
RAM:A2B9 99 00 01                    STA     $100,Y
RAM:A2BC C8                          INY
RAM:A2BD 8A                          TXA
RAM:A2BE 09 30                       ORA     #$30 ; '0'
RAM:A2C0 99 00 01                    STA     $100,Y
RAM:A2C3 C8                          INY
RAM:A2C4 84 ED                       STY     byte_ED
RAM:A2C6
RAM:A2C6             loc_A2C6:                               ; CODE XREF: RAM:A20C↑j
RAM:A2C6 A0 00                       LDY     #0
RAM:A2C8
RAM:A2C8             loc_A2C8:                               ; CODE XREF: RAM:A2CE↓j
RAM:A2C8 C8                          INY
RAM:A2C9 B9 00 01                    LDA     $100,Y
RAM:A2CC C9 45                       CMP     #$45 ; 'E'
RAM:A2CE D0 F8                       BNE     loc_A2C8
RAM:A2D0 C4 E8                       CPY     byte_E8
RAM:A2D2 F0 3B                       BEQ     loc_A30F
RAM:A2D4 90 1C                       BCC     loc_A2F2
RAM:A2D6
RAM:A2D6             loc_A2D6:                               ; CODE XREF: RAM:A2EE↓j
RAM:A2D6 A4 E8                       LDY     byte_E8
RAM:A2D8
RAM:A2D8             loc_A2D8:                               ; CODE XREF: RAM:A2E3↓j
RAM:A2D8 C8                          INY
RAM:A2D9 B9 00 01                    LDA     $100,Y
RAM:A2DC 88                          DEY
RAM:A2DD 99 00 01                    STA     $100,Y
RAM:A2E0 C8                          INY
RAM:A2E1 C9 00                       CMP     #0
RAM:A2E3 D0 F3                       BNE     loc_A2D8
RAM:A2E5 C6 ED                       DEC     byte_ED
RAM:A2E7 A4 E8                       LDY     byte_E8
RAM:A2E9 B9 00 01                    LDA     $100,Y
RAM:A2EC C9 45                       CMP     #$45 ; 'E'
RAM:A2EE D0 E6                       BNE     loc_A2D6
RAM:A2F0 F0 1D                       BEQ     loc_A30F
RAM:A2F2
RAM:A2F2             loc_A2F2:                               ; CODE XREF: RAM:A2D4↑j
RAM:A2F2                                                     ; RAM:A30D↓j
RAM:A2F2 84 EF                       STY     byte_EF
RAM:A2F4 A9 30                       LDA     #$30 ; '0'
RAM:A2F6
RAM:A2F6             loc_A2F6:                               ; CODE XREF: RAM:A300↓j
RAM:A2F6 BE 00 01                    LDX     $100,Y
RAM:A2F9 99 00 01                    STA     $100,Y
RAM:A2FC 8A                          TXA
RAM:A2FD C8                          INY
RAM:A2FE E0 00                       CPX     #0
RAM:A300 D0 F4                       BNE     loc_A2F6
RAM:A302 E6 ED                       INC     byte_ED
RAM:A304 A6 E8                       LDX     byte_E8
RAM:A306 BD 00 01                    LDA     $100,X
RAM:A309 A4 EF                       LDY     byte_EF
RAM:A30B C9 45                       CMP     #$45 ; 'E'
RAM:A30D D0 E3                       BNE     loc_A2F2
RAM:A30F
RAM:A30F             loc_A30F:                               ; CODE XREF: RAM:A2D2↑j
RAM:A30F                                                     ; RAM:A2F0↑j
RAM:A30F AD 02 01                    LDA     byte_102
RAM:A312 C9 30                       CMP     #$30 ; '0'
RAM:A314 D0 05                       BNE     loc_A31B
RAM:A316 A9 2E                       LDA     #$2E ; '.'
RAM:A318 8D 02 01                    STA     byte_102
RAM:A31B
RAM:A31B             loc_A31B:                               ; CODE XREF: RAM:A314↑j
RAM:A31B 20 27 A3                    JSR     sub_A327
RAM:A31E A5 EA                       LDA     byte_EA
RAM:A320 29 08                       AND     #8
RAM:A322 D0 30                       BNE     loc_A354
RAM:A324 4C E0 A3                    JMP     loc_A3E0
RAM:A327
RAM:A327             ; =============== S U B R O U T I N E =======================================
RAM:A327
RAM:A327
RAM:A327             sub_A327:                               ; CODE XREF: RAM:loc_A31B↑p
RAM:A327                                                     ; RAM:loc_A354↓p
RAM:A327 A4 ED                       LDY     byte_ED
RAM:A329 88                          DEY
RAM:A32A B9 00 01                    LDA     $100,Y
RAM:A32D 29 0F                       AND     #$F
RAM:A32F 85 EF                       STA     byte_EF
RAM:A331 88                          DEY
RAM:A332 B9 00 01                    LDA     $100,Y
RAM:A335 29 0F                       AND     #$F
RAM:A337 85 EE                       STA     byte_EE
RAM:A339 0A                          ASL     A
RAM:A33A 0A                          ASL     A
RAM:A33B 65 EE                       ADC     byte_EE
RAM:A33D 0A                          ASL     A
RAM:A33E 65 EF                       ADC     byte_EF
RAM:A340 85 EC                       STA     byte_EC
RAM:A342 88                          DEY
RAM:A343 B9 00 01                    LDA     $100,Y
RAM:A346 29 02                       AND     #2
RAM:A348 D0 09                       BNE     locret_A353
RAM:A34A A5 EC                       LDA     byte_EC
RAM:A34C 49 FF                       EOR     #$FF
RAM:A34E 18                          CLC
RAM:A34F 69 01                       ADC     #1
RAM:A351 85 EC                       STA     byte_EC
RAM:A353
RAM:A353             locret_A353:                            ; CODE XREF: sub_A327+21↑j
RAM:A353 60                          RTS
RAM:A353             ; End of function sub_A327
RAM:A353
RAM:A354             ; ---------------------------------------------------------------------------
RAM:A354
RAM:A354             loc_A354:                               ; CODE XREF: RAM:A322↑j
RAM:A354 20 27 A3                    JSR     sub_A327
RAM:A357 A4 E9                       LDY     byte_E9
RAM:A359 C8                          INY
RAM:A35A A2 00                       LDX     #0
RAM:A35C
RAM:A35C             loc_A35C:                               ; CODE XREF: RAM:A364↓j
RAM:A35C BD 00 01                    LDA     $100,X
RAM:A35F C9 45                       CMP     #$45 ; 'E'
RAM:A361 F0 03                       BEQ     loc_A366
RAM:A363 E8                          INX
RAM:A364 D0 F6                       BNE     loc_A35C
RAM:A366
RAM:A366             loc_A366:                               ; CODE XREF: RAM:A361↑j
RAM:A366                                                     ; RAM:A368↓j
RAM:A366 CA                          DEX
RAM:A367 88                          DEY
RAM:A368 D0 FC                       BNE     loc_A366
RAM:A36A 8A                          TXA
RAM:A36B A8                          TAY
RAM:A36C A9 2E                       LDA     #$2E ; '.'
RAM:A36E
RAM:A36E             loc_A36E:                               ; CODE XREF: RAM:A37A↓j
RAM:A36E BE 00 01                    LDX     $100,Y
RAM:A371 99 00 01                    STA     $100,Y
RAM:A374 8A                          TXA
RAM:A375 88                          DEY
RAM:A376 C6 EC                       DEC     byte_EC
RAM:A378 C9 2E                       CMP     #$2E ; '.'
RAM:A37A D0 F2                       BNE     loc_A36E
RAM:A37C A4 E8                       LDY     byte_E8
RAM:A37E E6 EC                       INC     byte_EC
RAM:A380 A5 EC                       LDA     byte_EC
RAM:A382 AA                          TAX
RAM:A383 10 0A                       BPL     loc_A38F
RAM:A385 18                          CLC
RAM:A386 49 FF                       EOR     #$FF
RAM:A388 69 01                       ADC     #1
RAM:A38A AA                          TAX
RAM:A38B A9 2D                       LDA     #$2D ; '-'
RAM:A38D D0 02                       BNE     loc_A391
RAM:A38F
RAM:A38F             loc_A38F:                               ; CODE XREF: RAM:A383↑j
RAM:A38F A9 2B                       LDA     #$2B ; '+'
RAM:A391
RAM:A391             loc_A391:                               ; CODE XREF: RAM:A38D↑j
RAM:A391 C8                          INY
RAM:A392 99 00 01                    STA     $100,Y
RAM:A395 8A                          TXA
RAM:A396 A2 FF                       LDX     #$FF
RAM:A398
RAM:A398             loc_A398:                               ; CODE XREF: RAM:A39C↓j
RAM:A398 38                          SEC
RAM:A399 E8                          INX
RAM:A39A E9 0A                       SBC     #$A
RAM:A39C 10 FA                       BPL     loc_A398
RAM:A39E 18                          CLC
RAM:A39F 69 0A                       ADC     #$A
RAM:A3A1 09 30                       ORA     #$30 ; '0'
RAM:A3A3 C8                          INY
RAM:A3A4 C8                          INY
RAM:A3A5 99 00 01                    STA     $100,Y
RAM:A3A8 8A                          TXA
RAM:A3A9 88                          DEY
RAM:A3AA 09 30                       ORA     #$30 ; '0'
RAM:A3AC 99 00 01                    STA     $100,Y
RAM:A3AF A0 01                       LDY     #1
RAM:A3B1
RAM:A3B1             loc_A3B1:                               ; CODE XREF: RAM:A3DA↓j
RAM:A3B1 A9 30                       LDA     #$30 ; '0'
RAM:A3B3 D9 00 01                    CMP     $100,Y
RAM:A3B6 D0 25                       BNE     loc_A3DD
RAM:A3B8 D9 01 01                    CMP     $101,Y
RAM:A3BB F0 09                       BEQ     loc_A3C6
RAM:A3BD B0 1E                       BCS     loc_A3DD
RAM:A3BF A9 2E                       LDA     #$2E ; '.'
RAM:A3C1 D9 01 01                    CMP     $101,Y
RAM:A3C4 F0 17                       BEQ     loc_A3DD
RAM:A3C6
RAM:A3C6             loc_A3C6:                               ; CODE XREF: RAM:A3BB↑j
RAM:A3C6 B9 FF 00                    LDA     $FF,Y
RAM:A3C9 99 00 01                    STA     $100,Y
RAM:A3CC 98                          TYA
RAM:A3CD 48                          PHA
RAM:A3CE 88                          DEY
RAM:A3CF
RAM:A3CF             loc_A3CF:                               ; CODE XREF: RAM:A3D5↓j
RAM:A3CF A9 20                       LDA     #$20 ; ' '
RAM:A3D1 99 00 01                    STA     $100,Y
RAM:A3D4 88                          DEY
RAM:A3D5 10 F8                       BPL     loc_A3CF
RAM:A3D7 68                          PLA
RAM:A3D8 A8                          TAY
RAM:A3D9 C8                          INY
RAM:A3DA 4C B1 A3                    JMP     loc_A3B1
RAM:A3DD             ; ---------------------------------------------------------------------------
RAM:A3DD
RAM:A3DD             loc_A3DD:                               ; CODE XREF: RAM:A3B6↑j
RAM:A3DD                                                     ; RAM:A3BD↑j ...
RAM:A3DD 4C D2 A4                    JMP     loc_A4D2
RAM:A3E0             ; ---------------------------------------------------------------------------
RAM:A3E0
RAM:A3E0             loc_A3E0:                               ; CODE XREF: RAM:A324↑j
RAM:A3E0 38                          SEC
RAM:A3E1 A5 E8                       LDA     byte_E8
RAM:A3E3 E5 E9                       SBC     byte_E9
RAM:A3E5 E9 02                       SBC     #2
RAM:A3E7 85 EE                       STA     byte_EE
RAM:A3E9 A5 EC                       LDA     byte_EC
RAM:A3EB F0 4E                       BEQ     loc_A43B
RAM:A3ED 30 12                       BMI     loc_A401
RAM:A3EF C5 EE                       CMP     byte_EE
RAM:A3F1 90 48                       BCC     loc_A43B
RAM:A3F3 A4 E8                       LDY     byte_E8
RAM:A3F5 84 ED                       STY     byte_ED
RAM:A3F7 A9 40                       LDA     #$40 ; '@'
RAM:A3F9
RAM:A3F9             loc_A3F9:                               ; CODE XREF: RAM:A3FD↓j
RAM:A3F9 99 00 01                    STA     $100,Y
RAM:A3FC 88                          DEY
RAM:A3FD 10 FA                       BPL     loc_A3F9
RAM:A3FF 30 34                       BMI     loc_A435
RAM:A401
RAM:A401             loc_A401:                               ; CODE XREF: RAM:A3ED↑j
RAM:A401 A5 EC                       LDA     byte_EC
RAM:A403 18                          CLC
RAM:A404 49 FF                       EOR     #$FF
RAM:A406 69 01                       ADC     #1
RAM:A408 C5 E9                       CMP     byte_E9
RAM:A40A F0 2F                       BEQ     loc_A43B
RAM:A40C 90 2D                       BCC     loc_A43B
RAM:A40E A4 E8                       LDY     byte_E8
RAM:A410 84 ED                       STY     byte_ED
RAM:A412 88                          DEY
RAM:A413 A6 E9                       LDX     byte_E9
RAM:A415 F0 0A                       BEQ     loc_A421
RAM:A417 CA                          DEX
RAM:A418 A9 30                       LDA     #$30 ; '0'
RAM:A41A
RAM:A41A             loc_A41A:                               ; CODE XREF: RAM:A41F↓j
RAM:A41A 99 00 01                    STA     $100,Y
RAM:A41D 88                          DEY
RAM:A41E CA                          DEX
RAM:A41F 10 F9                       BPL     loc_A41A
RAM:A421
RAM:A421             loc_A421:                               ; CODE XREF: RAM:A415↑j
RAM:A421 A9 2E                       LDA     #$2E ; '.'
RAM:A423 99 00 01                    STA     $100,Y
RAM:A426 A9 30                       LDA     #$30 ; '0'
RAM:A428 88                          DEY
RAM:A429 99 00 01                    STA     $100,Y
RAM:A42C A9 20                       LDA     #$20 ; ' '
RAM:A42E 88                          DEY
RAM:A42F
RAM:A42F             loc_A42F:                               ; CODE XREF: RAM:A433↓j
RAM:A42F 99 00 01                    STA     $100,Y
RAM:A432 88                          DEY
RAM:A433 10 FA                       BPL     loc_A42F
RAM:A435
RAM:A435             loc_A435:                               ; CODE XREF: RAM:A3FF↑j
RAM:A435 C8                          INY
RAM:A436 D0 03                       BNE     loc_A43B
RAM:A438 4C CA A4                    JMP     loc_A4CA
RAM:A43B             ; ---------------------------------------------------------------------------
RAM:A43B
RAM:A43B             loc_A43B:                               ; CODE XREF: RAM:A3EB↑j
RAM:A43B                                                     ; RAM:A3F1↑j ...
RAM:A43B A5 EC                       LDA     byte_EC
RAM:A43D F0 68                       BEQ     loc_A4A7
RAM:A43F 30 1F                       BMI     loc_A460
RAM:A441 A0 02                       LDY     #2
RAM:A443
RAM:A443             loc_A443:                               ; CODE XREF: RAM:A44B↓j
RAM:A443                                                     ; RAM:A45C↓j
RAM:A443 B9 00 01                    LDA     $100,Y
RAM:A446 F0 12                       BEQ     loc_A45A
RAM:A448 C8                          INY
RAM:A449 C9 2E                       CMP     #$2E ; '.'
RAM:A44B D0 F6                       BNE     loc_A443
RAM:A44D BE 00 01                    LDX     $100,Y
RAM:A450 99 00 01                    STA     $100,Y
RAM:A453 8A                          TXA
RAM:A454 88                          DEY
RAM:A455 99 00 01                    STA     $100,Y
RAM:A458 C6 EC                       DEC     byte_EC
RAM:A45A
RAM:A45A             loc_A45A:                               ; CODE XREF: RAM:A446↑j
RAM:A45A A5 EC                       LDA     byte_EC
RAM:A45C D0 E5                       BNE     loc_A443
RAM:A45E F0 47                       BEQ     loc_A4A7
RAM:A460
RAM:A460             loc_A460:                               ; CODE XREF: RAM:A43F↑j
RAM:A460 A0 02                       LDY     #2
RAM:A462
RAM:A462             loc_A462:                               ; CODE XREF: RAM:A46A↓j
RAM:A462 B9 00 01                    LDA     $100,Y
RAM:A465 F0 14                       BEQ     loc_A47B
RAM:A467 C8                          INY
RAM:A468 C9 2E                       CMP     #$2E ; '.'
RAM:A46A D0 F6                       BNE     loc_A462
RAM:A46C 88                          DEY
RAM:A46D 88                          DEY
RAM:A46E BE 00 01                    LDX     $100,Y
RAM:A471 99 00 01                    STA     $100,Y
RAM:A474 8A                          TXA
RAM:A475 C8                          INY
RAM:A476 99 00 01                    STA     $100,Y
RAM:A479 E6 EC                       INC     byte_EC
RAM:A47B
RAM:A47B             loc_A47B:                               ; CODE XREF: RAM:A465↑j
RAM:A47B A0 01                       LDY     #1
RAM:A47D A9 30                       LDA     #$30 ; '0'
RAM:A47F
RAM:A47F             loc_A47F:                               ; CODE XREF: RAM:A489↓j
RAM:A47F BE 00 01                    LDX     $100,Y
RAM:A482 99 00 01                    STA     $100,Y
RAM:A485 8A                          TXA
RAM:A486 C8                          INY
RAM:A487 E0 00                       CPX     #0
RAM:A489 D0 F4                       BNE     loc_A47F
RAM:A48B E6 ED                       INC     byte_ED
RAM:A48D A5 EC                       LDA     byte_EC
RAM:A48F F0 16                       BEQ     loc_A4A7
RAM:A491
RAM:A491             loc_A491:                               ; CODE XREF: RAM:A4A5↓j
RAM:A491 A9 30                       LDA     #$30 ; '0'
RAM:A493 A0 03                       LDY     #3
RAM:A495
RAM:A495             loc_A495:                               ; CODE XREF: RAM:A49F↓j
RAM:A495 BE 00 01                    LDX     $100,Y
RAM:A498 99 00 01                    STA     $100,Y
RAM:A49B 8A                          TXA
RAM:A49C C8                          INY
RAM:A49D E0 00                       CPX     #0
RAM:A49F D0 F4                       BNE     loc_A495
RAM:A4A1 E6 ED                       INC     byte_ED
RAM:A4A3 E6 EC                       INC     byte_EC
RAM:A4A5 D0 EA                       BNE     loc_A491
RAM:A4A7
RAM:A4A7             loc_A4A7:                               ; CODE XREF: RAM:A43D↑j
RAM:A4A7                                                     ; RAM:A45E↑j ...
RAM:A4A7 E6 EE                       INC     byte_EE
RAM:A4A9
RAM:A4A9             loc_A4A9:                               ; CODE XREF: RAM:A4C4↓j
RAM:A4A9 A4 EE                       LDY     byte_EE
RAM:A4AB B9 00 01                    LDA     $100,Y
RAM:A4AE C9 2E                       CMP     #$2E ; '.'
RAM:A4B0 F0 14                       BEQ     loc_A4C6
RAM:A4B2 A0 00                       LDY     #0
RAM:A4B4 A9 20                       LDA     #$20 ; ' '
RAM:A4B6
RAM:A4B6             loc_A4B6:                               ; CODE XREF: RAM:A4C0↓j
RAM:A4B6 BE 00 01                    LDX     $100,Y
RAM:A4B9 99 00 01                    STA     $100,Y
RAM:A4BC 8A                          TXA
RAM:A4BD C8                          INY
RAM:A4BE E0 00                       CPX     #0
RAM:A4C0 D0 F4                       BNE     loc_A4B6
RAM:A4C2 E6 ED                       INC     byte_ED
RAM:A4C4 D0 E3                       BNE     loc_A4A9
RAM:A4C6
RAM:A4C6             loc_A4C6:                               ; CODE XREF: RAM:A4B0↑j
RAM:A4C6 A5 E8                       LDA     byte_E8
RAM:A4C8 85 ED                       STA     byte_ED
RAM:A4CA
RAM:A4CA             loc_A4CA:                               ; CODE XREF: RAM:A438↑j
RAM:A4CA A5 EA                       LDA     byte_EA
RAM:A4CC 29 01                       AND     #1
RAM:A4CE D0 02                       BNE     loc_A4D2
RAM:A4D0 C6 ED                       DEC     byte_ED
RAM:A4D2
RAM:A4D2             loc_A4D2:                               ; CODE XREF: RAM:loc_A3DD↑j
RAM:A4D2                                                     ; RAM:A4CE↑j
RAM:A4D2 A5 EA                       LDA     byte_EA
RAM:A4D4 29 10                       AND     #$10
RAM:A4D6 F0 44                       BEQ     loc_A51C
RAM:A4D8 A5 EA                       LDA     byte_EA
RAM:A4DA 29 08                       AND     #8
RAM:A4DC D0 3E                       BNE     loc_A51C
RAM:A4DE A4 ED                       LDY     byte_ED
RAM:A4E0
RAM:A4E0             loc_A4E0:                               ; CODE XREF: RAM:A4E8↓j
RAM:A4E0 B9 00 01                    LDA     $100,Y
RAM:A4E3 C9 2E                       CMP     #$2E ; '.'
RAM:A4E5 F0 05                       BEQ     loc_A4EC
RAM:A4E7 88                          DEY
RAM:A4E8 D0 F6                       BNE     loc_A4E0
RAM:A4EA F0 30                       BEQ     loc_A51C
RAM:A4EC
RAM:A4EC             loc_A4EC:                               ; CODE XREF: RAM:A4E5↑j
RAM:A4EC 98                          TYA
RAM:A4ED 48                          PHA
RAM:A4EE
RAM:A4EE             loc_A4EE:                               ; CODE XREF: RAM:A517↓j
RAM:A4EE 68                          PLA
RAM:A4EF A8                          TAY
RAM:A4F0 88                          DEY
RAM:A4F1 88                          DEY
RAM:A4F2 88                          DEY
RAM:A4F3 30 27                       BMI     loc_A51C
RAM:A4F5 F0 25                       BEQ     loc_A51C
RAM:A4F7 B9 FF 00                    LDA     $FF,Y
RAM:A4FA C9 30                       CMP     #$30 ; '0'
RAM:A4FC 90 1E                       BCC     loc_A51C
RAM:A4FE 98                          TYA
RAM:A4FF 48                          PHA
RAM:A500 A9 2C                       LDA     #$2C ; ','
RAM:A502
RAM:A502             loc_A502:                               ; CODE XREF: RAM:A50C↓j
RAM:A502 BE 00 01                    LDX     $100,Y
RAM:A505 99 00 01                    STA     $100,Y
RAM:A508 8A                          TXA
RAM:A509 C8                          INY
RAM:A50A C9 00                       CMP     #0
RAM:A50C D0 F4                       BNE     loc_A502
RAM:A50E 99 00 01                    STA     $100,Y
RAM:A511 E6 ED                       INC     byte_ED
RAM:A513 A5 ED                       LDA     byte_ED
RAM:A515 C9 18                       CMP     #$18
RAM:A517 90 D5                       BCC     loc_A4EE
RAM:A519 4C D7 A1                    JMP     loc_A1D7
RAM:A51C             ; ---------------------------------------------------------------------------
RAM:A51C
RAM:A51C             loc_A51C:                               ; CODE XREF: RAM:A4D6↑j
RAM:A51C                                                     ; RAM:A4DC↑j ...
RAM:A51C A5 EA                       LDA     byte_EA
RAM:A51E 29 40                       AND     #$40 ; '@'
RAM:A520 F0 12                       BEQ     loc_A534
RAM:A522 A0 00                       LDY     #0
RAM:A524
RAM:A524             loc_A524:                               ; CODE XREF: RAM:A531↓j
RAM:A524 B9 00 01                    LDA     $100,Y
RAM:A527 C9 20                       CMP     #$20 ; ' '
RAM:A529 D0 09                       BNE     loc_A534
RAM:A52B A9 2A                       LDA     #$2A ; '*'
RAM:A52D 99 00 01                    STA     $100,Y
RAM:A530 C8                          INY
RAM:A531 4C 24 A5                    JMP     loc_A524
RAM:A534             ; ---------------------------------------------------------------------------
RAM:A534
RAM:A534             loc_A534:                               ; CODE XREF: RAM:A520↑j
RAM:A534                                                     ; RAM:A529↑j
RAM:A534 A5 EA                       LDA     byte_EA
RAM:A536 29 20                       AND     #$20 ; ' '
RAM:A538 F0 1D                       BEQ     loc_A557
RAM:A53A A0 FF                       LDY     #$FF
RAM:A53C
RAM:A53C             loc_A53C:                               ; CODE XREF: RAM:A542↓j
RAM:A53C C8                          INY
RAM:A53D B9 00 01                    LDA     $100,Y
RAM:A540 C9 2E                       CMP     #$2E ; '.'
RAM:A542 90 F8                       BCC     loc_A53C
RAM:A544 A9 24                       LDA     #$24 ; '$'
RAM:A546
RAM:A546             loc_A546:                               ; CODE XREF: RAM:A550↓j
RAM:A546 BE 00 01                    LDX     $100,Y
RAM:A549 99 00 01                    STA     $100,Y
RAM:A54C 8A                          TXA
RAM:A54D C8                          INY
RAM:A54E C9 00                       CMP     #0
RAM:A550 D0 F4                       BNE     loc_A546
RAM:A552 99 00 01                    STA     $100,Y
RAM:A555 E6 ED                       INC     byte_ED
RAM:A557
RAM:A557             loc_A557:                               ; CODE XREF: RAM:A538↑j
RAM:A557 A5 EA                       LDA     byte_EA
RAM:A559 29 04                       AND     #4
RAM:A55B F0 2D                       BEQ     loc_A58A
RAM:A55D A0 00                       LDY     #0
RAM:A55F
RAM:A55F             loc_A55F:                               ; CODE XREF: RAM:A56B↓j
RAM:A55F B9 00 01                    LDA     $100,Y
RAM:A562 C9 30                       CMP     #$30 ; '0'
RAM:A564 B0 24                       BCS     loc_A58A
RAM:A566 C9 2D                       CMP     #$2D ; '-'
RAM:A568 F0 04                       BEQ     loc_A56E
RAM:A56A C8                          INY
RAM:A56B 4C 5F A5                    JMP     loc_A55F
RAM:A56E             ; ---------------------------------------------------------------------------
RAM:A56E
RAM:A56E             loc_A56E:                               ; CODE XREF: RAM:A568↑j
RAM:A56E C6 ED                       DEC     byte_ED
RAM:A570 AA                          TAX
RAM:A571
RAM:A571             loc_A571:                               ; CODE XREF: RAM:A582↓j
RAM:A571 B9 01 01                    LDA     $101,Y
RAM:A574 99 00 01                    STA     $100,Y
RAM:A577 C9 45                       CMP     #$45 ; 'E'
RAM:A579 F0 09                       BEQ     loc_A584
RAM:A57B C4 ED                       CPY     byte_ED
RAM:A57D B0 05                       BCS     loc_A584
RAM:A57F C8                          INY
RAM:A580 C9 00                       CMP     #0
RAM:A582 D0 ED                       BNE     loc_A571
RAM:A584
RAM:A584             loc_A584:                               ; CODE XREF: RAM:A579↑j
RAM:A584                                                     ; RAM:A57D↑j
RAM:A584 8A                          TXA
RAM:A585 99 00 01                    STA     $100,Y
RAM:A588 E6 ED                       INC     byte_ED
RAM:A58A
RAM:A58A             loc_A58A:                               ; CODE XREF: RAM:A55B↑j
RAM:A58A                                                     ; RAM:A564↑j
RAM:A58A A0 00                       LDY     #0
RAM:A58C
RAM:A58C             loc_A58C:                               ; CODE XREF: RAM:A597↓j
RAM:A58C B9 00 01                    LDA     $100,Y
RAM:A58F 09 80                       ORA     #$80
RAM:A591 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:A594 C8                          INY
RAM:A595 C4 ED                       CPY     byte_ED
RAM:A597 D0 F3                       BNE     loc_A58C
RAM:A599 A5 EA                       LDA     byte_EA
RAM:A59B 29 02                       AND     #2
RAM:A59D F0 05                       BEQ     loc_A5A4
RAM:A59F A9 AC                       LDA     #$AC
RAM:A5A1 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:A5A4
RAM:A5A4             loc_A5A4:                               ; CODE XREF: RAM:A59D↑j
RAM:A5A4 E6 EB                       INC     byte_EB
RAM:A5A6
RAM:A5A6             loc_A5A6:                               ; CODE XREF: RAM:A5AF↓j
RAM:A5A6 C6 EB                       DEC     byte_EB
RAM:A5A8 F0 08                       BEQ     loc_A5B2
RAM:A5AA A9 A0                       LDA     #$A0
RAM:A5AC 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:A5AF 4C A6 A5                    JMP     loc_A5A6
RAM:A5B2             ; ---------------------------------------------------------------------------
RAM:A5B2
RAM:A5B2             loc_A5B2:                               ; CODE XREF: RAM:A5A8↑j
RAM:A5B2 4C 5F A1                    JMP     loc_A15F
RAM:A5B5
RAM:A5B5             ; =============== S U B R O U T I N E =======================================
RAM:A5B5
RAM:A5B5
RAM:A5B5             sub_A5B5:                               ; CODE XREF: RAM:loc_A09E↑p
RAM:A5B5 A9 00                       LDA     #0
RAM:A5B7 85 EA                       STA     byte_EA
RAM:A5B9 85 E8                       STA     byte_E8
RAM:A5BB 85 E9                       STA     byte_E9
RAM:A5BD 85 EB                       STA     byte_EB
RAM:A5BF 60                          RTS
RAM:A5BF             ; End of function sub_A5B5
RAM:A5BF
RAM:A5C0
RAM:A5C0             ; =============== S U B R O U T I N E =======================================
RAM:A5C0
RAM:A5C0
RAM:A5C0             sub_A5C0:                               ; CODE XREF: RAM:A0A8↑p
RAM:A5C0 A9 80                       LDA     #$80
RAM:A5C0             ; End of function sub_A5C0
RAM:A5C0
RAM:A5C0             ; ---------------------------------------------------------------------------
RAM:A5C2 2C                          .BYTE $2C
RAM:A5C3             ; ---------------------------------------------------------------------------
RAM:A5C3
RAM:A5C3             loc_A5C3:                               ; CODE XREF: RAM:A0BD↑p
RAM:A5C3 A9 40                       LDA     #$40 ; '@'
RAM:A5C3             ; ---------------------------------------------------------------------------
RAM:A5C5 2C                          .BYTE $2C
RAM:A5C6             ; ---------------------------------------------------------------------------
RAM:A5C6
RAM:A5C6             loc_A5C6:                               ; CODE XREF: RAM:A0D6↑p
RAM:A5C6 A9 20                       LDA     #$20 ; ' '
RAM:A5C6             ; ---------------------------------------------------------------------------
RAM:A5C8 2C                          .BYTE $2C
RAM:A5C9             ; ---------------------------------------------------------------------------
RAM:A5C9
RAM:A5C9             loc_A5C9:                               ; CODE XREF: RAM:A0F2↑p
RAM:A5C9 A9 10                       LDA     #$10
RAM:A5C9             ; ---------------------------------------------------------------------------
RAM:A5CB 2C                          .BYTE $2C
RAM:A5CC             ; ---------------------------------------------------------------------------
RAM:A5CC
RAM:A5CC             loc_A5CC:                               ; CODE XREF: RAM:A129↑p
RAM:A5CC A9 08                       LDA     #8
RAM:A5CC             ; ---------------------------------------------------------------------------
RAM:A5CE 2C                          .BYTE $2C
RAM:A5CF             ; ---------------------------------------------------------------------------
RAM:A5CF
RAM:A5CF             loc_A5CF:                               ; CODE XREF: RAM:A133↑p
RAM:A5CF A9 04                       LDA     #4
RAM:A5CF             ; ---------------------------------------------------------------------------
RAM:A5D1 2C                          .BYTE $2C
RAM:A5D2             ; ---------------------------------------------------------------------------
RAM:A5D2
RAM:A5D2             loc_A5D2:                               ; CODE XREF: RAM:A13D↑p
RAM:A5D2 A9 02                       LDA     #2
RAM:A5D2             ; ---------------------------------------------------------------------------
RAM:A5D4 2C                          .BYTE $2C
RAM:A5D5             ; ---------------------------------------------------------------------------
RAM:A5D5
RAM:A5D5             loc_A5D5:                               ; CODE XREF: RAM:A0FC↑p
RAM:A5D5 A9 01                       LDA     #1
RAM:A5D7 05 EA                       ORA     byte_EA
RAM:A5D9 85 EA                       STA     byte_EA
RAM:A5DB 60                          RTS
RAM:A5DC
RAM:A5DC             ; =============== S U B R O U T I N E =======================================
RAM:A5DC
RAM:A5DC
RAM:A5DC             sub_A5DC:                               ; CODE XREF: RAM:A0AB↑p
RAM:A5DC                                                     ; RAM:A0B4↑p ...
RAM:A5DC A0 00                       LDY     #0
RAM:A5DE E6 B8                       INC     byte_B8
RAM:A5E0 D0 02                       BNE     loc_A5E4
RAM:A5E2 E6 B9                       INC     byte_B9
RAM:A5E4
RAM:A5E4             loc_A5E4:                               ; CODE XREF: sub_A5DC+4↑j
RAM:A5E4 20 BD F5                    JSR     AUX_GET_B8Y
RAM:A5E7 60                          RTS
RAM:A5E7             ; End of function sub_A5DC
RAM:A5E7
RAM:A5E8
RAM:A5E8             ; =============== S U B R O U T I N E =======================================
RAM:A5E8
RAM:A5E8             ; SWAP A,B   Swap variables
RAM:A5E8
RAM:A5E8             SWAP:                                   ; CODE XREF: ROM:F531↓p
RAM:A5E8 20 32 F6                    JSR     AUX_PTRGET      ; Call PTRGET, ensure $8000 ROM switched out
RAM:A5EB 85 85                       STA     byte_85
RAM:A5ED 84 86                       STY     byte_86
RAM:A5EF A5 81                       LDA     byte_81
RAM:A5F1 48                          PHA
RAM:A5F2 A5 82                       LDA     byte_82
RAM:A5F4 48                          PHA
RAM:A5F5 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:A5F8 20 32 F6                    JSR     AUX_PTRGET      ; Call PTRGET, ensure $8000 ROM switched out
RAM:A5FB 68                          PLA
RAM:A5FC 45 82                       EOR     byte_82
RAM:A5FE 30 18                       BMI     loc_A618
RAM:A600 68                          PLA
RAM:A601 45 81                       EOR     byte_81
RAM:A603 30 13                       BMI     loc_A618
RAM:A605 A0 02                       LDY     #2
RAM:A607 24 81                       BIT     byte_81
RAM:A609 30 09                       BMI     loc_A614
RAM:A60B 24 82                       BIT     byte_82
RAM:A60D 30 02                       BMI     loc_A611
RAM:A60F A0 04                       LDY     #4
RAM:A611
RAM:A611             loc_A611:                               ; CODE XREF: SWAP+25↑j
RAM:A611                                                     ; SWAP+2D↓j
RAM:A611 20 1E F5                    JSR     sub_F51E
RAM:A614
RAM:A614             loc_A614:                               ; CODE XREF: SWAP+21↑j
RAM:A614 88                          DEY
RAM:A615 10 FA                       BPL     loc_A611
RAM:A617 60                          RTS
RAM:A618             ; ---------------------------------------------------------------------------
RAM:A618
RAM:A618             loc_A618:                               ; CODE XREF: SWAP+16↑j
RAM:A618                                                     ; SWAP+1B↑j
RAM:A618 A2 A3                       LDX     #$A3
RAM:A61A 4C 01 F4                    JMP     loc_F401
RAM:A61A             ; End of function SWAP
RAM:A61A
RAM:A61D
RAM:A61D             ; =============== S U B R O U T I N E =======================================
RAM:A61D
RAM:A61D
RAM:A61D             sub_A61D:                               ; CODE XREF: sub_99AD+7↑p
RAM:A61D                                                     ; sub_9AB9+63↑p ...
RAM:A61D 20 E3 E9                    JSR     CONUPK
RAM:A620 4C C1 E7                    JMP     FADDT
RAM:A620             ; End of function sub_A61D
RAM:A620
RAM:A623
RAM:A623             ; =============== S U B R O U T I N E =======================================
RAM:A623
RAM:A623
RAM:A623             sub_A623:                               ; CODE XREF: sub_9AB9+3F↑p
RAM:A623                                                     ; sub_9AB9+6A↑p
RAM:A623 20 E3 E9                    JSR     CONUPK
RAM:A626 4C AA E7                    JMP     FSUBT
RAM:A626             ; End of function sub_A623
RAM:A626
RAM:A629
RAM:A629             ; =============== S U B R O U T I N E =======================================
RAM:A629
RAM:A629
RAM:A629             sub_A629:                               ; CODE XREF: sub_99C8+1D↑p
RAM:A629                                                     ; sub_9AA1+8↑j
RAM:A629 20 E3 E9                    JSR     CONUPK
RAM:A62C 4C 69 EA                    JMP     FDIVT
RAM:A62C             ; End of function sub_A629
RAM:A62C
RAM:A62F
RAM:A62F             ; =============== S U B R O U T I N E =======================================
RAM:A62F
RAM:A62F             ; set window with to 40 bytes
RAM:A62F
RAM:A62F             WINDOW_WIDTH_40:                        ; CODE XREF: LO_HGR_PG1_MIX↑p
RAM:A62F                                                     ; LO_HGR_PG1_GFX↑p ...
RAM:A62F A2 28                       LDX     #40
RAM:A62F             ; End of function WINDOW_WIDTH_40
RAM:A62F
RAM:A62F             ; ---------------------------------------------------------------------------
RAM:A631 2C                          .BYTE $2C               ; bit
RAM:A632             ; ---------------------------------------------------------------------------
RAM:A632
RAM:A632             WINDOW_WIDTH_80:                        ; CODE XREF: RGB_HGR_PG1_GFX↑p
RAM:A632                                                     ; RGB_HGR_PG2_GFX↑p
RAM:A632 A2 50                       LDX     #80             ; set window width to 80 bytes
RAM:A634 20 A1 F6                    JSR     set_WIDTH
RAM:A637 A9 00                       LDA     #0
RAM:A639 20 4B FB                    JSR     MSETWN
RAM:A63C A9 14                       LDA     #20
RAM:A63E 85 25                       STA     CVERT
RAM:A640 4C 22 FC                    JMP     MVTAB
RAM:A643             ; ---------------------------------------------------------------------------
RAM:A643
RAM:A643             TEXT
RAM:A643             TEXT character [,background,border]
RAM:A643             TEXT NORMAL
RAM:A643
RAM:A643             TEXT:                                   ; CODE XREF: ROM:F39C↓p
RAM:A643 AD 54 C0                    LDA     VZPAGE1         ; display primary page
RAM:A646 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A649 F0 41                       BEQ     text_end_of_params
RAM:A64B 20 B8 A6                    JSR     get_colour_name ; look for colour name match, convert to index (0=>7)
RAM:A64E E0 00                       CPX     #0
RAM:A650 F0 4D                       BEQ     text40_param_error ; one of the parameters passed in to text command was bad
RAM:A652 E0 09                       CPX     #9              ; Index of 9 == NORMAL
RAM:A654 F0 07                       BEQ     TXT_NORMAL
RAM:A656 B0 47                       BCS     text40_param_error ; one of the parameters passed in to text command was bad
RAM:A658 E0 08                       CPX     #8              ; Index 8 == COMMA. Means no value for this parameter
RAM:A65A F0 10                       BEQ     loc_A66C
RAM:A65A             ; ---------------------------------------------------------------------------
RAM:A65C 2C                          .BYTE $2C               ; bit 00 A2
RAM:A65D             ; ---------------------------------------------------------------------------
RAM:A65D
RAM:A65D             TXT_NORMAL:                             ; CODE XREF: RAM:A654↑j
RAM:A65D A2 00                       LDX     #0
RAM:A65F 20 1C AF                    JSR     SET_TEXT_COLOURS
RAM:A662 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A665 C9 2C                       CMP     #$2C ; ','      ; look for next parameter (optional)
RAM:A667 D0 23                       BNE     text_end_of_params
RAM:A669 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:A66C
RAM:A66C             loc_A66C:                               ; CODE XREF: RAM:A65A↑j
RAM:A66C 20 B8 A6                    JSR     get_colour_name ; look for colour name match, convert to index (0=>7)
RAM:A66F E0 08                       CPX     #8              ; Index 8 == COMMA. Means no value for this parameter
RAM:A671 F0 0F                       BEQ     loc_A682
RAM:A673 B0 2A                       BCS     text40_param_error ; one of the parameters passed in to text command was bad
RAM:A675 9D 18 C0                    STA     BKGRND,X        ; set background colour
RAM:A678 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A67B C9 2C                       CMP     #$2C ; ','      ; look for next parameter (optional)
RAM:A67D D0 0D                       BNE     text_end_of_params
RAM:A67F 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:A682
RAM:A682             loc_A682:                               ; CODE XREF: RAM:A671↑j
RAM:A682 20 B8 A6                    JSR     get_colour_name ; look for colour name match, convert to index (0=>7)
RAM:A685 E0 08                       CPX     #8              ; Index 8 == COMMA. Means no value for this parameter
RAM:A687 B0 16                       BCS     text40_param_error ; one of the parameters passed in to text command was bad
RAM:A689 9D 08 C0                    STA     BKDROP,X        ; set Border colour
RAM:A68C
RAM:A68C             text_end_of_params:                     ; CODE XREF: RAM:A649↑j
RAM:A68C                                                     ; RAM:A667↑j ...
RAM:A68C AD 7B 05                    LDA     TXTMOD          ; TEXT MODE : $10 = 80 cols, $04 = 40 cols
RAM:A68F C9 10                       CMP     #$10
RAM:A691 F0 06                       BEQ     text80_ok
RAM:A693 20 06 F8                    JSR     j_TEXT40
RAM:A696 4C 39 FB                    JMP     loc_FB39
RAM:A699             ; ---------------------------------------------------------------------------
RAM:A699
RAM:A699             text80_ok:                              ; CODE XREF: RAM:A691↑j
RAM:A699 20 09 F8                    JSR     j_TEXT80
RAM:A69C 4C 39 FB                    JMP     loc_FB39
RAM:A69F             ; ---------------------------------------------------------------------------
RAM:A69F
RAM:A69F             text40_param_error:                     ; CODE XREF: RAM:A650↑j
RAM:A69F                                                     ; RAM:A656↑j ...
RAM:A69F AD 7B 05                    LDA     TXTMOD          ; one of the parameters passed in to text command was bad
RAM:A6A2 C9 10                       CMP     #$10
RAM:A6A4 F0 09                       BEQ     text80_param_error
RAM:A6A6 20 06 F8                    JSR     j_TEXT40
RAM:A6A9 20 39 FB                    JSR     loc_FB39
RAM:A6AC 4C 86 F6                    JMP     AUX_SNERR       ; Call Syntax Error, ensure $8000 ROM switched out
RAM:A6AF             ; ---------------------------------------------------------------------------
RAM:A6AF
RAM:A6AF             text80_param_error:                     ; CODE XREF: RAM:A6A4↑j
RAM:A6AF 20 09 F8                    JSR     j_TEXT80
RAM:A6B2 20 39 FB                    JSR     loc_FB39
RAM:A6B5 4C 86 F6                    JMP     AUX_SNERR       ; Call Syntax Error, ensure $8000 ROM switched out
RAM:A6B8
RAM:A6B8             ; =============== S U B R O U T I N E =======================================
RAM:A6B8
RAM:A6B8             ; look for colour name match, convert to index (0=>7)
RAM:A6B8
RAM:A6B8             get_colour_name:                        ; CODE XREF: RAM:A64B↑p
RAM:A6B8                                                     ; RAM:loc_A66C↑p ...
RAM:A6B8 A2 00                       LDX     #0
RAM:A6BA 8E B8 03                    STX     byte_3B8
RAM:A6BD
RAM:A6BD             loc_A6BD:                               ; CODE XREF: get_colour_name+22↓j
RAM:A6BD A0 00                       LDY     #0
RAM:A6BF
RAM:A6BF             loc_A6BF:                               ; CODE XREF: get_colour_name+16↓j
RAM:A6BF BD E3 A6                    LDA     COLOR_NAMES,X
RAM:A6C2 F0 18                       BEQ     loc_A6DC
RAM:A6C4 20 BD F5                    JSR     AUX_GET_B8Y
RAM:A6C7 DD E3 A6                    CMP     COLOR_NAMES,X
RAM:A6CA D0 04                       BNE     loc_A6D0
RAM:A6CC C8                          INY
RAM:A6CD E8                          INX
RAM:A6CE D0 EF                       BNE     loc_A6BF
RAM:A6D0
RAM:A6D0             loc_A6D0:                               ; CODE XREF: get_colour_name+12↑j
RAM:A6D0                                                     ; get_colour_name+1C↓j
RAM:A6D0 E8                          INX
RAM:A6D1 BD E3 A6                    LDA     COLOR_NAMES,X
RAM:A6D4 D0 FA                       BNE     loc_A6D0
RAM:A6D6 E8                          INX
RAM:A6D7 EE B8 03                    INC     byte_3B8
RAM:A6DA D0 E1                       BNE     loc_A6BD
RAM:A6DC
RAM:A6DC             loc_A6DC:                               ; CODE XREF: get_colour_name+A↑j
RAM:A6DC 20 0E F6                    JSR     AUX_ADDON
RAM:A6DF AE B8 03                    LDX     byte_3B8
RAM:A6E2 60                          RTS
RAM:A6E2             ; End of function get_colour_name
RAM:A6E2
RAM:A6E2             ; ---------------------------------------------------------------------------
RAM:A6E3 42 4C 41 43+COLOR_NAMES:    .BYTE 'BLACK',0
RAM:A6E9 52 45 44 00 aRed:           .BYTE 'RED',0
RAM:A6ED 47 52 45 45+aGreen:         .BYTE 'GREEN',0
RAM:A6F3 59 45 4C 4C+aYellow:        .BYTE 'YELLOW',0
RAM:A6FA 42 4C 55 45+aBlue:          .BYTE 'BLUE',0
RAM:A6FF 4D 41 47 45+aMagenta:       .BYTE 'MAGENTA',0
RAM:A707 43 59 41 4E+aCyan:          .BYTE 'CYAN',0
RAM:A70C 57 48 49 54+aWhite:         .BYTE 'WHITE',0
RAM:A712 2C 00                       .BYTE ',',0             ; COMMA
RAM:A714 9D                          .BYTE $9D               ; NORMAL token
RAM:A715 00                          .BYTE   0
RAM:A716 00                          .BYTE   0
RAM:A717             ; ---------------------------------------------------------------------------
RAM:A717             ; START OF FUNCTION CHUNK FOR SOUND
RAM:A717
RAM:A717             loc_A717:                               ; CODE XREF: SOUND:loc_A837↓j
RAM:A717 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A71A 8A                          TXA
RAM:A71B F0 47                       BEQ     loc_A764
RAM:A71D C9 40                       CMP     #$40 ; '@'
RAM:A71F B0 43                       BCS     loc_A764
RAM:A721 0A                          ASL     A
RAM:A722 0A                          ASL     A
RAM:A723 EA                          NOP
RAM:A724 EA                          NOP
RAM:A725 8D A2 02                    STA     byte_2A2
RAM:A728 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:A72B 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A72E E0 00                       CPX     #0
RAM:A730 F0 32                       BEQ     loc_A764
RAM:A732 8E A1 02                    STX     byte_2A1
RAM:A735 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A738 C9 2C                       CMP     #$2C ; ','
RAM:A73A D0 2B                       BNE     loc_A767
RAM:A73C 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:A73F 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A742 E0 04                       CPX     #4
RAM:A744 B0 1E                       BCS     loc_A764
RAM:A746 E0 00                       CPX     #0
RAM:A748 F0 1A                       BEQ     loc_A764
RAM:A74A 8E BC 03                    STX     byte_3BC
RAM:A74D 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A750 C9 2C                       CMP     #$2C ; ','
RAM:A752 D0 13                       BNE     loc_A767
RAM:A754 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:A757 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A75A E0 10                       CPX     #$10
RAM:A75C B0 06                       BCS     loc_A764
RAM:A75E 8E BB 03                    STX     byte_3BB
RAM:A761 4C 67 A7                    JMP     loc_A767
RAM:A764             ; ---------------------------------------------------------------------------
RAM:A764
RAM:A764             loc_A764:                               ; CODE XREF: SOUND-122↑j
RAM:A764                                                     ; SOUND-11E↑j ...
RAM:A764 4C FF F3                    JMP     loc_F3FF
RAM:A767             ; ---------------------------------------------------------------------------
RAM:A767
RAM:A767             loc_A767:                               ; CODE XREF: SOUND-103↑j
RAM:A767                                                     ; SOUND-EB↑j ...
RAM:A767 AE BC 03                    LDX     byte_3BC
RAM:A76A 8E BC 03                    STX     byte_3BC
RAM:A76D BD 33 A8                    LDA     $A833,X
RAM:A770 8D A0 02                    STA     byte_2A0
RAM:A773 AD BB 03                    LDA     byte_3BB
RAM:A776 49 1F                       EOR     #$1F
RAM:A778 4D A0 02                    EOR     byte_2A0
RAM:A77B 20 0C F8                    JSR     j_AUDOUT
RAM:A77E AD A2 02                    LDA     byte_2A2
RAM:A781 20 B0 A7                    JSR     sub_A7B0
RAM:A784 29 0F                       AND     #$F
RAM:A786 0D A0 02                    ORA     byte_2A0
RAM:A789 20 0C F8                    JSR     j_AUDOUT
RAM:A78C AD A2 02                    LDA     byte_2A2
RAM:A78F 4A                          LSR     A
RAM:A790 4A                          LSR     A
RAM:A791 20 0C F8                    JSR     j_AUDOUT
RAM:A794
RAM:A794             loc_A794:                               ; CODE XREF: SOUND-A6↓j
RAM:A794                                                     ; SOUND-97↓j
RAM:A794 20 B5 A7                    JSR     GET_VBLANK_STATE
RAM:A797 30 FB                       BMI     loc_A794
RAM:A799 AD A1 02                    LDA     byte_2A1
RAM:A79C F0 0A                       BEQ     loc_A7A8
RAM:A79E CE A1 02                    DEC     byte_2A1
RAM:A7A1
RAM:A7A1             loc_A7A1:                               ; CODE XREF: SOUND-99↓j
RAM:A7A1 20 B5 A7                    JSR     GET_VBLANK_STATE
RAM:A7A4 10 FB                       BPL     loc_A7A1
RAM:A7A6 30 EC                       BMI     loc_A794
RAM:A7A8
RAM:A7A8             loc_A7A8:                               ; CODE XREF: SOUND-A1↑j
RAM:A7A8 A9 1F                       LDA     #$1F
RAM:A7AA 4D A0 02                    EOR     byte_2A0
RAM:A7AD 4C 0C F8                    JMP     j_AUDOUT
RAM:A7AD             ; END OF FUNCTION CHUNK FOR SOUND
RAM:A7B0
RAM:A7B0             ; =============== S U B R O U T I N E =======================================
RAM:A7B0
RAM:A7B0
RAM:A7B0             sub_A7B0:                               ; CODE XREF: SOUND-BC↑p
RAM:A7B0 0A                          ASL     A
RAM:A7B1 0A                          ASL     A
RAM:A7B2 0A                          ASL     A
RAM:A7B3 0A                          ASL     A
RAM:A7B4 60                          RTS
RAM:A7B4             ; End of function sub_A7B0
RAM:A7B4
RAM:A7B5
RAM:A7B5             ; =============== S U B R O U T I N E =======================================
RAM:A7B5
RAM:A7B5
RAM:A7B5             GET_VBLANK_STATE:                       ; CODE XREF: SOUND:loc_A794↑p
RAM:A7B5                                                     ; SOUND:loc_A7A1↑p ...
RAM:A7B5 AD C3 C1                    LDA     VERTSC          ; Read Vertical blank status
RAM:A7B8 60                          RTS
RAM:A7B8             ; End of function GET_VBLANK_STATE
RAM:A7B8
RAM:A7B9
RAM:A7B9             ; =============== S U B R O U T I N E =======================================
RAM:A7B9
RAM:A7B9             ; noise periodicity, duration, [volume, freq control]
RAM:A7B9
RAM:A7B9             NOISE:                                  ; CODE XREF: ROM:F70A↓p
RAM:A7B9
RAM:A7B9             ; FUNCTION CHUNK AT ROM:F3FF SIZE 00000008 BYTES
RAM:A7B9
RAM:A7B9 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A7BC E0 00                       CPX     #0
RAM:A7BE F0 43                       BEQ     loc_A803
RAM:A7C0 E0 03                       CPX     #3
RAM:A7C2 B0 3F                       BCS     loc_A803
RAM:A7C4 8E A2 02                    STX     byte_2A2
RAM:A7C7 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:A7CA 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A7CD E0 00                       CPX     #0
RAM:A7CF F0 32                       BEQ     loc_A803
RAM:A7D1 8E A1 02                    STX     byte_2A1
RAM:A7D4 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A7D7 C9 2C                       CMP     #$2C ; ','      ; volume parameter?
RAM:A7D9 D0 2B                       BNE     loc_A806
RAM:A7DB 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:A7DE 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A7E1 E0 10                       CPX     #$10
RAM:A7E3 B0 1E                       BCS     loc_A803
RAM:A7E5 8E BB 03                    STX     byte_3BB
RAM:A7E8 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A7EB C9 2C                       CMP     #$2C ; ','      ; freq control parameter?
RAM:A7ED D0 17                       BNE     loc_A806
RAM:A7EF 20 77 F6                    JSR     CMP_B8_Y_ROM_OUT ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
RAM:A7F2 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A7F5 E0 00                       CPX     #0
RAM:A7F7 F0 0A                       BEQ     loc_A803
RAM:A7F9 E0 05                       CPX     #5
RAM:A7FB B0 06                       BCS     loc_A803
RAM:A7FD CA                          DEX
RAM:A7FE 8E BA 03                    STX     byte_3BA
RAM:A801 90 03                       BCC     loc_A806
RAM:A803
RAM:A803             loc_A803:                               ; CODE XREF: NOISE+5↑j
RAM:A803                                                     ; NOISE+9↑j ...
RAM:A803 4C FF F3                    JMP     loc_F3FF
RAM:A806             ; ---------------------------------------------------------------------------
RAM:A806
RAM:A806             loc_A806:                               ; CODE XREF: NOISE+20↑j
RAM:A806                                                     ; NOISE+34↑j ...
RAM:A806 AD A2 02                    LDA     byte_2A2
RAM:A809 0A                          ASL     A
RAM:A80A 0A                          ASL     A
RAM:A80B 0D BA 03                    ORA     byte_3BA
RAM:A80E 09 E0                       ORA     #$E0
RAM:A810 20 0C F8                    JSR     j_AUDOUT
RAM:A813 AD BB 03                    LDA     byte_3BB
RAM:A816 49 FF                       EOR     #$FF
RAM:A818 20 0C F8                    JSR     j_AUDOUT
RAM:A81B
RAM:A81B             loc_A81B:                               ; CODE XREF: NOISE+65↓j
RAM:A81B                                                     ; NOISE+74↓j
RAM:A81B 20 B5 A7                    JSR     GET_VBLANK_STATE
RAM:A81E 30 FB                       BMI     loc_A81B
RAM:A820 AD A1 02                    LDA     byte_2A1
RAM:A823 F0 0A                       BEQ     loc_A82F
RAM:A825 CE A1 02                    DEC     byte_2A1
RAM:A828
RAM:A828             loc_A828:                               ; CODE XREF: NOISE+72↓j
RAM:A828 20 B5 A7                    JSR     GET_VBLANK_STATE
RAM:A82B 10 FB                       BPL     loc_A828
RAM:A82D 30 EC                       BMI     loc_A81B
RAM:A82F
RAM:A82F             loc_A82F:                               ; CODE XREF: NOISE+6A↑j
RAM:A82F A9 FF                       LDA     #$FF
RAM:A831 4C 0C F8                    JMP     j_AUDOUT
RAM:A831             ; End of function NOISE
RAM:A831
RAM:A831             ; ---------------------------------------------------------------------------
RAM:A834 80                          .BYTE $80
RAM:A835 A0                          .BYTE $A0
RAM:A836 C0                          .BYTE $C0
RAM:A837             ; ---------------------------------------------------------------------------
RAM:A837             ; START OF FUNCTION CHUNK FOR SOUND
RAM:A837
RAM:A837             loc_A837:                               ; CODE XREF: SOUND+1B↓j
RAM:A837                                                     ; SOUND+1F↓j
RAM:A837 4C 17 A7                    JMP     loc_A717
RAM:A83A             ; ---------------------------------------------------------------------------
RAM:A83A
RAM:A83A             loc_A83A:                               ; CODE XREF: SOUND+29↓j
RAM:A83A                                                     ; SOUND+2F↓j ...
RAM:A83A 4C FF F3                    JMP     loc_F3FF
RAM:A83A             ; END OF FUNCTION CHUNK FOR SOUND
RAM:A83D
RAM:A83D             ; =============== S U B R O U T I N E =======================================
RAM:A83D
RAM:A83D
RAM:A83D             SOUND:                                  ; CODE XREF: ROM:F6F8↓p
RAM:A83D
RAM:A83D             ; FUNCTION CHUNK AT RAM:A717 SIZE 00000099 BYTES
RAM:A83D             ; FUNCTION CHUNK AT RAM:A837 SIZE 00000006 BYTES
RAM:A83D             ; FUNCTION CHUNK AT RAM:AAFE SIZE 0000006B BYTES
RAM:A83D             ; FUNCTION CHUNK AT ROM:F3FF SIZE 00000008 BYTES
RAM:A83D
RAM:A83D 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A840 D0 03                       BNE     loc_A845
RAM:A842 4C 66 A9                    JMP     loc_A966
RAM:A845             ; ---------------------------------------------------------------------------
RAM:A845
RAM:A845             loc_A845:                               ; CODE XREF: SOUND+3↑j
RAM:A845 C9 B8                       CMP     #$B8
RAM:A847 D0 06                       BNE     loc_A84F
RAM:A849 20 DE F4                    JSR     AUX_CHRGET
RAM:A84C 4C FE AA                    JMP     loc_AAFE
RAM:A84F             ; ---------------------------------------------------------------------------
RAM:A84F
RAM:A84F             loc_A84F:                               ; CODE XREF: SOUND+A↑j
RAM:A84F C9 54                       CMP     #$54 ; 'T'
RAM:A851 D0 03                       BNE     loc_A856
RAM:A853 4C 39 A9                    JMP     loc_A939
RAM:A856             ; ---------------------------------------------------------------------------
RAM:A856
RAM:A856             loc_A856:                               ; CODE XREF: SOUND+14↑j
RAM:A856 C9 48                       CMP     #$48 ; 'H'
RAM:A858 B0 DD                       BCS     loc_A837
RAM:A85A C9 41                       CMP     #$41 ; 'A'
RAM:A85C 90 D9                       BCC     loc_A837
RAM:A85E 29 07                       AND     #7
RAM:A860 48                          PHA
RAM:A861 20 DE F4                    JSR     AUX_CHRGET
RAM:A864 C9 31                       CMP     #$31 ; '1'
RAM:A866 90 D2                       BCC     loc_A83A
RAM:A868 C9 38                       CMP     #$38 ; '8'
RAM:A86A 90 03                       BCC     loc_A86F
RAM:A86C 4C 3A A8                    JMP     loc_A83A
RAM:A86F             ; ---------------------------------------------------------------------------
RAM:A86F
RAM:A86F             loc_A86F:                               ; CODE XREF: SOUND+2D↑j
RAM:A86F 29 07                       AND     #7
RAM:A871 48                          PHA
RAM:A872 20 DE F4                    JSR     AUX_CHRGET
RAM:A875 C9 23                       CMP     #$23 ; '#'
RAM:A877 F0 0F                       BEQ     loc_A888
RAM:A879 C9 62                       CMP     #$62 ; 'b'
RAM:A87B F0 15                       BEQ     loc_A892
RAM:A87D C9 46                       CMP     #$46 ; 'F'
RAM:A87F F0 11                       BEQ     loc_A892
RAM:A881
RAM:A881             loc_A881:                               ; CODE XREF: SOUND+52↓j
RAM:A881 C9 2C                       CMP     #$2C ; ','
RAM:A883 F0 2B                       BEQ     loc_A8B0
RAM:A885 4C 36 A9                    JMP     loc_A936
RAM:A888             ; ---------------------------------------------------------------------------
RAM:A888
RAM:A888             loc_A888:                               ; CODE XREF: SOUND+3A↑j
RAM:A888                                                     ; SOUND+71↓j
RAM:A888 68                          PLA
RAM:A889 09 08                       ORA     #8
RAM:A88B 48                          PHA
RAM:A88C
RAM:A88C             loc_A88C:                               ; CODE XREF: SOUND+6A↓j
RAM:A88C                                                     ; SOUND+6F↓j
RAM:A88C 20 DE F4                    JSR     AUX_CHRGET
RAM:A88F 4C 81 A8                    JMP     loc_A881
RAM:A892             ; ---------------------------------------------------------------------------
RAM:A892
RAM:A892             loc_A892:                               ; CODE XREF: SOUND+3E↑j
RAM:A892                                                     ; SOUND+42↑j
RAM:A892 BA                          TSX
RAM:A893 DE 02 01                    DEC     $102,X
RAM:A896 BD 02 01                    LDA     $102,X
RAM:A899 D0 05                       BNE     loc_A8A0
RAM:A89B A9 07                       LDA     #7
RAM:A89D 9D 02 01                    STA     $102,X
RAM:A8A0
RAM:A8A0             loc_A8A0:                               ; CODE XREF: SOUND+5C↑j
RAM:A8A0 C9 02                       CMP     #2
RAM:A8A2 D0 06                       BNE     loc_A8AA
RAM:A8A4 DE 01 01                    DEC     $101,X
RAM:A8A7 4C 8C A8                    JMP     loc_A88C
RAM:A8AA             ; ---------------------------------------------------------------------------
RAM:A8AA
RAM:A8AA             loc_A8AA:                               ; CODE XREF: SOUND+65↑j
RAM:A8AA C9 05                       CMP     #5
RAM:A8AC F0 DE                       BEQ     loc_A88C
RAM:A8AE D0 D8                       BNE     loc_A888
RAM:A8B0
RAM:A8B0             loc_A8B0:                               ; CODE XREF: SOUND+46↑j
RAM:A8B0 68                          PLA
RAM:A8B1 0A                          ASL     A
RAM:A8B2 0A                          ASL     A
RAM:A8B3 0A                          ASL     A
RAM:A8B4 BA                          TSX
RAM:A8B5 1D 01 01                    ORA     $101,X
RAM:A8B8 9D 01 01                    STA     $101,X
RAM:A8BB 20 DE F4                    JSR     AUX_CHRGET
RAM:A8BE 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A8C1 8A                          TXA
RAM:A8C2 F0 04                       BEQ     loc_A8C8
RAM:A8C4 E0 20                       CPX     #$20 ; ' '
RAM:A8C6 90 03                       BCC     loc_A8CB
RAM:A8C8
RAM:A8C8             loc_A8C8:                               ; CODE XREF: SOUND+85↑j
RAM:A8C8 4C 3A A8                    JMP     loc_A83A
RAM:A8CB             ; ---------------------------------------------------------------------------
RAM:A8CB
RAM:A8CB             loc_A8CB:                               ; CODE XREF: SOUND+89↑j
RAM:A8CB 48                          PHA
RAM:A8CC 29 10                       AND     #$10
RAM:A8CE F0 09                       BEQ     loc_A8D9
RAM:A8D0 A9 80                       LDA     #$80
RAM:A8D2 BA                          TSX
RAM:A8D3 1D 02 01                    ORA     $102,X
RAM:A8D6 9D 02 01                    STA     $102,X
RAM:A8D9
RAM:A8D9             loc_A8D9:                               ; CODE XREF: SOUND+91↑j
RAM:A8D9 68                          PLA
RAM:A8DA 29 0F                       AND     #$F
RAM:A8DC 0A                          ASL     A
RAM:A8DD 0A                          ASL     A
RAM:A8DE 0A                          ASL     A
RAM:A8DF 0A                          ASL     A
RAM:A8E0 48                          PHA
RAM:A8E1 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A8E4 F0 24                       BEQ     loc_A90A
RAM:A8E6 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:A8E9 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A8EC CA                          DEX
RAM:A8ED 30 47                       BMI     loc_A936
RAM:A8EF E0 03                       CPX     #3
RAM:A8F1 B0 43                       BCS     loc_A936
RAM:A8F3 8E 01 03                    STX     byte_301
RAM:A8F6 20 BD F4                    JSR     AUX_CHRGOT      ; call CHRGOT, ensure $8000 ROM switched out
RAM:A8F9 C9 2C                       CMP     #$2C ; ','
RAM:A8FB D0 0D                       BNE     loc_A90A
RAM:A8FD 20 75 F6                    JSR     CMP_COMMA_B8_Y_ROM_OUT ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
RAM:A900 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A903 E0 10                       CPX     #$10
RAM:A905 B0 2F                       BCS     loc_A936
RAM:A907 8E 00 03                    STX     byte_300
RAM:A90A
RAM:A90A             loc_A90A:                               ; CODE XREF: SOUND+A7↑j
RAM:A90A                                                     ; SOUND+BE↑j
RAM:A90A AE 01 03                    LDX     byte_301
RAM:A90D AD 00 03                    LDA     byte_300
RAM:A910 49 FF                       EOR     #$FF
RAM:A912 29 0F                       AND     #$F
RAM:A914 BA                          TSX
RAM:A915 1D 01 01                    ORA     $101,X
RAM:A918 9D 01 01                    STA     $101,X
RAM:A91B AD 01 03                    LDA     byte_301
RAM:A91E 0A                          ASL     A
RAM:A91F 0A                          ASL     A
RAM:A920 0A                          ASL     A
RAM:A921 0A                          ASL     A
RAM:A922 AE 01 03                    LDX     byte_301
RAM:A925 18                          CLC
RAM:A926 7D 03 03                    ADC     $303,X
RAM:A929 FE 03 03                    INC     $303,X
RAM:A92C AA                          TAX
RAM:A92D 68                          PLA
RAM:A92E 9D 0C 03                    STA     $30C,X
RAM:A931 68                          PLA
RAM:A932 9D 3C 03                    STA     $33C,X
RAM:A935 60                          RTS
RAM:A936             ; ---------------------------------------------------------------------------
RAM:A936
RAM:A936             loc_A936:                               ; CODE XREF: SOUND+48↑j
RAM:A936                                                     ; SOUND+B0↑j ...
RAM:A936 4C 86 F6                    JMP     AUX_SNERR       ; Call Syntax Error, ensure $8000 ROM switched out
RAM:A939             ; ---------------------------------------------------------------------------
RAM:A939
RAM:A939             loc_A939:                               ; CODE XREF: SOUND+16↑j
RAM:A939 20 DE F4                    JSR     AUX_CHRGET
RAM:A93C C9 45                       CMP     #$45 ; 'E'
RAM:A93E D0 F6                       BNE     loc_A936
RAM:A940 20 DE F4                    JSR     AUX_CHRGET
RAM:A943 C9 4D                       CMP     #$4D ; 'M'
RAM:A945 D0 EF                       BNE     loc_A936
RAM:A947 20 DE F4                    JSR     AUX_CHRGET
RAM:A94A C9 50                       CMP     #$50 ; 'P'
RAM:A94C D0 E8                       BNE     loc_A936
RAM:A94E 20 DE F4                    JSR     AUX_CHRGET
RAM:A951 C9 4F                       CMP     #$4F ; 'O'
RAM:A953 D0 E1                       BNE     loc_A936
RAM:A955 20 DE F4                    JSR     AUX_CHRGET
RAM:A958 20 E6 F5                    JSR     AUX_GETBYT      ; call GETBYT from $8000 ROM area
RAM:A95B E0 00                       CPX     #0
RAM:A95D D0 03                       BNE     loc_A962
RAM:A95F 4C 3A A8                    JMP     loc_A83A
RAM:A962             ; ---------------------------------------------------------------------------
RAM:A962
RAM:A962             loc_A962:                               ; CODE XREF: SOUND+120↑j
RAM:A962 8E 02 03                    STX     byte_302
RAM:A965 60                          RTS
RAM:A966             ; ---------------------------------------------------------------------------
RAM:A966
RAM:A966             loc_A966:                               ; CODE XREF: SOUND+5↑j
RAM:A966 A2 FF                       LDX     #$FF
RAM:A968 8E 09 03                    STX     byte_309
RAM:A96B 8E 0A 03                    STX     byte_30A
RAM:A96E 8E 0B 03                    STX     byte_30B
RAM:A971 E8                          INX
RAM:A972 8E 7F 04                    STX     byte_47F
RAM:A975 E8                          INX
RAM:A976 8E 06 03                    STX     byte_306
RAM:A979 8E 07 03                    STX     byte_307
RAM:A97C 8E 08 03                    STX     byte_308
RAM:A97F
RAM:A97F             loc_A97F:                               ; CODE XREF: SOUND+1A0↓j
RAM:A97F                                                     ; SOUND+1AD↓j
RAM:A97F CE 06 03                    DEC     byte_306
RAM:A982 D0 03                       BNE     loc_A987
RAM:A984 20 05 AA                    JSR     sub_AA05
RAM:A987
RAM:A987             loc_A987:                               ; CODE XREF: SOUND+145↑j
RAM:A987 AD 06 03                    LDA     byte_306
RAM:A98A C9 01                       CMP     #1
RAM:A98C D0 03                       BNE     loc_A991
RAM:A98E 20 ED A9                    JSR     sub_A9ED
RAM:A991
RAM:A991             loc_A991:                               ; CODE XREF: SOUND+14F↑j
RAM:A991 CE 07 03                    DEC     byte_307
RAM:A994 D0 03                       BNE     loc_A999
RAM:A996 20 58 AA                    JSR     sub_AA58
RAM:A999
RAM:A999             loc_A999:                               ; CODE XREF: SOUND+157↑j
RAM:A999 AD 07 03                    LDA     byte_307
RAM:A99C C9 01                       CMP     #1
RAM:A99E D0 03                       BNE     loc_A9A3
RAM:A9A0 20 F3 A9                    JSR     sub_A9F3
RAM:A9A3
RAM:A9A3             loc_A9A3:                               ; CODE XREF: SOUND+161↑j
RAM:A9A3 CE 08 03                    DEC     byte_308
RAM:A9A6 D0 03                       BNE     loc_A9AB
RAM:A9A8 20 AB AA                    JSR     sub_AAAB
RAM:A9AB
RAM:A9AB             loc_A9AB:                               ; CODE XREF: SOUND+169↑j
RAM:A9AB AD 08 03                    LDA     byte_308
RAM:A9AE C9 01                       CMP     #1
RAM:A9B0 D0 03                       BNE     loc_A9B5
RAM:A9B2 20 FC A9                    JSR     sub_A9FC
RAM:A9B5
RAM:A9B5             loc_A9B5:                               ; CODE XREF: SOUND+173↑j
RAM:A9B5 AD 7F 04                    LDA     byte_47F
RAM:A9B8 F0 03                       BEQ     loc_A9BD
RAM:A9BA 4C 0A AB                    JMP     loc_AB0A
RAM:A9BD             ; ---------------------------------------------------------------------------
RAM:A9BD
RAM:A9BD             loc_A9BD:                               ; CODE XREF: SOUND+17B↑j
RAM:A9BD AD 02 03                    LDA     byte_302
RAM:A9C0
RAM:A9C0             loc_A9C0:                               ; CODE XREF: SOUND+195↓j
RAM:A9C0 A2 B0                       LDX     #$B0
RAM:A9C2
RAM:A9C2             loc_A9C2:                               ; CODE XREF: SOUND+188↓j
RAM:A9C2                                                     ; SOUND+190↓j
RAM:A9C2 2C C2 C1                    BIT     HORIZSC         ; Read Horizontal blank status
RAM:A9C5 10 FB                       BPL     loc_A9C2
RAM:A9C7
RAM:A9C7             loc_A9C7:                               ; CODE XREF: SOUND+18D↓j
RAM:A9C7 2C C2 C1                    BIT     HORIZSC         ; Read Horizontal blank status
RAM:A9CA 30 FB                       BMI     loc_A9C7
RAM:A9CC CA                          DEX
RAM:A9CD D0 F3                       BNE     loc_A9C2
RAM:A9CF 18                          CLC
RAM:A9D0 E9 00                       SBC     #0
RAM:A9D2 B0 EC                       BCS     loc_A9C0
RAM:A9D4
RAM:A9D4             loc_A9D4:                               ; CODE XREF: SOUND+329↓j
RAM:A9D4 AD 03 03                    LDA     byte_303
RAM:A9D7 0D 04 03                    ORA     byte_304
RAM:A9DA 0D 05 03                    ORA     byte_305
RAM:A9DD D0 A0                       BNE     loc_A97F
RAM:A9DF AD 06 03                    LDA     byte_306
RAM:A9E2 0D 07 03                    ORA     byte_307
RAM:A9E5 0D 08 03                    ORA     byte_308
RAM:A9E8 49 01                       EOR     #1
RAM:A9EA D0 93                       BNE     loc_A97F
RAM:A9EC 60                          RTS
RAM:A9EC             ; End of function SOUND
RAM:A9EC
RAM:A9ED
RAM:A9ED             ; =============== S U B R O U T I N E =======================================
RAM:A9ED
RAM:A9ED
RAM:A9ED             sub_A9ED:                               ; CODE XREF: SOUND+151↑p
RAM:A9ED A9 01                       LDA     #1
RAM:A9EF 8D 7F 04                    STA     byte_47F
RAM:A9F2 60                          RTS
RAM:A9F2             ; End of function sub_A9ED
RAM:A9F2
RAM:A9F3
RAM:A9F3             ; =============== S U B R O U T I N E =======================================
RAM:A9F3
RAM:A9F3
RAM:A9F3             sub_A9F3:                               ; CODE XREF: SOUND+163↑p
RAM:A9F3 AD 7F 04                    LDA     byte_47F
RAM:A9F6 09 80                       ORA     #$80
RAM:A9F8 8D 7F 04                    STA     byte_47F
RAM:A9FB 60                          RTS
RAM:A9FB             ; End of function sub_A9F3
RAM:A9FB
RAM:A9FC
RAM:A9FC             ; =============== S U B R O U T I N E =======================================
RAM:A9FC
RAM:A9FC
RAM:A9FC             sub_A9FC:                               ; CODE XREF: SOUND+175↑p
RAM:A9FC AD 7F 04                    LDA     byte_47F
RAM:A9FF 09 40                       ORA     #$40 ; '@'
RAM:AA01 8D 7F 04                    STA     byte_47F
RAM:AA04 60                          RTS
RAM:AA04             ; End of function sub_A9FC
RAM:AA04
RAM:AA05
RAM:AA05             ; =============== S U B R O U T I N E =======================================
RAM:AA05
RAM:AA05
RAM:AA05             sub_AA05:                               ; CODE XREF: SOUND+147↑p
RAM:AA05 AE 03 03                    LDX     byte_303
RAM:AA08 D0 0E                       BNE     loc_AA18
RAM:AA0A A9 9F                       LDA     #$9F
RAM:AA0C 20 0C F8                    JSR     j_AUDOUT
RAM:AA0F A9 0F                       LDA     #$F
RAM:AA11 8D FF 04                    STA     byte_4FF
RAM:AA14 EE 06 03                    INC     byte_306
RAM:AA17 60                          RTS
RAM:AA18             ; ---------------------------------------------------------------------------
RAM:AA18
RAM:AA18             loc_AA18:                               ; CODE XREF: sub_AA05+3↑j
RAM:AA18 CE 03 03                    DEC     byte_303
RAM:AA1B EE 09 03                    INC     byte_309
RAM:AA1E AE 09 03                    LDX     byte_309
RAM:AA21 BD 3C 03                    LDA     $33C,X
RAM:AA24 0A                          ASL     A
RAM:AA25 08                          PHP
RAM:AA26 AA                          TAX
RAM:AA27 BD 6A AB                    LDA     unk_AB6A,X
RAM:AA2A 48                          PHA
RAM:AA2B BD 69 AB                    LDA     unk_AB69,X
RAM:AA2E 09 80                       ORA     #$80
RAM:AA30 20 0C F8                    JSR     j_AUDOUT
RAM:AA33 68                          PLA
RAM:AA34 20 0C F8                    JSR     j_AUDOUT
RAM:AA37 AE 09 03                    LDX     byte_309
RAM:AA3A BD 0C 03                    LDA     $30C,X
RAM:AA3D 29 0F                       AND     #$F
RAM:AA3F 8D FF 04                    STA     byte_4FF
RAM:AA42 09 90                       ORA     #$90
RAM:AA44 20 0C F8                    JSR     j_AUDOUT
RAM:AA47 AE 09 03                    LDX     byte_309
RAM:AA4A BD 0C 03                    LDA     $30C,X
RAM:AA4D 29 F0                       AND     #$F0
RAM:AA4F 28                          PLP
RAM:AA50 6A                          ROR     A
RAM:AA51 6A                          ROR     A
RAM:AA52 6A                          ROR     A
RAM:AA53 6A                          ROR     A
RAM:AA54 8D 06 03                    STA     byte_306
RAM:AA57 60                          RTS
RAM:AA57             ; End of function sub_AA05
RAM:AA57
RAM:AA58
RAM:AA58             ; =============== S U B R O U T I N E =======================================
RAM:AA58
RAM:AA58
RAM:AA58             sub_AA58:                               ; CODE XREF: SOUND+159↑p
RAM:AA58 AE 04 03                    LDX     byte_304
RAM:AA5B D0 0E                       BNE     loc_AA6B
RAM:AA5D A9 BF                       LDA     #$BF
RAM:AA5F 20 0C F8                    JSR     j_AUDOUT
RAM:AA62 A9 0F                       LDA     #$F
RAM:AA64 8D 7F 05                    STA     byte_57F
RAM:AA67 EE 07 03                    INC     byte_307
RAM:AA6A 60                          RTS
RAM:AA6B             ; ---------------------------------------------------------------------------
RAM:AA6B
RAM:AA6B             loc_AA6B:                               ; CODE XREF: sub_AA58+3↑j
RAM:AA6B CE 04 03                    DEC     byte_304
RAM:AA6E EE 0A 03                    INC     byte_30A
RAM:AA71 AE 0A 03                    LDX     byte_30A
RAM:AA74 BD 4C 03                    LDA     $34C,X
RAM:AA77 0A                          ASL     A
RAM:AA78 08                          PHP
RAM:AA79 AA                          TAX
RAM:AA7A BD 6A AB                    LDA     unk_AB6A,X
RAM:AA7D 48                          PHA
RAM:AA7E BD 69 AB                    LDA     unk_AB69,X
RAM:AA81 09 A0                       ORA     #$A0
RAM:AA83 20 0C F8                    JSR     j_AUDOUT
RAM:AA86 68                          PLA
RAM:AA87 20 0C F8                    JSR     j_AUDOUT
RAM:AA8A AE 0A 03                    LDX     byte_30A
RAM:AA8D BD 1C 03                    LDA     $31C,X
RAM:AA90 29 0F                       AND     #$F
RAM:AA92 8D 7F 05                    STA     byte_57F
RAM:AA95 09 B0                       ORA     #$B0
RAM:AA97 20 0C F8                    JSR     j_AUDOUT
RAM:AA9A AE 0A 03                    LDX     byte_30A
RAM:AA9D BD 1C 03                    LDA     $31C,X
RAM:AAA0 29 F0                       AND     #$F0
RAM:AAA2 28                          PLP
RAM:AAA3 6A                          ROR     A
RAM:AAA4 6A                          ROR     A
RAM:AAA5 6A                          ROR     A
RAM:AAA6 6A                          ROR     A
RAM:AAA7 8D 07 03                    STA     byte_307
RAM:AAAA 60                          RTS
RAM:AAAA             ; End of function sub_AA58
RAM:AAAA
RAM:AAAB
RAM:AAAB             ; =============== S U B R O U T I N E =======================================
RAM:AAAB
RAM:AAAB
RAM:AAAB             sub_AAAB:                               ; CODE XREF: SOUND+16B↑p
RAM:AAAB AE 05 03                    LDX     byte_305
RAM:AAAE D0 0E                       BNE     loc_AABE
RAM:AAB0 A9 DF                       LDA     #$DF
RAM:AAB2 20 0C F8                    JSR     j_AUDOUT
RAM:AAB5 A9 0F                       LDA     #$F
RAM:AAB7 8D FF 05                    STA     byte_5FF
RAM:AABA EE 08 03                    INC     byte_308
RAM:AABD 60                          RTS
RAM:AABE             ; ---------------------------------------------------------------------------
RAM:AABE
RAM:AABE             loc_AABE:                               ; CODE XREF: sub_AAAB+3↑j
RAM:AABE CE 05 03                    DEC     byte_305
RAM:AAC1 EE 0B 03                    INC     byte_30B
RAM:AAC4 AE 0B 03                    LDX     byte_30B
RAM:AAC7 BD 5C 03                    LDA     $35C,X
RAM:AACA 0A                          ASL     A
RAM:AACB 08                          PHP
RAM:AACC AA                          TAX
RAM:AACD BD 6A AB                    LDA     unk_AB6A,X
RAM:AAD0 48                          PHA
RAM:AAD1 BD 69 AB                    LDA     unk_AB69,X
RAM:AAD4 09 C0                       ORA     #$C0
RAM:AAD6 20 0C F8                    JSR     j_AUDOUT
RAM:AAD9 68                          PLA
RAM:AADA 20 0C F8                    JSR     j_AUDOUT
RAM:AADD AE 0B 03                    LDX     byte_30B
RAM:AAE0 BD 2C 03                    LDA     $32C,X
RAM:AAE3 29 0F                       AND     #$F
RAM:AAE5 8D FF 05                    STA     byte_5FF
RAM:AAE8 09 D0                       ORA     #$D0
RAM:AAEA 20 0C F8                    JSR     j_AUDOUT
RAM:AAED AE 0B 03                    LDX     byte_30B
RAM:AAF0 BD 2C 03                    LDA     $32C,X
RAM:AAF3 29 F0                       AND     #$F0
RAM:AAF5 28                          PLP
RAM:AAF6 6A                          ROR     A
RAM:AAF7 6A                          ROR     A
RAM:AAF8 6A                          ROR     A
RAM:AAF9 6A                          ROR     A
RAM:AAFA 8D 08 03                    STA     byte_308
RAM:AAFD 60                          RTS
RAM:AAFD             ; End of function sub_AAAB
RAM:AAFD
RAM:AAFE             ; ---------------------------------------------------------------------------
RAM:AAFE             ; START OF FUNCTION CHUNK FOR SOUND
RAM:AAFE
RAM:AAFE             loc_AAFE:                               ; CODE XREF: SOUND+F↑j
RAM:AAFE A9 00                       LDA     #0
RAM:AB00 8D 03 03                    STA     byte_303
RAM:AB03 8D 04 03                    STA     byte_304
RAM:AB06 8D 05 03                    STA     byte_305
RAM:AB09 60                          RTS
RAM:AB0A             ; ---------------------------------------------------------------------------
RAM:AB0A
RAM:AB0A             loc_AB0A:                               ; CODE XREF: SOUND+17D↑j
RAM:AB0A A0 10                       LDY     #$10
RAM:AB0C
RAM:AB0C             loc_AB0C:                               ; CODE XREF: SOUND+324↓j
RAM:AB0C AD 7F 04                    LDA     byte_47F
RAM:AB0F 6A                          ROR     A
RAM:AB10 90 0F                       BCC     loc_AB21
RAM:AB12 EE FF 04                    INC     byte_4FF
RAM:AB15 AD FF 04                    LDA     byte_4FF
RAM:AB18 C9 10                       CMP     #$10
RAM:AB1A B0 05                       BCS     loc_AB21
RAM:AB1C 09 90                       ORA     #$90
RAM:AB1E 20 0C F8                    JSR     j_AUDOUT
RAM:AB21
RAM:AB21             loc_AB21:                               ; CODE XREF: SOUND+2D3↑j
RAM:AB21                                                     ; SOUND+2DD↑j
RAM:AB21 2C 7F 04                    BIT     byte_47F
RAM:AB24 10 0F                       BPL     loc_AB35
RAM:AB26 EE 7F 05                    INC     byte_57F
RAM:AB29 AD 7F 05                    LDA     byte_57F
RAM:AB2C C9 10                       CMP     #$10
RAM:AB2E B0 05                       BCS     loc_AB35
RAM:AB30 09 B0                       ORA     #$B0
RAM:AB32 20 0C F8                    JSR     j_AUDOUT
RAM:AB35
RAM:AB35             loc_AB35:                               ; CODE XREF: SOUND+2E7↑j
RAM:AB35                                                     ; SOUND+2F1↑j
RAM:AB35 2C 7F 04                    BIT     byte_47F
RAM:AB38 50 0F                       BVC     loc_AB49
RAM:AB3A EE FF 05                    INC     byte_5FF
RAM:AB3D AD FF 05                    LDA     byte_5FF
RAM:AB40 C9 10                       CMP     #$10
RAM:AB42 B0 05                       BCS     loc_AB49
RAM:AB44 09 D0                       ORA     #$D0
RAM:AB46 20 0C F8                    JSR     j_AUDOUT
RAM:AB49
RAM:AB49             loc_AB49:                               ; CODE XREF: SOUND+2FB↑j
RAM:AB49                                                     ; SOUND+305↑j
RAM:AB49 AD 02 03                    LDA     byte_302
RAM:AB4C
RAM:AB4C             loc_AB4C:                               ; CODE XREF: SOUND+321↓j
RAM:AB4C A2 0B                       LDX     #$B
RAM:AB4E
RAM:AB4E             loc_AB4E:                               ; CODE XREF: SOUND+314↓j
RAM:AB4E                                                     ; SOUND+31C↓j
RAM:AB4E 2C C2 C1                    BIT     HORIZSC         ; Read Horizontal blank status
RAM:AB51 10 FB                       BPL     loc_AB4E
RAM:AB53
RAM:AB53             loc_AB53:                               ; CODE XREF: SOUND+319↓j
RAM:AB53 2C C2 C1                    BIT     HORIZSC         ; Read Horizontal blank status
RAM:AB56 30 FB                       BMI     loc_AB53
RAM:AB58 CA                          DEX
RAM:AB59 D0 F3                       BNE     loc_AB4E
RAM:AB5B 18                          CLC
RAM:AB5C E9 00                       SBC     #0
RAM:AB5E B0 EC                       BCS     loc_AB4C
RAM:AB60 88                          DEY
RAM:AB61 D0 A9                       BNE     loc_AB0C
RAM:AB63 8C 7F 04                    STY     byte_47F
RAM:AB66 4C D4 A9                    JMP     loc_A9D4
RAM:AB66             ; END OF FUNCTION CHUNK FOR SOUND
RAM:AB66             ; ---------------------------------------------------------------------------
RAM:AB69 00          unk_AB69:       .BYTE   0
RAM:AB6A 00          unk_AB6A:       .BYTE   0
RAM:AB6B 00                          .BYTE   0
RAM:AB6C 00                          .BYTE   0
RAM:AB6D 00                          .BYTE   0
RAM:AB6E 00                          .BYTE   0
RAM:AB6F 00                          .BYTE   0
RAM:AB70 00                          .BYTE   0
RAM:AB71 00                          .BYTE   0
RAM:AB72 00                          .BYTE   0
RAM:AB73 00                          .BYTE   0
RAM:AB74 00                          .BYTE   0
RAM:AB75 00                          .BYTE   0
RAM:AB76 00                          .BYTE   0
RAM:AB77 00                          .BYTE   0
RAM:AB78 00                          .BYTE   0
RAM:AB79 00                          .BYTE   0
RAM:AB7A 00                          .BYTE   0
RAM:AB7B 08                          .BYTE   8
RAM:AB7C 23                          .BYTE $23 ; #
RAM:AB7D 0A                          .BYTE  $A
RAM:AB7E 1F                          .BYTE $1F
RAM:AB7F 0B                          .BYTE  $B
RAM:AB80 3B                          .BYTE $3B ; ;
RAM:AB81 03                          .BYTE   3
RAM:AB82 35                          .BYTE $35 ; 5
RAM:AB83 06                          .BYTE   6
RAM:AB84 2F                          .BYTE $2F ; /
RAM:AB85 0C                          .BYTE  $C
RAM:AB86 2C                          .BYTE $2C ; ,
RAM:AB87 0E                          .BYTE  $E
RAM:AB88 27                          .BYTE $27 ; '
RAM:AB89 00                          .BYTE   0
RAM:AB8A 00                          .BYTE   0
RAM:AB8B 0C                          .BYTE  $C
RAM:AB8C 11                          .BYTE $11
RAM:AB8D 0D                          .BYTE  $D
RAM:AB8E 0F                          .BYTE  $F
RAM:AB8F 0D                          .BYTE  $D
RAM:AB90 1D                          .BYTE $1D
RAM:AB91 09                          .BYTE   9
RAM:AB92 1A                          .BYTE $1A
RAM:AB93 0B                          .BYTE  $B
RAM:AB94 17                          .BYTE $17
RAM:AB95 06                          .BYTE   6
RAM:AB96 16                          .BYTE $16
RAM:AB97 0F                          .BYTE  $F
RAM:AB98 13                          .BYTE $13
RAM:AB99 00                          .BYTE   0
RAM:AB9A 00                          .BYTE   0
RAM:AB9B 0E                          .BYTE  $E
RAM:AB9C 08                          .BYTE   8
RAM:AB9D 0E                          .BYTE  $E
RAM:AB9E 07                          .BYTE   7
RAM:AB9F 0E                          .BYTE  $E
RAM:ABA0 0E                          .BYTE  $E
RAM:ABA1 04                          .BYTE   4
RAM:ABA2 0D                          .BYTE  $D
RAM:ABA3 0D                          .BYTE  $D
RAM:ABA4 0B                          .BYTE  $B
RAM:ABA5 03                          .BYTE   3
RAM:ABA6 0B                          .BYTE  $B
RAM:ABA7 0F                          .BYTE  $F
RAM:ABA8 09                          .BYTE   9
RAM:ABA9 00                          .BYTE   0
RAM:ABAA 00                          .BYTE   0
RAM:ABAB 07                          .BYTE   7
RAM:ABAC 04                          .BYTE   4
RAM:ABAD 0F                          .BYTE  $F
RAM:ABAE 03                          .BYTE   3
RAM:ABAF 07                          .BYTE   7
RAM:ABB0 07                          .BYTE   7
RAM:ABB1 0A                          .BYTE  $A
RAM:ABB2 06                          .BYTE   6
RAM:ABB3 0E                          .BYTE  $E
RAM:ABB4 05                          .BYTE   5
RAM:ABB5 09                          .BYTE   9
RAM:ABB6 05                          .BYTE   5
RAM:ABB7 0F                          .BYTE  $F
RAM:ABB8 04                          .BYTE   4
RAM:ABB9 00                          .BYTE   0
RAM:ABBA 00                          .BYTE   0
RAM:ABBB 03                          .BYTE   3
RAM:ABBC 02                          .BYTE   2
RAM:ABBD 0F                          .BYTE  $F
RAM:ABBE 01                          .BYTE   1
RAM:ABBF 0B                          .BYTE  $B
RAM:ABC0 03                          .BYTE   3
RAM:ABC1 05                          .BYTE   5
RAM:ABC2 03                          .BYTE   3
RAM:ABC3 0F                          .BYTE  $F
RAM:ABC4 02                          .BYTE   2
RAM:ABC5 0C                          .BYTE  $C
RAM:ABC6 02                          .BYTE   2
RAM:ABC7 07                          .BYTE   7
RAM:ABC8 02                          .BYTE   2
RAM:ABC9 00                          .BYTE   0
RAM:ABCA 00                          .BYTE   0
RAM:ABCB 01                          .BYTE   1
RAM:ABCC 01                          .BYTE   1
RAM:ABCD 0F                          .BYTE  $F
RAM:ABCE 00                          .BYTE   0
RAM:ABCF 0D                          .BYTE  $D
RAM:ABD0 01                          .BYTE   1
RAM:ABD1 0A                          .BYTE  $A
RAM:ABD2 01                          .BYTE   1
RAM:ABD3 07                          .BYTE   7
RAM:ABD4 01                          .BYTE   1
RAM:ABD5 06                          .BYTE   6
RAM:ABD6 01                          .BYTE   1
RAM:ABD7 03                          .BYTE   3
RAM:ABD8 01                          .BYTE   1
RAM:ABD9 00                          .BYTE   0
RAM:ABDA 00                          .BYTE   0
RAM:ABDB 08                          .BYTE   8
RAM:ABDC 00                          .BYTE   0
RAM:ABDD 07                          .BYTE   7
RAM:ABDE 00                          .BYTE   0
RAM:ABDF 0E                          .BYTE  $E
RAM:ABE0 00                          .BYTE   0
RAM:ABE1 0D                          .BYTE  $D
RAM:ABE2 00                          .BYTE   0
RAM:ABE3 0B                          .BYTE  $B
RAM:ABE4 00                          .BYTE   0
RAM:ABE5 0B                          .BYTE  $B
RAM:ABE6 00                          .BYTE   0
RAM:ABE7 09                          .BYTE   9
RAM:ABE8 00                          .BYTE   0
RAM:ABE9 00                          .BYTE   0
RAM:ABEA 00                          .BYTE   0
RAM:ABEB 00                          .BYTE   0
RAM:ABEC 00                          .BYTE   0
RAM:ABED 00                          .BYTE   0
RAM:ABEE 00                          .BYTE   0
RAM:ABEF 00                          .BYTE   0
RAM:ABF0 00                          .BYTE   0
RAM:ABF1 00                          .BYTE   0
RAM:ABF2 00                          .BYTE   0
RAM:ABF3 00                          .BYTE   0
RAM:ABF4 00                          .BYTE   0
RAM:ABF5 00                          .BYTE   0
RAM:ABF6 00                          .BYTE   0
RAM:ABF7 00                          .BYTE   0
RAM:ABF8 00                          .BYTE   0
RAM:ABF9 00                          .BYTE   0
RAM:ABFA 00                          .BYTE   0
RAM:ABFB 08                          .BYTE   8
RAM:ABFC 21                          .BYTE $21 ; !
RAM:ABFD 0D                          .BYTE  $D
RAM:ABFE 1D                          .BYTE $1D
RAM:ABFF 06                          .BYTE   6
RAM:AC00 38                          .BYTE $38 ; 8
RAM:AC01 03                          .BYTE   3
RAM:AC02 32                          .BYTE $32 ; 2
RAM:AC03 0C                          .BYTE  $C
RAM:AC04 2C                          .BYTE $2C ; ,
RAM:AC05 03                          .BYTE   3
RAM:AC06 2A                          .BYTE $2A ; *
RAM:AC07 0A                          .BYTE  $A
RAM:AC08 25                          .BYTE $25 ; %
RAM:AC09 00                          .BYTE   0
RAM:AC0A 00                          .BYTE   0
RAM:AC0B 0C                          .BYTE  $C
RAM:AC0C 10                          .BYTE $10
RAM:AC0D 0E                          .BYTE  $E
RAM:AC0E 0E                          .BYTE  $E
RAM:AC0F 03                          .BYTE   3
RAM:AC10 1C                          .BYTE $1C
RAM:AC11 01                          .BYTE   1
RAM:AC12 19                          .BYTE $19
RAM:AC13 06                          .BYTE   6
RAM:AC14 16                          .BYTE $16
RAM:AC15 01                          .BYTE   1
RAM:AC16 15                          .BYTE $15
RAM:AC17 0D                          .BYTE  $D
RAM:AC18 12                          .BYTE $12
RAM:AC19 00                          .BYTE   0
RAM:AC1A 00                          .BYTE   0
RAM:AC1B 06                          .BYTE   6
RAM:AC1C 08                          .BYTE   8
RAM:AC1D 07                          .BYTE   7
RAM:AC1E 07                          .BYTE   7
RAM:AC1F 01                          .BYTE   1
RAM:AC20 0E                          .BYTE  $E
RAM:AC21 08                          .BYTE   8
RAM:AC22 0C                          .BYTE  $C
RAM:AC23 03                          .BYTE   3
RAM:AC24 0B                          .BYTE  $B
RAM:AC25 08                          .BYTE   8
RAM:AC26 0A                          .BYTE  $A
RAM:AC27 06                          .BYTE   6
RAM:AC28 09                          .BYTE   9
RAM:AC29 00                          .BYTE   0
RAM:AC2A 00                          .BYTE   0
RAM:AC2B 03                          .BYTE   3
RAM:AC2C 04                          .BYTE   4
RAM:AC2D 0B                          .BYTE  $B
RAM:AC2E 03                          .BYTE   3
RAM:AC2F 00                          .BYTE   0
RAM:AC30 07                          .BYTE   7
RAM:AC31 04                          .BYTE   4
RAM:AC32 06                          .BYTE   6
RAM:AC33 09                          .BYTE   9
RAM:AC34 05                          .BYTE   5
RAM:AC35 04                          .BYTE   4
RAM:AC36 05                          .BYTE   5
RAM:AC37 0B                          .BYTE  $B
RAM:AC38 04                          .BYTE   4
RAM:AC39 00                          .BYTE   0
RAM:AC3A 00                          .BYTE   0
RAM:AC3B 01                          .BYTE   1
RAM:AC3C 02                          .BYTE   2
RAM:AC3D 0D                          .BYTE  $D
RAM:AC3E 01                          .BYTE   1
RAM:AC3F 08                          .BYTE   8
RAM:AC40 03                          .BYTE   3
RAM:AC41 02                          .BYTE   2
RAM:AC42 03                          .BYTE   3
RAM:AC43 0C                          .BYTE  $C
RAM:AC44 02                          .BYTE   2
RAM:AC45 0A                          .BYTE  $A
RAM:AC46 02                          .BYTE   2
RAM:AC47 05                          .BYTE   5
RAM:AC48 02                          .BYTE   2
RAM:AC49 00                          .BYTE   0
RAM:AC4A 00                          .BYTE   0
RAM:AC4B 00                          .BYTE   0
RAM:AC4C 01                          .BYTE   1
RAM:AC4D 0E                          .BYTE  $E
RAM:AC4E 00                          .BYTE   0
RAM:AC4F 0C                          .BYTE  $C
RAM:AC50 01                          .BYTE   1
RAM:AC51 09                          .BYTE   9
RAM:AC52 01                          .BYTE   1
RAM:AC53 06                          .BYTE   6
RAM:AC54 01                          .BYTE   1
RAM:AC55 05                          .BYTE   5
RAM:AC56 01                          .BYTE   1
RAM:AC57 02                          .BYTE   2
RAM:AC58 01                          .BYTE   1
RAM:AC59 00                          .BYTE   0
RAM:AC5A 00                          .BYTE   0
RAM:AC5B 08                          .BYTE   8
RAM:AC5C 00                          .BYTE   0
RAM:AC5D 00                          .BYTE   0
RAM:AC5E 00                          .BYTE   0
RAM:AC5F 0E                          .BYTE  $E
RAM:AC60 00                          .BYTE   0
RAM:AC61 0C                          .BYTE  $C
RAM:AC62 00                          .BYTE   0
RAM:AC63 0B                          .BYTE  $B
RAM:AC64 00                          .BYTE   0
RAM:AC65 0A                          .BYTE  $A
RAM:AC66 00                          .BYTE   0
RAM:AC67 09                          .BYTE   9
RAM:AC68 00                          .BYTE   0
RAM:AC69             ; ---------------------------------------------------------------------------
RAM:AC69
RAM:AC69             LIST_FN_KEYS:                           ; CODE XREF: ROM:F1F3↓p
RAM:AC69 A9 48                       LDA     #$48 ; 'H'      ; list current settings of function keys
RAM:AC6B 85 27                       STA     FKEYPH
RAM:AC6D A9 00                       LDA     #0
RAM:AC6F 85 26                       STA     FKEYPL
RAM:AC71 A8                          TAY
RAM:AC72 85 D4                       STA     byte_D4
RAM:AC74 A9 8D                       LDA     #$8D
RAM:AC76 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AC79
RAM:AC79             loc_AC79:                               ; CODE XREF: RAM:ACC9↓j
RAM:AC79 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AC7C AD 00 C0                    LDA     KEYBOARD
RAM:AC7F 29 7F                       AND     #$7F
RAM:AC81 C9 13                       CMP     #$13
RAM:AC83 D0 0D                       BNE     loc_AC92
RAM:AC85 8D 10 C0                    STA     KEYSTRB
RAM:AC88
RAM:AC88             loc_AC88:                               ; CODE XREF: RAM:AC8B↓j
RAM:AC88 AD 00 C0                    LDA     KEYBOARD
RAM:AC8B 10 FB                       BPL     loc_AC88
RAM:AC8D 29 7F                       AND     #$7F
RAM:AC8F 8D 10 C0                    STA     KEYSTRB
RAM:AC92
RAM:AC92             loc_AC92:                               ; CODE XREF: RAM:AC83↑j
RAM:AC92 C9 03                       CMP     #3
RAM:AC94 F0 3E                       BEQ     locret_ACD4
RAM:AC96 C9 7F                       CMP     #$7F
RAM:AC98 F0 3A                       BEQ     locret_ACD4
RAM:AC9A A9 8D                       LDA     #$8D
RAM:AC9C 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AC9F 08                          PHP
RAM:ACA0 F8                          SED
RAM:ACA1 A5 D4                       LDA     byte_D4
RAM:ACA3 C9 24                       CMP     #$24 ; '$'
RAM:ACA5 B0 2C                       BCS     loc_ACD3
RAM:ACA7 69 01                       ADC     #1
RAM:ACA9 85 D4                       STA     byte_D4
RAM:ACAB 28                          PLP
RAM:ACAC A9 06                       LDA     #6
RAM:ACAE 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:ACB1 A5 D4                       LDA     byte_D4
RAM:ACB3 20 46 F4                    JSR     sub_F446
RAM:ACB6 A9 A0                       LDA     #$A0
RAM:ACB8 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:ACBB
RAM:ACBB             loc_ACBB:                               ; CODE XREF: RAM:ACD0↓j
RAM:ACBB E6 26                       INC     FKEYPL
RAM:ACBD D0 02                       BNE     loc_ACC1
RAM:ACBF E6 27                       INC     FKEYPH
RAM:ACC1
RAM:ACC1             loc_ACC1:                               ; CODE XREF: RAM:ACBD↑j
RAM:ACC1 20 00 F8                    JSR     j_FRAMOI
RAM:ACC4 B1 26                       LDA     ($26),Y
RAM:ACC6 20 03 F8                    JSR     j_FRAMOU
RAM:ACC9 30 AE                       BMI     loc_AC79
RAM:ACCB 09 80                       ORA     #$80
RAM:ACCD 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:ACD0 4C BB AC                    JMP     loc_ACBB
RAM:ACD3             ; ---------------------------------------------------------------------------
RAM:ACD3
RAM:ACD3             loc_ACD3:                               ; CODE XREF: RAM:ACA5↑j
RAM:ACD3 28                          PLP
RAM:ACD4
RAM:ACD4             locret_ACD4:                            ; CODE XREF: RAM:AC94↑j
RAM:ACD4                                                     ; RAM:AC98↑j
RAM:ACD4 60                          RTS
RAM:ACD5             ; ---------------------------------------------------------------------------
RAM:ACD5
RAM:ACD5             loc_ACD5:                               ; CODE XREF: RENEW+3↓p
RAM:ACD5 8A                          TXA
RAM:ACD6 48                          PHA
RAM:ACD7 A5 2B                       LDA     SBAS2H
RAM:ACD9 A8                          TAY
RAM:ACDA 08                          PHP
RAM:ACDB F8                          SED
RAM:ACDC A9 00                       LDA     #0
RAM:ACDE 18                          CLC
RAM:ACDF
RAM:ACDF             loc_ACDF:                               ; CODE XREF: RAM:ACE2↓j
RAM:ACDF 69 01                       ADC     #1
RAM:ACE1 88                          DEY
RAM:ACE2 10 FB                       BPL     loc_ACDF
RAM:ACE4 85 D4                       STA     byte_D4
RAM:ACE6 28                          PLP
RAM:ACE7 E6 26                       INC     FKEYPL
RAM:ACE9 D0 02                       BNE     loc_ACED
RAM:ACEB E6 27                       INC     FKEYPH
RAM:ACED
RAM:ACED             loc_ACED:                               ; CODE XREF: RAM:ACE9↑j
RAM:ACED A5 26                       LDA     FKEYPL
RAM:ACEF 85 D0                       STA     byte_D0
RAM:ACF1 48                          PHA
RAM:ACF2 A5 27                       LDA     FKEYPH
RAM:ACF4 85 D1                       STA     byte_D1
RAM:ACF6 48                          PHA
RAM:ACF7 A9 06                       LDA     #6
RAM:ACF9 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:ACFC A5 D4                       LDA     byte_D4
RAM:ACFE 20 46 F4                    JSR     sub_F446
RAM:AD01 A9 8D                       LDA     #$8D
RAM:AD03 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD06 A9 A0                       LDA     #$A0
RAM:AD08 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD0B
RAM:AD0B             loc_AD0B:                               ; CODE XREF: RAM:AD1E↓j
RAM:AD0B                                                     ; RAM:AD22↓j
RAM:AD0B A0 00                       LDY     #0
RAM:AD0D 20 00 F8                    JSR     j_FRAMOI
RAM:AD10 B1 26                       LDA     ($26),Y
RAM:AD12 20 03 F8                    JSR     j_FRAMOU
RAM:AD15 30 0D                       BMI     loc_AD24
RAM:AD17 09 80                       ORA     #$80
RAM:AD19 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD1C E6 26                       INC     FKEYPL
RAM:AD1E D0 EB                       BNE     loc_AD0B
RAM:AD20 E6 27                       INC     FKEYPH
RAM:AD22 D0 E7                       BNE     loc_AD0B
RAM:AD24
RAM:AD24             loc_AD24:                               ; CODE XREF: RAM:AD15↑j
RAM:AD24 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD27 A5 26                       LDA     FKEYPL
RAM:AD29 85 D2                       STA     byte_D2
RAM:AD2B A5 27                       LDA     FKEYPH
RAM:AD2D 85 D3                       STA     byte_D3
RAM:AD2F A0 00                       LDY     #0
RAM:AD31
RAM:AD31             loc_AD31:                               ; CODE XREF: RAM:AD3A↓j
RAM:AD31                                                     ; RAM:AD3E↓j
RAM:AD31 20 00 F8                    JSR     j_FRAMOI
RAM:AD34 B1 D2                       LDA     ($D2),Y
RAM:AD36 F0 08                       BEQ     loc_AD40
RAM:AD38 E6 D2                       INC     byte_D2
RAM:AD3A D0 F5                       BNE     loc_AD31
RAM:AD3C E6 D3                       INC     byte_D3
RAM:AD3E D0 F1                       BNE     loc_AD31
RAM:AD40
RAM:AD40             loc_AD40:                               ; CODE XREF: RAM:AD36↑j
RAM:AD40 E6 26                       INC     FKEYPL
RAM:AD42 D0 02                       BNE     loc_AD46
RAM:AD44 E6 27                       INC     FKEYPH
RAM:AD46
RAM:AD46             loc_AD46:                               ; CODE XREF: RAM:AD42↑j
RAM:AD46                                                     ; RAM:AD5E↓j ...
RAM:AD46 A5 27                       LDA     FKEYPH
RAM:AD48 C5 D3                       CMP     byte_D3
RAM:AD4A 90 06                       BCC     loc_AD52
RAM:AD4C A5 26                       LDA     FKEYPL
RAM:AD4E C5 D2                       CMP     byte_D2
RAM:AD50 B0 12                       BCS     loc_AD64
RAM:AD52
RAM:AD52             loc_AD52:                               ; CODE XREF: RAM:AD4A↑j
RAM:AD52 B1 26                       LDA     ($26),Y
RAM:AD54 91 D0                       STA     ($D0),Y
RAM:AD56 E6 26                       INC     FKEYPL
RAM:AD58 D0 02                       BNE     loc_AD5C
RAM:AD5A E6 27                       INC     FKEYPH
RAM:AD5C
RAM:AD5C             loc_AD5C:                               ; CODE XREF: RAM:AD58↑j
RAM:AD5C E6 D0                       INC     byte_D0
RAM:AD5E D0 E6                       BNE     loc_AD46
RAM:AD60 E6 D1                       INC     byte_D1
RAM:AD62 D0 E2                       BNE     loc_AD46
RAM:AD64
RAM:AD64             loc_AD64:                               ; CODE XREF: RAM:AD50↑j
RAM:AD64 A9 00                       LDA     #0
RAM:AD66 91 D0                       STA     ($D0),Y
RAM:AD68 20 03 F8                    JSR     j_FRAMOU
RAM:AD6B A9 8D                       LDA     #$8D
RAM:AD6D 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD70 4C 94 AD                    JMP     loc_AD94
RAM:AD73             ; ---------------------------------------------------------------------------
RAM:AD73             ; START OF FUNCTION CHUNK FOR sub_ADBA
RAM:AD73
RAM:AD73             loc_AD73:                               ; CODE XREF: sub_ADBA-C↓j
RAM:AD73 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD76 C9 88                       CMP     #$88
RAM:AD78 F0 21                       BEQ     loc_AD9B
RAM:AD7A C9 98                       CMP     #$98
RAM:AD7C F0 0C                       BEQ     loc_AD8A
RAM:AD7E E0 F8                       CPX     #$F8
RAM:AD80 90 05                       BCC     loc_AD87
RAM:AD82 A9 87                       LDA     #$87
RAM:AD84 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD87
RAM:AD87             loc_AD87:                               ; CODE XREF: sub_ADBA-3A↑j
RAM:AD87                                                     ; sub_ADBA-3↓j
RAM:AD87 E8                          INX
RAM:AD88 D0 15                       BNE     loc_AD9F
RAM:AD8A
RAM:AD8A             loc_AD8A:                               ; CODE XREF: sub_ADBA-3E↑j
RAM:AD8A A9 DC                       LDA     #$DC
RAM:AD8C 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD8F
RAM:AD8F             loc_AD8F:                               ; CODE XREF: sub_ADBA-1E↓j
RAM:AD8F                                                     ; sub_ADBA+46↓j
RAM:AD8F A9 8D                       LDA     #$8D
RAM:AD91 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD94
RAM:AD94             loc_AD94:                               ; CODE XREF: RAM:AD70↑j
RAM:AD94 A5 33                       LDA     PROMPT
RAM:AD96 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AD99 A2 01                       LDX     #1
RAM:AD9B
RAM:AD9B             loc_AD9B:                               ; CODE XREF: sub_ADBA-42↑j
RAM:AD9B 8A                          TXA
RAM:AD9C F0 F1                       BEQ     loc_AD8F
RAM:AD9E CA                          DEX
RAM:AD9F
RAM:AD9F             loc_AD9F:                               ; CODE XREF: sub_ADBA-32↑j
RAM:AD9F 20 78 F4                    JSR     AUX_RDKEY       ; call RDKEY from $8000 ROM
RAM:ADA2 C9 95                       CMP     #$95
RAM:ADA4 D0 03                       BNE     loc_ADA9
RAM:ADA6 AD FB 06                    LDA     TEMPA
RAM:ADA9
RAM:ADA9             loc_ADA9:                               ; CODE XREF: sub_ADBA-16↑j
RAM:ADA9 9D 00 02                    STA     $200,X
RAM:ADAC C9 9B                       CMP     #$9B
RAM:ADAE D0 C3                       BNE     loc_AD73
RAM:ADB0 CA                          DEX
RAM:ADB1 20 78 F4                    JSR     AUX_RDKEY       ; call RDKEY from $8000 ROM
RAM:ADB4 20 BA AD                    JSR     sub_ADBA
RAM:ADB7 4C 87 AD                    JMP     loc_AD87
RAM:ADB7             ; END OF FUNCTION CHUNK FOR sub_ADBA
RAM:ADBA
RAM:ADBA             ; =============== S U B R O U T I N E =======================================
RAM:ADBA
RAM:ADBA
RAM:ADBA             sub_ADBA:                               ; CODE XREF: sub_ADBA-6↑p
RAM:ADBA
RAM:ADBA             ; FUNCTION CHUNK AT RAM:AD73 SIZE 00000047 BYTES
RAM:ADBA             ; FUNCTION CHUNK AT ROM:C847 SIZE 00000003 BYTES
RAM:ADBA
RAM:ADBA C9 9B                       CMP     #$9B
RAM:ADBC F0 09                       BEQ     loc_ADC7
RAM:ADBE 8D FF CF                    STA     ROMCLEAR        ; disable all $C8XX rom extensions
RAM:ADC1 8D 00 C3                    STA     SLOT3_80COL     ; 80 column firmware entry point
RAM:ADC4 4C 47 C8                    JMP     j_ESCX
RAM:ADC7             ; ---------------------------------------------------------------------------
RAM:ADC7
RAM:ADC7             loc_ADC7:                               ; CODE XREF: sub_ADBA+2↑j
RAM:ADC7 68                          PLA
RAM:ADC8 68                          PLA
RAM:ADC9 8D FF CF                    STA     ROMCLEAR        ; disable all $C8XX rom extensions
RAM:ADCC 8D 00 C3                    STA     SLOT3_80COL     ; 80 column firmware entry point
RAM:ADCF 20 4A C8                    JSR     j_CLREOL
RAM:ADD2 E0 FF                       CPX     #$FF
RAM:ADD4 D0 06                       BNE     loc_ADDC
RAM:ADD6 A9 A0                       LDA     #$A0
RAM:ADD8 8D 00 02                    STA     KEYBUF
RAM:ADDB E8                          INX
RAM:ADDC
RAM:ADDC             loc_ADDC:                               ; CODE XREF: sub_ADBA+1A↑j
RAM:ADDC 86 D4                       STX     byte_D4
RAM:ADDE A0 00                       LDY     #0
RAM:ADE0 A5 D0                       LDA     byte_D0
RAM:ADE2 38                          SEC
RAM:ADE3 65 D4                       ADC     byte_D4
RAM:ADE5 85 D2                       STA     byte_D2
RAM:ADE7 A5 D1                       LDA     byte_D1
RAM:ADE9 69 00                       ADC     #0
RAM:ADEB 85 D3                       STA     byte_D3
RAM:ADED C9 4A                       CMP     #$4A ; 'J'
RAM:ADEF 90 1A                       BCC     loc_AE0B
RAM:ADF1 A9 87                       LDA     #$87            ; BELL
RAM:ADF3 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:ADF6 A9 8D                       LDA     #$8D            ; CR
RAM:ADF8 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:ADFB
RAM:ADFB             loc_ADFB:                               ; CODE XREF: sub_ADBA+4F↓j
RAM:ADFB B9 6C AE                    LDA     FN_BUFF_FULL,Y
RAM:ADFE 10 03                       BPL     loc_AE03
RAM:AE00 4C 8F AD                    JMP     loc_AD8F
RAM:AE03             ; ---------------------------------------------------------------------------
RAM:AE03
RAM:AE03             loc_AE03:                               ; CODE XREF: sub_ADBA+44↑j
RAM:AE03 09 80                       ORA     #$80
RAM:AE05 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AE08 C8                          INY
RAM:AE09 D0 F0                       BNE     loc_ADFB
RAM:AE0B
RAM:AE0B             loc_AE0B:                               ; CODE XREF: sub_ADBA+35↑j
RAM:AE0B 68                          PLA
RAM:AE0C 85 27                       STA     FKEYPH
RAM:AE0E 68                          PLA
RAM:AE0F 85 26                       STA     FKEYPL
RAM:AE11 20 00 F8                    JSR     j_FRAMOI
RAM:AE14
RAM:AE14             loc_AE14:                               ; CODE XREF: sub_ADBA+7A↓j
RAM:AE14 B1 D0                       LDA     ($D0),Y
RAM:AE16 91 D2                       STA     ($D2),Y
RAM:AE18 A5 D0                       LDA     byte_D0
RAM:AE1A C5 26                       CMP     FKEYPL
RAM:AE1C D0 06                       BNE     loc_AE24
RAM:AE1E A5 D1                       LDA     byte_D1
RAM:AE20 C5 27                       CMP     FKEYPH
RAM:AE22 F0 13                       BEQ     loc_AE37
RAM:AE24
RAM:AE24             loc_AE24:                               ; CODE XREF: sub_ADBA+62↑j
RAM:AE24 A5 D0                       LDA     byte_D0
RAM:AE26 D0 02                       BNE     loc_AE2A
RAM:AE28 C6 D1                       DEC     byte_D1
RAM:AE2A
RAM:AE2A             loc_AE2A:                               ; CODE XREF: sub_ADBA+6C↑j
RAM:AE2A C6 D0                       DEC     byte_D0
RAM:AE2C A5 D2                       LDA     byte_D2
RAM:AE2E D0 02                       BNE     loc_AE32
RAM:AE30 C6 D3                       DEC     byte_D3
RAM:AE32
RAM:AE32             loc_AE32:                               ; CODE XREF: sub_ADBA+74↑j
RAM:AE32 C6 D2                       DEC     byte_D2
RAM:AE34 4C 14 AE                    JMP     loc_AE14
RAM:AE37             ; ---------------------------------------------------------------------------
RAM:AE37
RAM:AE37             loc_AE37:                               ; CODE XREF: sub_ADBA+68↑j
RAM:AE37 B1 D0                       LDA     ($D0),Y
RAM:AE39 91 D2                       STA     ($D2),Y
RAM:AE3B A4 D4                       LDY     byte_D4
RAM:AE3D B9 00 02                    LDA     $200,Y
RAM:AE40 09 80                       ORA     #$80
RAM:AE42 C0 00                       CPY     #0
RAM:AE44 F0 11                       BEQ     loc_AE57
RAM:AE46 D0 05                       BNE     loc_AE4D
RAM:AE48
RAM:AE48             loc_AE48:                               ; CODE XREF: sub_ADBA+96↓j
RAM:AE48 B9 00 02                    LDA     $200,Y
RAM:AE4B 29 7F                       AND     #$7F
RAM:AE4D
RAM:AE4D             loc_AE4D:                               ; CODE XREF: sub_ADBA+8C↑j
RAM:AE4D 91 26                       STA     ($26),Y
RAM:AE4F 88                          DEY
RAM:AE50 D0 F6                       BNE     loc_AE48
RAM:AE52 B9 00 02                    LDA     $200,Y
RAM:AE55 29 7F                       AND     #$7F
RAM:AE57
RAM:AE57             loc_AE57:                               ; CODE XREF: sub_ADBA+8A↑j
RAM:AE57 91 26                       STA     ($26),Y
RAM:AE59 8C 00 48                    STY     KEYFLG
RAM:AE5C 20 03 F8                    JSR     j_FRAMOU
RAM:AE5F A9 8D                       LDA     #$8D
RAM:AE61 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AE64 A5 33                       LDA     PROMPT
RAM:AE66 20 3B F6                    JSR     AUX_COUT        ; Call COUT, ensure $8000 ROM switched out
RAM:AE69 68                          PLA
RAM:AE6A AA                          TAX
RAM:AE6B 60                          RTS
RAM:AE6B             ; End of function sub_ADBA
RAM:AE6B
RAM:AE6B             ; ---------------------------------------------------------------------------
RAM:AE6C 42          FN_BUFF_FULL:   .BYTE 'B'
RAM:AE6D 55                          .BYTE 'U'
RAM:AE6E 46                          .BYTE 'F'
RAM:AE6F 46                          .BYTE 'F'
RAM:AE70 45                          .BYTE 'E'
RAM:AE71 52                          .BYTE 'R'
RAM:AE72 20                          .BYTE ' '
RAM:AE73 4F                          .BYTE 'O'
RAM:AE74 46                          .BYTE 'F'
RAM:AE75 20                          .BYTE ' '
RAM:AE76 46                          .BYTE 'F'
RAM:AE77 55                          .BYTE 'U'
RAM:AE78 4E                          .BYTE 'N'
RAM:AE79 43                          .BYTE 'C'
RAM:AE7A 54                          .BYTE 'T'
RAM:AE7B 49                          .BYTE 'I'
RAM:AE7C 4F                          .BYTE 'O'
RAM:AE7D 4E                          .BYTE 'N'
RAM:AE7E 20                          .BYTE ' '
RAM:AE7F 4E                          .BYTE 'N'
RAM:AE80 45                          .BYTE 'E'
RAM:AE81 41                          .BYTE 'A'
RAM:AE82 52                          .BYTE 'R'
RAM:AE83 4C                          .BYTE 'L'
RAM:AE84 59                          .BYTE 'Y'
RAM:AE85 20                          .BYTE ' '
RAM:AE86 46                          .BYTE 'F'
RAM:AE87 55                          .BYTE 'U'
RAM:AE88 4C                          .BYTE 'L'
RAM:AE89 4C                          .BYTE 'L'
RAM:AE8A 0D                          .BYTE $D
RAM:AE8B 52                          .BYTE 'R'
RAM:AE8C 45                          .BYTE 'E'
RAM:AE8D 54                          .BYTE 'T'
RAM:AE8E 59                          .BYTE 'Y'
RAM:AE8F 50                          .BYTE 'P'
RAM:AE90 45                          .BYTE 'E'
RAM:AE91 20                          .BYTE ' '
RAM:AE92 53                          .BYTE 'S'
RAM:AE93 48                          .BYTE 'H'
RAM:AE94 4F                          .BYTE 'O'
RAM:AE95 52                          .BYTE 'R'
RAM:AE96 54                          .BYTE 'T'
RAM:AE97 45                          .BYTE 'E'
RAM:AE98 52                          .BYTE 'R'
RAM:AE99 20                          .BYTE ' '
RAM:AE9A 4C                          .BYTE 'L'
RAM:AE9B 49                          .BYTE 'I'
RAM:AE9C 4E                          .BYTE 'N'
RAM:AE9D 45                          .BYTE 'E'
RAM:AE9E 80                          .BYTE $80
RAM:AE9F
RAM:AE9F             ; =============== S U B R O U T I N E =======================================
RAM:AE9F
RAM:AE9F
RAM:AE9F             sub_AE9F:                               ; CODE XREF: RAM:9F63↑p
RAM:AE9F A5 36                       LDA     OUTSWL
RAM:AEA1 8D 7F 04                    STA     byte_47F
RAM:AEA4 A5 37                       LDA     OUTSWH
RAM:AEA6 8D FF 04                    STA     byte_4FF
RAM:AEA9 20 00 C1                    JSR     SLOT1_PRINTER   ; Slot 1 Printer driver entry point
RAM:AEAC A5 E6                       LDA     byte_E6
RAM:AEAE 48                          PHA
RAM:AEAF 29 03                       AND     #3
RAM:AEB1 48                          PHA
RAM:AEB2 AD F9 06                    LDA     byte_6F9
RAM:AEB5 29 FC                       AND     #$FC
RAM:AEB7 8D F9 06                    STA     byte_6F9
RAM:AEBA 68                          PLA
RAM:AEBB 0D F9 06                    ORA     byte_6F9
RAM:AEBE 8D F9 06                    STA     byte_6F9
RAM:AEC1 68                          PLA
RAM:AEC2 29 20                       AND     #$20 ; ' '
RAM:AEC4 F0 09                       BEQ     loc_AECF
RAM:AEC6 AD 79 07                    LDA     byte_779
RAM:AEC9 29 FC                       AND     #$FC
RAM:AECB 09 01                       ORA     #1
RAM:AECD D0 07                       BNE     loc_AED6
RAM:AECF
RAM:AECF             loc_AECF:                               ; CODE XREF: sub_AE9F+25↑j
RAM:AECF AD 79 07                    LDA     byte_779
RAM:AED2 29 FC                       AND     #$FC
RAM:AED4 09 02                       ORA     #2
RAM:AED6
RAM:AED6             loc_AED6:                               ; CODE XREF: sub_AE9F+2E↑j
RAM:AED6 8D 79 07                    STA     byte_779
RAM:AED9 A2 FF                       LDX     #$FF
RAM:AEDB
RAM:AEDB             loc_AEDB:                               ; CODE XREF: sub_AE9F+45↓j
RAM:AEDB E8                          INX
RAM:AEDC BD F1 AE                    LDA     loc_AEF1,X
RAM:AEDF 9D 00 03                    STA     $300,X
RAM:AEE2 E0 0B                       CPX     #$B
RAM:AEE4 D0 F5                       BNE     loc_AEDB
RAM:AEE6 A9 02                       LDA     #2
RAM:AEE8 48                          PHA
RAM:AEE9 A9 FF                       LDA     #$FF
RAM:AEEB 48                          PHA
RAM:AEEC A9 91                       LDA     #$91
RAM:AEEE 6C 36 00                    JMP     (OUTSWL)
RAM:AEEE             ; End of function sub_AE9F
RAM:AEEE
RAM:AEF1             ; ---------------------------------------------------------------------------
RAM:AEF1
RAM:AEF1             loc_AEF1:
RAM:AEF1 AD 7F 04                    LDA     byte_47F
RAM:AEF4 85 36                       STA     OUTSWL
RAM:AEF6 AD FF 04                    LDA     byte_4FF
RAM:AEF9 85 37                       STA     OUTSWH
RAM:AEFB 60                          RTS
RAM:AEFB             ; ---------------------------------------------------------------------------
RAM:AEFC 00                          .BYTE   0
RAM:AEFD 20                          .BYTE $20
RAM:AEFE 3B                          .BYTE $3B ; ;
RAM:AEFF 57                          .BYTE $57 ; W
RAM:AF00             ; ---------------------------------------------------------------------------
RAM:AF00
RAM:AF00             loc_AF00:                               ; CODE XREF: RAM:91D1↑j
RAM:AF00 24 13                       BIT     byte_13
RAM:AF02 50 03                       BVC     loc_AF07
RAM:AF04 4C D8 91                    JMP     loc_91D8
RAM:AF07             ; ---------------------------------------------------------------------------
RAM:AF07
RAM:AF07             loc_AF07:                               ; CODE XREF: RAM:AF02↑j
RAM:AF07 C9 20                       CMP     #$20 ; ' '
RAM:AF09 D0 03                       BNE     loc_AF0E
RAM:AF0B 4C D4 91                    JMP     loc_91D4
RAM:AF0E             ; ---------------------------------------------------------------------------
RAM:AF0E
RAM:AF0E             loc_AF0E:                               ; CODE XREF: RAM:AF09↑j
RAM:AF0E 4C D8 91                    JMP     loc_91D8
RAM:AF0E             ; ---------------------------------------------------------------------------
RAM:AF11 54                          .BYTE $54 ; T
RAM:AF12 0D                          .BYTE  $D
RAM:AF13 4C                          .BYTE $4C ; L
RAM:AF14 44                          .BYTE $44 ; D
RAM:AF15 41                          .BYTE $41 ; A
RAM:AF16 20                          .BYTE $20
RAM:AF17 23                          .BYTE $23 ; #
RAM:AF18 30                          .BYTE $30 ; 0
RAM:AF19 0D                          .BYTE  $D
RAM:AF1A 53                          .BYTE $53 ; S
RAM:AF1B 54                          .BYTE $54 ; T
RAM:AF1C
RAM:AF1C             ; =============== S U B R O U T I N E =======================================
RAM:AF1C
RAM:AF1C
RAM:AF1C             SET_TEXT_COLOURS:                       ; CODE XREF: RAM:A65F↑p
RAM:AF1C E0 00                       CPX     #0              ; 0 = enable multi-colour mode on black background
RAM:AF1E D0 03                       BNE     loc_AF23
RAM:AF20 9D 18 C0                    STA     BKGRND,X        ; set background colour $18 => $1F  Black,Red,green,Yellow,Blue,Magenta,Cyan,White
RAM:AF23
RAM:AF23             loc_AF23:                               ; CODE XREF: SET_TEXT_COLOURS+2↑j
RAM:AF23 9D 28 C0                    STA     TEXTCR,X
RAM:AF26 60                          RTS
RAM:AF26             ; End of function SET_TEXT_COLOURS
RAM:AF26
RAM:AF26             ; ---------------------------------------------------------------------------
RAM:AF27 41                          .BYTE $41 ; A
RAM:AF28 52                          .BYTE $52 ; R
RAM:AF29 20                          .BYTE $20
RAM:AF2A 54                          .BYTE $54 ; T
RAM:AF2B 4F                          .BYTE $4F ; O
RAM:AF2C 50                          .BYTE $50 ; P
RAM:AF2D 0D                          .BYTE  $D
RAM:AF2E 4A                          .BYTE $4A ; J
RAM:AF2F 53                          .BYTE $53 ; S
RAM:AF30             ; ---------------------------------------------------------------------------
RAM:AF30             ; START OF FUNCTION CHUNK FOR sub_98EF
RAM:AF30
RAM:AF30             loc_AF30:                               ; CODE XREF: sub_98EF+C↑j
RAM:AF30 90 0C                       BCC     loc_AF3E
RAM:AF32 8A                          TXA
RAM:AF33 69 07                       ADC     #7
RAM:AF35 AA                          TAX
RAM:AF36 BD DF 98                    LDA     byte_98DF,X
RAM:AF39 85 E4                       STA     byte_E4
RAM:AF3B 85 1C                       STA     byte_1C
RAM:AF3D 60                          RTS
RAM:AF3E             ; ---------------------------------------------------------------------------
RAM:AF3E
RAM:AF3E             loc_AF3E:                               ; CODE XREF: sub_98EF:loc_AF30↑j
RAM:AF3E BD DF 98                    LDA     byte_98DF,X
RAM:AF41 85 E4                       STA     byte_E4
RAM:AF43 60                          RTS
RAM:AF43             ; END OF FUNCTION CHUNK FOR sub_98EF
RAM:AF43             ; ---------------------------------------------------------------------------
RAM:AF44 41                          .BYTE $41 ; A
RAM:AF45 0D                          .BYTE  $D
RAM:AF46 4C                          .BYTE $4C ; L
RAM:AF47 44                          .BYTE $44 ; D
RAM:AF48 41                          .BYTE $41 ; A
RAM:AF49 20                          .BYTE $20
RAM:AF4A 5A                          .BYTE $5A ; Z
RAM:AF4B 50                          .BYTE $50 ; P
RAM:AF4C 45                          .BYTE $45 ; E
RAM:AF4D 31                          .BYTE $31 ; 1
RAM:AF4E 0D                          .BYTE  $D
RAM:AF4F 50                          .BYTE $50 ; P
RAM:AF50 48                          .BYTE $48 ; H
RAM:AF51 41                          .BYTE $41 ; A
RAM:AF52 0D                          .BYTE  $D
RAM:AF53 4C                          .BYTE $4C ; L
RAM:AF54 44                          .BYTE $44 ; D
RAM:AF55 41                          .BYTE $41 ; A
RAM:AF56 20                          .BYTE $20
RAM:AF57 5A                          .BYTE $5A ; Z
RAM:AF58 50                          .BYTE $50 ; P
RAM:AF59 45                          .BYTE $45 ; E
RAM:AF5A 30                          .BYTE $30 ; 0
RAM:AF5B 0D                          .BYTE  $D
RAM:AF5C 50                          .BYTE $50 ; P
RAM:AF5D 48                          .BYTE $48 ; H
RAM:AF5E 41                          .BYTE $41 ; A
RAM:AF5F 20                          .BYTE $20
RAM:AF60 3B                          .BYTE $3B ; ;
RAM:AF61 52                          .BYTE $52 ; R
RAM:AF62 45                          .BYTE $45 ; E
RAM:AF63 4D                          .BYTE $4D ; M
RAM:AF64 45                          .BYTE $45 ; E
RAM:AF65 4D                          .BYTE $4D ; M
RAM:AF66 42                          .BYTE $42 ; B
RAM:AF67 45                          .BYTE $45 ; E
RAM:AF68 52                          .BYTE $52 ; R
RAM:AF69 20                          .BYTE $20
RAM:AF6A 54                          .BYTE $54 ; T
RAM:AF6B 48                          .BYTE $48 ; H
RAM:AF6C 49                          .BYTE $49 ; I
RAM:AF6D 53                          .BYTE $53 ; S
RAM:AF6E 20                          .BYTE $20
RAM:AF6F 54                          .BYTE $54 ; T
RAM:AF70 52                          .BYTE $52 ; R
RAM:AF71 41                          .BYTE $41 ; A
RAM:AF72 4E                          .BYTE $4E ; N
RAM:AF73 53                          .BYTE $53 ; S
RAM:AF74 49                          .BYTE $49 ; I
RAM:AF75 49                          .BYTE $49 ; I
RAM:AF76 54                          .BYTE $54 ; T
RAM:AF77 49                          .BYTE $49 ; I
RAM:AF78 4F                          .BYTE $4F ; O
RAM:AF79 4E                          .BYTE $4E ; N
RAM:AF7A 0D                          .BYTE  $D
RAM:AF7B 3B                          .BYTE $3B ; ;
RAM:AF7C 0D                          .BYTE  $D
RAM:AF7D 4A                          .BYTE $4A ; J
RAM:AF7E 4C                          .BYTE $4C ; L
RAM:AF7F 53                          .BYTE $53 ; S
RAM:AF80 47                          .BYTE $47 ; G
RAM:AF81 32                          .BYTE $32 ; 2
RAM:AF82 30                          .BYTE $30 ; 0
RAM:AF83 20                          .BYTE $20
RAM:AF84 4A                          .BYTE $4A ; J
RAM:AF85 53                          .BYTE $53 ; S
RAM:AF86 52                          .BYTE $52 ; R
RAM:AF87 20                          .BYTE $20
RAM:AF88 50                          .BYTE $50 ; P
RAM:AF89 49                          .BYTE $49 ; I
RAM:AF8A 4E                          .BYTE $4E ; N
RAM:AF8B 43                          .BYTE $43 ; C
RAM:AF8C 52                          .BYTE $52 ; R
RAM:AF8D 59                          .BYTE $59 ; Y
RAM:AF8E 20                          .BYTE $20
RAM:AF8F 3B                          .BYTE $3B ; ;
RAM:AF90 4D                          .BYTE $4D ; M
RAM:AF91 4F                          .BYTE $4F ; O
RAM:AF92 56                          .BYTE $56 ; V
RAM:AF93 20                          .BYTE $20
RAM:AF94 44                          .BYTE $44 ; D
RAM:AF95 4F                          .BYTE $4F ; O
RAM:AF96 54                          .BYTE $54 ; T
RAM:AF97 20                          .BYTE $20
RAM:AF98 44                          .BYTE $44 ; D
RAM:AF99 57                          .BYTE $57 ; W
RAM:AF9A 4E                          .BYTE $4E ; N
RAM:AF9B 0D                          .BYTE  $D
RAM:AF9C 3B                          .BYTE $3B ; ;
RAM:AF9D 2A                          .BYTE $2A ; *
RAM:AF9E 2A                          .BYTE $2A ; *
RAM:AF9F 0D                          .BYTE  $D
RAM:AFA0 4A                          .BYTE $4A ; J
RAM:AFA1 53                          .BYTE $53 ; S
RAM:AFA2 52                          .BYTE $52 ; R
RAM:AFA3 20                          .BYTE $20
RAM:AFA4 50                          .BYTE $50 ; P
RAM:AFA5 49                          .BYTE $49 ; I
RAM:AFA6 4E                          .BYTE $4E ; N
RAM:AFA7 43                          .BYTE $43 ; C
RAM:AFA8 52                          .BYTE $52 ; R
RAM:AFA9 59                          .BYTE $59 ; Y
RAM:AFAA 20                          .BYTE $20
RAM:AFAB 3B                          .BYTE $3B ; ;
RAM:AFAC 4D                          .BYTE $4D ; M
RAM:AFAD 4F                          .BYTE $4F ; O
RAM:AFAE 56                          .BYTE $56 ; V
RAM:AFAF 20                          .BYTE $20
RAM:AFB0 49                          .BYTE $49 ; I
RAM:AFB1 54                          .BYTE $54 ; T
RAM:AFB2 20                          .BYTE $20
RAM:AFB3 44                          .BYTE $44 ; D
RAM:AFB4 4F                          .BYTE $4F ; O
RAM:AFB5 57                          .BYTE $57 ; W
RAM:AFB6 4E                          .BYTE $4E ; N
RAM:AFB7 0D                          .BYTE  $D
RAM:AFB8 42                          .BYTE $42 ; B
RAM:AFB9 45                          .BYTE $45 ; E
RAM:AFBA 51                          .BYTE $51 ; Q
RAM:AFBB 20                          .BYTE $20
RAM:AFBC 4A                          .BYTE $4A ; J
RAM:AFBD 4C                          .BYTE $4C ; L
RAM:AFBE 53                          .BYTE $53 ; S
RAM:AFBF 47                          .BYTE $47 ; G
RAM:AFC0 32                          .BYTE $32 ; 2
RAM:AFC1 31                          .BYTE $31 ; 1
RAM:AFC2 0D                          .BYTE  $D
RAM:AFC3 4A                          .BYTE $4A ; J
RAM:AFC4 53                          .BYTE $53 ; S
RAM:AFC5 52                          .BYTE $52 ; R
RAM:AFC6 20                          .BYTE $20
RAM:AFC7 54                          .BYTE $54 ; T
RAM:AFC8 4F                          .BYTE $4F ; O
RAM:AFC9 55                          .BYTE $55 ; U
RAM:AFCA 42                          .BYTE $42 ; B
RAM:AFCB 4F                          .BYTE $4F ; O
RAM:AFCC 4D                          .BYTE $4D ; M
RAM:AFCD 20                          .BYTE $20
RAM:AFCE 3B                          .BYTE $3B ; ;
RAM:AFCF 48                          .BYTE $48 ; H
RAM:AFD0 49                          .BYTE $49 ; I
RAM:AFD1 54                          .BYTE $54 ; T
RAM:AFD2 3F                          .BYTE $3F ; ?
RAM:AFD3 3F                          .BYTE $3F ; ?
RAM:AFD4 0D                          .BYTE  $D
RAM:AFD5 42                          .BYTE $42 ; B
RAM:AFD6 4E                          .BYTE $4E ; N
RAM:AFD7 45                          .BYTE $45 ; E
RAM:AFD8 20                          .BYTE $20
RAM:AFD9 4A                          .BYTE $4A ; J
RAM:AFDA 4C                          .BYTE $4C ; L
RAM:AFDB 53                          .BYTE $53 ; S
RAM:AFDC 47                          .BYTE $47 ; G
RAM:AFDD 32                          .BYTE $32 ; 2
RAM:AFDE 32                          .BYTE $32 ; 2
RAM:AFDF 0D                          .BYTE  $D
RAM:AFE0 4A                          .BYTE $4A ; J
RAM:AFE1 4C                          .BYTE $4C ; L
RAM:AFE2 53                          .BYTE $53 ; S
RAM:AFE3 47                          .BYTE $47 ; G
RAM:AFE4 32                          .BYTE $32 ; 2
RAM:AFE5 31                          .BYTE $31 ; 1
RAM:AFE6 20                          .BYTE $20
RAM:AFE7 4C                          .BYTE $4C ; L
RAM:AFE8 44                          .BYTE $44 ; D
RAM:AFE9 41                          .BYTE $41 ; A
RAM:AFEA 20                          .BYTE $20
RAM:AFEB 23                          .BYTE $23 ; #
RAM:AFEC 24                          .BYTE $24 ; $
RAM:AFED 46                          .BYTE $46 ; F
RAM:AFEE 46                          .BYTE $46 ; F
RAM:AFEF 0D                          .BYTE  $D
RAM:AFF0 53                          .BYTE $53 ; S
RAM:AFF1 54                          .BYTE $54 ; T
RAM:AFF2 41                          .BYTE $41 ; A
RAM:AFF3 20                          .BYTE $20
RAM:AFF4 5A                          .BYTE $5A ; Z
RAM:AFF5 50                          .BYTE $50 ; P
RAM:AFF6 41                          .BYTE $41 ; A
RAM:AFF7 31                          .BYTE $31 ; 1
RAM:AFF8 20                          .BYTE $20
RAM:AFF9 3B                          .BYTE $3B ; ;
RAM:AFFA 53                          .BYTE $53 ; S
RAM:AFFB 45                          .BYTE $45 ; E
RAM:AFFC 54                          .BYTE $54 ; T
RAM:AFFD 20                          .BYTE $20
RAM:AFFE 42                          .BYTE $42 ; B
RAM:AFFF 4F                          .BYTE $4F ; O
RAM:B000 FF                          .BYTE $FF
RAM:B001 FF                          .BYTE $FF
RAM:B002 FF                          .BYTE $FF
RAM:B003 FF                          .BYTE $FF
RAM:B004 FF                          .BYTE $FF
RAM:B005 FF                          .BYTE $FF
RAM:B006 FF                          .BYTE $FF
RAM:B007 FF                          .BYTE $FF
RAM:B008 FF                          .BYTE $FF
RAM:B009 FF                          .BYTE $FF
RAM:B00A FF                          .BYTE $FF
RAM:B00B FF                          .BYTE $FF
RAM:B00C FF                          .BYTE $FF
RAM:B00D FF                          .BYTE $FF
RAM:B00E FF                          .BYTE $FF
RAM:B00F FF                          .BYTE $FF
RAM:B010 FF                          .BYTE $FF
RAM:B011 FF                          .BYTE $FF
RAM:B012 FF                          .BYTE $FF
RAM:B013 FF                          .BYTE $FF
RAM:B014 FF                          .BYTE $FF
RAM:B015 FF                          .BYTE $FF
RAM:B016 FF                          .BYTE $FF
RAM:B017 FF                          .BYTE $FF
RAM:B018 FF                          .BYTE $FF
RAM:B019 FF                          .BYTE $FF
RAM:B01A FF                          .BYTE $FF
RAM:B01B FF                          .BYTE $FF
RAM:B01C FF                          .BYTE $FF
RAM:B01D FF                          .BYTE $FF
RAM:B01E FF                          .BYTE $FF
RAM:B01F FF                          .BYTE $FF
RAM:B020 FF                          .BYTE $FF
RAM:B021 FF                          .BYTE $FF
RAM:B022 FF                          .BYTE $FF
RAM:B023 FF                          .BYTE $FF
RAM:B024 FF                          .BYTE $FF
RAM:B025 FF                          .BYTE $FF
RAM:B026 FF                          .BYTE $FF
RAM:B027 FF                          .BYTE $FF
RAM:B028 FF                          .BYTE $FF
RAM:B029 FF                          .BYTE $FF
RAM:B02A FF                          .BYTE $FF
RAM:B02B FF                          .BYTE $FF
RAM:B02C FF                          .BYTE $FF
RAM:B02D FF                          .BYTE $FF
RAM:B02E FF                          .BYTE $FF
RAM:B02F FF                          .BYTE $FF
RAM:B030 FF                          .BYTE $FF
RAM:B031 FF                          .BYTE $FF
RAM:B032 FF                          .BYTE $FF
RAM:B033 FF                          .BYTE $FF
RAM:B034 FF                          .BYTE $FF
RAM:B035 FF                          .BYTE $FF
RAM:B036 FF                          .BYTE $FF
RAM:B037 FF                          .BYTE $FF
RAM:B038 FF                          .BYTE $FF
RAM:B039 FF                          .BYTE $FF
RAM:B03A FF                          .BYTE $FF
RAM:B03B FF                          .BYTE $FF
RAM:B03C FF                          .BYTE $FF
RAM:B03D FF                          .BYTE $FF
RAM:B03E FF                          .BYTE $FF
RAM:B03F FF                          .BYTE $FF
RAM:B040 FF                          .BYTE $FF
RAM:B041 FF                          .BYTE $FF
RAM:B042 FF                          .BYTE $FF
RAM:B043 FF                          .BYTE $FF
RAM:B044 FF                          .BYTE $FF
RAM:B045 FF                          .BYTE $FF
RAM:B046 FF                          .BYTE $FF
RAM:B047 FF                          .BYTE $FF
RAM:B048 FF                          .BYTE $FF
RAM:B049 FF                          .BYTE $FF
RAM:B04A FF                          .BYTE $FF
RAM:B04B FF                          .BYTE $FF
RAM:B04C FF                          .BYTE $FF
RAM:B04D FF                          .BYTE $FF
RAM:B04E FF                          .BYTE $FF
RAM:B04F FF                          .BYTE $FF
RAM:B050 FF                          .BYTE $FF
RAM:B051 FF                          .BYTE $FF
RAM:B052 FF                          .BYTE $FF
RAM:B053 FF                          .BYTE $FF
RAM:B054 FF                          .BYTE $FF
RAM:B055 FF                          .BYTE $FF
RAM:B056 FF                          .BYTE $FF
RAM:B057 FF                          .BYTE $FF
RAM:B058 FF                          .BYTE $FF
RAM:B059 FF                          .BYTE $FF
RAM:B05A FF                          .BYTE $FF
RAM:B05B FF                          .BYTE $FF
RAM:B05C FF                          .BYTE $FF
RAM:B05D FF                          .BYTE $FF
RAM:B05E FF                          .BYTE $FF
RAM:B05F FF                          .BYTE $FF
RAM:B060 FF                          .BYTE $FF
RAM:B061 FF                          .BYTE $FF
RAM:B062 FF                          .BYTE $FF
RAM:B063 FF                          .BYTE $FF
RAM:B064 FF                          .BYTE $FF
RAM:B065 FF                          .BYTE $FF
RAM:B066 FF                          .BYTE $FF
RAM:B067 FF                          .BYTE $FF
RAM:B068 FF                          .BYTE $FF
RAM:B069 FF                          .BYTE $FF
RAM:B06A FF                          .BYTE $FF
RAM:B06B FF                          .BYTE $FF
RAM:B06C FF                          .BYTE $FF
RAM:B06D FF                          .BYTE $FF
RAM:B06E FF                          .BYTE $FF
RAM:B06F FF                          .BYTE $FF
RAM:B070 FF                          .BYTE $FF
RAM:B071 FF                          .BYTE $FF
RAM:B072 FF                          .BYTE $FF
RAM:B073 FF                          .BYTE $FF
RAM:B074 FF                          .BYTE $FF
RAM:B075 FF                          .BYTE $FF
RAM:B076 FF                          .BYTE $FF
RAM:B077 FF                          .BYTE $FF
RAM:B078 FF                          .BYTE $FF
RAM:B079 FF                          .BYTE $FF
RAM:B07A FF                          .BYTE $FF
RAM:B07B FF                          .BYTE $FF
RAM:B07C FF                          .BYTE $FF
RAM:B07D FF                          .BYTE $FF
RAM:B07E FF                          .BYTE $FF
RAM:B07F FF                          .BYTE $FF
RAM:B080 FF                          .BYTE $FF
RAM:B081 FF                          .BYTE $FF
RAM:B082 FF                          .BYTE $FF
RAM:B083 FF                          .BYTE $FF
RAM:B084 FF                          .BYTE $FF
RAM:B085 FF                          .BYTE $FF
RAM:B086 FF                          .BYTE $FF
RAM:B087 FF                          .BYTE $FF
RAM:B088 FF                          .BYTE $FF
RAM:B089 FF                          .BYTE $FF
RAM:B08A FF                          .BYTE $FF
RAM:B08B FF                          .BYTE $FF
RAM:B08C FF                          .BYTE $FF
RAM:B08D FF                          .BYTE $FF
RAM:B08E FF                          .BYTE $FF
RAM:B08F FF                          .BYTE $FF
RAM:B090 FF                          .BYTE $FF
RAM:B091 FF                          .BYTE $FF
RAM:B092 FF                          .BYTE $FF
RAM:B093 FF                          .BYTE $FF
RAM:B094 FF                          .BYTE $FF
RAM:B095 FF                          .BYTE $FF
RAM:B096 FF                          .BYTE $FF
RAM:B097 FF                          .BYTE $FF
RAM:B098 FF                          .BYTE $FF
RAM:B099 FF                          .BYTE $FF
RAM:B09A FF                          .BYTE $FF
RAM:B09B FF                          .BYTE $FF
RAM:B09C FF                          .BYTE $FF
RAM:B09D FF                          .BYTE $FF
RAM:B09E FF                          .BYTE $FF
RAM:B09F FF                          .BYTE $FF
RAM:B0A0 FF                          .BYTE $FF
RAM:B0A1 FF                          .BYTE $FF
RAM:B0A2 FF                          .BYTE $FF
RAM:B0A3 FF                          .BYTE $FF
RAM:B0A4 FF                          .BYTE $FF
RAM:B0A5 FF                          .BYTE $FF
RAM:B0A6 FF                          .BYTE $FF
RAM:B0A7 FF                          .BYTE $FF
RAM:B0A8 FF                          .BYTE $FF
RAM:B0A9 FF                          .BYTE $FF
RAM:B0AA FF                          .BYTE $FF
RAM:B0AB FF                          .BYTE $FF
RAM:B0AC FF                          .BYTE $FF
RAM:B0AD FF                          .BYTE $FF
RAM:B0AE FF                          .BYTE $FF
RAM:B0AF FF                          .BYTE $FF
RAM:B0B0 FF                          .BYTE $FF
RAM:B0B1 FF                          .BYTE $FF
RAM:B0B2 FF                          .BYTE $FF
RAM:B0B3 FF                          .BYTE $FF
RAM:B0B4 FF                          .BYTE $FF
RAM:B0B5 FF                          .BYTE $FF
RAM:B0B6 FF                          .BYTE $FF
RAM:B0B7 FF                          .BYTE $FF
RAM:B0B8 FF                          .BYTE $FF
RAM:B0B9 FF                          .BYTE $FF
RAM:B0BA FF                          .BYTE $FF
RAM:B0BB FF                          .BYTE $FF
RAM:B0BC FF                          .BYTE $FF
RAM:B0BD FF                          .BYTE $FF
RAM:B0BE FF                          .BYTE $FF
RAM:B0BF FF                          .BYTE $FF
RAM:B0C0 FF                          .BYTE $FF
RAM:B0C1 FF                          .BYTE $FF
RAM:B0C2 FF                          .BYTE $FF
RAM:B0C3 FF                          .BYTE $FF
RAM:B0C4 FF                          .BYTE $FF
RAM:B0C5 FF                          .BYTE $FF
RAM:B0C6 FF                          .BYTE $FF
RAM:B0C7 FF                          .BYTE $FF
RAM:B0C8 FF                          .BYTE $FF
RAM:B0C9 FF                          .BYTE $FF
RAM:B0CA FF                          .BYTE $FF
RAM:B0CB FF                          .BYTE $FF
RAM:B0CC FF                          .BYTE $FF
RAM:B0CD FF                          .BYTE $FF
RAM:B0CE FF                          .BYTE $FF
RAM:B0CF FF                          .BYTE $FF
RAM:B0D0 FF                          .BYTE $FF
RAM:B0D1 FF                          .BYTE $FF
RAM:B0D2 FF                          .BYTE $FF
RAM:B0D3 FF                          .BYTE $FF
RAM:B0D4 FF                          .BYTE $FF
RAM:B0D5 FF                          .BYTE $FF
RAM:B0D6 FF                          .BYTE $FF
RAM:B0D7 FF                          .BYTE $FF
RAM:B0D8 FF                          .BYTE $FF
RAM:B0D9 FF                          .BYTE $FF
RAM:B0DA FF                          .BYTE $FF
RAM:B0DB FF                          .BYTE $FF
RAM:B0DC FF                          .BYTE $FF
RAM:B0DD FF                          .BYTE $FF
RAM:B0DE FF                          .BYTE $FF
RAM:B0DF FF                          .BYTE $FF
RAM:B0E0 FF                          .BYTE $FF
RAM:B0E1 FF                          .BYTE $FF
RAM:B0E2 FF                          .BYTE $FF
RAM:B0E3 FF                          .BYTE $FF
RAM:B0E4 FF                          .BYTE $FF
RAM:B0E5 FF                          .BYTE $FF
RAM:B0E6 FF                          .BYTE $FF
RAM:B0E7 FF                          .BYTE $FF
RAM:B0E8 FF                          .BYTE $FF
RAM:B0E9 FF                          .BYTE $FF
RAM:B0EA FF                          .BYTE $FF
RAM:B0EB FF                          .BYTE $FF
RAM:B0EC FF                          .BYTE $FF
RAM:B0ED FF                          .BYTE $FF
RAM:B0EE FF                          .BYTE $FF
RAM:B0EF FF                          .BYTE $FF
RAM:B0F0 FF                          .BYTE $FF
RAM:B0F1 FF                          .BYTE $FF
RAM:B0F2 FF                          .BYTE $FF
RAM:B0F3 FF                          .BYTE $FF
RAM:B0F4 FF                          .BYTE $FF
RAM:B0F5 FF                          .BYTE $FF
RAM:B0F6 FF                          .BYTE $FF
RAM:B0F7 FF                          .BYTE $FF
RAM:B0F8 FF                          .BYTE $FF
RAM:B0F9 FF                          .BYTE $FF
RAM:B0FA FF                          .BYTE $FF
RAM:B0FB FF                          .BYTE $FF
RAM:B0FC FF                          .BYTE $FF
RAM:B0FD FF                          .BYTE $FF
RAM:B0FE FF                          .BYTE $FF
RAM:B0FF FF                          .BYTE $FF
RAM:B100 FF                          .BYTE $FF
RAM:B101 FF                          .BYTE $FF
RAM:B102 FF                          .BYTE $FF
RAM:B103 FF                          .BYTE $FF
RAM:B104 FF                          .BYTE $FF
RAM:B105 FF                          .BYTE $FF
RAM:B106 FF                          .BYTE $FF
RAM:B107 FF                          .BYTE $FF
RAM:B108 FF                          .BYTE $FF
RAM:B109 FF                          .BYTE $FF
RAM:B10A FF                          .BYTE $FF
RAM:B10B FF                          .BYTE $FF
RAM:B10C FF                          .BYTE $FF
RAM:B10D FF                          .BYTE $FF
RAM:B10E FF                          .BYTE $FF
RAM:B10F FF                          .BYTE $FF
RAM:B110 FF                          .BYTE $FF
RAM:B111 FF                          .BYTE $FF
RAM:B112 FF                          .BYTE $FF
RAM:B113 FF                          .BYTE $FF
RAM:B114 FF                          .BYTE $FF
RAM:B115 FF                          .BYTE $FF
RAM:B116 FF                          .BYTE $FF
RAM:B117 FF                          .BYTE $FF
RAM:B118 FF                          .BYTE $FF
RAM:B119 FF                          .BYTE $FF
RAM:B11A FF                          .BYTE $FF
RAM:B11B FF                          .BYTE $FF
RAM:B11C FF                          .BYTE $FF
RAM:B11D FF                          .BYTE $FF
RAM:B11E FF                          .BYTE $FF
RAM:B11F FF                          .BYTE $FF
RAM:B120 FF                          .BYTE $FF
RAM:B121 FF                          .BYTE $FF
RAM:B122 FF                          .BYTE $FF
RAM:B123 FF                          .BYTE $FF
RAM:B124 FF                          .BYTE $FF
RAM:B125 FF                          .BYTE $FF
RAM:B126 FF                          .BYTE $FF
RAM:B127 FF                          .BYTE $FF
RAM:B128 FF                          .BYTE $FF
RAM:B129 FF                          .BYTE $FF
RAM:B12A FF                          .BYTE $FF
RAM:B12B FF                          .BYTE $FF
RAM:B12C FF                          .BYTE $FF
RAM:B12D FF                          .BYTE $FF
RAM:B12E FF                          .BYTE $FF
RAM:B12F FF                          .BYTE $FF
RAM:B130 FF                          .BYTE $FF
RAM:B131 FF                          .BYTE $FF
RAM:B132 FF                          .BYTE $FF
RAM:B133 FF                          .BYTE $FF
RAM:B134 FF                          .BYTE $FF
RAM:B135 FF                          .BYTE $FF
RAM:B136 FF                          .BYTE $FF
RAM:B137 FF                          .BYTE $FF
RAM:B138 FF                          .BYTE $FF
RAM:B139 FF                          .BYTE $FF
RAM:B13A FF                          .BYTE $FF
RAM:B13B FF                          .BYTE $FF
RAM:B13C FF                          .BYTE $FF
RAM:B13D FF                          .BYTE $FF
RAM:B13E FF                          .BYTE $FF
RAM:B13F FF                          .BYTE $FF
RAM:B140 FF                          .BYTE $FF
RAM:B141 FF                          .BYTE $FF
RAM:B142 FF                          .BYTE $FF
RAM:B143 FF                          .BYTE $FF
RAM:B144 FF                          .BYTE $FF
RAM:B145 FF                          .BYTE $FF
RAM:B146 FF                          .BYTE $FF
RAM:B147 FF                          .BYTE $FF
RAM:B148 FF                          .BYTE $FF
RAM:B149 FF                          .BYTE $FF
RAM:B14A FF                          .BYTE $FF
RAM:B14B FF                          .BYTE $FF
RAM:B14C FF                          .BYTE $FF
RAM:B14D FF                          .BYTE $FF
RAM:B14E FF                          .BYTE $FF
RAM:B14F FF                          .BYTE $FF
RAM:B150 FF                          .BYTE $FF
RAM:B151 FF                          .BYTE $FF
RAM:B152 FF                          .BYTE $FF
RAM:B153 FF                          .BYTE $FF
RAM:B154 FF                          .BYTE $FF
RAM:B155 FF                          .BYTE $FF
RAM:B156 FF                          .BYTE $FF
RAM:B157 FF                          .BYTE $FF
RAM:B158 FF                          .BYTE $FF
RAM:B159 FF                          .BYTE $FF
RAM:B15A FF                          .BYTE $FF
RAM:B15B FF                          .BYTE $FF
RAM:B15C FF                          .BYTE $FF
RAM:B15D FF                          .BYTE $FF
RAM:B15E FF                          .BYTE $FF
RAM:B15F FF                          .BYTE $FF
RAM:B160 FF                          .BYTE $FF
RAM:B161 FF                          .BYTE $FF
RAM:B162 FF                          .BYTE $FF
RAM:B163 FF                          .BYTE $FF
RAM:B164 FF                          .BYTE $FF
RAM:B165 FF                          .BYTE $FF
RAM:B166 FF                          .BYTE $FF
RAM:B167 FF                          .BYTE $FF
RAM:B168 FF                          .BYTE $FF
RAM:B169 FF                          .BYTE $FF
RAM:B16A FF                          .BYTE $FF
RAM:B16B FF                          .BYTE $FF
RAM:B16C FF                          .BYTE $FF
RAM:B16D FF                          .BYTE $FF
RAM:B16E FF                          .BYTE $FF
RAM:B16F FF                          .BYTE $FF
RAM:B170 FF                          .BYTE $FF
RAM:B171 FF                          .BYTE $FF
RAM:B172 FF                          .BYTE $FF
RAM:B173 FF                          .BYTE $FF
RAM:B174 FF                          .BYTE $FF
RAM:B175 FF                          .BYTE $FF
RAM:B176 FF                          .BYTE $FF
RAM:B177 FF                          .BYTE $FF
RAM:B178 FF                          .BYTE $FF
RAM:B179 FF                          .BYTE $FF
RAM:B17A FF                          .BYTE $FF
RAM:B17B FF                          .BYTE $FF
RAM:B17C FF                          .BYTE $FF
RAM:B17D FF                          .BYTE $FF
RAM:B17E FF                          .BYTE $FF
RAM:B17F FF                          .BYTE $FF
RAM:B180 FF                          .BYTE $FF
RAM:B181 FF                          .BYTE $FF
RAM:B182 FF                          .BYTE $FF
RAM:B183 FF                          .BYTE $FF
RAM:B184 FF                          .BYTE $FF
RAM:B185 FF                          .BYTE $FF
RAM:B186 FF                          .BYTE $FF
RAM:B187 FF                          .BYTE $FF
RAM:B188 FF                          .BYTE $FF
RAM:B189 FF                          .BYTE $FF
RAM:B18A FF                          .BYTE $FF
RAM:B18B FF                          .BYTE $FF
RAM:B18C FF                          .BYTE $FF
RAM:B18D FF                          .BYTE $FF
RAM:B18E FF                          .BYTE $FF
RAM:B18F FF                          .BYTE $FF
RAM:B190 FF                          .BYTE $FF
RAM:B191 FF                          .BYTE $FF
RAM:B192 FF                          .BYTE $FF
RAM:B193 FF                          .BYTE $FF
RAM:B194 FF                          .BYTE $FF
RAM:B195 FF                          .BYTE $FF
RAM:B196 FF                          .BYTE $FF
RAM:B197 FF                          .BYTE $FF
RAM:B198 FF                          .BYTE $FF
RAM:B199 FF                          .BYTE $FF
RAM:B19A FF                          .BYTE $FF
RAM:B19B FF                          .BYTE $FF
RAM:B19C FF                          .BYTE $FF
RAM:B19D FF                          .BYTE $FF
RAM:B19E FF                          .BYTE $FF
RAM:B19F FF                          .BYTE $FF
RAM:B1A0 FF                          .BYTE $FF
RAM:B1A1 FF                          .BYTE $FF
RAM:B1A2 FF                          .BYTE $FF
RAM:B1A3 FF                          .BYTE $FF
RAM:B1A4 FF                          .BYTE $FF
RAM:B1A5 FF                          .BYTE $FF
RAM:B1A6 FF                          .BYTE $FF
RAM:B1A7 FF                          .BYTE $FF
RAM:B1A8 FF                          .BYTE $FF
RAM:B1A9 FF                          .BYTE $FF
RAM:B1AA FF                          .BYTE $FF
RAM:B1AB FF                          .BYTE $FF
RAM:B1AC FF                          .BYTE $FF
RAM:B1AD FF                          .BYTE $FF
RAM:B1AE FF                          .BYTE $FF
RAM:B1AF FF                          .BYTE $FF
RAM:B1B0 FF                          .BYTE $FF
RAM:B1B1 FF                          .BYTE $FF
RAM:B1B2 FF                          .BYTE $FF
RAM:B1B3 FF                          .BYTE $FF
RAM:B1B4 FF                          .BYTE $FF
RAM:B1B5 FF                          .BYTE $FF
RAM:B1B6 FF                          .BYTE $FF
RAM:B1B7 FF                          .BYTE $FF
RAM:B1B8 FF                          .BYTE $FF
RAM:B1B9 FF                          .BYTE $FF
RAM:B1BA FF                          .BYTE $FF
RAM:B1BB FF                          .BYTE $FF
RAM:B1BC FF                          .BYTE $FF
RAM:B1BD FF                          .BYTE $FF
RAM:B1BE FF                          .BYTE $FF
RAM:B1BF FF                          .BYTE $FF
RAM:B1C0 FF                          .BYTE $FF
RAM:B1C1 FF                          .BYTE $FF
RAM:B1C2 FF                          .BYTE $FF
RAM:B1C3 FF                          .BYTE $FF
RAM:B1C4 FF                          .BYTE $FF
RAM:B1C5 FF                          .BYTE $FF
RAM:B1C6 FF                          .BYTE $FF
RAM:B1C7 FF                          .BYTE $FF
RAM:B1C8 FF                          .BYTE $FF
RAM:B1C9 FF                          .BYTE $FF
RAM:B1CA FF                          .BYTE $FF
RAM:B1CB FF                          .BYTE $FF
RAM:B1CC FF                          .BYTE $FF
RAM:B1CD FF                          .BYTE $FF
RAM:B1CE FF                          .BYTE $FF
RAM:B1CF FF                          .BYTE $FF
RAM:B1D0 FF                          .BYTE $FF
RAM:B1D1 FF                          .BYTE $FF
RAM:B1D2 FF                          .BYTE $FF
RAM:B1D3 FF                          .BYTE $FF
RAM:B1D4 FF                          .BYTE $FF
RAM:B1D5 FF                          .BYTE $FF
RAM:B1D6 FF                          .BYTE $FF
RAM:B1D7 FF                          .BYTE $FF
RAM:B1D8 FF                          .BYTE $FF
RAM:B1D9 FF                          .BYTE $FF
RAM:B1DA FF                          .BYTE $FF
RAM:B1DB FF                          .BYTE $FF
RAM:B1DC FF                          .BYTE $FF
RAM:B1DD FF                          .BYTE $FF
RAM:B1DE FF                          .BYTE $FF
RAM:B1DF FF                          .BYTE $FF
RAM:B1E0 FF                          .BYTE $FF
RAM:B1E1 FF                          .BYTE $FF
RAM:B1E2 FF                          .BYTE $FF
RAM:B1E3 FF                          .BYTE $FF
RAM:B1E4 FF                          .BYTE $FF
RAM:B1E5 FF                          .BYTE $FF
RAM:B1E6 FF                          .BYTE $FF
RAM:B1E7 FF                          .BYTE $FF
RAM:B1E8 FF                          .BYTE $FF
RAM:B1E9 FF                          .BYTE $FF
RAM:B1EA FF                          .BYTE $FF
RAM:B1EB FF                          .BYTE $FF
RAM:B1EC FF                          .BYTE $FF
RAM:B1ED FF                          .BYTE $FF
RAM:B1EE FF                          .BYTE $FF
RAM:B1EF FF                          .BYTE $FF
RAM:B1F0 FF                          .BYTE $FF
RAM:B1F1 FF                          .BYTE $FF
RAM:B1F2 FF                          .BYTE $FF
RAM:B1F3 FF                          .BYTE $FF
RAM:B1F4 FF                          .BYTE $FF
RAM:B1F5 FF                          .BYTE $FF
RAM:B1F6 FF                          .BYTE $FF
RAM:B1F7 FF                          .BYTE $FF
RAM:B1F8 FF                          .BYTE $FF
RAM:B1F9 FF                          .BYTE $FF
RAM:B1FA FF                          .BYTE $FF
RAM:B1FB FF                          .BYTE $FF
RAM:B1FC FF                          .BYTE $FF
RAM:B1FD FF                          .BYTE $FF
RAM:B1FE FF                          .BYTE $FF
RAM:B1FF FF                          .BYTE $FF
RAM:B200 FF                          .BYTE $FF
RAM:B201 FF                          .BYTE $FF
RAM:B202 FF                          .BYTE $FF
RAM:B203 FF                          .BYTE $FF
RAM:B204 FF                          .BYTE $FF
RAM:B205 FF                          .BYTE $FF
RAM:B206 FF                          .BYTE $FF
RAM:B207 FF                          .BYTE $FF
RAM:B208 FF                          .BYTE $FF
RAM:B209 FF                          .BYTE $FF
RAM:B20A FF                          .BYTE $FF
RAM:B20B FF                          .BYTE $FF
RAM:B20C FF                          .BYTE $FF
RAM:B20D FF                          .BYTE $FF
RAM:B20E FF                          .BYTE $FF
RAM:B20F FF                          .BYTE $FF
RAM:B210 FF                          .BYTE $FF
RAM:B211 FF                          .BYTE $FF
RAM:B212 FF                          .BYTE $FF
RAM:B213 FF                          .BYTE $FF
RAM:B214 FF                          .BYTE $FF
RAM:B215 FF                          .BYTE $FF
RAM:B216 FF                          .BYTE $FF
RAM:B217 FF                          .BYTE $FF
RAM:B218 FF                          .BYTE $FF
RAM:B219 FF                          .BYTE $FF
RAM:B21A FF                          .BYTE $FF
RAM:B21B FF                          .BYTE $FF
RAM:B21C FF                          .BYTE $FF
RAM:B21D FF                          .BYTE $FF
RAM:B21E FF                          .BYTE $FF
RAM:B21F FF                          .BYTE $FF
RAM:B220 FF                          .BYTE $FF
RAM:B221 FF                          .BYTE $FF
RAM:B222 FF                          .BYTE $FF
RAM:B223 FF                          .BYTE $FF
RAM:B224 FF                          .BYTE $FF
RAM:B225 FF                          .BYTE $FF
RAM:B226 FF                          .BYTE $FF
RAM:B227 FF                          .BYTE $FF
RAM:B228 FF                          .BYTE $FF
RAM:B229 FF                          .BYTE $FF
RAM:B22A FF                          .BYTE $FF
RAM:B22B FF                          .BYTE $FF
RAM:B22C FF                          .BYTE $FF
RAM:B22D FF                          .BYTE $FF
RAM:B22E FF                          .BYTE $FF
RAM:B22F FF                          .BYTE $FF
RAM:B230 FF                          .BYTE $FF
RAM:B231 FF                          .BYTE $FF
RAM:B232 FF                          .BYTE $FF
RAM:B233 FF                          .BYTE $FF
RAM:B234 FF                          .BYTE $FF
RAM:B235 FF                          .BYTE $FF
RAM:B236 FF                          .BYTE $FF
RAM:B237 FF                          .BYTE $FF
RAM:B238 FF                          .BYTE $FF
RAM:B239 FF                          .BYTE $FF
RAM:B23A FF                          .BYTE $FF
RAM:B23B FF                          .BYTE $FF
RAM:B23C FF                          .BYTE $FF
RAM:B23D FF                          .BYTE $FF
RAM:B23E FF                          .BYTE $FF
RAM:B23F FF                          .BYTE $FF
RAM:B240 FF                          .BYTE $FF
RAM:B241 FF                          .BYTE $FF
RAM:B242 FF                          .BYTE $FF
RAM:B243 FF                          .BYTE $FF
RAM:B244 FF                          .BYTE $FF
RAM:B245 FF                          .BYTE $FF
RAM:B246 FF                          .BYTE $FF
RAM:B247 FF                          .BYTE $FF
RAM:B248 FF                          .BYTE $FF
RAM:B249 FF                          .BYTE $FF
RAM:B24A FF                          .BYTE $FF
RAM:B24B FF                          .BYTE $FF
RAM:B24C FF                          .BYTE $FF
RAM:B24D FF                          .BYTE $FF
RAM:B24E FF                          .BYTE $FF
RAM:B24F FF                          .BYTE $FF
RAM:B250 FF                          .BYTE $FF
RAM:B251 FF                          .BYTE $FF
RAM:B252 FF                          .BYTE $FF
RAM:B253 FF                          .BYTE $FF
RAM:B254 FF                          .BYTE $FF
RAM:B255 FF                          .BYTE $FF
RAM:B256 FF                          .BYTE $FF
RAM:B257 FF                          .BYTE $FF
RAM:B258 FF                          .BYTE $FF
RAM:B259 FF                          .BYTE $FF
RAM:B25A FF                          .BYTE $FF
RAM:B25B FF                          .BYTE $FF
RAM:B25C FF                          .BYTE $FF
RAM:B25D FF                          .BYTE $FF
RAM:B25E FF                          .BYTE $FF
RAM:B25F FF                          .BYTE $FF
RAM:B260 FF                          .BYTE $FF
RAM:B261 FF                          .BYTE $FF
RAM:B262 FF                          .BYTE $FF
RAM:B263 FF                          .BYTE $FF
RAM:B264 FF                          .BYTE $FF
RAM:B265 FF                          .BYTE $FF
RAM:B266 FF                          .BYTE $FF
RAM:B267 FF                          .BYTE $FF
RAM:B268 FF                          .BYTE $FF
RAM:B269 FF                          .BYTE $FF
RAM:B26A FF                          .BYTE $FF
RAM:B26B FF                          .BYTE $FF
RAM:B26C FF                          .BYTE $FF
RAM:B26D FF                          .BYTE $FF
RAM:B26E FF                          .BYTE $FF
RAM:B26F FF                          .BYTE $FF
RAM:B270 FF                          .BYTE $FF
RAM:B271 FF                          .BYTE $FF
RAM:B272 FF                          .BYTE $FF
RAM:B273 FF                          .BYTE $FF
RAM:B274 FF                          .BYTE $FF
RAM:B275 FF                          .BYTE $FF
RAM:B276 FF                          .BYTE $FF
RAM:B277 FF                          .BYTE $FF
RAM:B278 FF                          .BYTE $FF
RAM:B279 FF                          .BYTE $FF
RAM:B27A FF                          .BYTE $FF
RAM:B27B FF                          .BYTE $FF
RAM:B27C FF                          .BYTE $FF
RAM:B27D FF                          .BYTE $FF
RAM:B27E FF                          .BYTE $FF
RAM:B27F FF                          .BYTE $FF
RAM:B280 FF                          .BYTE $FF
RAM:B281 FF                          .BYTE $FF
RAM:B282 FF                          .BYTE $FF
RAM:B283 FF                          .BYTE $FF
RAM:B284 FF                          .BYTE $FF
RAM:B285 FF                          .BYTE $FF
RAM:B286 FF                          .BYTE $FF
RAM:B287 FF                          .BYTE $FF
RAM:B288 FF                          .BYTE $FF
RAM:B289 FF                          .BYTE $FF
RAM:B28A FF                          .BYTE $FF
RAM:B28B FF                          .BYTE $FF
RAM:B28C FF                          .BYTE $FF
RAM:B28D FF                          .BYTE $FF
RAM:B28E FF                          .BYTE $FF
RAM:B28F FF                          .BYTE $FF
RAM:B290 FF                          .BYTE $FF
RAM:B291 FF                          .BYTE $FF
RAM:B292 FF                          .BYTE $FF
RAM:B293 FF                          .BYTE $FF
RAM:B294 FF                          .BYTE $FF
RAM:B295 FF                          .BYTE $FF
RAM:B296 FF                          .BYTE $FF
RAM:B297 FF                          .BYTE $FF
RAM:B298 FF                          .BYTE $FF
RAM:B299 FF                          .BYTE $FF
RAM:B29A FF                          .BYTE $FF
RAM:B29B FF                          .BYTE $FF
RAM:B29C FF                          .BYTE $FF
RAM:B29D FF                          .BYTE $FF
RAM:B29E FF                          .BYTE $FF
RAM:B29F FF                          .BYTE $FF
RAM:B2A0 FF                          .BYTE $FF
RAM:B2A1 FF                          .BYTE $FF
RAM:B2A2 FF                          .BYTE $FF
RAM:B2A3 FF                          .BYTE $FF
RAM:B2A4 FF                          .BYTE $FF
RAM:B2A5 FF                          .BYTE $FF
RAM:B2A6 FF                          .BYTE $FF
RAM:B2A7 FF                          .BYTE $FF
RAM:B2A8 FF                          .BYTE $FF
RAM:B2A9 FF                          .BYTE $FF
RAM:B2AA FF                          .BYTE $FF
RAM:B2AB FF                          .BYTE $FF
RAM:B2AC FF                          .BYTE $FF
RAM:B2AD FF                          .BYTE $FF
RAM:B2AE FF                          .BYTE $FF
RAM:B2AF FF                          .BYTE $FF
RAM:B2B0 FF                          .BYTE $FF
RAM:B2B1 FF                          .BYTE $FF
RAM:B2B2 FF                          .BYTE $FF
RAM:B2B3 FF                          .BYTE $FF
RAM:B2B4 FF                          .BYTE $FF
RAM:B2B5 FF                          .BYTE $FF
RAM:B2B6 FF                          .BYTE $FF
RAM:B2B7 FF                          .BYTE $FF
RAM:B2B8 FF                          .BYTE $FF
RAM:B2B9 FF                          .BYTE $FF
RAM:B2BA FF                          .BYTE $FF
RAM:B2BB FF                          .BYTE $FF
RAM:B2BC FF                          .BYTE $FF
RAM:B2BD FF                          .BYTE $FF
RAM:B2BE FF                          .BYTE $FF
RAM:B2BF FF                          .BYTE $FF
RAM:B2C0 FF                          .BYTE $FF
RAM:B2C1 FF                          .BYTE $FF
RAM:B2C2 FF                          .BYTE $FF
RAM:B2C3 FF                          .BYTE $FF
RAM:B2C4 FF                          .BYTE $FF
RAM:B2C5 FF                          .BYTE $FF
RAM:B2C6 FF                          .BYTE $FF
RAM:B2C7 FF                          .BYTE $FF
RAM:B2C8 FF                          .BYTE $FF
RAM:B2C9 FF                          .BYTE $FF
RAM:B2CA FF                          .BYTE $FF
RAM:B2CB FF                          .BYTE $FF
RAM:B2CC FF                          .BYTE $FF
RAM:B2CD FF                          .BYTE $FF
RAM:B2CE FF                          .BYTE $FF
RAM:B2CF FF                          .BYTE $FF
RAM:B2D0 FF                          .BYTE $FF
RAM:B2D1 FF                          .BYTE $FF
RAM:B2D2 FF                          .BYTE $FF
RAM:B2D3 FF                          .BYTE $FF
RAM:B2D4 FF                          .BYTE $FF
RAM:B2D5 FF                          .BYTE $FF
RAM:B2D6 FF                          .BYTE $FF
RAM:B2D7 FF                          .BYTE $FF
RAM:B2D8 FF                          .BYTE $FF
RAM:B2D9 FF                          .BYTE $FF
RAM:B2DA FF                          .BYTE $FF
RAM:B2DB FF                          .BYTE $FF
RAM:B2DC FF                          .BYTE $FF
RAM:B2DD FF                          .BYTE $FF
RAM:B2DE FF                          .BYTE $FF
RAM:B2DF FF                          .BYTE $FF
RAM:B2E0 FF                          .BYTE $FF
RAM:B2E1 FF                          .BYTE $FF
RAM:B2E2 FF                          .BYTE $FF
RAM:B2E3 FF                          .BYTE $FF
RAM:B2E4 FF                          .BYTE $FF
RAM:B2E5 FF                          .BYTE $FF
RAM:B2E6 FF                          .BYTE $FF
RAM:B2E7 FF                          .BYTE $FF
RAM:B2E8 FF                          .BYTE $FF
RAM:B2E9 FF                          .BYTE $FF
RAM:B2EA FF                          .BYTE $FF
RAM:B2EB FF                          .BYTE $FF
RAM:B2EC FF                          .BYTE $FF
RAM:B2ED FF                          .BYTE $FF
RAM:B2EE FF                          .BYTE $FF
RAM:B2EF FF                          .BYTE $FF
RAM:B2F0 FF                          .BYTE $FF
RAM:B2F1 FF                          .BYTE $FF
RAM:B2F2 FF                          .BYTE $FF
RAM:B2F3 FF                          .BYTE $FF
RAM:B2F4 FF                          .BYTE $FF
RAM:B2F5 FF                          .BYTE $FF
RAM:B2F6 FF                          .BYTE $FF
RAM:B2F7 FF                          .BYTE $FF
RAM:B2F8 FF                          .BYTE $FF
RAM:B2F9 FF                          .BYTE $FF
RAM:B2FA FF                          .BYTE $FF
RAM:B2FB FF                          .BYTE $FF
RAM:B2FC FF                          .BYTE $FF
RAM:B2FD FF                          .BYTE $FF
RAM:B2FE FF                          .BYTE $FF
RAM:B2FF FF                          .BYTE $FF
RAM:B300 FF                          .BYTE $FF
RAM:B301 FF                          .BYTE $FF
RAM:B302 FF                          .BYTE $FF
RAM:B303 FF                          .BYTE $FF
RAM:B304 FF                          .BYTE $FF
RAM:B305 FF                          .BYTE $FF
RAM:B306 FF                          .BYTE $FF
RAM:B307 FF                          .BYTE $FF
RAM:B308 FF                          .BYTE $FF
RAM:B309 FF                          .BYTE $FF
RAM:B30A FF                          .BYTE $FF
RAM:B30B FF                          .BYTE $FF
RAM:B30C FF                          .BYTE $FF
RAM:B30D FF                          .BYTE $FF
RAM:B30E FF                          .BYTE $FF
RAM:B30F FF                          .BYTE $FF
RAM:B310 FF                          .BYTE $FF
RAM:B311 FF                          .BYTE $FF
RAM:B312 FF                          .BYTE $FF
RAM:B313 FF                          .BYTE $FF
RAM:B314 FF                          .BYTE $FF
RAM:B315 FF                          .BYTE $FF
RAM:B316 FF                          .BYTE $FF
RAM:B317 FF                          .BYTE $FF
RAM:B318 FF                          .BYTE $FF
RAM:B319 FF                          .BYTE $FF
RAM:B31A FF                          .BYTE $FF
RAM:B31B FF                          .BYTE $FF
RAM:B31C FF                          .BYTE $FF
RAM:B31D FF                          .BYTE $FF
RAM:B31E FF                          .BYTE $FF
RAM:B31F FF                          .BYTE $FF
RAM:B320 FF                          .BYTE $FF
RAM:B321 FF                          .BYTE $FF
RAM:B322 FF                          .BYTE $FF
RAM:B323 FF                          .BYTE $FF
RAM:B324 FF                          .BYTE $FF
RAM:B325 FF                          .BYTE $FF
RAM:B326 FF                          .BYTE $FF
RAM:B327 FF                          .BYTE $FF
RAM:B328 FF                          .BYTE $FF
RAM:B329 FF                          .BYTE $FF
RAM:B32A FF                          .BYTE $FF
RAM:B32B FF                          .BYTE $FF
RAM:B32C FF                          .BYTE $FF
RAM:B32D FF                          .BYTE $FF
RAM:B32E FF                          .BYTE $FF
RAM:B32F FF                          .BYTE $FF
RAM:B330 FF                          .BYTE $FF
RAM:B331 FF                          .BYTE $FF
RAM:B332 FF                          .BYTE $FF
RAM:B333 FF                          .BYTE $FF
RAM:B334 FF                          .BYTE $FF
RAM:B335 FF                          .BYTE $FF
RAM:B336 FF                          .BYTE $FF
RAM:B337 FF                          .BYTE $FF
RAM:B338 FF                          .BYTE $FF
RAM:B339 FF                          .BYTE $FF
RAM:B33A FF                          .BYTE $FF
RAM:B33B FF                          .BYTE $FF
RAM:B33C FF                          .BYTE $FF
RAM:B33D FF                          .BYTE $FF
RAM:B33E FF                          .BYTE $FF
RAM:B33F FF                          .BYTE $FF
RAM:B340 FF                          .BYTE $FF
RAM:B341 FF                          .BYTE $FF
RAM:B342 FF                          .BYTE $FF
RAM:B343 FF                          .BYTE $FF
RAM:B344 FF                          .BYTE $FF
RAM:B345 FF                          .BYTE $FF
RAM:B346 FF                          .BYTE $FF
RAM:B347 FF                          .BYTE $FF
RAM:B348 FF                          .BYTE $FF
RAM:B349 FF                          .BYTE $FF
RAM:B34A FF                          .BYTE $FF
RAM:B34B FF                          .BYTE $FF
RAM:B34C FF                          .BYTE $FF
RAM:B34D FF                          .BYTE $FF
RAM:B34E FF                          .BYTE $FF
RAM:B34F FF                          .BYTE $FF
RAM:B350 FF                          .BYTE $FF
RAM:B351 FF                          .BYTE $FF
RAM:B352 FF                          .BYTE $FF
RAM:B353 FF                          .BYTE $FF
RAM:B354 FF                          .BYTE $FF
RAM:B355 FF                          .BYTE $FF
RAM:B356 FF                          .BYTE $FF
RAM:B357 FF                          .BYTE $FF
RAM:B358 FF                          .BYTE $FF
RAM:B359 FF                          .BYTE $FF
RAM:B35A FF                          .BYTE $FF
RAM:B35B FF                          .BYTE $FF
RAM:B35C FF                          .BYTE $FF
RAM:B35D FF                          .BYTE $FF
RAM:B35E FF                          .BYTE $FF
RAM:B35F FF                          .BYTE $FF
RAM:B360 FF                          .BYTE $FF
RAM:B361 FF                          .BYTE $FF
RAM:B362 FF                          .BYTE $FF
RAM:B363 FF                          .BYTE $FF
RAM:B364 FF                          .BYTE $FF
RAM:B365 FF                          .BYTE $FF
RAM:B366 FF                          .BYTE $FF
RAM:B367 FF                          .BYTE $FF
RAM:B368 FF                          .BYTE $FF
RAM:B369 FF                          .BYTE $FF
RAM:B36A FF                          .BYTE $FF
RAM:B36B FF                          .BYTE $FF
RAM:B36C FF                          .BYTE $FF
RAM:B36D FF                          .BYTE $FF
RAM:B36E FF                          .BYTE $FF
RAM:B36F FF                          .BYTE $FF
RAM:B370 FF                          .BYTE $FF
RAM:B371 FF                          .BYTE $FF
RAM:B372 FF                          .BYTE $FF
RAM:B373 FF                          .BYTE $FF
RAM:B374 FF                          .BYTE $FF
RAM:B375 FF                          .BYTE $FF
RAM:B376 FF                          .BYTE $FF
RAM:B377 FF                          .BYTE $FF
RAM:B378 FF                          .BYTE $FF
RAM:B379 FF                          .BYTE $FF
RAM:B37A FF                          .BYTE $FF
RAM:B37B FF                          .BYTE $FF
RAM:B37C FF                          .BYTE $FF
RAM:B37D FF                          .BYTE $FF
RAM:B37E FF                          .BYTE $FF
RAM:B37F FF                          .BYTE $FF
RAM:B380 FF                          .BYTE $FF
RAM:B381 FF                          .BYTE $FF
RAM:B382 FF                          .BYTE $FF
RAM:B383 FF                          .BYTE $FF
RAM:B384 FF                          .BYTE $FF
RAM:B385 FF                          .BYTE $FF
RAM:B386 FF                          .BYTE $FF
RAM:B387 FF                          .BYTE $FF
RAM:B388 FF                          .BYTE $FF
RAM:B389 FF                          .BYTE $FF
RAM:B38A FF                          .BYTE $FF
RAM:B38B FF                          .BYTE $FF
RAM:B38C FF                          .BYTE $FF
RAM:B38D FF                          .BYTE $FF
RAM:B38E FF                          .BYTE $FF
RAM:B38F FF                          .BYTE $FF
RAM:B390 FF                          .BYTE $FF
RAM:B391 FF                          .BYTE $FF
RAM:B392 FF                          .BYTE $FF
RAM:B393 FF                          .BYTE $FF
RAM:B394 FF                          .BYTE $FF
RAM:B395 FF                          .BYTE $FF
RAM:B396 FF                          .BYTE $FF
RAM:B397 FF                          .BYTE $FF
RAM:B398 FF                          .BYTE $FF
RAM:B399 FF                          .BYTE $FF
RAM:B39A FF                          .BYTE $FF
RAM:B39B FF                          .BYTE $FF
RAM:B39C FF                          .BYTE $FF
RAM:B39D FF                          .BYTE $FF
RAM:B39E FF                          .BYTE $FF
RAM:B39F FF                          .BYTE $FF
RAM:B3A0 FF                          .BYTE $FF
RAM:B3A1 FF                          .BYTE $FF
RAM:B3A2 FF                          .BYTE $FF
RAM:B3A3 FF                          .BYTE $FF
RAM:B3A4 FF                          .BYTE $FF
RAM:B3A5 FF                          .BYTE $FF
RAM:B3A6 FF                          .BYTE $FF
RAM:B3A7 FF                          .BYTE $FF
RAM:B3A8 FF                          .BYTE $FF
RAM:B3A9 FF                          .BYTE $FF
RAM:B3AA FF                          .BYTE $FF
RAM:B3AB FF                          .BYTE $FF
RAM:B3AC FF                          .BYTE $FF
RAM:B3AD FF                          .BYTE $FF
RAM:B3AE FF                          .BYTE $FF
RAM:B3AF FF                          .BYTE $FF
RAM:B3B0 FF                          .BYTE $FF
RAM:B3B1 FF                          .BYTE $FF
RAM:B3B2 FF                          .BYTE $FF
RAM:B3B3 FF                          .BYTE $FF
RAM:B3B4 FF                          .BYTE $FF
RAM:B3B5 FF                          .BYTE $FF
RAM:B3B6 FF                          .BYTE $FF
RAM:B3B7 FF                          .BYTE $FF
RAM:B3B8 FF                          .BYTE $FF
RAM:B3B9 FF                          .BYTE $FF
RAM:B3BA FF                          .BYTE $FF
RAM:B3BB FF                          .BYTE $FF
RAM:B3BC FF                          .BYTE $FF
RAM:B3BD FF                          .BYTE $FF
RAM:B3BE FF                          .BYTE $FF
RAM:B3BF FF                          .BYTE $FF
RAM:B3C0 FF                          .BYTE $FF
RAM:B3C1 FF                          .BYTE $FF
RAM:B3C2 FF                          .BYTE $FF
RAM:B3C3 FF                          .BYTE $FF
RAM:B3C4 FF                          .BYTE $FF
RAM:B3C5 FF                          .BYTE $FF
RAM:B3C6 FF                          .BYTE $FF
RAM:B3C7 FF                          .BYTE $FF
RAM:B3C8 FF                          .BYTE $FF
RAM:B3C9 FF                          .BYTE $FF
RAM:B3CA FF                          .BYTE $FF
RAM:B3CB FF                          .BYTE $FF
RAM:B3CC FF                          .BYTE $FF
RAM:B3CD FF                          .BYTE $FF
RAM:B3CE FF                          .BYTE $FF
RAM:B3CF FF                          .BYTE $FF
RAM:B3D0 FF                          .BYTE $FF
RAM:B3D1 FF                          .BYTE $FF
RAM:B3D2 FF                          .BYTE $FF
RAM:B3D3 FF                          .BYTE $FF
RAM:B3D4 FF                          .BYTE $FF
RAM:B3D5 FF                          .BYTE $FF
RAM:B3D6 FF                          .BYTE $FF
RAM:B3D7 FF                          .BYTE $FF
RAM:B3D8 FF                          .BYTE $FF
RAM:B3D9 FF                          .BYTE $FF
RAM:B3DA FF                          .BYTE $FF
RAM:B3DB FF                          .BYTE $FF
RAM:B3DC FF                          .BYTE $FF
RAM:B3DD FF                          .BYTE $FF
RAM:B3DE FF                          .BYTE $FF
RAM:B3DF FF                          .BYTE $FF
RAM:B3E0 FF                          .BYTE $FF
RAM:B3E1 FF                          .BYTE $FF
RAM:B3E2 FF                          .BYTE $FF
RAM:B3E3 FF                          .BYTE $FF
RAM:B3E4 FF                          .BYTE $FF
RAM:B3E5 FF                          .BYTE $FF
RAM:B3E6 FF                          .BYTE $FF
RAM:B3E7 FF                          .BYTE $FF
RAM:B3E8 FF                          .BYTE $FF
RAM:B3E9 FF                          .BYTE $FF
RAM:B3EA FF                          .BYTE $FF
RAM:B3EB FF                          .BYTE $FF
RAM:B3EC FF                          .BYTE $FF
RAM:B3ED FF                          .BYTE $FF
RAM:B3EE FF                          .BYTE $FF
RAM:B3EF FF                          .BYTE $FF
RAM:B3F0 FF                          .BYTE $FF
RAM:B3F1 FF                          .BYTE $FF
RAM:B3F2 FF                          .BYTE $FF
RAM:B3F3 FF                          .BYTE $FF
RAM:B3F4 FF                          .BYTE $FF
RAM:B3F5 FF                          .BYTE $FF
RAM:B3F6 FF                          .BYTE $FF
RAM:B3F7 FF                          .BYTE $FF
RAM:B3F8 FF                          .BYTE $FF
RAM:B3F9 FF                          .BYTE $FF
RAM:B3FA FF                          .BYTE $FF
RAM:B3FB FF                          .BYTE $FF
RAM:B3FC FF                          .BYTE $FF
RAM:B3FD FF                          .BYTE $FF
RAM:B3FE FF                          .BYTE $FF
RAM:B3FF FF                          .BYTE $FF
RAM:B400 FF                          .BYTE $FF
RAM:B401 FF                          .BYTE $FF
RAM:B402 FF                          .BYTE $FF
RAM:B403 FF                          .BYTE $FF
RAM:B404 FF                          .BYTE $FF
RAM:B405 FF                          .BYTE $FF
RAM:B406 FF                          .BYTE $FF
RAM:B407 FF                          .BYTE $FF
RAM:B408 FF                          .BYTE $FF
RAM:B409 FF                          .BYTE $FF
RAM:B40A FF                          .BYTE $FF
RAM:B40B FF                          .BYTE $FF
RAM:B40C FF                          .BYTE $FF
RAM:B40D FF                          .BYTE $FF
RAM:B40E FF                          .BYTE $FF
RAM:B40F FF                          .BYTE $FF
RAM:B410 FF                          .BYTE $FF
RAM:B411 FF                          .BYTE $FF
RAM:B412 FF                          .BYTE $FF
RAM:B413 FF                          .BYTE $FF
RAM:B414 FF                          .BYTE $FF
RAM:B415 FF                          .BYTE $FF
RAM:B416 FF                          .BYTE $FF
RAM:B417 FF                          .BYTE $FF
RAM:B418 FF                          .BYTE $FF
RAM:B419 FF                          .BYTE $FF
RAM:B41A FF                          .BYTE $FF
RAM:B41B FF                          .BYTE $FF
RAM:B41C FF                          .BYTE $FF
RAM:B41D FF                          .BYTE $FF
RAM:B41E FF                          .BYTE $FF
RAM:B41F FF                          .BYTE $FF
RAM:B420 FF                          .BYTE $FF
RAM:B421 FF                          .BYTE $FF
RAM:B422 FF                          .BYTE $FF
RAM:B423 FF                          .BYTE $FF
RAM:B424 FF                          .BYTE $FF
RAM:B425 FF                          .BYTE $FF
RAM:B426 FF                          .BYTE $FF
RAM:B427 FF                          .BYTE $FF
RAM:B428 FF                          .BYTE $FF
RAM:B429 FF                          .BYTE $FF
RAM:B42A FF                          .BYTE $FF
RAM:B42B FF                          .BYTE $FF
RAM:B42C FF                          .BYTE $FF
RAM:B42D FF                          .BYTE $FF
RAM:B42E FF                          .BYTE $FF
RAM:B42F FF                          .BYTE $FF
RAM:B430 FF                          .BYTE $FF
RAM:B431 FF                          .BYTE $FF
RAM:B432 FF                          .BYTE $FF
RAM:B433 FF                          .BYTE $FF
RAM:B434 FF                          .BYTE $FF
RAM:B435 FF                          .BYTE $FF
RAM:B436 FF                          .BYTE $FF
RAM:B437 FF                          .BYTE $FF
RAM:B438 FF                          .BYTE $FF
RAM:B439 FF                          .BYTE $FF
RAM:B43A FF                          .BYTE $FF
RAM:B43B FF                          .BYTE $FF
RAM:B43C FF                          .BYTE $FF
RAM:B43D FF                          .BYTE $FF
RAM:B43E FF                          .BYTE $FF
RAM:B43F FF                          .BYTE $FF
RAM:B440 FF                          .BYTE $FF
RAM:B441 FF                          .BYTE $FF
RAM:B442 FF                          .BYTE $FF
RAM:B443 FF                          .BYTE $FF
RAM:B444 FF                          .BYTE $FF
RAM:B445 FF                          .BYTE $FF
RAM:B446 FF                          .BYTE $FF
RAM:B447 FF                          .BYTE $FF
RAM:B448 FF                          .BYTE $FF
RAM:B449 FF                          .BYTE $FF
RAM:B44A FF                          .BYTE $FF
RAM:B44B FF                          .BYTE $FF
RAM:B44C FF                          .BYTE $FF
RAM:B44D FF                          .BYTE $FF
RAM:B44E FF                          .BYTE $FF
RAM:B44F FF                          .BYTE $FF
RAM:B450 FF                          .BYTE $FF
RAM:B451 FF                          .BYTE $FF
RAM:B452 FF                          .BYTE $FF
RAM:B453 FF                          .BYTE $FF
RAM:B454 FF                          .BYTE $FF
RAM:B455 FF                          .BYTE $FF
RAM:B456 FF                          .BYTE $FF
RAM:B457 FF                          .BYTE $FF
RAM:B458 FF                          .BYTE $FF
RAM:B459 FF                          .BYTE $FF
RAM:B45A FF                          .BYTE $FF
RAM:B45B FF                          .BYTE $FF
RAM:B45C FF                          .BYTE $FF
RAM:B45D FF                          .BYTE $FF
RAM:B45E FF                          .BYTE $FF
RAM:B45F FF                          .BYTE $FF
RAM:B460 FF                          .BYTE $FF
RAM:B461 FF                          .BYTE $FF
RAM:B462 FF                          .BYTE $FF
RAM:B463 FF                          .BYTE $FF
RAM:B464 FF                          .BYTE $FF
RAM:B465 FF                          .BYTE $FF
RAM:B466 FF                          .BYTE $FF
RAM:B467 FF                          .BYTE $FF
RAM:B468 FF                          .BYTE $FF
RAM:B469 FF                          .BYTE $FF
RAM:B46A FF                          .BYTE $FF
RAM:B46B FF                          .BYTE $FF
RAM:B46C FF                          .BYTE $FF
RAM:B46D FF                          .BYTE $FF
RAM:B46E FF                          .BYTE $FF
RAM:B46F FF                          .BYTE $FF
RAM:B470 FF                          .BYTE $FF
RAM:B471 FF                          .BYTE $FF
RAM:B472 FF                          .BYTE $FF
RAM:B473 FF                          .BYTE $FF
RAM:B474 FF                          .BYTE $FF
RAM:B475 FF                          .BYTE $FF
RAM:B476 FF                          .BYTE $FF
RAM:B477 FF                          .BYTE $FF
RAM:B478 FF                          .BYTE $FF
RAM:B479 FF                          .BYTE $FF
RAM:B47A FF                          .BYTE $FF
RAM:B47B FF                          .BYTE $FF
RAM:B47C FF                          .BYTE $FF
RAM:B47D FF                          .BYTE $FF
RAM:B47E FF                          .BYTE $FF
RAM:B47F FF                          .BYTE $FF
RAM:B480 FF                          .BYTE $FF
RAM:B481 FF                          .BYTE $FF
RAM:B482 FF                          .BYTE $FF
RAM:B483 FF                          .BYTE $FF
RAM:B484 FF                          .BYTE $FF
RAM:B485 FF                          .BYTE $FF
RAM:B486 FF                          .BYTE $FF
RAM:B487 FF                          .BYTE $FF
RAM:B488 FF                          .BYTE $FF
RAM:B489 FF                          .BYTE $FF
RAM:B48A FF                          .BYTE $FF
RAM:B48B FF                          .BYTE $FF
RAM:B48C FF                          .BYTE $FF
RAM:B48D FF                          .BYTE $FF
RAM:B48E FF                          .BYTE $FF
RAM:B48F FF                          .BYTE $FF
RAM:B490 FF                          .BYTE $FF
RAM:B491 FF                          .BYTE $FF
RAM:B492 FF                          .BYTE $FF
RAM:B493 FF                          .BYTE $FF
RAM:B494 FF                          .BYTE $FF
RAM:B495 FF                          .BYTE $FF
RAM:B496 FF                          .BYTE $FF
RAM:B497 FF                          .BYTE $FF
RAM:B498 FF                          .BYTE $FF
RAM:B499 FF                          .BYTE $FF
RAM:B49A FF                          .BYTE $FF
RAM:B49B FF                          .BYTE $FF
RAM:B49C FF                          .BYTE $FF
RAM:B49D FF                          .BYTE $FF
RAM:B49E FF                          .BYTE $FF
RAM:B49F FF                          .BYTE $FF
RAM:B4A0 FF                          .BYTE $FF
RAM:B4A1 FF                          .BYTE $FF
RAM:B4A2 FF                          .BYTE $FF
RAM:B4A3 FF                          .BYTE $FF
RAM:B4A4 FF                          .BYTE $FF
RAM:B4A5 FF                          .BYTE $FF
RAM:B4A6 FF                          .BYTE $FF
RAM:B4A7 FF                          .BYTE $FF
RAM:B4A8 FF                          .BYTE $FF
RAM:B4A9 FF                          .BYTE $FF
RAM:B4AA FF                          .BYTE $FF
RAM:B4AB FF                          .BYTE $FF
RAM:B4AC FF                          .BYTE $FF
RAM:B4AD FF                          .BYTE $FF
RAM:B4AE FF                          .BYTE $FF
RAM:B4AF FF                          .BYTE $FF
RAM:B4B0 FF                          .BYTE $FF
RAM:B4B1 FF                          .BYTE $FF
RAM:B4B2 FF                          .BYTE $FF
RAM:B4B3 FF                          .BYTE $FF
RAM:B4B4 FF                          .BYTE $FF
RAM:B4B5 FF                          .BYTE $FF
RAM:B4B6 FF                          .BYTE $FF
RAM:B4B7 FF                          .BYTE $FF
RAM:B4B8 FF                          .BYTE $FF
RAM:B4B9 FF                          .BYTE $FF
RAM:B4BA FF                          .BYTE $FF
RAM:B4BB FF                          .BYTE $FF
RAM:B4BC FF                          .BYTE $FF
RAM:B4BD FF                          .BYTE $FF
RAM:B4BE FF                          .BYTE $FF
RAM:B4BF FF                          .BYTE $FF
RAM:B4C0 FF                          .BYTE $FF
RAM:B4C1 FF                          .BYTE $FF
RAM:B4C2 FF                          .BYTE $FF
RAM:B4C3 FF                          .BYTE $FF
RAM:B4C4 FF                          .BYTE $FF
RAM:B4C5 FF                          .BYTE $FF
RAM:B4C6 FF                          .BYTE $FF
RAM:B4C7 FF                          .BYTE $FF
RAM:B4C8 FF                          .BYTE $FF
RAM:B4C9 FF                          .BYTE $FF
RAM:B4CA FF                          .BYTE $FF
RAM:B4CB FF                          .BYTE $FF
RAM:B4CC FF                          .BYTE $FF
RAM:B4CD FF                          .BYTE $FF
RAM:B4CE FF                          .BYTE $FF
RAM:B4CF FF                          .BYTE $FF
RAM:B4D0 FF                          .BYTE $FF
RAM:B4D1 FF                          .BYTE $FF
RAM:B4D2 FF                          .BYTE $FF
RAM:B4D3 FF                          .BYTE $FF
RAM:B4D4 FF                          .BYTE $FF
RAM:B4D5 FF                          .BYTE $FF
RAM:B4D6 FF                          .BYTE $FF
RAM:B4D7 FF                          .BYTE $FF
RAM:B4D8 FF                          .BYTE $FF
RAM:B4D9 FF                          .BYTE $FF
RAM:B4DA FF                          .BYTE $FF
RAM:B4DB FF                          .BYTE $FF
RAM:B4DC FF                          .BYTE $FF
RAM:B4DD FF                          .BYTE $FF
RAM:B4DE FF                          .BYTE $FF
RAM:B4DF FF                          .BYTE $FF
RAM:B4E0 FF                          .BYTE $FF
RAM:B4E1 FF                          .BYTE $FF
RAM:B4E2 FF                          .BYTE $FF
RAM:B4E3 FF                          .BYTE $FF
RAM:B4E4 FF                          .BYTE $FF
RAM:B4E5 FF                          .BYTE $FF
RAM:B4E6 FF                          .BYTE $FF
RAM:B4E7 FF                          .BYTE $FF
RAM:B4E8 FF                          .BYTE $FF
RAM:B4E9 FF                          .BYTE $FF
RAM:B4EA FF                          .BYTE $FF
RAM:B4EB FF                          .BYTE $FF
RAM:B4EC FF                          .BYTE $FF
RAM:B4ED FF                          .BYTE $FF
RAM:B4EE FF                          .BYTE $FF
RAM:B4EF FF                          .BYTE $FF
RAM:B4F0 FF                          .BYTE $FF
RAM:B4F1 FF                          .BYTE $FF
RAM:B4F2 FF                          .BYTE $FF
RAM:B4F3 FF                          .BYTE $FF
RAM:B4F4 FF                          .BYTE $FF
RAM:B4F5 FF                          .BYTE $FF
RAM:B4F6 FF                          .BYTE $FF
RAM:B4F7 FF                          .BYTE $FF
RAM:B4F8 FF                          .BYTE $FF
RAM:B4F9 FF                          .BYTE $FF
RAM:B4FA FF                          .BYTE $FF
RAM:B4FB FF                          .BYTE $FF
RAM:B4FC FF                          .BYTE $FF
RAM:B4FD FF                          .BYTE $FF
RAM:B4FE FF                          .BYTE $FF
RAM:B4FF FF                          .BYTE $FF
RAM:B500 FF                          .BYTE $FF
RAM:B501 FF                          .BYTE $FF
RAM:B502 FF                          .BYTE $FF
RAM:B503 FF                          .BYTE $FF
RAM:B504 FF                          .BYTE $FF
RAM:B505 FF                          .BYTE $FF
RAM:B506 FF                          .BYTE $FF
RAM:B507 FF                          .BYTE $FF
RAM:B508 FF                          .BYTE $FF
RAM:B509 FF                          .BYTE $FF
RAM:B50A FF                          .BYTE $FF
RAM:B50B FF                          .BYTE $FF
RAM:B50C FF                          .BYTE $FF
RAM:B50D FF                          .BYTE $FF
RAM:B50E FF                          .BYTE $FF
RAM:B50F FF                          .BYTE $FF
RAM:B510 FF                          .BYTE $FF
RAM:B511 FF                          .BYTE $FF
RAM:B512 FF                          .BYTE $FF
RAM:B513 FF                          .BYTE $FF
RAM:B514 FF                          .BYTE $FF
RAM:B515 FF                          .BYTE $FF
RAM:B516 FF                          .BYTE $FF
RAM:B517 FF                          .BYTE $FF
RAM:B518 FF                          .BYTE $FF
RAM:B519 FF                          .BYTE $FF
RAM:B51A FF                          .BYTE $FF
RAM:B51B FF                          .BYTE $FF
RAM:B51C FF                          .BYTE $FF
RAM:B51D FF                          .BYTE $FF
RAM:B51E FF                          .BYTE $FF
RAM:B51F FF                          .BYTE $FF
RAM:B520 FF                          .BYTE $FF
RAM:B521 FF                          .BYTE $FF
RAM:B522 FF                          .BYTE $FF
RAM:B523 FF                          .BYTE $FF
RAM:B524 FF                          .BYTE $FF
RAM:B525 FF                          .BYTE $FF
RAM:B526 FF                          .BYTE $FF
RAM:B527 FF                          .BYTE $FF
RAM:B528 FF                          .BYTE $FF
RAM:B529 FF                          .BYTE $FF
RAM:B52A FF                          .BYTE $FF
RAM:B52B FF                          .BYTE $FF
RAM:B52C FF                          .BYTE $FF
RAM:B52D FF                          .BYTE $FF
RAM:B52E FF                          .BYTE $FF
RAM:B52F FF                          .BYTE $FF
RAM:B530 FF                          .BYTE $FF
RAM:B531 FF                          .BYTE $FF
RAM:B532 FF                          .BYTE $FF
RAM:B533 FF                          .BYTE $FF
RAM:B534 FF                          .BYTE $FF
RAM:B535 FF                          .BYTE $FF
RAM:B536 FF                          .BYTE $FF
RAM:B537 FF                          .BYTE $FF
RAM:B538 FF                          .BYTE $FF
RAM:B539 FF                          .BYTE $FF
RAM:B53A FF                          .BYTE $FF
RAM:B53B FF                          .BYTE $FF
RAM:B53C FF                          .BYTE $FF
RAM:B53D FF                          .BYTE $FF
RAM:B53E FF                          .BYTE $FF
RAM:B53F FF                          .BYTE $FF
RAM:B540 FF                          .BYTE $FF
RAM:B541 FF                          .BYTE $FF
RAM:B542 FF                          .BYTE $FF
RAM:B543 FF                          .BYTE $FF
RAM:B544 FF                          .BYTE $FF
RAM:B545 FF                          .BYTE $FF
RAM:B546 FF                          .BYTE $FF
RAM:B547 FF                          .BYTE $FF
RAM:B548 FF                          .BYTE $FF
RAM:B549 FF                          .BYTE $FF
RAM:B54A FF                          .BYTE $FF
RAM:B54B FF                          .BYTE $FF
RAM:B54C FF                          .BYTE $FF
RAM:B54D FF                          .BYTE $FF
RAM:B54E FF                          .BYTE $FF
RAM:B54F FF                          .BYTE $FF
RAM:B550 FF                          .BYTE $FF
RAM:B551 FF                          .BYTE $FF
RAM:B552 FF                          .BYTE $FF
RAM:B553 FF                          .BYTE $FF
RAM:B554 FF                          .BYTE $FF
RAM:B555 FF                          .BYTE $FF
RAM:B556 FF                          .BYTE $FF
RAM:B557 FF                          .BYTE $FF
RAM:B558 FF                          .BYTE $FF
RAM:B559 FF                          .BYTE $FF
RAM:B55A FF                          .BYTE $FF
RAM:B55B FF                          .BYTE $FF
RAM:B55C FF                          .BYTE $FF
RAM:B55D FF                          .BYTE $FF
RAM:B55E FF                          .BYTE $FF
RAM:B55F FF                          .BYTE $FF
RAM:B560 FF                          .BYTE $FF
RAM:B561 FF                          .BYTE $FF
RAM:B562 FF                          .BYTE $FF
RAM:B563 FF                          .BYTE $FF
RAM:B564 FF                          .BYTE $FF
RAM:B565 FF                          .BYTE $FF
RAM:B566 FF                          .BYTE $FF
RAM:B567 FF                          .BYTE $FF
RAM:B568 FF                          .BYTE $FF
RAM:B569 FF                          .BYTE $FF
RAM:B56A FF                          .BYTE $FF
RAM:B56B FF                          .BYTE $FF
RAM:B56C FF                          .BYTE $FF
RAM:B56D FF                          .BYTE $FF
RAM:B56E FF                          .BYTE $FF
RAM:B56F FF                          .BYTE $FF
RAM:B570 FF                          .BYTE $FF
RAM:B571 FF                          .BYTE $FF
RAM:B572 FF                          .BYTE $FF
RAM:B573 FF                          .BYTE $FF
RAM:B574 FF                          .BYTE $FF
RAM:B575 FF                          .BYTE $FF
RAM:B576 FF                          .BYTE $FF
RAM:B577 FF                          .BYTE $FF
RAM:B578 FF                          .BYTE $FF
RAM:B579 FF                          .BYTE $FF
RAM:B57A FF                          .BYTE $FF
RAM:B57B FF                          .BYTE $FF
RAM:B57C FF                          .BYTE $FF
RAM:B57D FF                          .BYTE $FF
RAM:B57E FF                          .BYTE $FF
RAM:B57F FF                          .BYTE $FF
RAM:B580 FF                          .BYTE $FF
RAM:B581 FF                          .BYTE $FF
RAM:B582 FF                          .BYTE $FF
RAM:B583 FF                          .BYTE $FF
RAM:B584 FF                          .BYTE $FF
RAM:B585 FF                          .BYTE $FF
RAM:B586 FF                          .BYTE $FF
RAM:B587 FF                          .BYTE $FF
RAM:B588 FF                          .BYTE $FF
RAM:B589 FF                          .BYTE $FF
RAM:B58A FF                          .BYTE $FF
RAM:B58B FF                          .BYTE $FF
RAM:B58C FF                          .BYTE $FF
RAM:B58D FF                          .BYTE $FF
RAM:B58E FF                          .BYTE $FF
RAM:B58F FF                          .BYTE $FF
RAM:B590 FF                          .BYTE $FF
RAM:B591 FF                          .BYTE $FF
RAM:B592 FF                          .BYTE $FF
RAM:B593 FF                          .BYTE $FF
RAM:B594 FF                          .BYTE $FF
RAM:B595 FF                          .BYTE $FF
RAM:B596 FF                          .BYTE $FF
RAM:B597 FF                          .BYTE $FF
RAM:B598 FF                          .BYTE $FF
RAM:B599 FF                          .BYTE $FF
RAM:B59A FF                          .BYTE $FF
RAM:B59B FF                          .BYTE $FF
RAM:B59C FF                          .BYTE $FF
RAM:B59D FF                          .BYTE $FF
RAM:B59E FF                          .BYTE $FF
RAM:B59F FF                          .BYTE $FF
RAM:B5A0 FF                          .BYTE $FF
RAM:B5A1 FF                          .BYTE $FF
RAM:B5A2 FF                          .BYTE $FF
RAM:B5A3 FF                          .BYTE $FF
RAM:B5A4 FF                          .BYTE $FF
RAM:B5A5 FF                          .BYTE $FF
RAM:B5A6 FF                          .BYTE $FF
RAM:B5A7 FF                          .BYTE $FF
RAM:B5A8 FF                          .BYTE $FF
RAM:B5A9 FF                          .BYTE $FF
RAM:B5AA FF                          .BYTE $FF
RAM:B5AB FF                          .BYTE $FF
RAM:B5AC FF                          .BYTE $FF
RAM:B5AD FF                          .BYTE $FF
RAM:B5AE FF                          .BYTE $FF
RAM:B5AF FF                          .BYTE $FF
RAM:B5B0 FF                          .BYTE $FF
RAM:B5B1 FF                          .BYTE $FF
RAM:B5B2 FF                          .BYTE $FF
RAM:B5B3 FF                          .BYTE $FF
RAM:B5B4 FF                          .BYTE $FF
RAM:B5B5 FF                          .BYTE $FF
RAM:B5B6 FF                          .BYTE $FF
RAM:B5B7 FF                          .BYTE $FF
RAM:B5B8 FF                          .BYTE $FF
RAM:B5B9 FF                          .BYTE $FF
RAM:B5BA FF                          .BYTE $FF
RAM:B5BB FF                          .BYTE $FF
RAM:B5BC FF                          .BYTE $FF
RAM:B5BD FF                          .BYTE $FF
RAM:B5BE FF                          .BYTE $FF
RAM:B5BF FF                          .BYTE $FF
RAM:B5C0 FF                          .BYTE $FF
RAM:B5C1 FF                          .BYTE $FF
RAM:B5C2 FF                          .BYTE $FF
RAM:B5C3 FF                          .BYTE $FF
RAM:B5C4 FF                          .BYTE $FF
RAM:B5C5 FF                          .BYTE $FF
RAM:B5C6 FF                          .BYTE $FF
RAM:B5C7 FF                          .BYTE $FF
RAM:B5C8 FF                          .BYTE $FF
RAM:B5C9 FF                          .BYTE $FF
RAM:B5CA FF                          .BYTE $FF
RAM:B5CB FF                          .BYTE $FF
RAM:B5CC FF                          .BYTE $FF
RAM:B5CD FF                          .BYTE $FF
RAM:B5CE FF                          .BYTE $FF
RAM:B5CF FF                          .BYTE $FF
RAM:B5D0 FF                          .BYTE $FF
RAM:B5D1 FF                          .BYTE $FF
RAM:B5D2 FF                          .BYTE $FF
RAM:B5D3 FF                          .BYTE $FF
RAM:B5D4 FF                          .BYTE $FF
RAM:B5D5 FF                          .BYTE $FF
RAM:B5D6 FF                          .BYTE $FF
RAM:B5D7 FF                          .BYTE $FF
RAM:B5D8 FF                          .BYTE $FF
RAM:B5D9 FF                          .BYTE $FF
RAM:B5DA FF                          .BYTE $FF
RAM:B5DB FF                          .BYTE $FF
RAM:B5DC FF                          .BYTE $FF
RAM:B5DD FF                          .BYTE $FF
RAM:B5DE FF                          .BYTE $FF
RAM:B5DF FF                          .BYTE $FF
RAM:B5E0 FF                          .BYTE $FF
RAM:B5E1 FF                          .BYTE $FF
RAM:B5E2 FF                          .BYTE $FF
RAM:B5E3 FF                          .BYTE $FF
RAM:B5E4 FF                          .BYTE $FF
RAM:B5E5 FF                          .BYTE $FF
RAM:B5E6 FF                          .BYTE $FF
RAM:B5E7 FF                          .BYTE $FF
RAM:B5E8 FF                          .BYTE $FF
RAM:B5E9 FF                          .BYTE $FF
RAM:B5EA FF                          .BYTE $FF
RAM:B5EB FF                          .BYTE $FF
RAM:B5EC FF                          .BYTE $FF
RAM:B5ED FF                          .BYTE $FF
RAM:B5EE FF                          .BYTE $FF
RAM:B5EF FF                          .BYTE $FF
RAM:B5F0 FF                          .BYTE $FF
RAM:B5F1 FF                          .BYTE $FF
RAM:B5F2 FF                          .BYTE $FF
RAM:B5F3 FF                          .BYTE $FF
RAM:B5F4 FF                          .BYTE $FF
RAM:B5F5 FF                          .BYTE $FF
RAM:B5F6 FF                          .BYTE $FF
RAM:B5F7 FF                          .BYTE $FF
RAM:B5F8 FF                          .BYTE $FF
RAM:B5F9 FF                          .BYTE $FF
RAM:B5FA FF                          .BYTE $FF
RAM:B5FB FF                          .BYTE $FF
RAM:B5FC FF                          .BYTE $FF
RAM:B5FD FF                          .BYTE $FF
RAM:B5FE FF                          .BYTE $FF
RAM:B5FF FF                          .BYTE $FF
RAM:B600 FF                          .BYTE $FF
RAM:B601 FF                          .BYTE $FF
RAM:B602 FF                          .BYTE $FF
RAM:B603 FF                          .BYTE $FF
RAM:B604 FF                          .BYTE $FF
RAM:B605 FF                          .BYTE $FF
RAM:B606 FF                          .BYTE $FF
RAM:B607 FF                          .BYTE $FF
RAM:B608 FF                          .BYTE $FF
RAM:B609 FF                          .BYTE $FF
RAM:B60A FF                          .BYTE $FF
RAM:B60B FF                          .BYTE $FF
RAM:B60C FF                          .BYTE $FF
RAM:B60D FF                          .BYTE $FF
RAM:B60E FF                          .BYTE $FF
RAM:B60F FF                          .BYTE $FF
RAM:B610 FF                          .BYTE $FF
RAM:B611 FF                          .BYTE $FF
RAM:B612 FF                          .BYTE $FF
RAM:B613 FF                          .BYTE $FF
RAM:B614 FF                          .BYTE $FF
RAM:B615 FF                          .BYTE $FF
RAM:B616 FF                          .BYTE $FF
RAM:B617 FF                          .BYTE $FF
RAM:B618 FF                          .BYTE $FF
RAM:B619 FF                          .BYTE $FF
RAM:B61A FF                          .BYTE $FF
RAM:B61B FF                          .BYTE $FF
RAM:B61C FF                          .BYTE $FF
RAM:B61D FF                          .BYTE $FF
RAM:B61E FF                          .BYTE $FF
RAM:B61F FF                          .BYTE $FF
RAM:B620 FF                          .BYTE $FF
RAM:B621 FF                          .BYTE $FF
RAM:B622 FF                          .BYTE $FF
RAM:B623 FF                          .BYTE $FF
RAM:B624 FF                          .BYTE $FF
RAM:B625 FF                          .BYTE $FF
RAM:B626 FF                          .BYTE $FF
RAM:B627 FF                          .BYTE $FF
RAM:B628 FF                          .BYTE $FF
RAM:B629 FF                          .BYTE $FF
RAM:B62A FF                          .BYTE $FF
RAM:B62B FF                          .BYTE $FF
RAM:B62C FF                          .BYTE $FF
RAM:B62D FF                          .BYTE $FF
RAM:B62E FF                          .BYTE $FF
RAM:B62F FF                          .BYTE $FF
RAM:B630 FF                          .BYTE $FF
RAM:B631 FF                          .BYTE $FF
RAM:B632 FF                          .BYTE $FF
RAM:B633 FF                          .BYTE $FF
RAM:B634 FF                          .BYTE $FF
RAM:B635 FF                          .BYTE $FF
RAM:B636 FF                          .BYTE $FF
RAM:B637 FF                          .BYTE $FF
RAM:B638 FF                          .BYTE $FF
RAM:B639 FF                          .BYTE $FF
RAM:B63A FF                          .BYTE $FF
RAM:B63B FF                          .BYTE $FF
RAM:B63C FF                          .BYTE $FF
RAM:B63D FF                          .BYTE $FF
RAM:B63E FF                          .BYTE $FF
RAM:B63F FF                          .BYTE $FF
RAM:B640 FF                          .BYTE $FF
RAM:B641 FF                          .BYTE $FF
RAM:B642 FF                          .BYTE $FF
RAM:B643 FF                          .BYTE $FF
RAM:B644 FF                          .BYTE $FF
RAM:B645 FF                          .BYTE $FF
RAM:B646 FF                          .BYTE $FF
RAM:B647 FF                          .BYTE $FF
RAM:B648 FF                          .BYTE $FF
RAM:B649 FF                          .BYTE $FF
RAM:B64A FF                          .BYTE $FF
RAM:B64B FF                          .BYTE $FF
RAM:B64C FF                          .BYTE $FF
RAM:B64D FF                          .BYTE $FF
RAM:B64E FF                          .BYTE $FF
RAM:B64F FF                          .BYTE $FF
RAM:B650 FF                          .BYTE $FF
RAM:B651 FF                          .BYTE $FF
RAM:B652 FF                          .BYTE $FF
RAM:B653 FF                          .BYTE $FF
RAM:B654 FF                          .BYTE $FF
RAM:B655 FF                          .BYTE $FF
RAM:B656 FF                          .BYTE $FF
RAM:B657 FF                          .BYTE $FF
RAM:B658 FF                          .BYTE $FF
RAM:B659 FF                          .BYTE $FF
RAM:B65A FF                          .BYTE $FF
RAM:B65B FF                          .BYTE $FF
RAM:B65C FF                          .BYTE $FF
RAM:B65D FF                          .BYTE $FF
RAM:B65E FF                          .BYTE $FF
RAM:B65F FF                          .BYTE $FF
RAM:B660 FF                          .BYTE $FF
RAM:B661 FF                          .BYTE $FF
RAM:B662 FF                          .BYTE $FF
RAM:B663 FF                          .BYTE $FF
RAM:B664 FF                          .BYTE $FF
RAM:B665 FF                          .BYTE $FF
RAM:B666 FF                          .BYTE $FF
RAM:B667 FF                          .BYTE $FF
RAM:B668 FF                          .BYTE $FF
RAM:B669 FF                          .BYTE $FF
RAM:B66A FF                          .BYTE $FF
RAM:B66B FF                          .BYTE $FF
RAM:B66C FF                          .BYTE $FF
RAM:B66D FF                          .BYTE $FF
RAM:B66E FF                          .BYTE $FF
RAM:B66F FF                          .BYTE $FF
RAM:B670 FF                          .BYTE $FF
RAM:B671 FF                          .BYTE $FF
RAM:B672 FF                          .BYTE $FF
RAM:B673 FF                          .BYTE $FF
RAM:B674 FF                          .BYTE $FF
RAM:B675 FF                          .BYTE $FF
RAM:B676 FF                          .BYTE $FF
RAM:B677 FF                          .BYTE $FF
RAM:B678 FF                          .BYTE $FF
RAM:B679 FF                          .BYTE $FF
RAM:B67A FF                          .BYTE $FF
RAM:B67B FF                          .BYTE $FF
RAM:B67C FF                          .BYTE $FF
RAM:B67D FF                          .BYTE $FF
RAM:B67E FF                          .BYTE $FF
RAM:B67F FF                          .BYTE $FF
RAM:B680 FF                          .BYTE $FF
RAM:B681 FF                          .BYTE $FF
RAM:B682 FF                          .BYTE $FF
RAM:B683 FF                          .BYTE $FF
RAM:B684 FF                          .BYTE $FF
RAM:B685 FF                          .BYTE $FF
RAM:B686 FF                          .BYTE $FF
RAM:B687 FF                          .BYTE $FF
RAM:B688 FF                          .BYTE $FF
RAM:B689 FF                          .BYTE $FF
RAM:B68A FF                          .BYTE $FF
RAM:B68B FF                          .BYTE $FF
RAM:B68C FF                          .BYTE $FF
RAM:B68D FF                          .BYTE $FF
RAM:B68E FF                          .BYTE $FF
RAM:B68F FF                          .BYTE $FF
RAM:B690 FF                          .BYTE $FF
RAM:B691 FF                          .BYTE $FF
RAM:B692 FF                          .BYTE $FF
RAM:B693 FF                          .BYTE $FF
RAM:B694 FF                          .BYTE $FF
RAM:B695 FF                          .BYTE $FF
RAM:B696 FF                          .BYTE $FF
RAM:B697 FF                          .BYTE $FF
RAM:B698 FF                          .BYTE $FF
RAM:B699 FF                          .BYTE $FF
RAM:B69A FF                          .BYTE $FF
RAM:B69B FF                          .BYTE $FF
RAM:B69C FF                          .BYTE $FF
RAM:B69D FF                          .BYTE $FF
RAM:B69E FF                          .BYTE $FF
RAM:B69F FF                          .BYTE $FF
RAM:B6A0 FF                          .BYTE $FF
RAM:B6A1 FF                          .BYTE $FF
RAM:B6A2 FF                          .BYTE $FF
RAM:B6A3 FF                          .BYTE $FF
RAM:B6A4 FF                          .BYTE $FF
RAM:B6A5 FF                          .BYTE $FF
RAM:B6A6 FF                          .BYTE $FF
RAM:B6A7 FF                          .BYTE $FF
RAM:B6A8 FF                          .BYTE $FF
RAM:B6A9 FF                          .BYTE $FF
RAM:B6AA FF                          .BYTE $FF
RAM:B6AB FF                          .BYTE $FF
RAM:B6AC FF                          .BYTE $FF
RAM:B6AD FF                          .BYTE $FF
RAM:B6AE FF                          .BYTE $FF
RAM:B6AF FF                          .BYTE $FF
RAM:B6B0 FF                          .BYTE $FF
RAM:B6B1 FF                          .BYTE $FF
RAM:B6B2 FF                          .BYTE $FF
RAM:B6B3 FF                          .BYTE $FF
RAM:B6B4 FF                          .BYTE $FF
RAM:B6B5 FF                          .BYTE $FF
RAM:B6B6 FF                          .BYTE $FF
RAM:B6B7 FF                          .BYTE $FF
RAM:B6B8 FF                          .BYTE $FF
RAM:B6B9 FF                          .BYTE $FF
RAM:B6BA FF                          .BYTE $FF
RAM:B6BB FF                          .BYTE $FF
RAM:B6BC FF                          .BYTE $FF
RAM:B6BD FF                          .BYTE $FF
RAM:B6BE FF                          .BYTE $FF
RAM:B6BF FF                          .BYTE $FF
RAM:B6C0 FF                          .BYTE $FF
RAM:B6C1 FF                          .BYTE $FF
RAM:B6C2 FF                          .BYTE $FF
RAM:B6C3 FF                          .BYTE $FF
RAM:B6C4 FF                          .BYTE $FF
RAM:B6C5 FF                          .BYTE $FF
RAM:B6C6 FF                          .BYTE $FF
RAM:B6C7 FF                          .BYTE $FF
RAM:B6C8 FF                          .BYTE $FF
RAM:B6C9 FF                          .BYTE $FF
RAM:B6CA FF                          .BYTE $FF
RAM:B6CB FF                          .BYTE $FF
RAM:B6CC FF                          .BYTE $FF
RAM:B6CD FF                          .BYTE $FF
RAM:B6CE FF                          .BYTE $FF
RAM:B6CF FF                          .BYTE $FF
RAM:B6D0 FF                          .BYTE $FF
RAM:B6D1 FF                          .BYTE $FF
RAM:B6D2 FF                          .BYTE $FF
RAM:B6D3 FF                          .BYTE $FF
RAM:B6D4 FF                          .BYTE $FF
RAM:B6D5 FF                          .BYTE $FF
RAM:B6D6 FF                          .BYTE $FF
RAM:B6D7 FF                          .BYTE $FF
RAM:B6D8 FF                          .BYTE $FF
RAM:B6D9 FF                          .BYTE $FF
RAM:B6DA FF                          .BYTE $FF
RAM:B6DB FF                          .BYTE $FF
RAM:B6DC FF                          .BYTE $FF
RAM:B6DD FF                          .BYTE $FF
RAM:B6DE FF                          .BYTE $FF
RAM:B6DF FF                          .BYTE $FF
RAM:B6E0 FF                          .BYTE $FF
RAM:B6E1 FF                          .BYTE $FF
RAM:B6E2 FF                          .BYTE $FF
RAM:B6E3 FF                          .BYTE $FF
RAM:B6E4 FF                          .BYTE $FF
RAM:B6E5 FF                          .BYTE $FF
RAM:B6E6 FF                          .BYTE $FF
RAM:B6E7 FF                          .BYTE $FF
RAM:B6E8 FF                          .BYTE $FF
RAM:B6E9 FF                          .BYTE $FF
RAM:B6EA FF                          .BYTE $FF
RAM:B6EB FF                          .BYTE $FF
RAM:B6EC FF                          .BYTE $FF
RAM:B6ED FF                          .BYTE $FF
RAM:B6EE FF                          .BYTE $FF
RAM:B6EF FF                          .BYTE $FF
RAM:B6F0 FF                          .BYTE $FF
RAM:B6F1 FF                          .BYTE $FF
RAM:B6F2 FF                          .BYTE $FF
RAM:B6F3 FF                          .BYTE $FF
RAM:B6F4 FF                          .BYTE $FF
RAM:B6F5 FF                          .BYTE $FF
RAM:B6F6 FF                          .BYTE $FF
RAM:B6F7 FF                          .BYTE $FF
RAM:B6F8 FF                          .BYTE $FF
RAM:B6F9 FF                          .BYTE $FF
RAM:B6FA FF                          .BYTE $FF
RAM:B6FB FF                          .BYTE $FF
RAM:B6FC FF                          .BYTE $FF
RAM:B6FD FF                          .BYTE $FF
RAM:B6FE FF                          .BYTE $FF
RAM:B6FF FF                          .BYTE $FF
RAM:B700 FF                          .BYTE $FF
RAM:B701 FF                          .BYTE $FF
RAM:B702 FF                          .BYTE $FF
RAM:B703 FF                          .BYTE $FF
RAM:B704 FF                          .BYTE $FF
RAM:B705 FF                          .BYTE $FF
RAM:B706 FF                          .BYTE $FF
RAM:B707 FF                          .BYTE $FF
RAM:B708 FF                          .BYTE $FF
RAM:B709 FF                          .BYTE $FF
RAM:B70A FF                          .BYTE $FF
RAM:B70B FF                          .BYTE $FF
RAM:B70C FF                          .BYTE $FF
RAM:B70D FF                          .BYTE $FF
RAM:B70E FF                          .BYTE $FF
RAM:B70F FF                          .BYTE $FF
RAM:B710 FF                          .BYTE $FF
RAM:B711 FF                          .BYTE $FF
RAM:B712 FF                          .BYTE $FF
RAM:B713 FF                          .BYTE $FF
RAM:B714 FF                          .BYTE $FF
RAM:B715 FF                          .BYTE $FF
RAM:B716 FF                          .BYTE $FF
RAM:B717 FF                          .BYTE $FF
RAM:B718 FF                          .BYTE $FF
RAM:B719 FF                          .BYTE $FF
RAM:B71A FF                          .BYTE $FF
RAM:B71B FF                          .BYTE $FF
RAM:B71C FF                          .BYTE $FF
RAM:B71D FF                          .BYTE $FF
RAM:B71E FF                          .BYTE $FF
RAM:B71F FF                          .BYTE $FF
RAM:B720 FF                          .BYTE $FF
RAM:B721 FF                          .BYTE $FF
RAM:B722 FF                          .BYTE $FF
RAM:B723 FF                          .BYTE $FF
RAM:B724 FF                          .BYTE $FF
RAM:B725 FF                          .BYTE $FF
RAM:B726 FF                          .BYTE $FF
RAM:B727 FF                          .BYTE $FF
RAM:B728 FF                          .BYTE $FF
RAM:B729 FF                          .BYTE $FF
RAM:B72A FF                          .BYTE $FF
RAM:B72B FF                          .BYTE $FF
RAM:B72C FF                          .BYTE $FF
RAM:B72D FF                          .BYTE $FF
RAM:B72E FF                          .BYTE $FF
RAM:B72F FF                          .BYTE $FF
RAM:B730 FF                          .BYTE $FF
RAM:B731 FF                          .BYTE $FF
RAM:B732 FF                          .BYTE $FF
RAM:B733 FF                          .BYTE $FF
RAM:B734 FF                          .BYTE $FF
RAM:B735 FF                          .BYTE $FF
RAM:B736 FF                          .BYTE $FF
RAM:B737 FF                          .BYTE $FF
RAM:B738 FF                          .BYTE $FF
RAM:B739 FF                          .BYTE $FF
RAM:B73A FF                          .BYTE $FF
RAM:B73B FF                          .BYTE $FF
RAM:B73C FF                          .BYTE $FF
RAM:B73D FF                          .BYTE $FF
RAM:B73E FF                          .BYTE $FF
RAM:B73F FF                          .BYTE $FF
RAM:B740 FF                          .BYTE $FF
RAM:B741 FF                          .BYTE $FF
RAM:B742 FF                          .BYTE $FF
RAM:B743 FF                          .BYTE $FF
RAM:B744 FF                          .BYTE $FF
RAM:B745 FF                          .BYTE $FF
RAM:B746 FF                          .BYTE $FF
RAM:B747 FF                          .BYTE $FF
RAM:B748 FF                          .BYTE $FF
RAM:B749 FF                          .BYTE $FF
RAM:B74A FF                          .BYTE $FF
RAM:B74B FF                          .BYTE $FF
RAM:B74C FF                          .BYTE $FF
RAM:B74D FF                          .BYTE $FF
RAM:B74E FF                          .BYTE $FF
RAM:B74F FF                          .BYTE $FF
RAM:B750 FF                          .BYTE $FF
RAM:B751 FF                          .BYTE $FF
RAM:B752 FF                          .BYTE $FF
RAM:B753 FF                          .BYTE $FF
RAM:B754 FF                          .BYTE $FF
RAM:B755 FF                          .BYTE $FF
RAM:B756 FF                          .BYTE $FF
RAM:B757 FF                          .BYTE $FF
RAM:B758 FF                          .BYTE $FF
RAM:B759 FF                          .BYTE $FF
RAM:B75A FF                          .BYTE $FF
RAM:B75B FF                          .BYTE $FF
RAM:B75C FF                          .BYTE $FF
RAM:B75D FF                          .BYTE $FF
RAM:B75E FF                          .BYTE $FF
RAM:B75F FF                          .BYTE $FF
RAM:B760 FF                          .BYTE $FF
RAM:B761 FF                          .BYTE $FF
RAM:B762 FF                          .BYTE $FF
RAM:B763 FF                          .BYTE $FF
RAM:B764 FF                          .BYTE $FF
RAM:B765 FF                          .BYTE $FF
RAM:B766 FF                          .BYTE $FF
RAM:B767 FF                          .BYTE $FF
RAM:B768 FF                          .BYTE $FF
RAM:B769 FF                          .BYTE $FF
RAM:B76A FF                          .BYTE $FF
RAM:B76B FF                          .BYTE $FF
RAM:B76C FF                          .BYTE $FF
RAM:B76D FF                          .BYTE $FF
RAM:B76E FF                          .BYTE $FF
RAM:B76F FF                          .BYTE $FF
RAM:B770 FF                          .BYTE $FF
RAM:B771 FF                          .BYTE $FF
RAM:B772 FF                          .BYTE $FF
RAM:B773 FF                          .BYTE $FF
RAM:B774 FF                          .BYTE $FF
RAM:B775 FF                          .BYTE $FF
RAM:B776 FF                          .BYTE $FF
RAM:B777 FF                          .BYTE $FF
RAM:B778 FF                          .BYTE $FF
RAM:B779 FF                          .BYTE $FF
RAM:B77A FF                          .BYTE $FF
RAM:B77B FF                          .BYTE $FF
RAM:B77C FF                          .BYTE $FF
RAM:B77D FF                          .BYTE $FF
RAM:B77E FF                          .BYTE $FF
RAM:B77F FF                          .BYTE $FF
RAM:B780 FF                          .BYTE $FF
RAM:B781 FF                          .BYTE $FF
RAM:B782 FF                          .BYTE $FF
RAM:B783 FF                          .BYTE $FF
RAM:B784 FF                          .BYTE $FF
RAM:B785 FF                          .BYTE $FF
RAM:B786 FF                          .BYTE $FF
RAM:B787 FF                          .BYTE $FF
RAM:B788 FF                          .BYTE $FF
RAM:B789 FF                          .BYTE $FF
RAM:B78A FF                          .BYTE $FF
RAM:B78B FF                          .BYTE $FF
RAM:B78C FF                          .BYTE $FF
RAM:B78D FF                          .BYTE $FF
RAM:B78E FF                          .BYTE $FF
RAM:B78F FF                          .BYTE $FF
RAM:B790 FF                          .BYTE $FF
RAM:B791 FF                          .BYTE $FF
RAM:B792 FF                          .BYTE $FF
RAM:B793 FF                          .BYTE $FF
RAM:B794 FF                          .BYTE $FF
RAM:B795 FF                          .BYTE $FF
RAM:B796 FF                          .BYTE $FF
RAM:B797 FF                          .BYTE $FF
RAM:B798 FF                          .BYTE $FF
RAM:B799 FF                          .BYTE $FF
RAM:B79A FF                          .BYTE $FF
RAM:B79B FF                          .BYTE $FF
RAM:B79C FF                          .BYTE $FF
RAM:B79D FF                          .BYTE $FF
RAM:B79E FF                          .BYTE $FF
RAM:B79F FF                          .BYTE $FF
RAM:B7A0 FF                          .BYTE $FF
RAM:B7A1 FF                          .BYTE $FF
RAM:B7A2 FF                          .BYTE $FF
RAM:B7A3 FF                          .BYTE $FF
RAM:B7A4 FF                          .BYTE $FF
RAM:B7A5 FF                          .BYTE $FF
RAM:B7A6 FF                          .BYTE $FF
RAM:B7A7 FF                          .BYTE $FF
RAM:B7A8 FF                          .BYTE $FF
RAM:B7A9 FF                          .BYTE $FF
RAM:B7AA FF                          .BYTE $FF
RAM:B7AB FF                          .BYTE $FF
RAM:B7AC FF                          .BYTE $FF
RAM:B7AD FF                          .BYTE $FF
RAM:B7AE FF                          .BYTE $FF
RAM:B7AF FF                          .BYTE $FF
RAM:B7B0 FF                          .BYTE $FF
RAM:B7B1 FF                          .BYTE $FF
RAM:B7B2 FF                          .BYTE $FF
RAM:B7B3 FF                          .BYTE $FF
RAM:B7B4 FF                          .BYTE $FF
RAM:B7B5 FF                          .BYTE $FF
RAM:B7B6 FF                          .BYTE $FF
RAM:B7B7 FF                          .BYTE $FF
RAM:B7B8 FF                          .BYTE $FF
RAM:B7B9 FF                          .BYTE $FF
RAM:B7BA FF                          .BYTE $FF
RAM:B7BB FF                          .BYTE $FF
RAM:B7BC FF                          .BYTE $FF
RAM:B7BD FF                          .BYTE $FF
RAM:B7BE FF                          .BYTE $FF
RAM:B7BF FF                          .BYTE $FF
RAM:B7C0 FF                          .BYTE $FF
RAM:B7C1 FF                          .BYTE $FF
RAM:B7C2 FF                          .BYTE $FF
RAM:B7C3 FF                          .BYTE $FF
RAM:B7C4 FF                          .BYTE $FF
RAM:B7C5 FF                          .BYTE $FF
RAM:B7C6 FF                          .BYTE $FF
RAM:B7C7 FF                          .BYTE $FF
RAM:B7C8 FF                          .BYTE $FF
RAM:B7C9 FF                          .BYTE $FF
RAM:B7CA FF                          .BYTE $FF
RAM:B7CB FF                          .BYTE $FF
RAM:B7CC FF                          .BYTE $FF
RAM:B7CD FF                          .BYTE $FF
RAM:B7CE FF                          .BYTE $FF
RAM:B7CF FF                          .BYTE $FF
RAM:B7D0 FF                          .BYTE $FF
RAM:B7D1 FF                          .BYTE $FF
RAM:B7D2 FF                          .BYTE $FF
RAM:B7D3 FF                          .BYTE $FF
RAM:B7D4 FF                          .BYTE $FF
RAM:B7D5 FF                          .BYTE $FF
RAM:B7D6 FF                          .BYTE $FF
RAM:B7D7 FF                          .BYTE $FF
RAM:B7D8 FF                          .BYTE $FF
RAM:B7D9 FF                          .BYTE $FF
RAM:B7DA FF                          .BYTE $FF
RAM:B7DB FF                          .BYTE $FF
RAM:B7DC FF                          .BYTE $FF
RAM:B7DD FF                          .BYTE $FF
RAM:B7DE FF                          .BYTE $FF
RAM:B7DF FF                          .BYTE $FF
RAM:B7E0 FF                          .BYTE $FF
RAM:B7E1 FF                          .BYTE $FF
RAM:B7E2 FF                          .BYTE $FF
RAM:B7E3 FF                          .BYTE $FF
RAM:B7E4 FF                          .BYTE $FF
RAM:B7E5 FF                          .BYTE $FF
RAM:B7E6 FF                          .BYTE $FF
RAM:B7E7 FF                          .BYTE $FF
RAM:B7E8 FF                          .BYTE $FF
RAM:B7E9 FF                          .BYTE $FF
RAM:B7EA FF                          .BYTE $FF
RAM:B7EB FF                          .BYTE $FF
RAM:B7EC FF                          .BYTE $FF
RAM:B7ED FF                          .BYTE $FF
RAM:B7EE FF                          .BYTE $FF
RAM:B7EF FF                          .BYTE $FF
RAM:B7F0 FF                          .BYTE $FF
RAM:B7F1 FF                          .BYTE $FF
RAM:B7F2 FF                          .BYTE $FF
RAM:B7F3 FF                          .BYTE $FF
RAM:B7F4 FF                          .BYTE $FF
RAM:B7F5 FF                          .BYTE $FF
RAM:B7F6 FF                          .BYTE $FF
RAM:B7F7 FF                          .BYTE $FF
RAM:B7F8 FF                          .BYTE $FF
RAM:B7F9 FF                          .BYTE $FF
RAM:B7FA FF                          .BYTE $FF
RAM:B7FB FF                          .BYTE $FF
RAM:B7FC FF                          .BYTE $FF
RAM:B7FD FF                          .BYTE $FF
RAM:B7FE FF                          .BYTE $FF
RAM:B7FF FF                          .BYTE $FF
RAM:B800 FF                          .BYTE $FF
RAM:B801 FF                          .BYTE $FF
RAM:B802 FF                          .BYTE $FF
RAM:B803 FF                          .BYTE $FF
RAM:B804 FF                          .BYTE $FF
RAM:B805 FF                          .BYTE $FF
RAM:B806 FF                          .BYTE $FF
RAM:B807 FF                          .BYTE $FF
RAM:B808 FF                          .BYTE $FF
RAM:B809 FF                          .BYTE $FF
RAM:B80A FF                          .BYTE $FF
RAM:B80B FF                          .BYTE $FF
RAM:B80C FF                          .BYTE $FF
RAM:B80D FF                          .BYTE $FF
RAM:B80E FF                          .BYTE $FF
RAM:B80F FF                          .BYTE $FF
RAM:B810 FF                          .BYTE $FF
RAM:B811 FF                          .BYTE $FF
RAM:B812 FF                          .BYTE $FF
RAM:B813 FF                          .BYTE $FF
RAM:B814 FF                          .BYTE $FF
RAM:B815 FF                          .BYTE $FF
RAM:B816 FF                          .BYTE $FF
RAM:B817 FF                          .BYTE $FF
RAM:B818 FF                          .BYTE $FF
RAM:B819 FF                          .BYTE $FF
RAM:B81A FF                          .BYTE $FF
RAM:B81B FF                          .BYTE $FF
RAM:B81C FF                          .BYTE $FF
RAM:B81D FF                          .BYTE $FF
RAM:B81E FF                          .BYTE $FF
RAM:B81F FF                          .BYTE $FF
RAM:B820 FF                          .BYTE $FF
RAM:B821 FF                          .BYTE $FF
RAM:B822 FF                          .BYTE $FF
RAM:B823 FF                          .BYTE $FF
RAM:B824 FF                          .BYTE $FF
RAM:B825 FF                          .BYTE $FF
RAM:B826 FF                          .BYTE $FF
RAM:B827 FF                          .BYTE $FF
RAM:B828 FF                          .BYTE $FF
RAM:B829 FF                          .BYTE $FF
RAM:B82A FF                          .BYTE $FF
RAM:B82B FF                          .BYTE $FF
RAM:B82C FF                          .BYTE $FF
RAM:B82D FF                          .BYTE $FF
RAM:B82E FF                          .BYTE $FF
RAM:B82F FF                          .BYTE $FF
RAM:B830 FF                          .BYTE $FF
RAM:B831 FF                          .BYTE $FF
RAM:B832 FF                          .BYTE $FF
RAM:B833 FF                          .BYTE $FF
RAM:B834 FF                          .BYTE $FF
RAM:B835 FF                          .BYTE $FF
RAM:B836 FF                          .BYTE $FF
RAM:B837 FF                          .BYTE $FF
RAM:B838 FF                          .BYTE $FF
RAM:B839 FF                          .BYTE $FF
RAM:B83A FF                          .BYTE $FF
RAM:B83B FF                          .BYTE $FF
RAM:B83C FF                          .BYTE $FF
RAM:B83D FF                          .BYTE $FF
RAM:B83E FF                          .BYTE $FF
RAM:B83F FF                          .BYTE $FF
RAM:B840 FF                          .BYTE $FF
RAM:B841 FF                          .BYTE $FF
RAM:B842 FF                          .BYTE $FF
RAM:B843 FF                          .BYTE $FF
RAM:B844 FF                          .BYTE $FF
RAM:B845 FF                          .BYTE $FF
RAM:B846 FF                          .BYTE $FF
RAM:B847 FF                          .BYTE $FF
RAM:B848 FF                          .BYTE $FF
RAM:B849 FF                          .BYTE $FF
RAM:B84A FF                          .BYTE $FF
RAM:B84B FF                          .BYTE $FF
RAM:B84C FF                          .BYTE $FF
RAM:B84D FF                          .BYTE $FF
RAM:B84E FF                          .BYTE $FF
RAM:B84F FF                          .BYTE $FF
RAM:B850 FF                          .BYTE $FF
RAM:B851 FF                          .BYTE $FF
RAM:B852 FF                          .BYTE $FF
RAM:B853 FF                          .BYTE $FF
RAM:B854 FF                          .BYTE $FF
RAM:B855 FF                          .BYTE $FF
RAM:B856 FF                          .BYTE $FF
RAM:B857 FF                          .BYTE $FF
RAM:B858 FF                          .BYTE $FF
RAM:B859 FF                          .BYTE $FF
RAM:B85A FF                          .BYTE $FF
RAM:B85B FF                          .BYTE $FF
RAM:B85C FF                          .BYTE $FF
RAM:B85D FF                          .BYTE $FF
RAM:B85E FF                          .BYTE $FF
RAM:B85F FF                          .BYTE $FF
RAM:B860 FF                          .BYTE $FF
RAM:B861 FF                          .BYTE $FF
RAM:B862 FF                          .BYTE $FF
RAM:B863 FF                          .BYTE $FF
RAM:B864 FF                          .BYTE $FF
RAM:B865 FF                          .BYTE $FF
RAM:B866 FF                          .BYTE $FF
RAM:B867 FF                          .BYTE $FF
RAM:B868 FF                          .BYTE $FF
RAM:B869 FF                          .BYTE $FF
RAM:B86A FF                          .BYTE $FF
RAM:B86B FF                          .BYTE $FF
RAM:B86C FF                          .BYTE $FF
RAM:B86D FF                          .BYTE $FF
RAM:B86E FF                          .BYTE $FF
RAM:B86F FF                          .BYTE $FF
RAM:B870 FF                          .BYTE $FF
RAM:B871 FF                          .BYTE $FF
RAM:B872 FF                          .BYTE $FF
RAM:B873 FF                          .BYTE $FF
RAM:B874 FF                          .BYTE $FF
RAM:B875 FF                          .BYTE $FF
RAM:B876 FF                          .BYTE $FF
RAM:B877 FF                          .BYTE $FF
RAM:B878 FF                          .BYTE $FF
RAM:B879 FF                          .BYTE $FF
RAM:B87A FF                          .BYTE $FF
RAM:B87B FF                          .BYTE $FF
RAM:B87C FF                          .BYTE $FF
RAM:B87D FF                          .BYTE $FF
RAM:B87E FF                          .BYTE $FF
RAM:B87F FF                          .BYTE $FF
RAM:B880 FF                          .BYTE $FF
RAM:B881 FF                          .BYTE $FF
RAM:B882 FF                          .BYTE $FF
RAM:B883 FF                          .BYTE $FF
RAM:B884 FF                          .BYTE $FF
RAM:B885 FF                          .BYTE $FF
RAM:B886 FF                          .BYTE $FF
RAM:B887 FF                          .BYTE $FF
RAM:B888 FF                          .BYTE $FF
RAM:B889 FF                          .BYTE $FF
RAM:B88A FF                          .BYTE $FF
RAM:B88B FF                          .BYTE $FF
RAM:B88C FF                          .BYTE $FF
RAM:B88D FF                          .BYTE $FF
RAM:B88E FF                          .BYTE $FF
RAM:B88F FF                          .BYTE $FF
RAM:B890 FF                          .BYTE $FF
RAM:B891 FF                          .BYTE $FF
RAM:B892 FF                          .BYTE $FF
RAM:B893 FF                          .BYTE $FF
RAM:B894 FF                          .BYTE $FF
RAM:B895 FF                          .BYTE $FF
RAM:B896 FF                          .BYTE $FF
RAM:B897 FF                          .BYTE $FF
RAM:B898 FF                          .BYTE $FF
RAM:B899 FF                          .BYTE $FF
RAM:B89A FF                          .BYTE $FF
RAM:B89B FF                          .BYTE $FF
RAM:B89C FF                          .BYTE $FF
RAM:B89D FF                          .BYTE $FF
RAM:B89E FF                          .BYTE $FF
RAM:B89F FF                          .BYTE $FF
RAM:B8A0 FF                          .BYTE $FF
RAM:B8A1 FF                          .BYTE $FF
RAM:B8A2 FF                          .BYTE $FF
RAM:B8A3 FF                          .BYTE $FF
RAM:B8A4 FF                          .BYTE $FF
RAM:B8A5 FF                          .BYTE $FF
RAM:B8A6 FF                          .BYTE $FF
RAM:B8A7 FF                          .BYTE $FF
RAM:B8A8 FF                          .BYTE $FF
RAM:B8A9 FF                          .BYTE $FF
RAM:B8AA FF                          .BYTE $FF
RAM:B8AB FF                          .BYTE $FF
RAM:B8AC FF                          .BYTE $FF
RAM:B8AD FF                          .BYTE $FF
RAM:B8AE FF                          .BYTE $FF
RAM:B8AF FF                          .BYTE $FF
RAM:B8B0 FF                          .BYTE $FF
RAM:B8B1 FF                          .BYTE $FF
RAM:B8B2 FF                          .BYTE $FF
RAM:B8B3 FF                          .BYTE $FF
RAM:B8B4 FF                          .BYTE $FF
RAM:B8B5 FF                          .BYTE $FF
RAM:B8B6 FF                          .BYTE $FF
RAM:B8B7 FF                          .BYTE $FF
RAM:B8B8 FF                          .BYTE $FF
RAM:B8B9 FF                          .BYTE $FF
RAM:B8BA FF                          .BYTE $FF
RAM:B8BB FF                          .BYTE $FF
RAM:B8BC FF                          .BYTE $FF
RAM:B8BD FF                          .BYTE $FF
RAM:B8BE FF                          .BYTE $FF
RAM:B8BF FF                          .BYTE $FF
RAM:B8C0 FF                          .BYTE $FF
RAM:B8C1 FF                          .BYTE $FF
RAM:B8C2 FF                          .BYTE $FF
RAM:B8C3 FF                          .BYTE $FF
RAM:B8C4 FF                          .BYTE $FF
RAM:B8C5 FF                          .BYTE $FF
RAM:B8C6 FF                          .BYTE $FF
RAM:B8C7 FF                          .BYTE $FF
RAM:B8C8 FF                          .BYTE $FF
RAM:B8C9 FF                          .BYTE $FF
RAM:B8CA FF                          .BYTE $FF
RAM:B8CB FF                          .BYTE $FF
RAM:B8CC FF                          .BYTE $FF
RAM:B8CD FF                          .BYTE $FF
RAM:B8CE FF                          .BYTE $FF
RAM:B8CF FF                          .BYTE $FF
RAM:B8D0 FF                          .BYTE $FF
RAM:B8D1 FF                          .BYTE $FF
RAM:B8D2 FF                          .BYTE $FF
RAM:B8D3 FF                          .BYTE $FF
RAM:B8D4 FF                          .BYTE $FF
RAM:B8D5 FF                          .BYTE $FF
RAM:B8D6 FF                          .BYTE $FF
RAM:B8D7 FF                          .BYTE $FF
RAM:B8D8 FF                          .BYTE $FF
RAM:B8D9 FF                          .BYTE $FF
RAM:B8DA FF                          .BYTE $FF
RAM:B8DB FF                          .BYTE $FF
RAM:B8DC FF                          .BYTE $FF
RAM:B8DD FF                          .BYTE $FF
RAM:B8DE FF                          .BYTE $FF
RAM:B8DF FF                          .BYTE $FF
RAM:B8E0 FF                          .BYTE $FF
RAM:B8E1 FF                          .BYTE $FF
RAM:B8E2 FF                          .BYTE $FF
RAM:B8E3 FF                          .BYTE $FF
RAM:B8E4 FF                          .BYTE $FF
RAM:B8E5 FF                          .BYTE $FF
RAM:B8E6 FF                          .BYTE $FF
RAM:B8E7 FF                          .BYTE $FF
RAM:B8E8 FF                          .BYTE $FF
RAM:B8E9 FF                          .BYTE $FF
RAM:B8EA FF                          .BYTE $FF
RAM:B8EB FF                          .BYTE $FF
RAM:B8EC FF                          .BYTE $FF
RAM:B8ED FF                          .BYTE $FF
RAM:B8EE FF                          .BYTE $FF
RAM:B8EF FF                          .BYTE $FF
RAM:B8F0 FF                          .BYTE $FF
RAM:B8F1 FF                          .BYTE $FF
RAM:B8F2 FF                          .BYTE $FF
RAM:B8F3 FF                          .BYTE $FF
RAM:B8F4 FF                          .BYTE $FF
RAM:B8F5 FF                          .BYTE $FF
RAM:B8F6 FF                          .BYTE $FF
RAM:B8F7 FF                          .BYTE $FF
RAM:B8F8 FF                          .BYTE $FF
RAM:B8F9 FF                          .BYTE $FF
RAM:B8FA FF                          .BYTE $FF
RAM:B8FB FF                          .BYTE $FF
RAM:B8FC FF                          .BYTE $FF
RAM:B8FD FF                          .BYTE $FF
RAM:B8FE FF                          .BYTE $FF
RAM:B8FF FF                          .BYTE $FF
RAM:B900 FF                          .BYTE $FF
RAM:B901 FF                          .BYTE $FF
RAM:B902 FF                          .BYTE $FF
RAM:B903 FF                          .BYTE $FF
RAM:B904 FF                          .BYTE $FF
RAM:B905 FF                          .BYTE $FF
RAM:B906 FF                          .BYTE $FF
RAM:B907 FF                          .BYTE $FF
RAM:B908 FF                          .BYTE $FF
RAM:B909 FF                          .BYTE $FF
RAM:B90A FF                          .BYTE $FF
RAM:B90B FF                          .BYTE $FF
RAM:B90C FF                          .BYTE $FF
RAM:B90D FF                          .BYTE $FF
RAM:B90E FF                          .BYTE $FF
RAM:B90F FF                          .BYTE $FF
RAM:B910 FF                          .BYTE $FF
RAM:B911 FF                          .BYTE $FF
RAM:B912 FF                          .BYTE $FF
RAM:B913 FF                          .BYTE $FF
RAM:B914 FF                          .BYTE $FF
RAM:B915 FF                          .BYTE $FF
RAM:B916 FF                          .BYTE $FF
RAM:B917 FF                          .BYTE $FF
RAM:B918 FF                          .BYTE $FF
RAM:B919 FF                          .BYTE $FF
RAM:B91A FF                          .BYTE $FF
RAM:B91B FF                          .BYTE $FF
RAM:B91C FF                          .BYTE $FF
RAM:B91D FF                          .BYTE $FF
RAM:B91E FF                          .BYTE $FF
RAM:B91F FF                          .BYTE $FF
RAM:B920 FF                          .BYTE $FF
RAM:B921 FF                          .BYTE $FF
RAM:B922 FF                          .BYTE $FF
RAM:B923 FF                          .BYTE $FF
RAM:B924 FF                          .BYTE $FF
RAM:B925 FF                          .BYTE $FF
RAM:B926 FF                          .BYTE $FF
RAM:B927 FF                          .BYTE $FF
RAM:B928 FF                          .BYTE $FF
RAM:B929 FF                          .BYTE $FF
RAM:B92A FF                          .BYTE $FF
RAM:B92B FF                          .BYTE $FF
RAM:B92C FF                          .BYTE $FF
RAM:B92D FF                          .BYTE $FF
RAM:B92E FF                          .BYTE $FF
RAM:B92F FF                          .BYTE $FF
RAM:B930 FF                          .BYTE $FF
RAM:B931 FF                          .BYTE $FF
RAM:B932 FF                          .BYTE $FF
RAM:B933 FF                          .BYTE $FF
RAM:B934 FF                          .BYTE $FF
RAM:B935 FF                          .BYTE $FF
RAM:B936 FF                          .BYTE $FF
RAM:B937 FF                          .BYTE $FF
RAM:B938 FF                          .BYTE $FF
RAM:B939 FF                          .BYTE $FF
RAM:B93A FF                          .BYTE $FF
RAM:B93B FF                          .BYTE $FF
RAM:B93C FF                          .BYTE $FF
RAM:B93D FF                          .BYTE $FF
RAM:B93E FF                          .BYTE $FF
RAM:B93F FF                          .BYTE $FF
RAM:B940 FF                          .BYTE $FF
RAM:B941 FF                          .BYTE $FF
RAM:B942 FF                          .BYTE $FF
RAM:B943 FF                          .BYTE $FF
RAM:B944 FF                          .BYTE $FF
RAM:B945 FF                          .BYTE $FF
RAM:B946 FF                          .BYTE $FF
RAM:B947 FF                          .BYTE $FF
RAM:B948 FF                          .BYTE $FF
RAM:B949 FF                          .BYTE $FF
RAM:B94A FF                          .BYTE $FF
RAM:B94B FF                          .BYTE $FF
RAM:B94C FF                          .BYTE $FF
RAM:B94D FF                          .BYTE $FF
RAM:B94E FF                          .BYTE $FF
RAM:B94F FF                          .BYTE $FF
RAM:B950 FF                          .BYTE $FF
RAM:B951 FF                          .BYTE $FF
RAM:B952 FF                          .BYTE $FF
RAM:B953 FF                          .BYTE $FF
RAM:B954 FF                          .BYTE $FF
RAM:B955 FF                          .BYTE $FF
RAM:B956 FF                          .BYTE $FF
RAM:B957 FF                          .BYTE $FF
RAM:B958 FF                          .BYTE $FF
RAM:B959 FF                          .BYTE $FF
RAM:B95A FF                          .BYTE $FF
RAM:B95B FF                          .BYTE $FF
RAM:B95C FF                          .BYTE $FF
RAM:B95D FF                          .BYTE $FF
RAM:B95E FF                          .BYTE $FF
RAM:B95F FF                          .BYTE $FF
RAM:B960 FF                          .BYTE $FF
RAM:B961 FF                          .BYTE $FF
RAM:B962 FF                          .BYTE $FF
RAM:B963 FF                          .BYTE $FF
RAM:B964 FF                          .BYTE $FF
RAM:B965 FF                          .BYTE $FF
RAM:B966 FF                          .BYTE $FF
RAM:B967 FF                          .BYTE $FF
RAM:B968 FF                          .BYTE $FF
RAM:B969 FF                          .BYTE $FF
RAM:B96A FF                          .BYTE $FF
RAM:B96B FF                          .BYTE $FF
RAM:B96C FF                          .BYTE $FF
RAM:B96D FF                          .BYTE $FF
RAM:B96E FF                          .BYTE $FF
RAM:B96F FF                          .BYTE $FF
RAM:B970 FF                          .BYTE $FF
RAM:B971 FF                          .BYTE $FF
RAM:B972 FF                          .BYTE $FF
RAM:B973 FF                          .BYTE $FF
RAM:B974 FF                          .BYTE $FF
RAM:B975 FF                          .BYTE $FF
RAM:B976 FF                          .BYTE $FF
RAM:B977 FF                          .BYTE $FF
RAM:B978 FF                          .BYTE $FF
RAM:B979 FF                          .BYTE $FF
RAM:B97A FF                          .BYTE $FF
RAM:B97B FF                          .BYTE $FF
RAM:B97C FF                          .BYTE $FF
RAM:B97D FF                          .BYTE $FF
RAM:B97E FF                          .BYTE $FF
RAM:B97F FF                          .BYTE $FF
RAM:B980 FF                          .BYTE $FF
RAM:B981 FF                          .BYTE $FF
RAM:B982 FF                          .BYTE $FF
RAM:B983 FF                          .BYTE $FF
RAM:B984 FF                          .BYTE $FF
RAM:B985 FF                          .BYTE $FF
RAM:B986 FF                          .BYTE $FF
RAM:B987 FF                          .BYTE $FF
RAM:B988 FF                          .BYTE $FF
RAM:B989 FF                          .BYTE $FF
RAM:B98A FF                          .BYTE $FF
RAM:B98B FF                          .BYTE $FF
RAM:B98C FF                          .BYTE $FF
RAM:B98D FF                          .BYTE $FF
RAM:B98E FF                          .BYTE $FF
RAM:B98F FF                          .BYTE $FF
RAM:B990 FF                          .BYTE $FF
RAM:B991 FF                          .BYTE $FF
RAM:B992 FF                          .BYTE $FF
RAM:B993 FF                          .BYTE $FF
RAM:B994 FF                          .BYTE $FF
RAM:B995 FF                          .BYTE $FF
RAM:B996 FF                          .BYTE $FF
RAM:B997 FF                          .BYTE $FF
RAM:B998 FF                          .BYTE $FF
RAM:B999 FF                          .BYTE $FF
RAM:B99A FF                          .BYTE $FF
RAM:B99B FF                          .BYTE $FF
RAM:B99C FF                          .BYTE $FF
RAM:B99D FF                          .BYTE $FF
RAM:B99E FF                          .BYTE $FF
RAM:B99F FF                          .BYTE $FF
RAM:B9A0 FF                          .BYTE $FF
RAM:B9A1 FF                          .BYTE $FF
RAM:B9A2 FF                          .BYTE $FF
RAM:B9A3 FF                          .BYTE $FF
RAM:B9A4 FF                          .BYTE $FF
RAM:B9A5 FF                          .BYTE $FF
RAM:B9A6 FF                          .BYTE $FF
RAM:B9A7 FF                          .BYTE $FF
RAM:B9A8 FF                          .BYTE $FF
RAM:B9A9 FF                          .BYTE $FF
RAM:B9AA FF                          .BYTE $FF
RAM:B9AB FF                          .BYTE $FF
RAM:B9AC FF                          .BYTE $FF
RAM:B9AD FF                          .BYTE $FF
RAM:B9AE FF                          .BYTE $FF
RAM:B9AF FF                          .BYTE $FF
RAM:B9B0 FF                          .BYTE $FF
RAM:B9B1 FF                          .BYTE $FF
RAM:B9B2 FF                          .BYTE $FF
RAM:B9B3 FF                          .BYTE $FF
RAM:B9B4 FF                          .BYTE $FF
RAM:B9B5 FF                          .BYTE $FF
RAM:B9B6 FF                          .BYTE $FF
RAM:B9B7 FF                          .BYTE $FF
RAM:B9B8 FF                          .BYTE $FF
RAM:B9B9 FF                          .BYTE $FF
RAM:B9BA FF                          .BYTE $FF
RAM:B9BB FF                          .BYTE $FF
RAM:B9BC FF                          .BYTE $FF
RAM:B9BD FF                          .BYTE $FF
RAM:B9BE FF                          .BYTE $FF
RAM:B9BF FF                          .BYTE $FF
RAM:B9C0 FF                          .BYTE $FF
RAM:B9C1 FF                          .BYTE $FF
RAM:B9C2 FF                          .BYTE $FF
RAM:B9C3 FF                          .BYTE $FF
RAM:B9C4 FF                          .BYTE $FF
RAM:B9C5 FF                          .BYTE $FF
RAM:B9C6 FF                          .BYTE $FF
RAM:B9C7 FF                          .BYTE $FF
RAM:B9C8 FF                          .BYTE $FF
RAM:B9C9 FF                          .BYTE $FF
RAM:B9CA FF                          .BYTE $FF
RAM:B9CB FF                          .BYTE $FF
RAM:B9CC FF                          .BYTE $FF
RAM:B9CD FF                          .BYTE $FF
RAM:B9CE FF                          .BYTE $FF
RAM:B9CF FF                          .BYTE $FF
RAM:B9D0 FF                          .BYTE $FF
RAM:B9D1 FF                          .BYTE $FF
RAM:B9D2 FF                          .BYTE $FF
RAM:B9D3 FF                          .BYTE $FF
RAM:B9D4 FF                          .BYTE $FF
RAM:B9D5 FF                          .BYTE $FF
RAM:B9D6 FF                          .BYTE $FF
RAM:B9D7 FF                          .BYTE $FF
RAM:B9D8 FF                          .BYTE $FF
RAM:B9D9 FF                          .BYTE $FF
RAM:B9DA FF                          .BYTE $FF
RAM:B9DB FF                          .BYTE $FF
RAM:B9DC FF                          .BYTE $FF
RAM:B9DD FF                          .BYTE $FF
RAM:B9DE FF                          .BYTE $FF
RAM:B9DF FF                          .BYTE $FF
RAM:B9E0 FF                          .BYTE $FF
RAM:B9E1 FF                          .BYTE $FF
RAM:B9E2 FF                          .BYTE $FF
RAM:B9E3 FF                          .BYTE $FF
RAM:B9E4 FF                          .BYTE $FF
RAM:B9E5 FF                          .BYTE $FF
RAM:B9E6 FF                          .BYTE $FF
RAM:B9E7 FF                          .BYTE $FF
RAM:B9E8 FF                          .BYTE $FF
RAM:B9E9 FF                          .BYTE $FF
RAM:B9EA FF                          .BYTE $FF
RAM:B9EB FF                          .BYTE $FF
RAM:B9EC FF                          .BYTE $FF
RAM:B9ED FF                          .BYTE $FF
RAM:B9EE FF                          .BYTE $FF
RAM:B9EF FF                          .BYTE $FF
RAM:B9F0 FF                          .BYTE $FF
RAM:B9F1 FF                          .BYTE $FF
RAM:B9F2 FF                          .BYTE $FF
RAM:B9F3 FF                          .BYTE $FF
RAM:B9F4 FF                          .BYTE $FF
RAM:B9F5 FF                          .BYTE $FF
RAM:B9F6 FF                          .BYTE $FF
RAM:B9F7 FF                          .BYTE $FF
RAM:B9F8 FF                          .BYTE $FF
RAM:B9F9 FF                          .BYTE $FF
RAM:B9FA FF                          .BYTE $FF
RAM:B9FB FF                          .BYTE $FF
RAM:B9FC FF                          .BYTE $FF
RAM:B9FD FF                          .BYTE $FF
RAM:B9FE FF                          .BYTE $FF
RAM:B9FF FF                          .BYTE $FF
RAM:BA00 FF                          .BYTE $FF
RAM:BA01 FF                          .BYTE $FF
RAM:BA02 FF                          .BYTE $FF
RAM:BA03 FF                          .BYTE $FF
RAM:BA04 FF                          .BYTE $FF
RAM:BA05 FF                          .BYTE $FF
RAM:BA06 FF                          .BYTE $FF
RAM:BA07 FF                          .BYTE $FF
RAM:BA08 FF                          .BYTE $FF
RAM:BA09 FF                          .BYTE $FF
RAM:BA0A FF                          .BYTE $FF
RAM:BA0B FF                          .BYTE $FF
RAM:BA0C FF                          .BYTE $FF
RAM:BA0D FF                          .BYTE $FF
RAM:BA0E FF                          .BYTE $FF
RAM:BA0F FF                          .BYTE $FF
RAM:BA10 FF                          .BYTE $FF
RAM:BA11 FF                          .BYTE $FF
RAM:BA12 FF                          .BYTE $FF
RAM:BA13 FF                          .BYTE $FF
RAM:BA14 FF                          .BYTE $FF
RAM:BA15 FF                          .BYTE $FF
RAM:BA16 FF                          .BYTE $FF
RAM:BA17 FF                          .BYTE $FF
RAM:BA18 FF                          .BYTE $FF
RAM:BA19 FF                          .BYTE $FF
RAM:BA1A FF                          .BYTE $FF
RAM:BA1B FF                          .BYTE $FF
RAM:BA1C FF                          .BYTE $FF
RAM:BA1D FF                          .BYTE $FF
RAM:BA1E FF                          .BYTE $FF
RAM:BA1F FF                          .BYTE $FF
RAM:BA20 FF                          .BYTE $FF
RAM:BA21 FF                          .BYTE $FF
RAM:BA22 FF                          .BYTE $FF
RAM:BA23 FF                          .BYTE $FF
RAM:BA24 FF                          .BYTE $FF
RAM:BA25 FF                          .BYTE $FF
RAM:BA26 FF                          .BYTE $FF
RAM:BA27 FF                          .BYTE $FF
RAM:BA28 FF                          .BYTE $FF
RAM:BA29 FF                          .BYTE $FF
RAM:BA2A FF                          .BYTE $FF
RAM:BA2B FF                          .BYTE $FF
RAM:BA2C FF                          .BYTE $FF
RAM:BA2D FF                          .BYTE $FF
RAM:BA2E FF                          .BYTE $FF
RAM:BA2F FF                          .BYTE $FF
RAM:BA30 FF                          .BYTE $FF
RAM:BA31 FF                          .BYTE $FF
RAM:BA32 FF                          .BYTE $FF
RAM:BA33 FF                          .BYTE $FF
RAM:BA34 FF                          .BYTE $FF
RAM:BA35 FF                          .BYTE $FF
RAM:BA36 FF                          .BYTE $FF
RAM:BA37 FF                          .BYTE $FF
RAM:BA38 FF                          .BYTE $FF
RAM:BA39 FF                          .BYTE $FF
RAM:BA3A FF                          .BYTE $FF
RAM:BA3B FF                          .BYTE $FF
RAM:BA3C FF                          .BYTE $FF
RAM:BA3D FF                          .BYTE $FF
RAM:BA3E FF                          .BYTE $FF
RAM:BA3F FF                          .BYTE $FF
RAM:BA40 FF                          .BYTE $FF
RAM:BA41 FF                          .BYTE $FF
RAM:BA42 FF                          .BYTE $FF
RAM:BA43 FF                          .BYTE $FF
RAM:BA44 FF                          .BYTE $FF
RAM:BA45 FF                          .BYTE $FF
RAM:BA46 FF                          .BYTE $FF
RAM:BA47 FF                          .BYTE $FF
RAM:BA48 FF                          .BYTE $FF
RAM:BA49 FF                          .BYTE $FF
RAM:BA4A FF                          .BYTE $FF
RAM:BA4B FF                          .BYTE $FF
RAM:BA4C FF                          .BYTE $FF
RAM:BA4D FF                          .BYTE $FF
RAM:BA4E FF                          .BYTE $FF
RAM:BA4F FF                          .BYTE $FF
RAM:BA50 FF                          .BYTE $FF
RAM:BA51 FF                          .BYTE $FF
RAM:BA52 FF                          .BYTE $FF
RAM:BA53 FF                          .BYTE $FF
RAM:BA54 FF                          .BYTE $FF
RAM:BA55 FF                          .BYTE $FF
RAM:BA56 FF                          .BYTE $FF
RAM:BA57 FF                          .BYTE $FF
RAM:BA58 FF                          .BYTE $FF
RAM:BA59 FF                          .BYTE $FF
RAM:BA5A FF                          .BYTE $FF
RAM:BA5B FF                          .BYTE $FF
RAM:BA5C FF                          .BYTE $FF
RAM:BA5D FF                          .BYTE $FF
RAM:BA5E FF                          .BYTE $FF
RAM:BA5F FF                          .BYTE $FF
RAM:BA60 FF                          .BYTE $FF
RAM:BA61 FF                          .BYTE $FF
RAM:BA62 FF                          .BYTE $FF
RAM:BA63 FF                          .BYTE $FF
RAM:BA64 FF                          .BYTE $FF
RAM:BA65 FF                          .BYTE $FF
RAM:BA66 FF                          .BYTE $FF
RAM:BA67 FF                          .BYTE $FF
RAM:BA68 FF                          .BYTE $FF
RAM:BA69 FF                          .BYTE $FF
RAM:BA6A FF                          .BYTE $FF
RAM:BA6B FF                          .BYTE $FF
RAM:BA6C FF                          .BYTE $FF
RAM:BA6D FF                          .BYTE $FF
RAM:BA6E FF                          .BYTE $FF
RAM:BA6F FF                          .BYTE $FF
RAM:BA70 FF                          .BYTE $FF
RAM:BA71 FF                          .BYTE $FF
RAM:BA72 FF                          .BYTE $FF
RAM:BA73 FF                          .BYTE $FF
RAM:BA74 FF                          .BYTE $FF
RAM:BA75 FF                          .BYTE $FF
RAM:BA76 FF                          .BYTE $FF
RAM:BA77 FF                          .BYTE $FF
RAM:BA78 FF                          .BYTE $FF
RAM:BA79 FF                          .BYTE $FF
RAM:BA7A FF                          .BYTE $FF
RAM:BA7B FF                          .BYTE $FF
RAM:BA7C FF                          .BYTE $FF
RAM:BA7D FF                          .BYTE $FF
RAM:BA7E FF                          .BYTE $FF
RAM:BA7F FF                          .BYTE $FF
RAM:BA80 FF                          .BYTE $FF
RAM:BA81 FF                          .BYTE $FF
RAM:BA82 FF                          .BYTE $FF
RAM:BA83 FF                          .BYTE $FF
RAM:BA84 FF                          .BYTE $FF
RAM:BA85 FF                          .BYTE $FF
RAM:BA86 FF                          .BYTE $FF
RAM:BA87 FF                          .BYTE $FF
RAM:BA88 FF                          .BYTE $FF
RAM:BA89 FF                          .BYTE $FF
RAM:BA8A FF                          .BYTE $FF
RAM:BA8B FF                          .BYTE $FF
RAM:BA8C FF                          .BYTE $FF
RAM:BA8D FF                          .BYTE $FF
RAM:BA8E FF                          .BYTE $FF
RAM:BA8F FF                          .BYTE $FF
RAM:BA90 FF                          .BYTE $FF
RAM:BA91 FF                          .BYTE $FF
RAM:BA92 FF                          .BYTE $FF
RAM:BA93 FF                          .BYTE $FF
RAM:BA94 FF                          .BYTE $FF
RAM:BA95 FF                          .BYTE $FF
RAM:BA96 FF                          .BYTE $FF
RAM:BA97 FF                          .BYTE $FF
RAM:BA98 FF                          .BYTE $FF
RAM:BA99 FF                          .BYTE $FF
RAM:BA9A FF                          .BYTE $FF
RAM:BA9B FF                          .BYTE $FF
RAM:BA9C FF                          .BYTE $FF
RAM:BA9D FF                          .BYTE $FF
RAM:BA9E FF                          .BYTE $FF
RAM:BA9F FF                          .BYTE $FF
RAM:BAA0 FF                          .BYTE $FF
RAM:BAA1 FF                          .BYTE $FF
RAM:BAA2 FF                          .BYTE $FF
RAM:BAA3 FF                          .BYTE $FF
RAM:BAA4 FF                          .BYTE $FF
RAM:BAA5 FF                          .BYTE $FF
RAM:BAA6 FF                          .BYTE $FF
RAM:BAA7 FF                          .BYTE $FF
RAM:BAA8 FF                          .BYTE $FF
RAM:BAA9 FF                          .BYTE $FF
RAM:BAAA FF                          .BYTE $FF
RAM:BAAB FF                          .BYTE $FF
RAM:BAAC FF                          .BYTE $FF
RAM:BAAD FF                          .BYTE $FF
RAM:BAAE FF                          .BYTE $FF
RAM:BAAF FF                          .BYTE $FF
RAM:BAB0 FF                          .BYTE $FF
RAM:BAB1 FF                          .BYTE $FF
RAM:BAB2 FF                          .BYTE $FF
RAM:BAB3 FF                          .BYTE $FF
RAM:BAB4 FF                          .BYTE $FF
RAM:BAB5 FF                          .BYTE $FF
RAM:BAB6 FF                          .BYTE $FF
RAM:BAB7 FF                          .BYTE $FF
RAM:BAB8 FF                          .BYTE $FF
RAM:BAB9 FF                          .BYTE $FF
RAM:BABA FF                          .BYTE $FF
RAM:BABB FF                          .BYTE $FF
RAM:BABC FF                          .BYTE $FF
RAM:BABD FF                          .BYTE $FF
RAM:BABE FF                          .BYTE $FF
RAM:BABF FF                          .BYTE $FF
RAM:BAC0 FF                          .BYTE $FF
RAM:BAC1 FF                          .BYTE $FF
RAM:BAC2 FF                          .BYTE $FF
RAM:BAC3 FF                          .BYTE $FF
RAM:BAC4 FF                          .BYTE $FF
RAM:BAC5 FF                          .BYTE $FF
RAM:BAC6 FF                          .BYTE $FF
RAM:BAC7 FF                          .BYTE $FF
RAM:BAC8 FF                          .BYTE $FF
RAM:BAC9 FF                          .BYTE $FF
RAM:BACA FF                          .BYTE $FF
RAM:BACB FF                          .BYTE $FF
RAM:BACC FF                          .BYTE $FF
RAM:BACD FF                          .BYTE $FF
RAM:BACE FF                          .BYTE $FF
RAM:BACF FF                          .BYTE $FF
RAM:BAD0 FF                          .BYTE $FF
RAM:BAD1 FF                          .BYTE $FF
RAM:BAD2 FF                          .BYTE $FF
RAM:BAD3 FF                          .BYTE $FF
RAM:BAD4 FF                          .BYTE $FF
RAM:BAD5 FF                          .BYTE $FF
RAM:BAD6 FF                          .BYTE $FF
RAM:BAD7 FF                          .BYTE $FF
RAM:BAD8 FF                          .BYTE $FF
RAM:BAD9 FF                          .BYTE $FF
RAM:BADA FF                          .BYTE $FF
RAM:BADB FF                          .BYTE $FF
RAM:BADC FF                          .BYTE $FF
RAM:BADD FF                          .BYTE $FF
RAM:BADE FF                          .BYTE $FF
RAM:BADF FF                          .BYTE $FF
RAM:BAE0 FF                          .BYTE $FF
RAM:BAE1 FF                          .BYTE $FF
RAM:BAE2 FF                          .BYTE $FF
RAM:BAE3 FF                          .BYTE $FF
RAM:BAE4 FF                          .BYTE $FF
RAM:BAE5 FF                          .BYTE $FF
RAM:BAE6 FF                          .BYTE $FF
RAM:BAE7 FF                          .BYTE $FF
RAM:BAE8 FF                          .BYTE $FF
RAM:BAE9 FF                          .BYTE $FF
RAM:BAEA FF                          .BYTE $FF
RAM:BAEB FF                          .BYTE $FF
RAM:BAEC FF                          .BYTE $FF
RAM:BAED FF                          .BYTE $FF
RAM:BAEE FF                          .BYTE $FF
RAM:BAEF FF                          .BYTE $FF
RAM:BAF0 FF                          .BYTE $FF
RAM:BAF1 FF                          .BYTE $FF
RAM:BAF2 FF                          .BYTE $FF
RAM:BAF3 FF                          .BYTE $FF
RAM:BAF4 FF                          .BYTE $FF
RAM:BAF5 FF                          .BYTE $FF
RAM:BAF6 FF                          .BYTE $FF
RAM:BAF7 FF                          .BYTE $FF
RAM:BAF8 FF                          .BYTE $FF
RAM:BAF9 FF                          .BYTE $FF
RAM:BAFA FF                          .BYTE $FF
RAM:BAFB FF                          .BYTE $FF
RAM:BAFC FF                          .BYTE $FF
RAM:BAFD FF                          .BYTE $FF
RAM:BAFE FF                          .BYTE $FF
RAM:BAFF FF                          .BYTE $FF
RAM:BB00 FF                          .BYTE $FF
RAM:BB01 FF                          .BYTE $FF
RAM:BB02 FF                          .BYTE $FF
RAM:BB03 FF                          .BYTE $FF
RAM:BB04 FF                          .BYTE $FF
RAM:BB05 FF                          .BYTE $FF
RAM:BB06 FF                          .BYTE $FF
RAM:BB07 FF                          .BYTE $FF
RAM:BB08 FF                          .BYTE $FF
RAM:BB09 FF                          .BYTE $FF
RAM:BB0A FF                          .BYTE $FF
RAM:BB0B FF                          .BYTE $FF
RAM:BB0C FF                          .BYTE $FF
RAM:BB0D FF                          .BYTE $FF
RAM:BB0E FF                          .BYTE $FF
RAM:BB0F FF                          .BYTE $FF
RAM:BB10 FF                          .BYTE $FF
RAM:BB11 FF                          .BYTE $FF
RAM:BB12 FF                          .BYTE $FF
RAM:BB13 FF                          .BYTE $FF
RAM:BB14 FF                          .BYTE $FF
RAM:BB15 FF                          .BYTE $FF
RAM:BB16 FF                          .BYTE $FF
RAM:BB17 FF                          .BYTE $FF
RAM:BB18 FF                          .BYTE $FF
RAM:BB19 FF                          .BYTE $FF
RAM:BB1A FF                          .BYTE $FF
RAM:BB1B FF                          .BYTE $FF
RAM:BB1C FF                          .BYTE $FF
RAM:BB1D FF                          .BYTE $FF
RAM:BB1E FF                          .BYTE $FF
RAM:BB1F FF                          .BYTE $FF
RAM:BB20 FF                          .BYTE $FF
RAM:BB21 FF                          .BYTE $FF
RAM:BB22 FF                          .BYTE $FF
RAM:BB23 FF                          .BYTE $FF
RAM:BB24 FF                          .BYTE $FF
RAM:BB25 FF                          .BYTE $FF
RAM:BB26 FF                          .BYTE $FF
RAM:BB27 FF                          .BYTE $FF
RAM:BB28 FF                          .BYTE $FF
RAM:BB29 FF                          .BYTE $FF
RAM:BB2A FF                          .BYTE $FF
RAM:BB2B FF                          .BYTE $FF
RAM:BB2C FF                          .BYTE $FF
RAM:BB2D FF                          .BYTE $FF
RAM:BB2E FF                          .BYTE $FF
RAM:BB2F FF                          .BYTE $FF
RAM:BB30 FF                          .BYTE $FF
RAM:BB31 FF                          .BYTE $FF
RAM:BB32 FF                          .BYTE $FF
RAM:BB33 FF                          .BYTE $FF
RAM:BB34 FF                          .BYTE $FF
RAM:BB35 FF                          .BYTE $FF
RAM:BB36 FF                          .BYTE $FF
RAM:BB37 FF                          .BYTE $FF
RAM:BB38 FF                          .BYTE $FF
RAM:BB39 FF                          .BYTE $FF
RAM:BB3A FF                          .BYTE $FF
RAM:BB3B FF                          .BYTE $FF
RAM:BB3C FF                          .BYTE $FF
RAM:BB3D FF                          .BYTE $FF
RAM:BB3E FF                          .BYTE $FF
RAM:BB3F FF                          .BYTE $FF
RAM:BB40 FF                          .BYTE $FF
RAM:BB41 FF                          .BYTE $FF
RAM:BB42 FF                          .BYTE $FF
RAM:BB43 FF                          .BYTE $FF
RAM:BB44 FF                          .BYTE $FF
RAM:BB45 FF                          .BYTE $FF
RAM:BB46 FF                          .BYTE $FF
RAM:BB47 FF                          .BYTE $FF
RAM:BB48 FF                          .BYTE $FF
RAM:BB49 FF                          .BYTE $FF
RAM:BB4A FF                          .BYTE $FF
RAM:BB4B FF                          .BYTE $FF
RAM:BB4C FF                          .BYTE $FF
RAM:BB4D FF                          .BYTE $FF
RAM:BB4E FF                          .BYTE $FF
RAM:BB4F FF                          .BYTE $FF
RAM:BB50 FF                          .BYTE $FF
RAM:BB51 FF                          .BYTE $FF
RAM:BB52 FF                          .BYTE $FF
RAM:BB53 FF                          .BYTE $FF
RAM:BB54 FF                          .BYTE $FF
RAM:BB55 FF                          .BYTE $FF
RAM:BB56 FF                          .BYTE $FF
RAM:BB57 FF                          .BYTE $FF
RAM:BB58 FF                          .BYTE $FF
RAM:BB59 FF                          .BYTE $FF
RAM:BB5A FF                          .BYTE $FF
RAM:BB5B FF                          .BYTE $FF
RAM:BB5C FF                          .BYTE $FF
RAM:BB5D FF                          .BYTE $FF
RAM:BB5E FF                          .BYTE $FF
RAM:BB5F FF                          .BYTE $FF
RAM:BB60 FF                          .BYTE $FF
RAM:BB61 FF                          .BYTE $FF
RAM:BB62 FF                          .BYTE $FF
RAM:BB63 FF                          .BYTE $FF
RAM:BB64 FF                          .BYTE $FF
RAM:BB65 FF                          .BYTE $FF
RAM:BB66 FF                          .BYTE $FF
RAM:BB67 FF                          .BYTE $FF
RAM:BB68 FF                          .BYTE $FF
RAM:BB69 FF                          .BYTE $FF
RAM:BB6A FF                          .BYTE $FF
RAM:BB6B FF                          .BYTE $FF
RAM:BB6C FF                          .BYTE $FF
RAM:BB6D FF                          .BYTE $FF
RAM:BB6E FF                          .BYTE $FF
RAM:BB6F FF                          .BYTE $FF
RAM:BB70 FF                          .BYTE $FF
RAM:BB71 FF                          .BYTE $FF
RAM:BB72 FF                          .BYTE $FF
RAM:BB73 FF                          .BYTE $FF
RAM:BB74 FF                          .BYTE $FF
RAM:BB75 FF                          .BYTE $FF
RAM:BB76 FF                          .BYTE $FF
RAM:BB77 FF                          .BYTE $FF
RAM:BB78 FF                          .BYTE $FF
RAM:BB79 FF                          .BYTE $FF
RAM:BB7A FF                          .BYTE $FF
RAM:BB7B FF                          .BYTE $FF
RAM:BB7C FF                          .BYTE $FF
RAM:BB7D FF                          .BYTE $FF
RAM:BB7E FF                          .BYTE $FF
RAM:BB7F FF                          .BYTE $FF
RAM:BB80 FF                          .BYTE $FF
RAM:BB81 FF                          .BYTE $FF
RAM:BB82 FF                          .BYTE $FF
RAM:BB83 FF                          .BYTE $FF
RAM:BB84 FF                          .BYTE $FF
RAM:BB85 FF                          .BYTE $FF
RAM:BB86 FF                          .BYTE $FF
RAM:BB87 FF                          .BYTE $FF
RAM:BB88 FF                          .BYTE $FF
RAM:BB89 FF                          .BYTE $FF
RAM:BB8A FF                          .BYTE $FF
RAM:BB8B FF                          .BYTE $FF
RAM:BB8C FF                          .BYTE $FF
RAM:BB8D FF                          .BYTE $FF
RAM:BB8E FF                          .BYTE $FF
RAM:BB8F FF                          .BYTE $FF
RAM:BB90 FF                          .BYTE $FF
RAM:BB91 FF                          .BYTE $FF
RAM:BB92 FF                          .BYTE $FF
RAM:BB93 FF                          .BYTE $FF
RAM:BB94 FF                          .BYTE $FF
RAM:BB95 FF                          .BYTE $FF
RAM:BB96 FF                          .BYTE $FF
RAM:BB97 FF                          .BYTE $FF
RAM:BB98 FF                          .BYTE $FF
RAM:BB99 FF                          .BYTE $FF
RAM:BB9A FF                          .BYTE $FF
RAM:BB9B FF                          .BYTE $FF
RAM:BB9C FF                          .BYTE $FF
RAM:BB9D FF                          .BYTE $FF
RAM:BB9E FF                          .BYTE $FF
RAM:BB9F FF                          .BYTE $FF
RAM:BBA0 FF                          .BYTE $FF
RAM:BBA1 FF                          .BYTE $FF
RAM:BBA2 FF                          .BYTE $FF
RAM:BBA3 FF                          .BYTE $FF
RAM:BBA4 FF                          .BYTE $FF
RAM:BBA5 FF                          .BYTE $FF
RAM:BBA6 FF                          .BYTE $FF
RAM:BBA7 FF                          .BYTE $FF
RAM:BBA8 FF                          .BYTE $FF
RAM:BBA9 FF                          .BYTE $FF
RAM:BBAA FF                          .BYTE $FF
RAM:BBAB FF                          .BYTE $FF
RAM:BBAC FF                          .BYTE $FF
RAM:BBAD FF                          .BYTE $FF
RAM:BBAE FF                          .BYTE $FF
RAM:BBAF FF                          .BYTE $FF
RAM:BBB0 FF                          .BYTE $FF
RAM:BBB1 FF                          .BYTE $FF
RAM:BBB2 FF                          .BYTE $FF
RAM:BBB3 FF                          .BYTE $FF
RAM:BBB4 FF                          .BYTE $FF
RAM:BBB5 FF                          .BYTE $FF
RAM:BBB6 FF                          .BYTE $FF
RAM:BBB7 FF                          .BYTE $FF
RAM:BBB8 FF                          .BYTE $FF
RAM:BBB9 FF                          .BYTE $FF
RAM:BBBA FF                          .BYTE $FF
RAM:BBBB FF                          .BYTE $FF
RAM:BBBC FF                          .BYTE $FF
RAM:BBBD FF                          .BYTE $FF
RAM:BBBE FF                          .BYTE $FF
RAM:BBBF FF                          .BYTE $FF
RAM:BBC0 FF                          .BYTE $FF
RAM:BBC1 FF                          .BYTE $FF
RAM:BBC2 FF                          .BYTE $FF
RAM:BBC3 FF                          .BYTE $FF
RAM:BBC4 FF                          .BYTE $FF
RAM:BBC5 FF                          .BYTE $FF
RAM:BBC6 FF                          .BYTE $FF
RAM:BBC7 FF                          .BYTE $FF
RAM:BBC8 FF                          .BYTE $FF
RAM:BBC9 FF                          .BYTE $FF
RAM:BBCA FF                          .BYTE $FF
RAM:BBCB FF                          .BYTE $FF
RAM:BBCC FF                          .BYTE $FF
RAM:BBCD FF                          .BYTE $FF
RAM:BBCE FF                          .BYTE $FF
RAM:BBCF FF                          .BYTE $FF
RAM:BBD0 FF                          .BYTE $FF
RAM:BBD1 FF                          .BYTE $FF
RAM:BBD2 FF                          .BYTE $FF
RAM:BBD3 FF                          .BYTE $FF
RAM:BBD4 FF                          .BYTE $FF
RAM:BBD5 FF                          .BYTE $FF
RAM:BBD6 FF                          .BYTE $FF
RAM:BBD7 FF                          .BYTE $FF
RAM:BBD8 FF                          .BYTE $FF
RAM:BBD9 FF                          .BYTE $FF
RAM:BBDA FF                          .BYTE $FF
RAM:BBDB FF                          .BYTE $FF
RAM:BBDC FF                          .BYTE $FF
RAM:BBDD FF                          .BYTE $FF
RAM:BBDE FF                          .BYTE $FF
RAM:BBDF FF                          .BYTE $FF
RAM:BBE0 FF                          .BYTE $FF
RAM:BBE1 FF                          .BYTE $FF
RAM:BBE2 FF                          .BYTE $FF
RAM:BBE3 FF                          .BYTE $FF
RAM:BBE4 FF                          .BYTE $FF
RAM:BBE5 FF                          .BYTE $FF
RAM:BBE6 FF                          .BYTE $FF
RAM:BBE7 FF                          .BYTE $FF
RAM:BBE8 FF                          .BYTE $FF
RAM:BBE9 FF                          .BYTE $FF
RAM:BBEA FF                          .BYTE $FF
RAM:BBEB FF                          .BYTE $FF
RAM:BBEC FF                          .BYTE $FF
RAM:BBED FF                          .BYTE $FF
RAM:BBEE FF                          .BYTE $FF
RAM:BBEF FF                          .BYTE $FF
RAM:BBF0 FF                          .BYTE $FF
RAM:BBF1 FF                          .BYTE $FF
RAM:BBF2 FF                          .BYTE $FF
RAM:BBF3 FF                          .BYTE $FF
RAM:BBF4 FF                          .BYTE $FF
RAM:BBF5 FF                          .BYTE $FF
RAM:BBF6 FF                          .BYTE $FF
RAM:BBF7 FF                          .BYTE $FF
RAM:BBF8 FF                          .BYTE $FF
RAM:BBF9 FF                          .BYTE $FF
RAM:BBFA FF                          .BYTE $FF
RAM:BBFB FF                          .BYTE $FF
RAM:BBFC FF                          .BYTE $FF
RAM:BBFD FF                          .BYTE $FF
RAM:BBFE FF                          .BYTE $FF
RAM:BBFF FF                          .BYTE $FF
RAM:BC00 FF                          .BYTE $FF
RAM:BC01 FF                          .BYTE $FF
RAM:BC02 FF                          .BYTE $FF
RAM:BC03 FF                          .BYTE $FF
RAM:BC04 FF                          .BYTE $FF
RAM:BC05 FF                          .BYTE $FF
RAM:BC06 FF                          .BYTE $FF
RAM:BC07 FF                          .BYTE $FF
RAM:BC08 FF                          .BYTE $FF
RAM:BC09 FF                          .BYTE $FF
RAM:BC0A FF                          .BYTE $FF
RAM:BC0B FF                          .BYTE $FF
RAM:BC0C FF                          .BYTE $FF
RAM:BC0D FF                          .BYTE $FF
RAM:BC0E FF                          .BYTE $FF
RAM:BC0F FF                          .BYTE $FF
RAM:BC10 FF                          .BYTE $FF
RAM:BC11 FF                          .BYTE $FF
RAM:BC12 FF                          .BYTE $FF
RAM:BC13 FF                          .BYTE $FF
RAM:BC14 FF                          .BYTE $FF
RAM:BC15 FF                          .BYTE $FF
RAM:BC16 FF                          .BYTE $FF
RAM:BC17 FF                          .BYTE $FF
RAM:BC18 FF                          .BYTE $FF
RAM:BC19 FF                          .BYTE $FF
RAM:BC1A FF                          .BYTE $FF
RAM:BC1B FF                          .BYTE $FF
RAM:BC1C FF                          .BYTE $FF
RAM:BC1D FF                          .BYTE $FF
RAM:BC1E FF                          .BYTE $FF
RAM:BC1F FF                          .BYTE $FF
RAM:BC20 FF                          .BYTE $FF
RAM:BC21 FF                          .BYTE $FF
RAM:BC22 FF                          .BYTE $FF
RAM:BC23 FF                          .BYTE $FF
RAM:BC24 FF                          .BYTE $FF
RAM:BC25 FF                          .BYTE $FF
RAM:BC26 FF                          .BYTE $FF
RAM:BC27 FF                          .BYTE $FF
RAM:BC28 FF                          .BYTE $FF
RAM:BC29 FF                          .BYTE $FF
RAM:BC2A FF                          .BYTE $FF
RAM:BC2B FF                          .BYTE $FF
RAM:BC2C FF                          .BYTE $FF
RAM:BC2D FF                          .BYTE $FF
RAM:BC2E FF                          .BYTE $FF
RAM:BC2F FF                          .BYTE $FF
RAM:BC30 FF                          .BYTE $FF
RAM:BC31 FF                          .BYTE $FF
RAM:BC32 FF                          .BYTE $FF
RAM:BC33 FF                          .BYTE $FF
RAM:BC34 FF                          .BYTE $FF
RAM:BC35 FF                          .BYTE $FF
RAM:BC36 FF                          .BYTE $FF
RAM:BC37 FF                          .BYTE $FF
RAM:BC38 FF                          .BYTE $FF
RAM:BC39 FF                          .BYTE $FF
RAM:BC3A FF                          .BYTE $FF
RAM:BC3B FF                          .BYTE $FF
RAM:BC3C FF                          .BYTE $FF
RAM:BC3D FF                          .BYTE $FF
RAM:BC3E FF                          .BYTE $FF
RAM:BC3F FF                          .BYTE $FF
RAM:BC40 FF                          .BYTE $FF
RAM:BC41 FF                          .BYTE $FF
RAM:BC42 FF                          .BYTE $FF
RAM:BC43 FF                          .BYTE $FF
RAM:BC44 FF                          .BYTE $FF
RAM:BC45 FF                          .BYTE $FF
RAM:BC46 FF                          .BYTE $FF
RAM:BC47 FF                          .BYTE $FF
RAM:BC48 FF                          .BYTE $FF
RAM:BC49 FF                          .BYTE $FF
RAM:BC4A FF                          .BYTE $FF
RAM:BC4B FF                          .BYTE $FF
RAM:BC4C FF                          .BYTE $FF
RAM:BC4D FF                          .BYTE $FF
RAM:BC4E FF                          .BYTE $FF
RAM:BC4F FF                          .BYTE $FF
RAM:BC50 FF                          .BYTE $FF
RAM:BC51 FF                          .BYTE $FF
RAM:BC52 FF                          .BYTE $FF
RAM:BC53 FF                          .BYTE $FF
RAM:BC54 FF                          .BYTE $FF
RAM:BC55 FF                          .BYTE $FF
RAM:BC56 FF                          .BYTE $FF
RAM:BC57 FF                          .BYTE $FF
RAM:BC58 FF                          .BYTE $FF
RAM:BC59 FF                          .BYTE $FF
RAM:BC5A FF                          .BYTE $FF
RAM:BC5B FF                          .BYTE $FF
RAM:BC5C FF                          .BYTE $FF
RAM:BC5D FF                          .BYTE $FF
RAM:BC5E FF                          .BYTE $FF
RAM:BC5F FF                          .BYTE $FF
RAM:BC60 FF                          .BYTE $FF
RAM:BC61 FF                          .BYTE $FF
RAM:BC62 FF                          .BYTE $FF
RAM:BC63 FF                          .BYTE $FF
RAM:BC64 FF                          .BYTE $FF
RAM:BC65 FF                          .BYTE $FF
RAM:BC66 FF                          .BYTE $FF
RAM:BC67 FF                          .BYTE $FF
RAM:BC68 FF                          .BYTE $FF
RAM:BC69 FF                          .BYTE $FF
RAM:BC6A FF                          .BYTE $FF
RAM:BC6B FF                          .BYTE $FF
RAM:BC6C FF                          .BYTE $FF
RAM:BC6D FF                          .BYTE $FF
RAM:BC6E FF                          .BYTE $FF
RAM:BC6F FF                          .BYTE $FF
RAM:BC70 FF                          .BYTE $FF
RAM:BC71 FF                          .BYTE $FF
RAM:BC72 FF                          .BYTE $FF
RAM:BC73 FF                          .BYTE $FF
RAM:BC74 FF                          .BYTE $FF
RAM:BC75 FF                          .BYTE $FF
RAM:BC76 FF                          .BYTE $FF
RAM:BC77 FF                          .BYTE $FF
RAM:BC78 FF                          .BYTE $FF
RAM:BC79 FF                          .BYTE $FF
RAM:BC7A FF                          .BYTE $FF
RAM:BC7B FF                          .BYTE $FF
RAM:BC7C FF                          .BYTE $FF
RAM:BC7D FF                          .BYTE $FF
RAM:BC7E FF                          .BYTE $FF
RAM:BC7F FF                          .BYTE $FF
RAM:BC80 FF                          .BYTE $FF
RAM:BC81 FF                          .BYTE $FF
RAM:BC82 FF                          .BYTE $FF
RAM:BC83 FF                          .BYTE $FF
RAM:BC84 FF                          .BYTE $FF
RAM:BC85 FF                          .BYTE $FF
RAM:BC86 FF                          .BYTE $FF
RAM:BC87 FF                          .BYTE $FF
RAM:BC88 FF                          .BYTE $FF
RAM:BC89 FF                          .BYTE $FF
RAM:BC8A FF                          .BYTE $FF
RAM:BC8B FF                          .BYTE $FF
RAM:BC8C FF                          .BYTE $FF
RAM:BC8D FF                          .BYTE $FF
RAM:BC8E FF                          .BYTE $FF
RAM:BC8F FF                          .BYTE $FF
RAM:BC90 FF                          .BYTE $FF
RAM:BC91 FF                          .BYTE $FF
RAM:BC92 FF                          .BYTE $FF
RAM:BC93 FF                          .BYTE $FF
RAM:BC94 FF                          .BYTE $FF
RAM:BC95 FF                          .BYTE $FF
RAM:BC96 FF                          .BYTE $FF
RAM:BC97 FF                          .BYTE $FF
RAM:BC98 FF                          .BYTE $FF
RAM:BC99 FF                          .BYTE $FF
RAM:BC9A FF                          .BYTE $FF
RAM:BC9B FF                          .BYTE $FF
RAM:BC9C FF                          .BYTE $FF
RAM:BC9D FF                          .BYTE $FF
RAM:BC9E FF                          .BYTE $FF
RAM:BC9F FF                          .BYTE $FF
RAM:BCA0 FF                          .BYTE $FF
RAM:BCA1 FF                          .BYTE $FF
RAM:BCA2 FF                          .BYTE $FF
RAM:BCA3 FF                          .BYTE $FF
RAM:BCA4 FF                          .BYTE $FF
RAM:BCA5 FF                          .BYTE $FF
RAM:BCA6 FF                          .BYTE $FF
RAM:BCA7 FF                          .BYTE $FF
RAM:BCA8 FF                          .BYTE $FF
RAM:BCA9 FF                          .BYTE $FF
RAM:BCAA FF                          .BYTE $FF
RAM:BCAB FF                          .BYTE $FF
RAM:BCAC FF                          .BYTE $FF
RAM:BCAD FF                          .BYTE $FF
RAM:BCAE FF                          .BYTE $FF
RAM:BCAF FF                          .BYTE $FF
RAM:BCB0 FF                          .BYTE $FF
RAM:BCB1 FF                          .BYTE $FF
RAM:BCB2 FF                          .BYTE $FF
RAM:BCB3 FF                          .BYTE $FF
RAM:BCB4 FF                          .BYTE $FF
RAM:BCB5 FF                          .BYTE $FF
RAM:BCB6 FF                          .BYTE $FF
RAM:BCB7 FF                          .BYTE $FF
RAM:BCB8 FF                          .BYTE $FF
RAM:BCB9 FF                          .BYTE $FF
RAM:BCBA FF                          .BYTE $FF
RAM:BCBB FF                          .BYTE $FF
RAM:BCBC FF                          .BYTE $FF
RAM:BCBD FF                          .BYTE $FF
RAM:BCBE FF                          .BYTE $FF
RAM:BCBF FF                          .BYTE $FF
RAM:BCC0 FF                          .BYTE $FF
RAM:BCC1 FF                          .BYTE $FF
RAM:BCC2 FF                          .BYTE $FF
RAM:BCC3 FF                          .BYTE $FF
RAM:BCC4 FF                          .BYTE $FF
RAM:BCC5 FF                          .BYTE $FF
RAM:BCC6 FF                          .BYTE $FF
RAM:BCC7 FF                          .BYTE $FF
RAM:BCC8 FF                          .BYTE $FF
RAM:BCC9 FF                          .BYTE $FF
RAM:BCCA FF                          .BYTE $FF
RAM:BCCB FF                          .BYTE $FF
RAM:BCCC FF                          .BYTE $FF
RAM:BCCD FF                          .BYTE $FF
RAM:BCCE FF                          .BYTE $FF
RAM:BCCF FF                          .BYTE $FF
RAM:BCD0 FF                          .BYTE $FF
RAM:BCD1 FF                          .BYTE $FF
RAM:BCD2 FF                          .BYTE $FF
RAM:BCD3 FF                          .BYTE $FF
RAM:BCD4 FF                          .BYTE $FF
RAM:BCD5 FF                          .BYTE $FF
RAM:BCD6 FF                          .BYTE $FF
RAM:BCD7 FF                          .BYTE $FF
RAM:BCD8 FF                          .BYTE $FF
RAM:BCD9 FF                          .BYTE $FF
RAM:BCDA FF                          .BYTE $FF
RAM:BCDB FF                          .BYTE $FF
RAM:BCDC FF                          .BYTE $FF
RAM:BCDD FF                          .BYTE $FF
RAM:BCDE FF                          .BYTE $FF
RAM:BCDF FF                          .BYTE $FF
RAM:BCE0 FF                          .BYTE $FF
RAM:BCE1 FF                          .BYTE $FF
RAM:BCE2 FF                          .BYTE $FF
RAM:BCE3 FF                          .BYTE $FF
RAM:BCE4 FF                          .BYTE $FF
RAM:BCE5 FF                          .BYTE $FF
RAM:BCE6 FF                          .BYTE $FF
RAM:BCE7 FF                          .BYTE $FF
RAM:BCE8 FF                          .BYTE $FF
RAM:BCE9 FF                          .BYTE $FF
RAM:BCEA FF                          .BYTE $FF
RAM:BCEB FF                          .BYTE $FF
RAM:BCEC FF                          .BYTE $FF
RAM:BCED FF                          .BYTE $FF
RAM:BCEE FF                          .BYTE $FF
RAM:BCEF FF                          .BYTE $FF
RAM:BCF0 FF                          .BYTE $FF
RAM:BCF1 FF                          .BYTE $FF
RAM:BCF2 FF                          .BYTE $FF
RAM:BCF3 FF                          .BYTE $FF
RAM:BCF4 FF                          .BYTE $FF
RAM:BCF5 FF                          .BYTE $FF
RAM:BCF6 FF                          .BYTE $FF
RAM:BCF7 FF                          .BYTE $FF
RAM:BCF8 FF                          .BYTE $FF
RAM:BCF9 FF                          .BYTE $FF
RAM:BCFA FF                          .BYTE $FF
RAM:BCFB FF                          .BYTE $FF
RAM:BCFC FF                          .BYTE $FF
RAM:BCFD FF                          .BYTE $FF
RAM:BCFE FF                          .BYTE $FF
RAM:BCFF FF                          .BYTE $FF
RAM:BD00 FF                          .BYTE $FF
RAM:BD01 FF                          .BYTE $FF
RAM:BD02 FF                          .BYTE $FF
RAM:BD03 FF                          .BYTE $FF
RAM:BD04 FF                          .BYTE $FF
RAM:BD05 FF                          .BYTE $FF
RAM:BD06 FF                          .BYTE $FF
RAM:BD07 FF                          .BYTE $FF
RAM:BD08 FF                          .BYTE $FF
RAM:BD09 FF                          .BYTE $FF
RAM:BD0A FF                          .BYTE $FF
RAM:BD0B FF                          .BYTE $FF
RAM:BD0C FF                          .BYTE $FF
RAM:BD0D FF                          .BYTE $FF
RAM:BD0E FF                          .BYTE $FF
RAM:BD0F FF                          .BYTE $FF
RAM:BD10 FF                          .BYTE $FF
RAM:BD11 FF                          .BYTE $FF
RAM:BD12 FF                          .BYTE $FF
RAM:BD13 FF                          .BYTE $FF
RAM:BD14 FF                          .BYTE $FF
RAM:BD15 FF                          .BYTE $FF
RAM:BD16 FF                          .BYTE $FF
RAM:BD17 FF                          .BYTE $FF
RAM:BD18 FF                          .BYTE $FF
RAM:BD19 FF                          .BYTE $FF
RAM:BD1A FF                          .BYTE $FF
RAM:BD1B FF                          .BYTE $FF
RAM:BD1C FF                          .BYTE $FF
RAM:BD1D FF                          .BYTE $FF
RAM:BD1E FF                          .BYTE $FF
RAM:BD1F FF                          .BYTE $FF
RAM:BD20 FF                          .BYTE $FF
RAM:BD21 FF                          .BYTE $FF
RAM:BD22 FF                          .BYTE $FF
RAM:BD23 FF                          .BYTE $FF
RAM:BD24 FF                          .BYTE $FF
RAM:BD25 FF                          .BYTE $FF
RAM:BD26 FF                          .BYTE $FF
RAM:BD27 FF                          .BYTE $FF
RAM:BD28 FF                          .BYTE $FF
RAM:BD29 FF                          .BYTE $FF
RAM:BD2A FF                          .BYTE $FF
RAM:BD2B FF                          .BYTE $FF
RAM:BD2C FF                          .BYTE $FF
RAM:BD2D FF                          .BYTE $FF
RAM:BD2E FF                          .BYTE $FF
RAM:BD2F FF                          .BYTE $FF
RAM:BD30 FF                          .BYTE $FF
RAM:BD31 FF                          .BYTE $FF
RAM:BD32 FF                          .BYTE $FF
RAM:BD33 FF                          .BYTE $FF
RAM:BD34 FF                          .BYTE $FF
RAM:BD35 FF                          .BYTE $FF
RAM:BD36 FF                          .BYTE $FF
RAM:BD37 FF                          .BYTE $FF
RAM:BD38 FF                          .BYTE $FF
RAM:BD39 FF                          .BYTE $FF
RAM:BD3A FF                          .BYTE $FF
RAM:BD3B FF                          .BYTE $FF
RAM:BD3C FF                          .BYTE $FF
RAM:BD3D FF                          .BYTE $FF
RAM:BD3E FF                          .BYTE $FF
RAM:BD3F FF                          .BYTE $FF
RAM:BD40 FF                          .BYTE $FF
RAM:BD41 FF                          .BYTE $FF
RAM:BD42 FF                          .BYTE $FF
RAM:BD43 FF                          .BYTE $FF
RAM:BD44 FF                          .BYTE $FF
RAM:BD45 FF                          .BYTE $FF
RAM:BD46 FF                          .BYTE $FF
RAM:BD47 FF                          .BYTE $FF
RAM:BD48 FF                          .BYTE $FF
RAM:BD49 FF                          .BYTE $FF
RAM:BD4A FF                          .BYTE $FF
RAM:BD4B FF                          .BYTE $FF
RAM:BD4C FF                          .BYTE $FF
RAM:BD4D FF                          .BYTE $FF
RAM:BD4E FF                          .BYTE $FF
RAM:BD4F FF                          .BYTE $FF
RAM:BD50 FF                          .BYTE $FF
RAM:BD51 FF                          .BYTE $FF
RAM:BD52 FF                          .BYTE $FF
RAM:BD53 FF                          .BYTE $FF
RAM:BD54 FF                          .BYTE $FF
RAM:BD55 FF                          .BYTE $FF
RAM:BD56 FF                          .BYTE $FF
RAM:BD57 FF                          .BYTE $FF
RAM:BD58 FF                          .BYTE $FF
RAM:BD59 FF                          .BYTE $FF
RAM:BD5A FF                          .BYTE $FF
RAM:BD5B FF                          .BYTE $FF
RAM:BD5C FF                          .BYTE $FF
RAM:BD5D FF                          .BYTE $FF
RAM:BD5E FF                          .BYTE $FF
RAM:BD5F FF                          .BYTE $FF
RAM:BD60 FF                          .BYTE $FF
RAM:BD61 FF                          .BYTE $FF
RAM:BD62 FF                          .BYTE $FF
RAM:BD63 FF                          .BYTE $FF
RAM:BD64 FF                          .BYTE $FF
RAM:BD65 FF                          .BYTE $FF
RAM:BD66 FF                          .BYTE $FF
RAM:BD67 FF                          .BYTE $FF
RAM:BD68 FF                          .BYTE $FF
RAM:BD69 FF                          .BYTE $FF
RAM:BD6A FF                          .BYTE $FF
RAM:BD6B FF                          .BYTE $FF
RAM:BD6C FF                          .BYTE $FF
RAM:BD6D FF                          .BYTE $FF
RAM:BD6E FF                          .BYTE $FF
RAM:BD6F FF                          .BYTE $FF
RAM:BD70 FF                          .BYTE $FF
RAM:BD71 FF                          .BYTE $FF
RAM:BD72 FF                          .BYTE $FF
RAM:BD73 FF                          .BYTE $FF
RAM:BD74 FF                          .BYTE $FF
RAM:BD75 FF                          .BYTE $FF
RAM:BD76 FF                          .BYTE $FF
RAM:BD77 FF                          .BYTE $FF
RAM:BD78 FF                          .BYTE $FF
RAM:BD79 FF                          .BYTE $FF
RAM:BD7A FF                          .BYTE $FF
RAM:BD7B FF                          .BYTE $FF
RAM:BD7C FF                          .BYTE $FF
RAM:BD7D FF                          .BYTE $FF
RAM:BD7E FF                          .BYTE $FF
RAM:BD7F FF                          .BYTE $FF
RAM:BD80 FF                          .BYTE $FF
RAM:BD81 FF                          .BYTE $FF
RAM:BD82 FF                          .BYTE $FF
RAM:BD83 FF                          .BYTE $FF
RAM:BD84 FF                          .BYTE $FF
RAM:BD85 FF                          .BYTE $FF
RAM:BD86 FF                          .BYTE $FF
RAM:BD87 FF                          .BYTE $FF
RAM:BD88 FF                          .BYTE $FF
RAM:BD89 FF                          .BYTE $FF
RAM:BD8A FF                          .BYTE $FF
RAM:BD8B FF                          .BYTE $FF
RAM:BD8C FF                          .BYTE $FF
RAM:BD8D FF                          .BYTE $FF
RAM:BD8E FF                          .BYTE $FF
RAM:BD8F FF                          .BYTE $FF
RAM:BD90 FF                          .BYTE $FF
RAM:BD91 FF                          .BYTE $FF
RAM:BD92 FF                          .BYTE $FF
RAM:BD93 FF                          .BYTE $FF
RAM:BD94 FF                          .BYTE $FF
RAM:BD95 FF                          .BYTE $FF
RAM:BD96 FF                          .BYTE $FF
RAM:BD97 FF                          .BYTE $FF
RAM:BD98 FF                          .BYTE $FF
RAM:BD99 FF                          .BYTE $FF
RAM:BD9A FF                          .BYTE $FF
RAM:BD9B FF                          .BYTE $FF
RAM:BD9C FF                          .BYTE $FF
RAM:BD9D FF                          .BYTE $FF
RAM:BD9E FF                          .BYTE $FF
RAM:BD9F FF                          .BYTE $FF
RAM:BDA0 FF                          .BYTE $FF
RAM:BDA1 FF                          .BYTE $FF
RAM:BDA2 FF                          .BYTE $FF
RAM:BDA3 FF                          .BYTE $FF
RAM:BDA4 FF                          .BYTE $FF
RAM:BDA5 FF                          .BYTE $FF
RAM:BDA6 FF                          .BYTE $FF
RAM:BDA7 FF                          .BYTE $FF
RAM:BDA8 FF                          .BYTE $FF
RAM:BDA9 FF                          .BYTE $FF
RAM:BDAA FF                          .BYTE $FF
RAM:BDAB FF                          .BYTE $FF
RAM:BDAC FF                          .BYTE $FF
RAM:BDAD FF                          .BYTE $FF
RAM:BDAE FF                          .BYTE $FF
RAM:BDAF FF                          .BYTE $FF
RAM:BDB0 FF                          .BYTE $FF
RAM:BDB1 FF                          .BYTE $FF
RAM:BDB2 FF                          .BYTE $FF
RAM:BDB3 FF                          .BYTE $FF
RAM:BDB4 FF                          .BYTE $FF
RAM:BDB5 FF                          .BYTE $FF
RAM:BDB6 FF                          .BYTE $FF
RAM:BDB7 FF                          .BYTE $FF
RAM:BDB8 FF                          .BYTE $FF
RAM:BDB9 FF                          .BYTE $FF
RAM:BDBA FF                          .BYTE $FF
RAM:BDBB FF                          .BYTE $FF
RAM:BDBC FF                          .BYTE $FF
RAM:BDBD FF                          .BYTE $FF
RAM:BDBE FF                          .BYTE $FF
RAM:BDBF FF                          .BYTE $FF
RAM:BDC0 FF                          .BYTE $FF
RAM:BDC1 FF                          .BYTE $FF
RAM:BDC2 FF                          .BYTE $FF
RAM:BDC3 FF                          .BYTE $FF
RAM:BDC4 FF                          .BYTE $FF
RAM:BDC5 FF                          .BYTE $FF
RAM:BDC6 FF                          .BYTE $FF
RAM:BDC7 FF                          .BYTE $FF
RAM:BDC8 FF                          .BYTE $FF
RAM:BDC9 FF                          .BYTE $FF
RAM:BDCA FF                          .BYTE $FF
RAM:BDCB FF                          .BYTE $FF
RAM:BDCC FF                          .BYTE $FF
RAM:BDCD FF                          .BYTE $FF
RAM:BDCE FF                          .BYTE $FF
RAM:BDCF FF                          .BYTE $FF
RAM:BDD0 FF                          .BYTE $FF
RAM:BDD1 FF                          .BYTE $FF
RAM:BDD2 FF                          .BYTE $FF
RAM:BDD3 FF                          .BYTE $FF
RAM:BDD4 FF                          .BYTE $FF
RAM:BDD5 FF                          .BYTE $FF
RAM:BDD6 FF                          .BYTE $FF
RAM:BDD7 FF                          .BYTE $FF
RAM:BDD8 FF                          .BYTE $FF
RAM:BDD9 FF                          .BYTE $FF
RAM:BDDA FF                          .BYTE $FF
RAM:BDDB FF                          .BYTE $FF
RAM:BDDC FF                          .BYTE $FF
RAM:BDDD FF                          .BYTE $FF
RAM:BDDE FF                          .BYTE $FF
RAM:BDDF FF                          .BYTE $FF
RAM:BDE0 FF                          .BYTE $FF
RAM:BDE1 FF                          .BYTE $FF
RAM:BDE2 FF                          .BYTE $FF
RAM:BDE3 FF                          .BYTE $FF
RAM:BDE4 FF                          .BYTE $FF
RAM:BDE5 FF                          .BYTE $FF
RAM:BDE6 FF                          .BYTE $FF
RAM:BDE7 FF                          .BYTE $FF
RAM:BDE8 FF                          .BYTE $FF
RAM:BDE9 FF                          .BYTE $FF
RAM:BDEA FF                          .BYTE $FF
RAM:BDEB FF                          .BYTE $FF
RAM:BDEC FF                          .BYTE $FF
RAM:BDED FF                          .BYTE $FF
RAM:BDEE FF                          .BYTE $FF
RAM:BDEF FF                          .BYTE $FF
RAM:BDF0 FF                          .BYTE $FF
RAM:BDF1 FF                          .BYTE $FF
RAM:BDF2 FF                          .BYTE $FF
RAM:BDF3 FF                          .BYTE $FF
RAM:BDF4 FF                          .BYTE $FF
RAM:BDF5 FF                          .BYTE $FF
RAM:BDF6 FF                          .BYTE $FF
RAM:BDF7 FF                          .BYTE $FF
RAM:BDF8 FF                          .BYTE $FF
RAM:BDF9 FF                          .BYTE $FF
RAM:BDFA FF                          .BYTE $FF
RAM:BDFB FF                          .BYTE $FF
RAM:BDFC FF                          .BYTE $FF
RAM:BDFD FF                          .BYTE $FF
RAM:BDFE FF                          .BYTE $FF
RAM:BDFF FF                          .BYTE $FF
RAM:BE00 FF                          .BYTE $FF
RAM:BE01 FF                          .BYTE $FF
RAM:BE02 FF                          .BYTE $FF
RAM:BE03 FF                          .BYTE $FF
RAM:BE04 FF                          .BYTE $FF
RAM:BE05 FF                          .BYTE $FF
RAM:BE06 FF                          .BYTE $FF
RAM:BE07 FF                          .BYTE $FF
RAM:BE08 FF                          .BYTE $FF
RAM:BE09 FF                          .BYTE $FF
RAM:BE0A FF                          .BYTE $FF
RAM:BE0B FF                          .BYTE $FF
RAM:BE0C FF                          .BYTE $FF
RAM:BE0D FF                          .BYTE $FF
RAM:BE0E FF                          .BYTE $FF
RAM:BE0F FF                          .BYTE $FF
RAM:BE10 FF                          .BYTE $FF
RAM:BE11 FF                          .BYTE $FF
RAM:BE12 FF                          .BYTE $FF
RAM:BE13 FF                          .BYTE $FF
RAM:BE14 FF                          .BYTE $FF
RAM:BE15 FF                          .BYTE $FF
RAM:BE16 FF                          .BYTE $FF
RAM:BE17 FF                          .BYTE $FF
RAM:BE18 FF                          .BYTE $FF
RAM:BE19 FF                          .BYTE $FF
RAM:BE1A FF                          .BYTE $FF
RAM:BE1B FF                          .BYTE $FF
RAM:BE1C FF                          .BYTE $FF
RAM:BE1D FF                          .BYTE $FF
RAM:BE1E FF                          .BYTE $FF
RAM:BE1F FF                          .BYTE $FF
RAM:BE20 FF                          .BYTE $FF
RAM:BE21 FF                          .BYTE $FF
RAM:BE22 FF                          .BYTE $FF
RAM:BE23 FF                          .BYTE $FF
RAM:BE24 FF                          .BYTE $FF
RAM:BE25 FF                          .BYTE $FF
RAM:BE26 FF                          .BYTE $FF
RAM:BE27 FF                          .BYTE $FF
RAM:BE28 FF                          .BYTE $FF
RAM:BE29 FF                          .BYTE $FF
RAM:BE2A FF                          .BYTE $FF
RAM:BE2B FF                          .BYTE $FF
RAM:BE2C FF                          .BYTE $FF
RAM:BE2D FF                          .BYTE $FF
RAM:BE2E FF                          .BYTE $FF
RAM:BE2F FF                          .BYTE $FF
RAM:BE30 FF                          .BYTE $FF
RAM:BE31 FF                          .BYTE $FF
RAM:BE32 FF                          .BYTE $FF
RAM:BE33 FF                          .BYTE $FF
RAM:BE34 FF                          .BYTE $FF
RAM:BE35 FF                          .BYTE $FF
RAM:BE36 FF                          .BYTE $FF
RAM:BE37 FF                          .BYTE $FF
RAM:BE38 FF                          .BYTE $FF
RAM:BE39 FF                          .BYTE $FF
RAM:BE3A FF                          .BYTE $FF
RAM:BE3B FF                          .BYTE $FF
RAM:BE3C FF                          .BYTE $FF
RAM:BE3D FF                          .BYTE $FF
RAM:BE3E FF                          .BYTE $FF
RAM:BE3F FF                          .BYTE $FF
RAM:BE40 FF                          .BYTE $FF
RAM:BE41 FF                          .BYTE $FF
RAM:BE42 FF                          .BYTE $FF
RAM:BE43 FF                          .BYTE $FF
RAM:BE44 FF                          .BYTE $FF
RAM:BE45 FF                          .BYTE $FF
RAM:BE46 FF                          .BYTE $FF
RAM:BE47 FF                          .BYTE $FF
RAM:BE48 FF                          .BYTE $FF
RAM:BE49 FF                          .BYTE $FF
RAM:BE4A FF                          .BYTE $FF
RAM:BE4B FF                          .BYTE $FF
RAM:BE4C FF                          .BYTE $FF
RAM:BE4D FF                          .BYTE $FF
RAM:BE4E FF                          .BYTE $FF
RAM:BE4F FF                          .BYTE $FF
RAM:BE50 FF                          .BYTE $FF
RAM:BE51 FF                          .BYTE $FF
RAM:BE52 FF                          .BYTE $FF
RAM:BE53 FF                          .BYTE $FF
RAM:BE54 FF                          .BYTE $FF
RAM:BE55 FF                          .BYTE $FF
RAM:BE56 FF                          .BYTE $FF
RAM:BE57 FF                          .BYTE $FF
RAM:BE58 FF                          .BYTE $FF
RAM:BE59 FF                          .BYTE $FF
RAM:BE5A FF                          .BYTE $FF
RAM:BE5B FF                          .BYTE $FF
RAM:BE5C FF                          .BYTE $FF
RAM:BE5D FF                          .BYTE $FF
RAM:BE5E FF                          .BYTE $FF
RAM:BE5F FF                          .BYTE $FF
RAM:BE60 FF                          .BYTE $FF
RAM:BE61 FF                          .BYTE $FF
RAM:BE62 FF                          .BYTE $FF
RAM:BE63 FF                          .BYTE $FF
RAM:BE64 FF                          .BYTE $FF
RAM:BE65 FF                          .BYTE $FF
RAM:BE66 FF                          .BYTE $FF
RAM:BE67 FF                          .BYTE $FF
RAM:BE68 FF                          .BYTE $FF
RAM:BE69 FF                          .BYTE $FF
RAM:BE6A FF                          .BYTE $FF
RAM:BE6B FF                          .BYTE $FF
RAM:BE6C FF                          .BYTE $FF
RAM:BE6D FF                          .BYTE $FF
RAM:BE6E FF                          .BYTE $FF
RAM:BE6F FF                          .BYTE $FF
RAM:BE70 FF                          .BYTE $FF
RAM:BE71 FF                          .BYTE $FF
RAM:BE72 FF                          .BYTE $FF
RAM:BE73 FF                          .BYTE $FF
RAM:BE74 FF                          .BYTE $FF
RAM:BE75 FF                          .BYTE $FF
RAM:BE76 FF                          .BYTE $FF
RAM:BE77 FF                          .BYTE $FF
RAM:BE78 FF                          .BYTE $FF
RAM:BE79 FF                          .BYTE $FF
RAM:BE7A FF                          .BYTE $FF
RAM:BE7B FF                          .BYTE $FF
RAM:BE7C FF                          .BYTE $FF
RAM:BE7D FF                          .BYTE $FF
RAM:BE7E FF                          .BYTE $FF
RAM:BE7F FF                          .BYTE $FF
RAM:BE80 FF                          .BYTE $FF
RAM:BE81 FF                          .BYTE $FF
RAM:BE82 FF                          .BYTE $FF
RAM:BE83 FF                          .BYTE $FF
RAM:BE84 FF                          .BYTE $FF
RAM:BE85 FF                          .BYTE $FF
RAM:BE86 FF                          .BYTE $FF
RAM:BE87 FF                          .BYTE $FF
RAM:BE88 FF                          .BYTE $FF
RAM:BE89 FF                          .BYTE $FF
RAM:BE8A FF                          .BYTE $FF
RAM:BE8B FF                          .BYTE $FF
RAM:BE8C FF                          .BYTE $FF
RAM:BE8D FF                          .BYTE $FF
RAM:BE8E FF                          .BYTE $FF
RAM:BE8F FF                          .BYTE $FF
RAM:BE90 FF                          .BYTE $FF
RAM:BE91 FF                          .BYTE $FF
RAM:BE92 FF                          .BYTE $FF
RAM:BE93 FF                          .BYTE $FF
RAM:BE94 FF                          .BYTE $FF
RAM:BE95 FF                          .BYTE $FF
RAM:BE96 FF                          .BYTE $FF
RAM:BE97 FF                          .BYTE $FF
RAM:BE98 FF                          .BYTE $FF
RAM:BE99 FF                          .BYTE $FF
RAM:BE9A FF                          .BYTE $FF
RAM:BE9B FF                          .BYTE $FF
RAM:BE9C FF                          .BYTE $FF
RAM:BE9D FF                          .BYTE $FF
RAM:BE9E FF                          .BYTE $FF
RAM:BE9F FF                          .BYTE $FF
RAM:BEA0 FF                          .BYTE $FF
RAM:BEA1 FF                          .BYTE $FF
RAM:BEA2 FF                          .BYTE $FF
RAM:BEA3 FF                          .BYTE $FF
RAM:BEA4 FF                          .BYTE $FF
RAM:BEA5 FF                          .BYTE $FF
RAM:BEA6 FF                          .BYTE $FF
RAM:BEA7 FF                          .BYTE $FF
RAM:BEA8 FF                          .BYTE $FF
RAM:BEA9 FF                          .BYTE $FF
RAM:BEAA FF                          .BYTE $FF
RAM:BEAB FF                          .BYTE $FF
RAM:BEAC FF                          .BYTE $FF
RAM:BEAD FF                          .BYTE $FF
RAM:BEAE FF                          .BYTE $FF
RAM:BEAF FF                          .BYTE $FF
RAM:BEB0 FF                          .BYTE $FF
RAM:BEB1 FF                          .BYTE $FF
RAM:BEB2 FF                          .BYTE $FF
RAM:BEB3 FF                          .BYTE $FF
RAM:BEB4 FF                          .BYTE $FF
RAM:BEB5 FF                          .BYTE $FF
RAM:BEB6 FF                          .BYTE $FF
RAM:BEB7 FF                          .BYTE $FF
RAM:BEB8 FF                          .BYTE $FF
RAM:BEB9 FF                          .BYTE $FF
RAM:BEBA FF                          .BYTE $FF
RAM:BEBB FF                          .BYTE $FF
RAM:BEBC FF                          .BYTE $FF
RAM:BEBD FF                          .BYTE $FF
RAM:BEBE FF                          .BYTE $FF
RAM:BEBF FF                          .BYTE $FF
RAM:BEC0 FF                          .BYTE $FF
RAM:BEC1 FF                          .BYTE $FF
RAM:BEC2 FF                          .BYTE $FF
RAM:BEC3 FF                          .BYTE $FF
RAM:BEC4 FF                          .BYTE $FF
RAM:BEC5 FF                          .BYTE $FF
RAM:BEC6 FF                          .BYTE $FF
RAM:BEC7 FF                          .BYTE $FF
RAM:BEC8 FF                          .BYTE $FF
RAM:BEC9 FF                          .BYTE $FF
RAM:BECA FF                          .BYTE $FF
RAM:BECB FF                          .BYTE $FF
RAM:BECC FF                          .BYTE $FF
RAM:BECD FF                          .BYTE $FF
RAM:BECE FF                          .BYTE $FF
RAM:BECF FF                          .BYTE $FF
RAM:BED0 FF                          .BYTE $FF
RAM:BED1 FF                          .BYTE $FF
RAM:BED2 FF                          .BYTE $FF
RAM:BED3 FF                          .BYTE $FF
RAM:BED4 FF                          .BYTE $FF
RAM:BED5 FF                          .BYTE $FF
RAM:BED6 FF                          .BYTE $FF
RAM:BED7 FF                          .BYTE $FF
RAM:BED8 FF                          .BYTE $FF
RAM:BED9 FF                          .BYTE $FF
RAM:BEDA FF                          .BYTE $FF
RAM:BEDB FF                          .BYTE $FF
RAM:BEDC FF                          .BYTE $FF
RAM:BEDD FF                          .BYTE $FF
RAM:BEDE FF                          .BYTE $FF
RAM:BEDF FF                          .BYTE $FF
RAM:BEE0 FF                          .BYTE $FF
RAM:BEE1 FF                          .BYTE $FF
RAM:BEE2 FF                          .BYTE $FF
RAM:BEE3 FF                          .BYTE $FF
RAM:BEE4 FF                          .BYTE $FF
RAM:BEE5 FF                          .BYTE $FF
RAM:BEE6 FF                          .BYTE $FF
RAM:BEE7 FF                          .BYTE $FF
RAM:BEE8 FF                          .BYTE $FF
RAM:BEE9 FF                          .BYTE $FF
RAM:BEEA FF                          .BYTE $FF
RAM:BEEB FF                          .BYTE $FF
RAM:BEEC FF                          .BYTE $FF
RAM:BEED FF                          .BYTE $FF
RAM:BEEE FF                          .BYTE $FF
RAM:BEEF FF                          .BYTE $FF
RAM:BEF0 FF                          .BYTE $FF
RAM:BEF1 FF                          .BYTE $FF
RAM:BEF2 FF                          .BYTE $FF
RAM:BEF3 FF                          .BYTE $FF
RAM:BEF4 FF                          .BYTE $FF
RAM:BEF5 FF                          .BYTE $FF
RAM:BEF6 FF                          .BYTE $FF
RAM:BEF7 FF                          .BYTE $FF
RAM:BEF8 FF                          .BYTE $FF
RAM:BEF9 FF                          .BYTE $FF
RAM:BEFA FF                          .BYTE $FF
RAM:BEFB FF                          .BYTE $FF
RAM:BEFC FF                          .BYTE $FF
RAM:BEFD FF                          .BYTE $FF
RAM:BEFE FF                          .BYTE $FF
RAM:BEFF FF                          .BYTE $FF
RAM:BF00 FF                          .BYTE $FF
RAM:BF01 FF                          .BYTE $FF
RAM:BF02 FF                          .BYTE $FF
RAM:BF03 FF                          .BYTE $FF
RAM:BF04 FF                          .BYTE $FF
RAM:BF05 FF                          .BYTE $FF
RAM:BF06 FF                          .BYTE $FF
RAM:BF07 FF                          .BYTE $FF
RAM:BF08 FF                          .BYTE $FF
RAM:BF09 FF                          .BYTE $FF
RAM:BF0A FF                          .BYTE $FF
RAM:BF0B FF                          .BYTE $FF
RAM:BF0C FF                          .BYTE $FF
RAM:BF0D FF                          .BYTE $FF
RAM:BF0E FF                          .BYTE $FF
RAM:BF0F FF                          .BYTE $FF
RAM:BF10 FF                          .BYTE $FF
RAM:BF11 FF                          .BYTE $FF
RAM:BF12 FF                          .BYTE $FF
RAM:BF13 FF                          .BYTE $FF
RAM:BF14 FF                          .BYTE $FF
RAM:BF15 FF                          .BYTE $FF
RAM:BF16 FF                          .BYTE $FF
RAM:BF17 FF                          .BYTE $FF
RAM:BF18 FF                          .BYTE $FF
RAM:BF19 FF                          .BYTE $FF
RAM:BF1A FF                          .BYTE $FF
RAM:BF1B FF                          .BYTE $FF
RAM:BF1C FF                          .BYTE $FF
RAM:BF1D FF                          .BYTE $FF
RAM:BF1E FF                          .BYTE $FF
RAM:BF1F FF                          .BYTE $FF
RAM:BF20 FF                          .BYTE $FF
RAM:BF21 FF                          .BYTE $FF
RAM:BF22 FF                          .BYTE $FF
RAM:BF23 FF                          .BYTE $FF
RAM:BF24 FF                          .BYTE $FF
RAM:BF25 FF                          .BYTE $FF
RAM:BF26 FF                          .BYTE $FF
RAM:BF27 FF                          .BYTE $FF
RAM:BF28 FF                          .BYTE $FF
RAM:BF29 FF                          .BYTE $FF
RAM:BF2A FF                          .BYTE $FF
RAM:BF2B FF                          .BYTE $FF
RAM:BF2C FF                          .BYTE $FF
RAM:BF2D FF                          .BYTE $FF
RAM:BF2E FF                          .BYTE $FF
RAM:BF2F FF                          .BYTE $FF
RAM:BF30 FF                          .BYTE $FF
RAM:BF31 FF                          .BYTE $FF
RAM:BF32 FF                          .BYTE $FF
RAM:BF33 FF                          .BYTE $FF
RAM:BF34 FF                          .BYTE $FF
RAM:BF35 FF                          .BYTE $FF
RAM:BF36 FF                          .BYTE $FF
RAM:BF37 FF                          .BYTE $FF
RAM:BF38 FF                          .BYTE $FF
RAM:BF39 FF                          .BYTE $FF
RAM:BF3A FF                          .BYTE $FF
RAM:BF3B FF                          .BYTE $FF
RAM:BF3C FF                          .BYTE $FF
RAM:BF3D FF                          .BYTE $FF
RAM:BF3E FF                          .BYTE $FF
RAM:BF3F FF                          .BYTE $FF
RAM:BF40 FF                          .BYTE $FF
RAM:BF41 FF                          .BYTE $FF
RAM:BF42 FF                          .BYTE $FF
RAM:BF43 FF                          .BYTE $FF
RAM:BF44 FF                          .BYTE $FF
RAM:BF45 FF                          .BYTE $FF
RAM:BF46 FF                          .BYTE $FF
RAM:BF47 FF                          .BYTE $FF
RAM:BF48 FF                          .BYTE $FF
RAM:BF49 FF                          .BYTE $FF
RAM:BF4A FF                          .BYTE $FF
RAM:BF4B FF                          .BYTE $FF
RAM:BF4C FF                          .BYTE $FF
RAM:BF4D FF                          .BYTE $FF
RAM:BF4E FF                          .BYTE $FF
RAM:BF4F FF                          .BYTE $FF
RAM:BF50 FF                          .BYTE $FF
RAM:BF51 FF                          .BYTE $FF
RAM:BF52 FF                          .BYTE $FF
RAM:BF53 FF                          .BYTE $FF
RAM:BF54 FF                          .BYTE $FF
RAM:BF55 FF                          .BYTE $FF
RAM:BF56 FF                          .BYTE $FF
RAM:BF57 FF                          .BYTE $FF
RAM:BF58 FF                          .BYTE $FF
RAM:BF59 FF                          .BYTE $FF
RAM:BF5A FF                          .BYTE $FF
RAM:BF5B FF                          .BYTE $FF
RAM:BF5C FF                          .BYTE $FF
RAM:BF5D FF                          .BYTE $FF
RAM:BF5E FF                          .BYTE $FF
RAM:BF5F FF                          .BYTE $FF
RAM:BF60 FF                          .BYTE $FF
RAM:BF61 FF                          .BYTE $FF
RAM:BF62 FF                          .BYTE $FF
RAM:BF63 FF                          .BYTE $FF
RAM:BF64 FF                          .BYTE $FF
RAM:BF65 FF                          .BYTE $FF
RAM:BF66 FF                          .BYTE $FF
RAM:BF67 FF                          .BYTE $FF
RAM:BF68 FF                          .BYTE $FF
RAM:BF69 FF                          .BYTE $FF
RAM:BF6A FF                          .BYTE $FF
RAM:BF6B FF                          .BYTE $FF
RAM:BF6C FF                          .BYTE $FF
RAM:BF6D FF                          .BYTE $FF
RAM:BF6E FF                          .BYTE $FF
RAM:BF6F FF                          .BYTE $FF
RAM:BF70 FF                          .BYTE $FF
RAM:BF71 FF                          .BYTE $FF
RAM:BF72 FF                          .BYTE $FF
RAM:BF73 FF                          .BYTE $FF
RAM:BF74 FF                          .BYTE $FF
RAM:BF75 FF                          .BYTE $FF
RAM:BF76 FF                          .BYTE $FF
RAM:BF77 FF                          .BYTE $FF
RAM:BF78 FF                          .BYTE $FF
RAM:BF79 FF                          .BYTE $FF
RAM:BF7A FF                          .BYTE $FF
RAM:BF7B FF                          .BYTE $FF
RAM:BF7C FF                          .BYTE $FF
RAM:BF7D FF                          .BYTE $FF
RAM:BF7E FF                          .BYTE $FF
RAM:BF7F FF                          .BYTE $FF
RAM:BF80 FF                          .BYTE $FF
RAM:BF81 FF                          .BYTE $FF
RAM:BF82 FF                          .BYTE $FF
RAM:BF83 FF                          .BYTE $FF
RAM:BF84 FF                          .BYTE $FF
RAM:BF85 FF                          .BYTE $FF
RAM:BF86 FF                          .BYTE $FF
RAM:BF87 FF                          .BYTE $FF
RAM:BF88 FF                          .BYTE $FF
RAM:BF89 FF                          .BYTE $FF
RAM:BF8A FF                          .BYTE $FF
RAM:BF8B FF                          .BYTE $FF
RAM:BF8C FF                          .BYTE $FF
RAM:BF8D FF                          .BYTE $FF
RAM:BF8E FF                          .BYTE $FF
RAM:BF8F FF                          .BYTE $FF
RAM:BF90 FF                          .BYTE $FF
RAM:BF91 FF                          .BYTE $FF
RAM:BF92 FF                          .BYTE $FF
RAM:BF93 FF                          .BYTE $FF
RAM:BF94 FF                          .BYTE $FF
RAM:BF95 FF                          .BYTE $FF
RAM:BF96 FF                          .BYTE $FF
RAM:BF97 FF                          .BYTE $FF
RAM:BF98 FF                          .BYTE $FF
RAM:BF99 FF                          .BYTE $FF
RAM:BF9A FF                          .BYTE $FF
RAM:BF9B FF                          .BYTE $FF
RAM:BF9C FF                          .BYTE $FF
RAM:BF9D FF                          .BYTE $FF
RAM:BF9E FF                          .BYTE $FF
RAM:BF9F FF                          .BYTE $FF
RAM:BFA0 FF                          .BYTE $FF
RAM:BFA1 FF                          .BYTE $FF
RAM:BFA2 FF                          .BYTE $FF
RAM:BFA3 FF                          .BYTE $FF
RAM:BFA4 FF                          .BYTE $FF
RAM:BFA5 FF                          .BYTE $FF
RAM:BFA6 FF                          .BYTE $FF
RAM:BFA7 FF                          .BYTE $FF
RAM:BFA8 FF                          .BYTE $FF
RAM:BFA9 FF                          .BYTE $FF
RAM:BFAA FF                          .BYTE $FF
RAM:BFAB FF                          .BYTE $FF
RAM:BFAC FF                          .BYTE $FF
RAM:BFAD FF                          .BYTE $FF
RAM:BFAE FF                          .BYTE $FF
RAM:BFAF FF                          .BYTE $FF
RAM:BFB0 FF                          .BYTE $FF
RAM:BFB1 FF                          .BYTE $FF
RAM:BFB2 FF                          .BYTE $FF
RAM:BFB3 FF                          .BYTE $FF
RAM:BFB4 FF                          .BYTE $FF
RAM:BFB5 FF                          .BYTE $FF
RAM:BFB6 FF                          .BYTE $FF
RAM:BFB7 FF                          .BYTE $FF
RAM:BFB8 FF                          .BYTE $FF
RAM:BFB9 FF                          .BYTE $FF
RAM:BFBA FF                          .BYTE $FF
RAM:BFBB FF                          .BYTE $FF
RAM:BFBC FF                          .BYTE $FF
RAM:BFBD FF                          .BYTE $FF
RAM:BFBE FF                          .BYTE $FF
RAM:BFBF FF                          .BYTE $FF
RAM:BFC0 FF                          .BYTE $FF
RAM:BFC1 FF                          .BYTE $FF
RAM:BFC2 FF                          .BYTE $FF
RAM:BFC3 FF                          .BYTE $FF
RAM:BFC4 FF                          .BYTE $FF
RAM:BFC5 FF                          .BYTE $FF
RAM:BFC6 FF                          .BYTE $FF
RAM:BFC7 FF                          .BYTE $FF
RAM:BFC8 FF                          .BYTE $FF
RAM:BFC9 FF                          .BYTE $FF
RAM:BFCA FF                          .BYTE $FF
RAM:BFCB FF                          .BYTE $FF
RAM:BFCC FF                          .BYTE $FF
RAM:BFCD FF                          .BYTE $FF
RAM:BFCE FF                          .BYTE $FF
RAM:BFCF FF                          .BYTE $FF
RAM:BFD0 FF                          .BYTE $FF
RAM:BFD1 FF                          .BYTE $FF
RAM:BFD2 FF                          .BYTE $FF
RAM:BFD3 FF                          .BYTE $FF
RAM:BFD4 FF                          .BYTE $FF
RAM:BFD5 FF                          .BYTE $FF
RAM:BFD6 FF                          .BYTE $FF
RAM:BFD7 FF                          .BYTE $FF
RAM:BFD8 FF                          .BYTE $FF
RAM:BFD9 FF                          .BYTE $FF
RAM:BFDA FF                          .BYTE $FF
RAM:BFDB FF                          .BYTE $FF
RAM:BFDC FF                          .BYTE $FF
RAM:BFDD FF                          .BYTE $FF
RAM:BFDE FF                          .BYTE $FF
RAM:BFDF FF                          .BYTE $FF
RAM:BFE0 FF                          .BYTE $FF
RAM:BFE1 FF                          .BYTE $FF
RAM:BFE2 FF                          .BYTE $FF
RAM:BFE3 FF                          .BYTE $FF
RAM:BFE4 FF                          .BYTE $FF
RAM:BFE5 FF                          .BYTE $FF
RAM:BFE6 FF                          .BYTE $FF
RAM:BFE7 FF                          .BYTE $FF
RAM:BFE8 FF                          .BYTE $FF
RAM:BFE9 FF                          .BYTE $FF
RAM:BFEA FF                          .BYTE $FF
RAM:BFEB FF                          .BYTE $FF
RAM:BFEC FF                          .BYTE $FF
RAM:BFED FF                          .BYTE $FF
RAM:BFEE FF                          .BYTE $FF
RAM:BFEF FF                          .BYTE $FF
RAM:BFF0 FF                          .BYTE $FF
RAM:BFF1 FF                          .BYTE $FF
RAM:BFF2 FF                          .BYTE $FF
RAM:BFF3 FF                          .BYTE $FF
RAM:BFF4 FF                          .BYTE $FF
RAM:BFF5 FF                          .BYTE $FF
RAM:BFF6 FF                          .BYTE $FF
RAM:BFF7 FF                          .BYTE $FF
RAM:BFF8 FF                          .BYTE $FF
RAM:BFF9 FF                          .BYTE $FF
RAM:BFFA FF                          .BYTE $FF
RAM:BFFB FF                          .BYTE $FF
RAM:BFFC FF                          .BYTE $FF
RAM:BFFD FF                          .BYTE $FF
RAM:BFFE FF                          .BYTE $FF
RAM:BFFF FF                          .BYTE $FF
RAM:BFFF             ; end of 'RAM'
RAM:BFFF
ROM:C000             ; ===========================================================================
ROM:C000
ROM:C000             ; Segment type: Pure code
ROM:C000                             ;.segment ROM
ROM:C000                             * =  $C000
ROM:C000 00          KEYBOARD:       .BYTE 0                 ; DATA XREF: RAM:AC7C↑r
ROM:C000                                                     ; RAM:loc_AC88↑r ...
ROM:C001 00                          .BYTE   0
ROM:C002 00                          .BYTE   0
ROM:C003 00                          .BYTE   0
ROM:C004 00                          .BYTE   0
ROM:C005 00                          .BYTE   0
ROM:C006 00                          .BYTE   0
ROM:C007 00                          .BYTE   0
ROM:C008 00          BKDROP:         .BYTE 0                 ; DATA XREF: ROM:D5DD↓r
ROM:C009 00                          .BYTE   0
ROM:C00A 00                          .BYTE   0
ROM:C00B 00                          .BYTE   0
ROM:C00C 00                          .BYTE   0
ROM:C00D 00                          .BYTE   0
ROM:C00E 00                          .BYTE   0
ROM:C00F 00                          .BYTE   0
ROM:C010 00          KEYSTRB:        .BYTE 0                 ; DATA XREF: RAM:AC85↑w
ROM:C010                                                     ; RAM:AC8F↑w ...
ROM:C011 00                          .BYTE   0
ROM:C012 00                          .BYTE   0
ROM:C013 00                          .BYTE   0
ROM:C014 00                          .BYTE   0
ROM:C015 00                          .BYTE   0
ROM:C016 00                          .BYTE   0
ROM:C017 00                          .BYTE   0
ROM:C018 00          BKGRND:         .BYTE 0                 ; DATA XREF: ROM:D5DA↓r
ROM:C019 00                          .BYTE   0
ROM:C01A 00                          .BYTE   0
ROM:C01B 00                          .BYTE   0
ROM:C01C 00                          .BYTE   0
ROM:C01D 00                          .BYTE   0
ROM:C01E 00                          .BYTE   0
ROM:C01F 00                          .BYTE   0
ROM:C020 00          byte_C020:      .BYTE 0                 ; DATA XREF: ROM:loc_F927↓r
ROM:C021 00                          .BYTE   0
ROM:C022 00                          .BYTE   0
ROM:C023 00                          .BYTE   0
ROM:C024 00                          .BYTE   0
ROM:C025 00                          .BYTE   0
ROM:C026 00                          .BYTE   0
ROM:C027 00                          .BYTE   0
ROM:C028 00          TEXTCR:         .BYTE 0                 ; DATA XREF: ROM:D5D7↓r
ROM:C029 00                          .BYTE   0
ROM:C02A 00                          .BYTE   0
ROM:C02B 00                          .BYTE   0
ROM:C02C 00                          .BYTE   0
ROM:C02D 00                          .BYTE   0
ROM:C02E 00                          .BYTE   0
ROM:C02F 00                          .BYTE   0
ROM:C030 00          SPEAKER:        .BYTE 0                 ; DATA XREF: ROM:CA43↓r
ROM:C031 00                          .BYTE   0
ROM:C032 00                          .BYTE   0
ROM:C033 00                          .BYTE   0
ROM:C034 00                          .BYTE   0
ROM:C035 00                          .BYTE   0
ROM:C036 00                          .BYTE   0
ROM:C037 00                          .BYTE   0
ROM:C038 00                          .BYTE   0
ROM:C039 00                          .BYTE   0
ROM:C03A 00                          .BYTE   0
ROM:C03B 00                          .BYTE   0
ROM:C03C 00                          .BYTE   0
ROM:C03D 00                          .BYTE   0
ROM:C03E 00                          .BYTE   0
ROM:C03F 00                          .BYTE   0
ROM:C040 00                          .BYTE   0
ROM:C041 00                          .BYTE   0
ROM:C042 00                          .BYTE   0
ROM:C043 00                          .BYTE   0
ROM:C044 00                          .BYTE   0
ROM:C045 00                          .BYTE   0
ROM:C046 00                          .BYTE   0
ROM:C047 00                          .BYTE   0
ROM:C048 00                          .BYTE   0
ROM:C049 00                          .BYTE   0
ROM:C04A 00                          .BYTE   0
ROM:C04B 00                          .BYTE   0
ROM:C04C 00          VZTX40:         .BYTE 0                 ; DATA XREF: RAM:9550↑r
ROM:C04C                                                     ; RAM:955A↑r ...
ROM:C04C                                                     ; 40 char wide LORES modes, also switches to 1MHz
ROM:C04D 00          RGB_MODE:       .BYTE 0                 ; DATA XREF: RAM:9582↑r
ROM:C04D                                                     ; RAM:958C↑r
ROM:C04E 00          HIRES_MODE:     .BYTE 0                 ; DATA XREF: RAM:956E↑r
ROM:C04E                                                     ; RAM:9578↑r
ROM:C04F 00          VZTX80:         .BYTE 0                 ; DATA XREF: SETUP+1B↓r
ROM:C04F                                                     ; SETWIDTH+9↓w ...
ROM:C04F                                                     ; 80 char wide HIRES modes, also switches to 2MHz
ROM:C050 00          VZGRAPHICS:     .BYTE 0                 ; DATA XREF: HGR_ON+11↑r
ROM:C050                                                     ; Graphics mode on
ROM:C051 00          VZTEXT:         .BYTE 0                 ; DATA XREF: SETUP+18↓r
ROM:C051                                                     ; VZINIT:loc_FB39↓r ...
ROM:C051                                                     ; text mode on
ROM:C052 00          PURE:           .BYTE 0                 ; DATA XREF: LO_HGR_PG1_GFX+9↑r
ROM:C052                                                     ; LO_HGR_PG2_GFX+9↑r
ROM:C052                                                     ; pure text or graphics *only*
ROM:C053 00          MIXED:          .BYTE 0                 ; DATA XREF: LO_HGR_PG1_MIX+9↑r
ROM:C053                                                     ; mixed text and graphics
ROM:C054 00          VZPAGE1:        .BYTE 0                 ; DATA XREF: LO_HGR_PG1_MIX+6↑r
ROM:C054                                                     ; LO_HGR_PG1_GFX+6↑r ...
ROM:C054                                                     ; display primary page
ROM:C055 00          VZPAGE2:        .BYTE 0                 ; DATA XREF: LO_HGR_PG2_GFX+6↑r
ROM:C055                                                     ; display secondary page
ROM:C056 00          VZSELF:         .BYTE 0                 ; DATA XREF: HGR_ON+E↑r
ROM:C056                                                     ; SETUP+15↓r ...
ROM:C056                                                     ; disable RGB/DOUBLE RES MODE selection
ROM:C057 00                          .BYTE 0
ROM:C058 00                          .BYTE   0
ROM:C059 00                          .BYTE   0
ROM:C05A 00                          .BYTE   0
ROM:C05B 00                          .BYTE   0
ROM:C05C 00                          .BYTE   0
ROM:C05D 00                          .BYTE   0
ROM:C05E 00                          .BYTE   0
ROM:C05F 00                          .BYTE   0
ROM:C060 00          TAPEIN:         .BYTE 0                 ; DATA XREF: RT1BIT:RTBIT1↓r
ROM:C061 00          BIN_IN_FLG1:    .BYTE 0
ROM:C062 00          BIN_IN_FLG2:    .BYTE 0
ROM:C063 00          BIN_IN_FLG3:    .BYTE 0
ROM:C064 00          PADDL0:         .BYTE 0
ROM:C065 00          PADDL1:         .BYTE 0
ROM:C066 00          PADDL2:         .BYTE 0
ROM:C067 00          PADDL3:         .BYTE 0
ROM:C068 00          SONGEN:         .BYTE 0                 ; DATA XREF: AUDOUT↓w
ROM:C068                                                     ; Sound chip data register
ROM:C069 00                          .BYTE   0
ROM:C06A 00                          .BYTE   0
ROM:C06B 00                          .BYTE   0
ROM:C06C 00                          .BYTE   0
ROM:C06D 00                          .BYTE   0
ROM:C06E 00                          .BYTE   0
ROM:C06F 00                          .BYTE   0
ROM:C070 00          PDLRES:         .BYTE 0                 ; DATA XREF: MPREAD+7↓w
ROM:C070                                                     ; reset paddles (Analog clear)
ROM:C071 00                          .BYTE   0
ROM:C072 00                          .BYTE   0
ROM:C073 00                          .BYTE   0
ROM:C074 00                          .BYTE   0
ROM:C075 00                          .BYTE   0
ROM:C076 00                          .BYTE   0
ROM:C077 00                          .BYTE   0
ROM:C078 00          SYSTEM:         .BYTE 0                 ; DATA XREF: ROM:D584↓w
ROM:C079 00                          .BYTE   0
ROM:C07A 00                          .BYTE   0
ROM:C07B 00                          .BYTE   0
ROM:C07C 00          SBANK1:         .BYTE 0                 ; DATA XREF: WBANK+38↓w
ROM:C07C                                                     ; ROM:D587↓w
ROM:C07C                                                     ; $0000-$3FFF
ROM:C07D 00          SBANK2:         .BYTE 0                 ; DATA XREF: RAM:95A8↑w
ROM:C07D                                                     ; RAM:95CB↑w ...
ROM:C07D                                                     ; $4000-$7FFF
ROM:C07E 00          SBANK3:         .BYTE 0                 ; DATA XREF: ROM:D596↓w
ROM:C07E                                                     ; HRSEXT:loc_F1C7↓w ...
ROM:C07E                                                     ; $8000-$BFFF
ROM:C07F 00          SBANK4:         .BYTE 0                 ; DATA XREF: ROM:D581↓w
ROM:C07F                                                     ; $C000-$FFFF
ROM:C080 00                          .BYTE   0
ROM:C081 00                          .BYTE   0
ROM:C082 00                          .BYTE   0
ROM:C083 00                          .BYTE   0
ROM:C084 00                          .BYTE   0
ROM:C085 00                          .BYTE   0
ROM:C086 00                          .BYTE   0
ROM:C087 00                          .BYTE   0
ROM:C088 00                          .BYTE   0
ROM:C089 00                          .BYTE   0
ROM:C08A 00                          .BYTE   0
ROM:C08B 00                          .BYTE   0
ROM:C08C 00                          .BYTE   0
ROM:C08D 00                          .BYTE   0
ROM:C08E 00                          .BYTE   0
ROM:C08F 00                          .BYTE   0
ROM:C090 00                          .BYTE   0
ROM:C091 00                          .BYTE   0
ROM:C092 00                          .BYTE   0
ROM:C093 00                          .BYTE   0
ROM:C094 00                          .BYTE   0
ROM:C095 00                          .BYTE   0
ROM:C096 00                          .BYTE   0
ROM:C097 00                          .BYTE   0
ROM:C098 00                          .BYTE   0
ROM:C099 00                          .BYTE   0
ROM:C09A 00                          .BYTE   0
ROM:C09B 00                          .BYTE   0
ROM:C09C 00                          .BYTE   0
ROM:C09D 00                          .BYTE   0
ROM:C09E 00                          .BYTE   0
ROM:C09F 00                          .BYTE   0
ROM:C0A0 00                          .BYTE   0
ROM:C0A1 00                          .BYTE   0
ROM:C0A2 00                          .BYTE 0
ROM:C0A3 00                          .BYTE   0
ROM:C0A4 00                          .BYTE   0
ROM:C0A5 00                          .BYTE   0
ROM:C0A6 00                          .BYTE   0
ROM:C0A7 00                          .BYTE   0
ROM:C0A8 00                          .BYTE   0
ROM:C0A9 00                          .BYTE   0
ROM:C0AA 00                          .BYTE   0
ROM:C0AB 00                          .BYTE   0
ROM:C0AC 00                          .BYTE   0
ROM:C0AD 00                          .BYTE   0
ROM:C0AE 00                          .BYTE   0
ROM:C0AF 00                          .BYTE   0
ROM:C0B0 00                          .BYTE   0
ROM:C0B1 00                          .BYTE   0
ROM:C0B2 00                          .BYTE   0
ROM:C0B3 00                          .BYTE   0
ROM:C0B4 00                          .BYTE   0
ROM:C0B5 00                          .BYTE   0
ROM:C0B6 00                          .BYTE   0
ROM:C0B7 00                          .BYTE   0
ROM:C0B8 00                          .BYTE   0
ROM:C0B9 00                          .BYTE   0
ROM:C0BA 00                          .BYTE   0
ROM:C0BB 00                          .BYTE   0
ROM:C0BC 00                          .BYTE   0
ROM:C0BD 00                          .BYTE   0
ROM:C0BE 00                          .BYTE   0
ROM:C0BF 00                          .BYTE   0
ROM:C0C0 00                          .BYTE   0
ROM:C0C1 00                          .BYTE   0
ROM:C0C2 00                          .BYTE   0
ROM:C0C3 00                          .BYTE   0
ROM:C0C4 00                          .BYTE   0
ROM:C0C5 00                          .BYTE   0
ROM:C0C6 00                          .BYTE   0
ROM:C0C7 00                          .BYTE   0
ROM:C0C8 00                          .BYTE   0
ROM:C0C9 00                          .BYTE   0
ROM:C0CA 00                          .BYTE   0
ROM:C0CB 00                          .BYTE   0
ROM:C0CC 00                          .BYTE   0
ROM:C0CD 00                          .BYTE   0
ROM:C0CE 00                          .BYTE   0
ROM:C0CF 00                          .BYTE   0
ROM:C0D0 00                          .BYTE   0
ROM:C0D1 00                          .BYTE   0
ROM:C0D2 00                          .BYTE   0
ROM:C0D3 00                          .BYTE   0
ROM:C0D4 00                          .BYTE   0
ROM:C0D5 00                          .BYTE   0
ROM:C0D6 00                          .BYTE   0
ROM:C0D7 00                          .BYTE   0
ROM:C0D8 00                          .BYTE   0
ROM:C0D9 00                          .BYTE   0
ROM:C0DA 00                          .BYTE   0
ROM:C0DB 00                          .BYTE   0
ROM:C0DC 00                          .BYTE   0
ROM:C0DD 00                          .BYTE   0
ROM:C0DE 00                          .BYTE   0
ROM:C0DF 00                          .BYTE   0
ROM:C0E0 00                          .BYTE   0
ROM:C0E1 00                          .BYTE   0
ROM:C0E2 00                          .BYTE   0
ROM:C0E3 00                          .BYTE   0
ROM:C0E4 00                          .BYTE   0
ROM:C0E5 00                          .BYTE   0
ROM:C0E6 00                          .BYTE   0
ROM:C0E7 00                          .BYTE   0
ROM:C0E8 00                          .BYTE   0
ROM:C0E9 00                          .BYTE   0
ROM:C0EA 00                          .BYTE   0
ROM:C0EB 00                          .BYTE   0
ROM:C0EC 00                          .BYTE   0
ROM:C0ED 00                          .BYTE   0
ROM:C0EE 00                          .BYTE   0
ROM:C0EF 00                          .BYTE   0
ROM:C0F0 00                          .BYTE   0
ROM:C0F1 00                          .BYTE   0
ROM:C0F2 00                          .BYTE   0
ROM:C0F3 00                          .BYTE   0
ROM:C0F4 00                          .BYTE   0
ROM:C0F5 00                          .BYTE   0
ROM:C0F6 00                          .BYTE   0
ROM:C0F7 00                          .BYTE   0
ROM:C0F8 00                          .BYTE   0
ROM:C0F9 00                          .BYTE   0
ROM:C0FA 00                          .BYTE   0
ROM:C0FB 00                          .BYTE   0
ROM:C0FC 00                          .BYTE   0
ROM:C0FD 00                          .BYTE   0
ROM:C0FE 00                          .BYTE   0
ROM:C0FF 00                          .BYTE   0
ROM:C100             ; ---------------------------------------------------------------------------
ROM:C100
ROM:C100             SLOT1_PRINTER:                          ; CODE XREF: sub_AE9F+A↑p
ROM:C100                                                     ; DATA XREF: ROM:C14E↓w ...
ROM:C100 18                          CLC                     ; Slot 1 Printer driver entry point
ROM:C101 B0 38                       BCS     loc_C13B
ROM:C103 48                          PHA
ROM:C104 8A                          TXA
ROM:C105 48                          PHA
ROM:C106 98                          TYA
ROM:C107 48                          PHA
ROM:C108 A5 00                       LDA     byte_0
ROM:C10A 48                          PHA
ROM:C10B A5 01                       LDA     byte_1
ROM:C10D 48                          PHA
ROM:C10E A5 02                       LDA     byte_2
ROM:C110 48                          PHA
ROM:C111 BA                          TSX
ROM:C112 BD 06 01                    LDA     $106,X
ROM:C115 48                          PHA
ROM:C116 B0 32                       BCS     loc_C149+1
ROM:C118 A9 94                       LDA     #$94
ROM:C11A 8D F9 04                    STA     byte_4F9
ROM:C11D A9 97                       LDA     #$97
ROM:C11F 8D 79 05                    STA     byte_579
ROM:C122 A9 00                       LDA     #0
ROM:C124 8D F9 05                    STA     byte_5F9
ROM:C127 8D F9 06                    STA     byte_6F9
ROM:C12A A5 24                       LDA     CHORIZ
ROM:C12C 20 80 C1                    JSR     sub_C180
ROM:C12F A5 21                       LDA     WNDWTH
ROM:C131 8D 79 06                    STA     byte_679
ROM:C134 A9 01                       LDA     #1
ROM:C136 8D 79 07                    STA     byte_779
ROM:C139 A9 4B                       LDA     #$4B ; 'K'
ROM:C13B
ROM:C13B             loc_C13B:                               ; CODE XREF: ROM:C101↑j
ROM:C13B 8D 79 04                    STA     byte_479
ROM:C13E A9 02                       LDA     #2
ROM:C140 85 36                       STA     OUTSWL
ROM:C142 A9 C1                       LDA     #$C1
ROM:C144 85 37                       STA     OUTSWH
ROM:C146 68                          PLA
ROM:C147 EA                          NOP
ROM:C148 EA                          NOP
ROM:C149
ROM:C149             loc_C149:                               ; CODE XREF: ROM:C116↑j
ROM:C149 F0 68                       BEQ     loc_C1B3
ROM:C14B 8D FF CF                    STA     ROMCLEAR        ; disable all $C8XX rom extensions
ROM:C14E 8D 00 C1                    STA     SLOT1_PRINTER   ; ensure printer C8 code in place
ROM:C151 C9 91                       CMP     #$91
ROM:C153 D0 03                       BNE     loc_C158
ROM:C155 4C 03 C8                    JMP     SETUP+2
ROM:C158             ; ---------------------------------------------------------------------------
ROM:C158
ROM:C158             loc_C158:                               ; CODE XREF: ROM:C153↑j
ROM:C158 48                          PHA
ROM:C159 CD F9 04                    CMP     byte_4F9
ROM:C15C D0 0A                       BNE     loc_C168
ROM:C15E A5 32                       LDA     INVFLG
ROM:C160 49 C0                       EOR     #$C0
ROM:C162 85 32                       STA     INVFLG
ROM:C164 68                          PLA
ROM:C165 4C 06 C8                    JMP     loc_C804+2
ROM:C168             ; ---------------------------------------------------------------------------
ROM:C168
ROM:C168             loc_C168:                               ; CODE XREF: ROM:C15C↑j
ROM:C168 68                          PLA
ROM:C169 48                          PHA
ROM:C16A CD 79 05                    CMP     byte_579
ROM:C16D D0 0C                       BNE     loc_C17B
ROM:C16F AD F9 06                    LDA     byte_6F9
ROM:C172 49 FF                       EOR     #$FF
ROM:C174 8D F9 06                    STA     byte_6F9
ROM:C177 68                          PLA
ROM:C178 4C 06 C8                    JMP     loc_C804+2
ROM:C17B             ; ---------------------------------------------------------------------------
ROM:C17B
ROM:C17B             loc_C17B:                               ; CODE XREF: ROM:C16D↑j
ROM:C17B 68                          PLA
ROM:C17C 4C 00 C8                    JMP     locret_C800
ROM:C17C             ; ---------------------------------------------------------------------------
ROM:C17F 2F                          .BYTE $2F ; /
ROM:C180
ROM:C180             ; =============== S U B R O U T I N E =======================================
ROM:C180
ROM:C180
ROM:C180             sub_C180:                               ; CODE XREF: ROM:C12C↑p
ROM:C180 69 01                       ADC     #1
ROM:C182 8D F9 07                    STA     byte_7F9
ROM:C185 60                          RTS
ROM:C185             ; End of function sub_C180
ROM:C185
ROM:C185             ; ---------------------------------------------------------------------------
ROM:C186 00                          .BYTE   0
ROM:C187 30                          .BYTE $30 ; 0
ROM:C188 5A                          .BYTE $5A ; Z
ROM:C189 50                          .BYTE $50 ; P
ROM:C18A 33                          .BYTE $33 ; 3
ROM:C18B 31                          .BYTE $31 ; 1
ROM:C18C 20                          .BYTE $20
ROM:C18D 20                          .BYTE $20
ROM:C18E 00                          .BYTE   0
ROM:C18F 31                          .BYTE $31 ; 1
ROM:C190 5A                          .BYTE $5A ; Z
ROM:C191 50                          .BYTE $50 ; P
ROM:C192 33                          .BYTE $33 ; 3
ROM:C193 32                          .BYTE $32 ; 2
ROM:C194 20                          .BYTE $20
ROM:C195 20                          .BYTE $20
ROM:C196 00                          .BYTE   0
ROM:C197 32                          .BYTE $32 ; 2
ROM:C198 5A                          .BYTE $5A ; Z
ROM:C199 50                          .BYTE $50 ; P
ROM:C19A 33                          .BYTE $33 ; 3
ROM:C19B 33                          .BYTE $33 ; 3
ROM:C19C 20                          .BYTE $20
ROM:C19D 20                          .BYTE $20
ROM:C19E 00                          .BYTE   0
ROM:C19F 33                          .BYTE $33 ; 3
ROM:C1A0 5A                          .BYTE $5A ; Z
ROM:C1A1 50                          .BYTE $50 ; P
ROM:C1A2 33                          .BYTE $33 ; 3
ROM:C1A3 34                          .BYTE $34 ; 4
ROM:C1A4 20                          .BYTE $20
ROM:C1A5 20                          .BYTE $20
ROM:C1A6 00                          .BYTE   0
ROM:C1A7 34                          .BYTE $34 ; 4
ROM:C1A8 5A                          .BYTE $5A ; Z
ROM:C1A9 50                          .BYTE $50 ; P
ROM:C1AA 33                          .BYTE $33 ; 3
ROM:C1AB 35                          .BYTE $35 ; 5
ROM:C1AC 20                          .BYTE $20
ROM:C1AD 20                          .BYTE $20
ROM:C1AE 00                          .BYTE   0
ROM:C1AF 35                          .BYTE $35 ; 5
ROM:C1B0 5A                          .BYTE $5A ; Z
ROM:C1B1 50                          .BYTE $50 ; P
ROM:C1B2 33                          .BYTE $33 ; 3
ROM:C1B3             ; ---------------------------------------------------------------------------
ROM:C1B3
ROM:C1B3             loc_C1B3:                               ; CODE XREF: ROM:loc_C149↑j
ROM:C1B3 36 20                       ROL     $20,X
ROM:C1B5 20 00 36                    JSR     unk_3600
ROM:C1B8 5A                          NOP
ROM:C1B9 50 33                       BVC     loc_C1EE
ROM:C1BB 37 20                       RLA     $20,X
ROM:C1BD 20 00 37                    JSR     unk_3700
ROM:C1BD             ; ---------------------------------------------------------------------------
ROM:C1C0 DA          PRINTER_ACK:    .BYTE $DA
ROM:C1C1 D0          PRINTER_BUSY:   .BYTE $D0
ROM:C1C2 B3          HORIZSC:        .BYTE $B3               ; DATA XREF: SOUND:loc_A9C2↑r
ROM:C1C2                                                     ; SOUND:loc_A9C7↑r ...
ROM:C1C2                                                     ; Read Horizontal blank status
ROM:C1C3 B8          VERTSC:         .BYTE $B8               ; DATA XREF: HGR_ON↑r
ROM:C1C3                                                     ; GET_VBLANK_STATE↑r ...
ROM:C1C3                                                     ; Read Vertical blank status
ROM:C1C4 20          HZ50_60:        .BYTE $20
ROM:C1C5 20          TWOMHZ:         .BYTE $20               ; DATA XREF: ENCUR3+8↓r
ROM:C1C5                                                     ; MTSAVE+5↓r ...
ROM:C1C5                                                     ; read HIRES status (always runs at 2MHz)
ROM:C1C6 00                          .BYTE   0
ROM:C1C7 38                          .BYTE $38 ; 8
ROM:C1C8 DA                          .BYTE $DA
ROM:C1C9 D0                          .BYTE $D0
ROM:C1CA B3                          .BYTE $B3
ROM:C1CB B9                          .BYTE $B9
ROM:C1CC 20                          .BYTE $20
ROM:C1CD 20                          .BYTE $20
ROM:C1CE 00                          .BYTE   0
ROM:C1CF 39                          .BYTE $39 ; 9
ROM:C1D0 5A                          .BYTE $5A ; Z
ROM:C1D1 50                          .BYTE $50 ; P
ROM:C1D2 33                          .BYTE $33 ; 3
ROM:C1D3 41                          .BYTE $41 ; A
ROM:C1D4 20                          .BYTE $20
ROM:C1D5 20                          .BYTE $20
ROM:C1D6 00                          .BYTE   0
ROM:C1D7 3A                          .BYTE $3A ; :
ROM:C1D8 5A                          .BYTE $5A ; Z
ROM:C1D9 50                          .BYTE $50 ; P
ROM:C1DA 33                          .BYTE $33 ; 3
ROM:C1DB 42                          .BYTE $42 ; B
ROM:C1DC 20                          .BYTE $20
ROM:C1DD 20                          .BYTE $20
ROM:C1DE 00                          .BYTE   0
ROM:C1DF 3B                          .BYTE $3B ; ;
ROM:C1E0 5A                          .BYTE $5A ; Z
ROM:C1E1 50                          .BYTE $50 ; P
ROM:C1E2 33                          .BYTE $33 ; 3
ROM:C1E3 43                          .BYTE $43 ; C
ROM:C1E4 20                          .BYTE $20
ROM:C1E5 20                          .BYTE $20
ROM:C1E6 00                          .BYTE   0
ROM:C1E7 3C                          .BYTE $3C ; <
ROM:C1E8 5A                          .BYTE $5A ; Z
ROM:C1E9 50                          .BYTE $50 ; P
ROM:C1EA 33                          .BYTE $33 ; 3
ROM:C1EB 44                          .BYTE $44 ; D
ROM:C1EC 20                          .BYTE $20
ROM:C1ED 20                          .BYTE $20
ROM:C1EE             ; ---------------------------------------------------------------------------
ROM:C1EE
ROM:C1EE             loc_C1EE:                               ; CODE XREF: ROM:C1B9↑j
ROM:C1EE 00                          BRK
ROM:C1EE             ; ---------------------------------------------------------------------------
ROM:C1EF 3D                          .BYTE $3D ; =
ROM:C1F0 5A                          .BYTE $5A ; Z
ROM:C1F1 50                          .BYTE $50 ; P
ROM:C1F2 33                          .BYTE $33 ; 3
ROM:C1F3 45                          .BYTE $45 ; E
ROM:C1F4 20                          .BYTE $20
ROM:C1F5 20                          .BYTE $20
ROM:C1F6 00                          .BYTE   0
ROM:C1F7 3E                          .BYTE $3E ; >
ROM:C1F8 5A                          .BYTE $5A ; Z
ROM:C1F9 50                          .BYTE $50 ; P
ROM:C1FA 33                          .BYTE $33 ; 3
ROM:C1FB 46                          .BYTE $46 ; F
ROM:C1FC 20                          .BYTE $20
ROM:C1FD 20                          .BYTE $20
ROM:C1FE 00                          .BYTE   0
ROM:C1FF 3F                          .BYTE $3F ; ?
ROM:C200 FF                          .BYTE $FF
ROM:C201 FF                          .BYTE $FF
ROM:C202 FF                          .BYTE $FF
ROM:C203 FF                          .BYTE $FF
ROM:C204 FF                          .BYTE $FF
ROM:C205 FF                          .BYTE $FF
ROM:C206 FF                          .BYTE $FF
ROM:C207 FF                          .BYTE $FF
ROM:C208 FF                          .BYTE $FF
ROM:C209 FF                          .BYTE $FF
ROM:C20A FF                          .BYTE $FF
ROM:C20B FF                          .BYTE $FF
ROM:C20C FF                          .BYTE $FF
ROM:C20D FF                          .BYTE $FF
ROM:C20E FF                          .BYTE $FF
ROM:C20F FF                          .BYTE $FF
ROM:C210 FF                          .BYTE $FF
ROM:C211 FF                          .BYTE $FF
ROM:C212 FF                          .BYTE $FF
ROM:C213 FF                          .BYTE $FF
ROM:C214 FF                          .BYTE $FF
ROM:C215 FF                          .BYTE $FF
ROM:C216 FF                          .BYTE $FF
ROM:C217 FF                          .BYTE $FF
ROM:C218 FF                          .BYTE $FF
ROM:C219 FF                          .BYTE $FF
ROM:C21A FF                          .BYTE $FF
ROM:C21B FF                          .BYTE $FF
ROM:C21C FF                          .BYTE $FF
ROM:C21D FF                          .BYTE $FF
ROM:C21E FF                          .BYTE $FF
ROM:C21F FF                          .BYTE $FF
ROM:C220 FF                          .BYTE $FF
ROM:C221 FF                          .BYTE $FF
ROM:C222 FF                          .BYTE $FF
ROM:C223 FF                          .BYTE $FF
ROM:C224 FF                          .BYTE $FF
ROM:C225 FF                          .BYTE $FF
ROM:C226 FF                          .BYTE $FF
ROM:C227 FF                          .BYTE $FF
ROM:C228 FF                          .BYTE $FF
ROM:C229 FF                          .BYTE $FF
ROM:C22A FF                          .BYTE $FF
ROM:C22B FF                          .BYTE $FF
ROM:C22C FF                          .BYTE $FF
ROM:C22D FF                          .BYTE $FF
ROM:C22E FF                          .BYTE $FF
ROM:C22F FF                          .BYTE $FF
ROM:C230 FF                          .BYTE $FF
ROM:C231 FF                          .BYTE $FF
ROM:C232 FF                          .BYTE $FF
ROM:C233 FF                          .BYTE $FF
ROM:C234 FF                          .BYTE $FF
ROM:C235 FF                          .BYTE $FF
ROM:C236 FF                          .BYTE $FF
ROM:C237 FF                          .BYTE $FF
ROM:C238 FF                          .BYTE $FF
ROM:C239 FF                          .BYTE $FF
ROM:C23A FF                          .BYTE $FF
ROM:C23B FF                          .BYTE $FF
ROM:C23C FF                          .BYTE $FF
ROM:C23D FF                          .BYTE $FF
ROM:C23E FF                          .BYTE $FF
ROM:C23F FF                          .BYTE $FF
ROM:C240 FF                          .BYTE $FF
ROM:C241 FF                          .BYTE $FF
ROM:C242 FF                          .BYTE $FF
ROM:C243 FF                          .BYTE $FF
ROM:C244 FF                          .BYTE $FF
ROM:C245 FF                          .BYTE $FF
ROM:C246 FF                          .BYTE $FF
ROM:C247 FF                          .BYTE $FF
ROM:C248 FF                          .BYTE $FF
ROM:C249 FF                          .BYTE $FF
ROM:C24A FF                          .BYTE $FF
ROM:C24B FF                          .BYTE $FF
ROM:C24C FF                          .BYTE $FF
ROM:C24D FF                          .BYTE $FF
ROM:C24E FF                          .BYTE $FF
ROM:C24F FF                          .BYTE $FF
ROM:C250 FF                          .BYTE $FF
ROM:C251 FF                          .BYTE $FF
ROM:C252 FF                          .BYTE $FF
ROM:C253 FF                          .BYTE $FF
ROM:C254 FF                          .BYTE $FF
ROM:C255 FF                          .BYTE $FF
ROM:C256 FF                          .BYTE $FF
ROM:C257 FF                          .BYTE $FF
ROM:C258 FF                          .BYTE $FF
ROM:C259 FF                          .BYTE $FF
ROM:C25A FF                          .BYTE $FF
ROM:C25B FF                          .BYTE $FF
ROM:C25C FF                          .BYTE $FF
ROM:C25D FF                          .BYTE $FF
ROM:C25E FF                          .BYTE $FF
ROM:C25F FF                          .BYTE $FF
ROM:C260 FF                          .BYTE $FF
ROM:C261 FF                          .BYTE $FF
ROM:C262 FF                          .BYTE $FF
ROM:C263 FF                          .BYTE $FF
ROM:C264 FF                          .BYTE $FF
ROM:C265 FF                          .BYTE $FF
ROM:C266 FF                          .BYTE $FF
ROM:C267 FF                          .BYTE $FF
ROM:C268 FF                          .BYTE $FF
ROM:C269 FF                          .BYTE $FF
ROM:C26A FF                          .BYTE $FF
ROM:C26B FF                          .BYTE $FF
ROM:C26C FF                          .BYTE $FF
ROM:C26D FF                          .BYTE $FF
ROM:C26E FF                          .BYTE $FF
ROM:C26F FF                          .BYTE $FF
ROM:C270 FF                          .BYTE $FF
ROM:C271 FF                          .BYTE $FF
ROM:C272 FF                          .BYTE $FF
ROM:C273 FF                          .BYTE $FF
ROM:C274 FF                          .BYTE $FF
ROM:C275 FF                          .BYTE $FF
ROM:C276 FF                          .BYTE $FF
ROM:C277 FF                          .BYTE $FF
ROM:C278 FF                          .BYTE $FF
ROM:C279 FF                          .BYTE $FF
ROM:C27A FF                          .BYTE $FF
ROM:C27B FF                          .BYTE $FF
ROM:C27C FF                          .BYTE $FF
ROM:C27D FF                          .BYTE $FF
ROM:C27E FF                          .BYTE $FF
ROM:C27F FF                          .BYTE $FF
ROM:C280 FF                          .BYTE $FF
ROM:C281 FF                          .BYTE $FF
ROM:C282 FF                          .BYTE $FF
ROM:C283 FF                          .BYTE $FF
ROM:C284 FF                          .BYTE $FF
ROM:C285 FF                          .BYTE $FF
ROM:C286 FF                          .BYTE $FF
ROM:C287 FF                          .BYTE $FF
ROM:C288 FF                          .BYTE $FF
ROM:C289 FF                          .BYTE $FF
ROM:C28A FF                          .BYTE $FF
ROM:C28B FF                          .BYTE $FF
ROM:C28C FF                          .BYTE $FF
ROM:C28D FF                          .BYTE $FF
ROM:C28E FF                          .BYTE $FF
ROM:C28F FF                          .BYTE $FF
ROM:C290 FF                          .BYTE $FF
ROM:C291 FF                          .BYTE $FF
ROM:C292 FF                          .BYTE $FF
ROM:C293 FF                          .BYTE $FF
ROM:C294 FF                          .BYTE $FF
ROM:C295 FF                          .BYTE $FF
ROM:C296 FF                          .BYTE $FF
ROM:C297 FF                          .BYTE $FF
ROM:C298 FF                          .BYTE $FF
ROM:C299 FF                          .BYTE $FF
ROM:C29A FF                          .BYTE $FF
ROM:C29B FF                          .BYTE $FF
ROM:C29C FF                          .BYTE $FF
ROM:C29D FF                          .BYTE $FF
ROM:C29E FF                          .BYTE $FF
ROM:C29F FF                          .BYTE $FF
ROM:C2A0 FF                          .BYTE $FF
ROM:C2A1 FF                          .BYTE $FF
ROM:C2A2 FF                          .BYTE $FF
ROM:C2A3 FF                          .BYTE $FF
ROM:C2A4 FF                          .BYTE $FF
ROM:C2A5 FF                          .BYTE $FF
ROM:C2A6 FF                          .BYTE $FF
ROM:C2A7 FF                          .BYTE $FF
ROM:C2A8 FF                          .BYTE $FF
ROM:C2A9 FF                          .BYTE $FF
ROM:C2AA FF                          .BYTE $FF
ROM:C2AB FF                          .BYTE $FF
ROM:C2AC FF                          .BYTE $FF
ROM:C2AD FF                          .BYTE $FF
ROM:C2AE FF                          .BYTE $FF
ROM:C2AF FF                          .BYTE $FF
ROM:C2B0 FF                          .BYTE $FF
ROM:C2B1 FF                          .BYTE $FF
ROM:C2B2 FF                          .BYTE $FF
ROM:C2B3 FF                          .BYTE $FF
ROM:C2B4 FF                          .BYTE $FF
ROM:C2B5 FF                          .BYTE $FF
ROM:C2B6 FF                          .BYTE $FF
ROM:C2B7 FF                          .BYTE $FF
ROM:C2B8 FF                          .BYTE $FF
ROM:C2B9 FF                          .BYTE $FF
ROM:C2BA FF                          .BYTE $FF
ROM:C2BB FF                          .BYTE $FF
ROM:C2BC FF                          .BYTE $FF
ROM:C2BD FF                          .BYTE $FF
ROM:C2BE FF                          .BYTE $FF
ROM:C2BF FF                          .BYTE $FF
ROM:C2C0 FF                          .BYTE $FF
ROM:C2C1 FF                          .BYTE $FF
ROM:C2C2 FF                          .BYTE $FF
ROM:C2C3 FF                          .BYTE $FF
ROM:C2C4 FF                          .BYTE $FF
ROM:C2C5 FF                          .BYTE $FF
ROM:C2C6 FF                          .BYTE $FF
ROM:C2C7 FF                          .BYTE $FF
ROM:C2C8 FF                          .BYTE $FF
ROM:C2C9 FF                          .BYTE $FF
ROM:C2CA FF                          .BYTE $FF
ROM:C2CB FF                          .BYTE $FF
ROM:C2CC FF                          .BYTE $FF
ROM:C2CD FF                          .BYTE $FF
ROM:C2CE FF                          .BYTE $FF
ROM:C2CF FF                          .BYTE $FF
ROM:C2D0 FF                          .BYTE $FF
ROM:C2D1 FF                          .BYTE $FF
ROM:C2D2 FF                          .BYTE $FF
ROM:C2D3 FF                          .BYTE $FF
ROM:C2D4 FF                          .BYTE $FF
ROM:C2D5 FF                          .BYTE $FF
ROM:C2D6 FF                          .BYTE $FF
ROM:C2D7 FF                          .BYTE $FF
ROM:C2D8 FF                          .BYTE $FF
ROM:C2D9 FF                          .BYTE $FF
ROM:C2DA FF                          .BYTE $FF
ROM:C2DB FF                          .BYTE $FF
ROM:C2DC FF                          .BYTE $FF
ROM:C2DD FF                          .BYTE $FF
ROM:C2DE FF                          .BYTE $FF
ROM:C2DF FF                          .BYTE $FF
ROM:C2E0 FF                          .BYTE $FF
ROM:C2E1 FF                          .BYTE $FF
ROM:C2E2 FF                          .BYTE $FF
ROM:C2E3 FF                          .BYTE $FF
ROM:C2E4 FF                          .BYTE $FF
ROM:C2E5 FF                          .BYTE $FF
ROM:C2E6 FF                          .BYTE $FF
ROM:C2E7 FF                          .BYTE $FF
ROM:C2E8 FF                          .BYTE $FF
ROM:C2E9 FF                          .BYTE $FF
ROM:C2EA FF                          .BYTE $FF
ROM:C2EB FF                          .BYTE $FF
ROM:C2EC FF                          .BYTE $FF
ROM:C2ED FF                          .BYTE $FF
ROM:C2EE FF                          .BYTE $FF
ROM:C2EF FF                          .BYTE $FF
ROM:C2F0 FF                          .BYTE $FF
ROM:C2F1 FF                          .BYTE $FF
ROM:C2F2 FF                          .BYTE $FF
ROM:C2F3 FF                          .BYTE $FF
ROM:C2F4 FF                          .BYTE $FF
ROM:C2F5 FF                          .BYTE $FF
ROM:C2F6 FF                          .BYTE $FF
ROM:C2F7 FF                          .BYTE $FF
ROM:C2F8 FF                          .BYTE $FF
ROM:C2F9 FF                          .BYTE $FF
ROM:C2FA FF                          .BYTE $FF
ROM:C2FB FF                          .BYTE $FF
ROM:C2FC FF                          .BYTE $FF
ROM:C2FD FF                          .BYTE $FF
ROM:C2FE FF                          .BYTE $FF
ROM:C2FF FF                          .BYTE $FF
ROM:C300             ; ---------------------------------------------------------------------------
ROM:C300
ROM:C300             SLOT3_80COL:                            ; DATA XREF: sub_ADBA+7↑w
ROM:C300                                                     ; sub_ADBA+12↑w ...
ROM:C300 2C 0F C3                    BIT     IORTS           ; 80 column firmware entry point
ROM:C303 70 04                       BVS     ENTER           ; always
ROM:C305 38                          SEC
ROM:C305             ; ---------------------------------------------------------------------------
ROM:C306 90                          .BYTE $90
ROM:C307             ; ---------------------------------------------------------------------------
ROM:C307 18                          CLC
ROM:C308 B8                          CLV
ROM:C309
ROM:C309             ENTER:                                  ; CODE XREF: ROM:C303↑j
ROM:C309 8D FF CF                    STA     ROMCLEAR        ; disable all $C8XX rom extensions
ROM:C30C 20 10 C3                    JSR     ROAD            ; ensure $C800 80col firmware is present
ROM:C30F
ROM:C30F             IORTS:                                  ; DATA XREF: ROM:SLOT3_80COL↑r
ROM:C30F 60                          RTS
ROM:C310
ROM:C310             ; =============== S U B R O U T I N E =======================================
ROM:C310
ROM:C310
ROM:C310             ROAD:                                   ; CODE XREF: ROM:C30C↑p
ROM:C310
ROM:C310             ; FUNCTION CHUNK AT ROM:CC30 SIZE 00000091 BYTES
ROM:C310             ; FUNCTION CHUNK AT ROM:CE00 SIZE 00000029 BYTES
ROM:C310             ; FUNCTION CHUNK AT ROM:FD1B SIZE 0000000E BYTES
ROM:C310
ROM:C310 48                          PHA
ROM:C311 8A                          TXA
ROM:C312 48                          PHA
ROM:C313 98                          TYA
ROM:C314 48                          PHA
ROM:C315 08                          PHP
ROM:C316 BA                          TSX
ROM:C317 BD 04 01                    LDA     $104,X
ROM:C31A 28                          PLP
ROM:C31B 48                          PHA                     ; save character
ROM:C31C 70 03                       BVS     FIRST_80        ; first time entry
ROM:C31E
ROM:C31E             loc_C31E:
ROM:C31E 4C 30 CC                    JMP     IO
ROM:C321             ; ---------------------------------------------------------------------------
ROM:C321
ROM:C321             FIRST_80:                               ; CODE XREF: ROAD+C↑j
ROM:C321 AD 4A FB                    LDA     SIGNAT
ROM:C324 D0 2A                       BNE     WHO
ROM:C326 20 01 C8                    JSR     SETUP
ROM:C329 A9 00                       LDA     #0              ; BASIC
ROM:C32B 8D 7B 07                    STA     POWER           ; not PASCAL or CP/M
ROM:C32E A9 02                       LDA     #2
ROM:C330 85 C5                       STA     PBANK1          ; Save SBANK1 value : $0000-$3FFF
ROM:C332 A9 01                       LDA     #1
ROM:C334 85 C6                       STA     PBANK2          ; Save SBANK2 value : $4000-$7FFF
ROM:C336 A9 C3                       LDA     #$C3            ; set input/output vectors:
ROM:C338 85 39                       STA     INSWH
ROM:C33A 85 37                       STA     OUTSWH
ROM:C33C A9 4D                       LDA     #$4D ; 'M'      ; $C34A - output
ROM:C33E 85 38                       STA     INSWL
ROM:C340 A9 4A                       LDA     #$4A ; 'J'      ; $C34D - Input
ROM:C342 85 36                       STA     OUTSWL
ROM:C344 68                          PLA
ROM:C345 68                          PLA
ROM:C346 A8                          TAY
ROM:C347 68                          PLA
ROM:C348 AA                          TAX
ROM:C349 68                          PLA
ROM:C34A
ROM:C34A             OUTMED:
ROM:C34A 4C F0 FD                    JMP     COUT1
ROM:C34D             ; ---------------------------------------------------------------------------
ROM:C34D
ROM:C34D             INMED:
ROM:C34D 4C 1B FD                    JMP     KEYIN
ROM:C350             ; ---------------------------------------------------------------------------
ROM:C350
ROM:C350             WHO:                                    ; CODE XREF: ROAD+14↑j
ROM:C350 20 CA CC                    JSR     TUGGLE          ; Tuggle interchanges a set of ZERO page locs with Slot#3 locations
ROM:C350                                                     ; Allows use by different operating systems
ROM:C353 20 01 C8                    JSR     SETUP
ROM:C356 20 CA CC                    JSR     TUGGLE          ; Tuggle interchanges a set of ZERO page locs with Slot#3 locations
ROM:C356                                                     ; Allows use by different operating systems
ROM:C359 A9 C3                       LDA     #$C3            ; 80 column I/O vectors
ROM:C35B 85 39                       STA     INSWH
ROM:C35D 85 37                       STA     OUTSWH
ROM:C35F A9 05                       LDA     #5
ROM:C361 85 38                       STA     INSWL           ; $C305 - Input
ROM:C363 A9 07                       LDA     #7
ROM:C365 85 36                       STA     OUTSWL          ; $C307 - Output
ROM:C367 18                          CLC
ROM:C368 4C 30 CC                    JMP     IO
ROM:C368             ; End of function ROAD
ROM:C368
ROM:C368             ; ---------------------------------------------------------------------------
ROM:C36B 7B                          .BYTE $7B ; {
ROM:C36C 3D                          .BYTE $3D ; =
ROM:C36D F8                          .BYTE $F8
ROM:C36E             ; ---------------------------------------------------------------------------
ROM:C36E
ROM:C36E             For use by RS232 Interface
ROM:C36E
ROM:C36E             ICHRDIS:
ROM:C36E 08                          PHP
ROM:C36F 8D FF CF                    STA     ROMCLEAR        ; disable all $C8XX rom extensions
ROM:C372 20 54 CB                    JSR     CHARDISP        ; Y = Horizontal Offset
ROM:C372                                                     ; A = Character to display
ROM:C375 28                          PLP
ROM:C376 60                          RTS
ROM:C377             ; ---------------------------------------------------------------------------
ROM:C377
ROM:C377             IENCUR:
ROM:C377 08                          PHP
ROM:C378 8D FF CF                    STA     ROMCLEAR        ; disable all $C8XX rom extensions
ROM:C37B 20 A0 CB                    JSR     ENCUR           ; Enable Cursor
ROM:C37E 28                          PLP
ROM:C37F 60                          RTS
ROM:C37F             ; ---------------------------------------------------------------------------
ROM:C380 CD                          .BYTE $CD
ROM:C381 94                          .BYTE $94
ROM:C382 2B                          .BYTE $2B ; +
ROM:C383 7A                          .BYTE $7A ; z
ROM:C384 B7                          .BYTE $B7
ROM:C385 C2                          .BYTE $C2
ROM:C386 9C                          .BYTE $9C
ROM:C387 04                          .BYTE   4
ROM:C388 3A                          .BYTE $3A ; :
ROM:C389 CC                          .BYTE $CC
ROM:C38A 3E                          .BYTE $3E ; >
ROM:C38B B7                          .BYTE $B7
ROM:C38C C8                          .BYTE $C8
ROM:C38D 7B                          .BYTE $7B ; {
ROM:C38E B7                          .BYTE $B7
ROM:C38F 28                          .BYTE $28 ; (
ROM:C390 10                          .BYTE $10
ROM:C391 FE                          .BYTE $FE
ROM:C392 0A                          .BYTE  $A
ROM:C393 DC                          .BYTE $DC
ROM:C394 9C                          .BYTE $9C
ROM:C395 04                          .BYTE   4
ROM:C396 3A                          .BYTE $3A ; :
ROM:C397 F1                          .BYTE $F1
ROM:C398 3F                          .BYTE $3F ; ?
ROM:C399 FE                          .BYTE $FE
ROM:C39A 20                          .BYTE $20
ROM:C39B 20                          .BYTE $20
ROM:C39C 04                          .BYTE   4
ROM:C39D 7B                          .BYTE $7B ; {
ROM:C39E 32                          .BYTE $32 ; 2
ROM:C39F 12                          .BYTE $12
ROM:C3A0 3F                          .BYTE $3F ; ?
ROM:C3A1 CD                          .BYTE $CD
ROM:C3A2 F0                          .BYTE $F0
ROM:C3A3 1B                          .BYTE $1B
ROM:C3A4 CD                          .BYTE $CD
ROM:C3A5 46                          .BYTE $46 ; F
ROM:C3A6 04                          .BYTE   4
ROM:C3A7 C3                          .BYTE $C3
ROM:C3A8 24                          .BYTE $24 ; $
ROM:C3A9 1D                          .BYTE $1D
ROM:C3AA CD                          .BYTE $CD
ROM:C3AB 96                          .BYTE $96
ROM:C3AC 0E                          .BYTE  $E
ROM:C3AD C2                          .BYTE $C2
ROM:C3AE 9C                          .BYTE $9C
ROM:C3AF 04                          .BYTE   4
ROM:C3B0 F5                          .BYTE $F5
ROM:C3B1 3A                          .BYTE $3A ; :
ROM:C3B2 C9                          .BYTE $C9
ROM:C3B3 3F                          .BYTE $3F ; ?
ROM:C3B4 FE                          .BYTE $FE
ROM:C3B5 08                          .BYTE   8
ROM:C3B6 38                          .BYTE $38 ; 8
ROM:C3B7 05                          .BYTE   5
ROM:C3B8 CD                          .BYTE $CD
ROM:C3B9 C4                          .BYTE $C4
ROM:C3BA 04                          .BYTE   4
ROM:C3BB 3E                          .BYTE $3E ; >
ROM:C3BC 07                          .BYTE   7
ROM:C3BD 21                          .BYTE $21 ; !
ROM:C3BE C3                          .BYTE $C3
ROM:C3BF 3F                          .BYTE $3F ; ?
ROM:C3C0 77                          .BYTE $77 ; w
ROM:C3C1 23                          .BYTE $23 ; #
ROM:C3C2 22                          .BYTE $22 ; "
ROM:C3C3 1F                          .BYTE $1F
ROM:C3C4 3F                          .BYTE $3F ; ?
ROM:C3C5 3A                          .BYTE $3A ; :
ROM:C3C6 CC                          .BYTE $CC
ROM:C3C7 3E                          .BYTE $3E ; >
ROM:C3C8 B7                          .BYTE $B7
ROM:C3C9 0E                          .BYTE  $E
ROM:C3CA 03                          .BYTE   3
ROM:C3CB C4                          .BYTE $C4
ROM:C3CC 52                          .BYTE $52 ; R
ROM:C3CD 1E                          .BYTE $1E
ROM:C3CE F1                          .BYTE $F1
ROM:C3CF FE                          .BYTE $FE
ROM:C3D0 2C                          .BYTE $2C ; ,
ROM:C3D1 28                          .BYTE $28 ; (
ROM:C3D2 D7                          .BYTE $D7
ROM:C3D3 C9                          .BYTE $C9
ROM:C3D4 3A                          .BYTE $3A ; :
ROM:C3D5 0C                          .BYTE  $C
ROM:C3D6 3F                          .BYTE $3F ; ?
ROM:C3D7 B7                          .BYTE $B7
ROM:C3D8 C2                          .BYTE $C2
ROM:C3D9 BA                          .BYTE $BA
ROM:C3DA 04                          .BYTE   4
ROM:C3DB CD                          .BYTE $CD
ROM:C3DC 03                          .BYTE   3
ROM:C3DD 0F                          .BYTE  $F
ROM:C3DE 2A                          .BYTE $2A ; *
ROM:C3DF 26                          .BYTE $26 ; &
ROM:C3E0 3F                          .BYTE $3F ; ?
ROM:C3E1 2B                          .BYTE $2B ; +
ROM:C3E2 CD                          .BYTE $CD
ROM:C3E3 16                          .BYTE $16
ROM:C3E4 50                          .BYTE $50 ; P
ROM:C3E5 B7                          .BYTE $B7
ROM:C3E6 28                          .BYTE $28 ; (
ROM:C3E7 06                          .BYTE   6
ROM:C3E8 CD                          .BYTE $CD
ROM:C3E9 D9                          .BYTE $D9
ROM:C3EA 50                          .BYTE $50 ; P
ROM:C3EB C3                          .BYTE $C3
ROM:C3EC D3                          .BYTE $D3
ROM:C3ED 04                          .BYTE   4
ROM:C3EE 3D                          .BYTE $3D ; =
ROM:C3EF 32                          .BYTE $32 ; 2
ROM:C3F0 0C                          .BYTE  $C
ROM:C3F1 3F                          .BYTE $3F ; ?
ROM:C3F2 2A                          .BYTE $2A ; *
ROM:C3F3 26                          .BYTE $26 ; &
ROM:C3F4 3F                          .BYTE $3F ; ?
ROM:C3F5 7E                          .BYTE $7E ; ~
ROM:C3F6 23                          .BYTE $23 ; #
ROM:C3F7 22                          .BYTE $22 ; "
ROM:C3F8 26                          .BYTE $26 ; &
ROM:C3F9 3F                          .BYTE $3F ; ?
ROM:C3FA FE                          .BYTE $FE
ROM:C3FB 21                          .BYTE $21 ; !
ROM:C3FC 30                          .BYTE $30 ; 0
ROM:C3FD F4                          .BYTE $F4
ROM:C3FE C9                          .BYTE $C9
ROM:C3FF CD                          .BYTE $CD
ROM:C400 FF                          .BYTE $FF
ROM:C401 FF                          .BYTE $FF
ROM:C402 FF                          .BYTE $FF
ROM:C403 FF                          .BYTE $FF
ROM:C404 FF                          .BYTE $FF
ROM:C405 FF                          .BYTE $FF
ROM:C406 FF                          .BYTE $FF
ROM:C407 FF                          .BYTE $FF
ROM:C408 FF                          .BYTE $FF
ROM:C409 FF                          .BYTE $FF
ROM:C40A FF                          .BYTE $FF
ROM:C40B FF                          .BYTE $FF
ROM:C40C FF                          .BYTE $FF
ROM:C40D FF                          .BYTE $FF
ROM:C40E FF                          .BYTE $FF
ROM:C40F FF                          .BYTE $FF
ROM:C410 FF                          .BYTE $FF
ROM:C411 FF                          .BYTE $FF
ROM:C412 FF                          .BYTE $FF
ROM:C413 FF                          .BYTE $FF
ROM:C414 FF                          .BYTE $FF
ROM:C415 FF                          .BYTE $FF
ROM:C416 FF                          .BYTE $FF
ROM:C417 FF                          .BYTE $FF
ROM:C418 FF                          .BYTE $FF
ROM:C419 FF                          .BYTE $FF
ROM:C41A FF                          .BYTE $FF
ROM:C41B FF                          .BYTE $FF
ROM:C41C FF                          .BYTE $FF
ROM:C41D FF                          .BYTE $FF
ROM:C41E FF                          .BYTE $FF
ROM:C41F FF                          .BYTE $FF
ROM:C420 FF                          .BYTE $FF
ROM:C421 FF                          .BYTE $FF
ROM:C422 FF                          .BYTE $FF
ROM:C423 FF                          .BYTE $FF
ROM:C424 FF                          .BYTE $FF
ROM:C425 FF                          .BYTE $FF
ROM:C426 FF                          .BYTE $FF
ROM:C427 FF                          .BYTE $FF
ROM:C428 FF                          .BYTE $FF
ROM:C429 FF                          .BYTE $FF
ROM:C42A FF                          .BYTE $FF
ROM:C42B FF                          .BYTE $FF
ROM:C42C FF                          .BYTE $FF
ROM:C42D FF                          .BYTE $FF
ROM:C42E FF                          .BYTE $FF
ROM:C42F FF                          .BYTE $FF
ROM:C430 FF                          .BYTE $FF
ROM:C431 FF                          .BYTE $FF
ROM:C432 FF                          .BYTE $FF
ROM:C433 FF                          .BYTE $FF
ROM:C434 FF                          .BYTE $FF
ROM:C435 FF                          .BYTE $FF
ROM:C436 FF                          .BYTE $FF
ROM:C437 FF                          .BYTE $FF
ROM:C438 FF                          .BYTE $FF
ROM:C439 FF                          .BYTE $FF
ROM:C43A FF                          .BYTE $FF
ROM:C43B FF                          .BYTE $FF
ROM:C43C FF                          .BYTE $FF
ROM:C43D FF                          .BYTE $FF
ROM:C43E FF                          .BYTE $FF
ROM:C43F FF                          .BYTE $FF
ROM:C440 FF                          .BYTE $FF
ROM:C441 FF                          .BYTE $FF
ROM:C442 FF                          .BYTE $FF
ROM:C443 FF                          .BYTE $FF
ROM:C444 FF                          .BYTE $FF
ROM:C445 FF                          .BYTE $FF
ROM:C446 FF                          .BYTE $FF
ROM:C447 FF                          .BYTE $FF
ROM:C448 FF                          .BYTE $FF
ROM:C449 FF                          .BYTE $FF
ROM:C44A FF                          .BYTE $FF
ROM:C44B FF                          .BYTE $FF
ROM:C44C FF                          .BYTE $FF
ROM:C44D FF                          .BYTE $FF
ROM:C44E FF                          .BYTE $FF
ROM:C44F FF                          .BYTE $FF
ROM:C450 FF                          .BYTE $FF
ROM:C451 FF                          .BYTE $FF
ROM:C452 FF                          .BYTE $FF
ROM:C453 FF                          .BYTE $FF
ROM:C454 FF                          .BYTE $FF
ROM:C455 FF                          .BYTE $FF
ROM:C456 FF                          .BYTE $FF
ROM:C457 FF                          .BYTE $FF
ROM:C458 FF                          .BYTE $FF
ROM:C459 FF                          .BYTE $FF
ROM:C45A FF                          .BYTE $FF
ROM:C45B FF                          .BYTE $FF
ROM:C45C FF                          .BYTE $FF
ROM:C45D FF                          .BYTE $FF
ROM:C45E FF                          .BYTE $FF
ROM:C45F FF                          .BYTE $FF
ROM:C460 FF                          .BYTE $FF
ROM:C461 FF                          .BYTE $FF
ROM:C462 FF                          .BYTE $FF
ROM:C463 FF                          .BYTE $FF
ROM:C464 FF                          .BYTE $FF
ROM:C465 FF                          .BYTE $FF
ROM:C466 FF                          .BYTE $FF
ROM:C467 FF                          .BYTE $FF
ROM:C468 FF                          .BYTE $FF
ROM:C469 FF                          .BYTE $FF
ROM:C46A FF                          .BYTE $FF
ROM:C46B FF                          .BYTE $FF
ROM:C46C FF                          .BYTE $FF
ROM:C46D FF                          .BYTE $FF
ROM:C46E FF                          .BYTE $FF
ROM:C46F FF                          .BYTE $FF
ROM:C470 FF                          .BYTE $FF
ROM:C471 FF                          .BYTE $FF
ROM:C472 FF                          .BYTE $FF
ROM:C473 FF                          .BYTE $FF
ROM:C474 FF                          .BYTE $FF
ROM:C475 FF                          .BYTE $FF
ROM:C476 FF                          .BYTE $FF
ROM:C477 FF                          .BYTE $FF
ROM:C478 FF                          .BYTE $FF
ROM:C479 FF                          .BYTE $FF
ROM:C47A FF                          .BYTE $FF
ROM:C47B FF                          .BYTE $FF
ROM:C47C FF                          .BYTE $FF
ROM:C47D FF                          .BYTE $FF
ROM:C47E FF                          .BYTE $FF
ROM:C47F FF                          .BYTE $FF
ROM:C480 FF                          .BYTE $FF
ROM:C481 FF                          .BYTE $FF
ROM:C482 FF                          .BYTE $FF
ROM:C483 FF                          .BYTE $FF
ROM:C484 FF                          .BYTE $FF
ROM:C485 FF                          .BYTE $FF
ROM:C486 FF                          .BYTE $FF
ROM:C487 FF                          .BYTE $FF
ROM:C488 FF                          .BYTE $FF
ROM:C489 FF                          .BYTE $FF
ROM:C48A FF                          .BYTE $FF
ROM:C48B FF                          .BYTE $FF
ROM:C48C FF                          .BYTE $FF
ROM:C48D FF                          .BYTE $FF
ROM:C48E FF                          .BYTE $FF
ROM:C48F FF                          .BYTE $FF
ROM:C490 FF                          .BYTE $FF
ROM:C491 FF                          .BYTE $FF
ROM:C492 FF                          .BYTE $FF
ROM:C493 FF                          .BYTE $FF
ROM:C494 FF                          .BYTE $FF
ROM:C495 FF                          .BYTE $FF
ROM:C496 FF                          .BYTE $FF
ROM:C497 FF                          .BYTE $FF
ROM:C498 FF                          .BYTE $FF
ROM:C499 FF                          .BYTE $FF
ROM:C49A FF                          .BYTE $FF
ROM:C49B FF                          .BYTE $FF
ROM:C49C FF                          .BYTE $FF
ROM:C49D FF                          .BYTE $FF
ROM:C49E FF                          .BYTE $FF
ROM:C49F FF                          .BYTE $FF
ROM:C4A0 FF                          .BYTE $FF
ROM:C4A1 FF                          .BYTE $FF
ROM:C4A2 FF                          .BYTE $FF
ROM:C4A3 FF                          .BYTE $FF
ROM:C4A4 FF                          .BYTE $FF
ROM:C4A5 FF                          .BYTE $FF
ROM:C4A6 FF                          .BYTE $FF
ROM:C4A7 FF                          .BYTE $FF
ROM:C4A8 FF                          .BYTE $FF
ROM:C4A9 FF                          .BYTE $FF
ROM:C4AA FF                          .BYTE $FF
ROM:C4AB FF                          .BYTE $FF
ROM:C4AC FF                          .BYTE $FF
ROM:C4AD FF                          .BYTE $FF
ROM:C4AE FF                          .BYTE $FF
ROM:C4AF FF                          .BYTE $FF
ROM:C4B0 FF                          .BYTE $FF
ROM:C4B1 FF                          .BYTE $FF
ROM:C4B2 FF                          .BYTE $FF
ROM:C4B3 FF                          .BYTE $FF
ROM:C4B4 FF                          .BYTE $FF
ROM:C4B5 FF                          .BYTE $FF
ROM:C4B6 FF                          .BYTE $FF
ROM:C4B7 FF                          .BYTE $FF
ROM:C4B8 FF                          .BYTE $FF
ROM:C4B9 FF                          .BYTE $FF
ROM:C4BA FF                          .BYTE $FF
ROM:C4BB FF                          .BYTE $FF
ROM:C4BC FF                          .BYTE $FF
ROM:C4BD FF                          .BYTE $FF
ROM:C4BE FF                          .BYTE $FF
ROM:C4BF FF                          .BYTE $FF
ROM:C4C0 FF                          .BYTE $FF
ROM:C4C1 FF                          .BYTE $FF
ROM:C4C2 FF                          .BYTE $FF
ROM:C4C3 FF                          .BYTE $FF
ROM:C4C4 FF                          .BYTE $FF
ROM:C4C5 FF                          .BYTE $FF
ROM:C4C6 FF                          .BYTE $FF
ROM:C4C7 FF                          .BYTE $FF
ROM:C4C8 FF                          .BYTE $FF
ROM:C4C9 FF                          .BYTE $FF
ROM:C4CA FF                          .BYTE $FF
ROM:C4CB FF                          .BYTE $FF
ROM:C4CC FF                          .BYTE $FF
ROM:C4CD FF                          .BYTE $FF
ROM:C4CE FF                          .BYTE $FF
ROM:C4CF FF                          .BYTE $FF
ROM:C4D0 FF                          .BYTE $FF
ROM:C4D1 FF                          .BYTE $FF
ROM:C4D2 FF                          .BYTE $FF
ROM:C4D3 FF                          .BYTE $FF
ROM:C4D4 FF                          .BYTE $FF
ROM:C4D5 FF                          .BYTE $FF
ROM:C4D6 FF                          .BYTE $FF
ROM:C4D7 FF                          .BYTE $FF
ROM:C4D8 FF                          .BYTE $FF
ROM:C4D9 FF                          .BYTE $FF
ROM:C4DA FF                          .BYTE $FF
ROM:C4DB FF                          .BYTE $FF
ROM:C4DC FF                          .BYTE $FF
ROM:C4DD FF                          .BYTE $FF
ROM:C4DE FF                          .BYTE $FF
ROM:C4DF FF                          .BYTE $FF
ROM:C4E0 FF                          .BYTE $FF
ROM:C4E1 FF                          .BYTE $FF
ROM:C4E2 FF                          .BYTE $FF
ROM:C4E3 FF                          .BYTE $FF
ROM:C4E4 FF                          .BYTE $FF
ROM:C4E5 FF                          .BYTE $FF
ROM:C4E6 FF                          .BYTE $FF
ROM:C4E7 FF                          .BYTE $FF
ROM:C4E8 FF                          .BYTE $FF
ROM:C4E9 FF                          .BYTE $FF
ROM:C4EA FF                          .BYTE $FF
ROM:C4EB FF                          .BYTE $FF
ROM:C4EC FF                          .BYTE $FF
ROM:C4ED FF                          .BYTE $FF
ROM:C4EE FF                          .BYTE $FF
ROM:C4EF FF                          .BYTE $FF
ROM:C4F0 FF                          .BYTE $FF
ROM:C4F1 FF                          .BYTE $FF
ROM:C4F2 FF                          .BYTE $FF
ROM:C4F3 FF                          .BYTE $FF
ROM:C4F4 FF                          .BYTE $FF
ROM:C4F5 FF                          .BYTE $FF
ROM:C4F6 FF                          .BYTE $FF
ROM:C4F7 FF                          .BYTE $FF
ROM:C4F8 FF                          .BYTE $FF
ROM:C4F9 FF                          .BYTE $FF
ROM:C4FA FF                          .BYTE $FF
ROM:C4FB FF                          .BYTE $FF
ROM:C4FC FF                          .BYTE $FF
ROM:C4FD FF                          .BYTE $FF
ROM:C4FE FF                          .BYTE $FF
ROM:C4FF FF                          .BYTE $FF
ROM:C500             ; START OF FUNCTION CHUNK FOR CHKDIS
ROM:C500             DISK_SLOT5:                             ; CODE XREF: CHKDIS+1F↓j
ROM:C500 FF                          .BYTE $FF
ROM:C501 FF                          .BYTE $FF
ROM:C502 FF                          .BYTE $FF
ROM:C502             ; END OF FUNCTION CHUNK FOR CHKDIS
ROM:C503 FF          S5_DISK_ID1:    .BYTE $FF               ; DATA XREF: CHKDIS+18↓r
ROM:C504 FF                          .BYTE $FF
ROM:C505 FF                          .BYTE $FF
ROM:C506 FF                          .BYTE $FF
ROM:C507 FF          S5_DISK_ID2:    .BYTE $FF               ; DATA XREF: CHKDIS:TRY5↓r
ROM:C508 FF                          .BYTE $FF
ROM:C509 FF                          .BYTE $FF
ROM:C50A FF                          .BYTE $FF
ROM:C50B FF                          .BYTE $FF
ROM:C50C FF                          .BYTE $FF
ROM:C50D FF                          .BYTE $FF
ROM:C50E FF                          .BYTE $FF
ROM:C50F FF                          .BYTE $FF
ROM:C510 FF                          .BYTE $FF
ROM:C511 FF                          .BYTE $FF
ROM:C512 FF                          .BYTE $FF
ROM:C513 FF                          .BYTE $FF
ROM:C514 FF                          .BYTE $FF
ROM:C515 FF                          .BYTE $FF
ROM:C516 FF                          .BYTE $FF
ROM:C517 FF                          .BYTE $FF
ROM:C518 FF                          .BYTE $FF
ROM:C519 FF                          .BYTE $FF
ROM:C51A FF                          .BYTE $FF
ROM:C51B FF                          .BYTE $FF
ROM:C51C FF                          .BYTE $FF
ROM:C51D FF                          .BYTE $FF
ROM:C51E FF                          .BYTE $FF
ROM:C51F FF                          .BYTE $FF
ROM:C520 FF                          .BYTE $FF
ROM:C521 FF                          .BYTE $FF
ROM:C522 FF                          .BYTE $FF
ROM:C523 FF                          .BYTE $FF
ROM:C524 FF                          .BYTE $FF
ROM:C525 FF                          .BYTE $FF
ROM:C526 FF                          .BYTE $FF
ROM:C527 FF                          .BYTE $FF
ROM:C528 FF                          .BYTE $FF
ROM:C529 FF                          .BYTE $FF
ROM:C52A FF                          .BYTE $FF
ROM:C52B FF                          .BYTE $FF
ROM:C52C FF                          .BYTE $FF
ROM:C52D FF                          .BYTE $FF
ROM:C52E FF                          .BYTE $FF
ROM:C52F FF                          .BYTE $FF
ROM:C530 FF                          .BYTE $FF
ROM:C531 FF                          .BYTE $FF
ROM:C532 FF                          .BYTE $FF
ROM:C533 FF                          .BYTE $FF
ROM:C534 FF                          .BYTE $FF
ROM:C535 FF                          .BYTE $FF
ROM:C536 FF                          .BYTE $FF
ROM:C537 FF                          .BYTE $FF
ROM:C538 FF                          .BYTE $FF
ROM:C539 FF                          .BYTE $FF
ROM:C53A FF                          .BYTE $FF
ROM:C53B FF                          .BYTE $FF
ROM:C53C FF                          .BYTE $FF
ROM:C53D FF                          .BYTE $FF
ROM:C53E FF                          .BYTE $FF
ROM:C53F FF                          .BYTE $FF
ROM:C540 FF                          .BYTE $FF
ROM:C541 FF                          .BYTE $FF
ROM:C542 FF                          .BYTE $FF
ROM:C543 FF                          .BYTE $FF
ROM:C544 FF                          .BYTE $FF
ROM:C545 FF                          .BYTE $FF
ROM:C546 FF                          .BYTE $FF
ROM:C547 FF                          .BYTE $FF
ROM:C548 FF                          .BYTE $FF
ROM:C549 FF                          .BYTE $FF
ROM:C54A FF                          .BYTE $FF
ROM:C54B FF                          .BYTE $FF
ROM:C54C FF                          .BYTE $FF
ROM:C54D FF                          .BYTE $FF
ROM:C54E FF                          .BYTE $FF
ROM:C54F FF                          .BYTE $FF
ROM:C550 FF                          .BYTE $FF
ROM:C551 FF                          .BYTE $FF
ROM:C552 FF                          .BYTE $FF
ROM:C553 FF                          .BYTE $FF
ROM:C554 FF                          .BYTE $FF
ROM:C555 FF                          .BYTE $FF
ROM:C556 FF                          .BYTE $FF
ROM:C557 FF                          .BYTE $FF
ROM:C558 FF                          .BYTE $FF
ROM:C559 FF                          .BYTE $FF
ROM:C55A FF                          .BYTE $FF
ROM:C55B FF                          .BYTE $FF
ROM:C55C FF                          .BYTE $FF
ROM:C55D FF                          .BYTE $FF
ROM:C55E FF                          .BYTE $FF
ROM:C55F FF                          .BYTE $FF
ROM:C560 FF                          .BYTE $FF
ROM:C561 FF                          .BYTE $FF
ROM:C562 FF                          .BYTE $FF
ROM:C563 FF                          .BYTE $FF
ROM:C564 FF                          .BYTE $FF
ROM:C565 FF                          .BYTE $FF
ROM:C566 FF                          .BYTE $FF
ROM:C567 FF                          .BYTE $FF
ROM:C568 FF                          .BYTE $FF
ROM:C569 FF                          .BYTE $FF
ROM:C56A FF                          .BYTE $FF
ROM:C56B FF                          .BYTE $FF
ROM:C56C FF                          .BYTE $FF
ROM:C56D FF                          .BYTE $FF
ROM:C56E FF                          .BYTE $FF
ROM:C56F FF                          .BYTE $FF
ROM:C570 FF                          .BYTE $FF
ROM:C571 FF                          .BYTE $FF
ROM:C572 FF                          .BYTE $FF
ROM:C573 FF                          .BYTE $FF
ROM:C574 FF                          .BYTE $FF
ROM:C575 FF                          .BYTE $FF
ROM:C576 FF                          .BYTE $FF
ROM:C577 FF                          .BYTE $FF
ROM:C578 FF                          .BYTE $FF
ROM:C579 FF                          .BYTE $FF
ROM:C57A FF                          .BYTE $FF
ROM:C57B FF                          .BYTE $FF
ROM:C57C FF                          .BYTE $FF
ROM:C57D FF                          .BYTE $FF
ROM:C57E FF                          .BYTE $FF
ROM:C57F FF                          .BYTE $FF
ROM:C580 FF                          .BYTE $FF
ROM:C581 FF                          .BYTE $FF
ROM:C582 FF                          .BYTE $FF
ROM:C583 FF                          .BYTE $FF
ROM:C584 FF                          .BYTE $FF
ROM:C585 FF                          .BYTE $FF
ROM:C586 FF                          .BYTE $FF
ROM:C587 FF                          .BYTE $FF
ROM:C588 FF                          .BYTE $FF
ROM:C589 FF                          .BYTE $FF
ROM:C58A FF                          .BYTE $FF
ROM:C58B FF                          .BYTE $FF
ROM:C58C FF                          .BYTE $FF
ROM:C58D FF                          .BYTE $FF
ROM:C58E FF                          .BYTE $FF
ROM:C58F FF                          .BYTE $FF
ROM:C590 FF                          .BYTE $FF
ROM:C591 FF                          .BYTE $FF
ROM:C592 FF                          .BYTE $FF
ROM:C593 FF                          .BYTE $FF
ROM:C594 FF                          .BYTE $FF
ROM:C595 FF                          .BYTE $FF
ROM:C596 FF                          .BYTE $FF
ROM:C597 FF                          .BYTE $FF
ROM:C598 FF                          .BYTE $FF
ROM:C599 FF                          .BYTE $FF
ROM:C59A FF                          .BYTE $FF
ROM:C59B FF                          .BYTE $FF
ROM:C59C FF                          .BYTE $FF
ROM:C59D FF                          .BYTE $FF
ROM:C59E FF                          .BYTE $FF
ROM:C59F FF                          .BYTE $FF
ROM:C5A0 FF                          .BYTE $FF
ROM:C5A1 FF                          .BYTE $FF
ROM:C5A2 FF                          .BYTE $FF
ROM:C5A3 FF                          .BYTE $FF
ROM:C5A4 FF                          .BYTE $FF
ROM:C5A5 FF                          .BYTE $FF
ROM:C5A6 FF                          .BYTE $FF
ROM:C5A7 FF                          .BYTE $FF
ROM:C5A8 FF                          .BYTE $FF
ROM:C5A9 FF                          .BYTE $FF
ROM:C5AA FF                          .BYTE $FF
ROM:C5AB FF                          .BYTE $FF
ROM:C5AC FF                          .BYTE $FF
ROM:C5AD FF                          .BYTE $FF
ROM:C5AE FF                          .BYTE $FF
ROM:C5AF FF                          .BYTE $FF
ROM:C5B0 FF                          .BYTE $FF
ROM:C5B1 FF                          .BYTE $FF
ROM:C5B2 FF                          .BYTE $FF
ROM:C5B3 FF                          .BYTE $FF
ROM:C5B4 FF                          .BYTE $FF
ROM:C5B5 FF                          .BYTE $FF
ROM:C5B6 FF                          .BYTE $FF
ROM:C5B7 FF                          .BYTE $FF
ROM:C5B8 FF                          .BYTE $FF
ROM:C5B9 FF                          .BYTE $FF
ROM:C5BA FF                          .BYTE $FF
ROM:C5BB FF                          .BYTE $FF
ROM:C5BC FF                          .BYTE $FF
ROM:C5BD FF                          .BYTE $FF
ROM:C5BE FF                          .BYTE $FF
ROM:C5BF FF                          .BYTE $FF
ROM:C5C0 FF                          .BYTE $FF
ROM:C5C1 FF                          .BYTE $FF
ROM:C5C2 FF                          .BYTE $FF
ROM:C5C3 FF                          .BYTE $FF
ROM:C5C4 FF                          .BYTE $FF
ROM:C5C5 FF                          .BYTE $FF
ROM:C5C6 FF                          .BYTE $FF
ROM:C5C7 FF                          .BYTE $FF
ROM:C5C8 FF                          .BYTE $FF
ROM:C5C9 FF                          .BYTE $FF
ROM:C5CA FF                          .BYTE $FF
ROM:C5CB FF                          .BYTE $FF
ROM:C5CC FF                          .BYTE $FF
ROM:C5CD FF                          .BYTE $FF
ROM:C5CE FF                          .BYTE $FF
ROM:C5CF FF                          .BYTE $FF
ROM:C5D0 FF                          .BYTE $FF
ROM:C5D1 FF                          .BYTE $FF
ROM:C5D2 FF                          .BYTE $FF
ROM:C5D3 FF                          .BYTE $FF
ROM:C5D4 FF                          .BYTE $FF
ROM:C5D5 FF                          .BYTE $FF
ROM:C5D6 FF                          .BYTE $FF
ROM:C5D7 FF                          .BYTE $FF
ROM:C5D8 FF                          .BYTE $FF
ROM:C5D9 FF                          .BYTE $FF
ROM:C5DA FF                          .BYTE $FF
ROM:C5DB FF                          .BYTE $FF
ROM:C5DC FF                          .BYTE $FF
ROM:C5DD FF                          .BYTE $FF
ROM:C5DE FF                          .BYTE $FF
ROM:C5DF FF                          .BYTE $FF
ROM:C5E0 FF                          .BYTE $FF
ROM:C5E1 FF                          .BYTE $FF
ROM:C5E2 FF                          .BYTE $FF
ROM:C5E3 FF                          .BYTE $FF
ROM:C5E4 FF                          .BYTE $FF
ROM:C5E5 FF                          .BYTE $FF
ROM:C5E6 FF                          .BYTE $FF
ROM:C5E7 FF                          .BYTE $FF
ROM:C5E8 FF                          .BYTE $FF
ROM:C5E9 FF                          .BYTE $FF
ROM:C5EA FF                          .BYTE $FF
ROM:C5EB FF                          .BYTE $FF
ROM:C5EC FF                          .BYTE $FF
ROM:C5ED FF                          .BYTE $FF
ROM:C5EE FF                          .BYTE $FF
ROM:C5EF FF                          .BYTE $FF
ROM:C5F0 FF                          .BYTE $FF
ROM:C5F1 FF                          .BYTE $FF
ROM:C5F2 FF                          .BYTE $FF
ROM:C5F3 FF                          .BYTE $FF
ROM:C5F4 FF                          .BYTE $FF
ROM:C5F5 FF                          .BYTE $FF
ROM:C5F6 FF                          .BYTE $FF
ROM:C5F7 FF                          .BYTE $FF
ROM:C5F8 FF                          .BYTE $FF
ROM:C5F9 FF                          .BYTE $FF
ROM:C5FA FF                          .BYTE $FF
ROM:C5FB FF                          .BYTE $FF
ROM:C5FC FF                          .BYTE $FF
ROM:C5FD FF                          .BYTE $FF
ROM:C5FE FF                          .BYTE $FF
ROM:C5FF FF                          .BYTE $FF
ROM:C600             ; ---------------------------------------------------------------------------
ROM:C600             ; START OF FUNCTION CHUNK FOR CHKDIS
ROM:C600
ROM:C600             DISK_SLOT6:                             ; CODE XREF: CHKDIS+E↓j
ROM:C600 E5 20                       SBC     WNDLEFT
ROM:C600             ; END OF FUNCTION CHUNK FOR CHKDIS
ROM:C600             ; ---------------------------------------------------------------------------
ROM:C602 B4                          .BYTE $B4
ROM:C603 00          S6_DISK_ID1:    .BYTE 0                 ; DATA XREF: CHKDIS+7↓r
ROM:C604             ; ---------------------------------------------------------------------------
ROM:C604 A2 03                       LDX     #3
ROM:C604             ; ---------------------------------------------------------------------------
ROM:C606 F0                          .BYTE $F0
ROM:C607 3C          S6_DISK_ID2:    .BYTE $3C               ; DATA XREF: CHKDIS↓r
ROM:C608             ; ---------------------------------------------------------------------------
ROM:C608 CD FF CF                    CMP     ROMCLEAR        ; disable all $C8XX rom extensions
ROM:C60B 20 7A CE                    JSR     loc_CE79+1
ROM:C60E 20 C0 C9                    JSR     sub_C9C0
ROM:C611 19 11 C0                    ORA     $C011,Y
ROM:C614 19 13 C0                    ORA     $C013,Y
ROM:C617 19 0F C0                    ORA     $C00F,Y
ROM:C61A 39 0E C0                    AND     $C00E,Y
ROM:C61D A2 E8                       LDX     #232
ROM:C61F
ROM:C61F             loc_C61F:                               ; CODE XREF: ROM:C644↓j
ROM:C61F 39 0C C0                    AND     $C00C,Y
ROM:C622 20 58 CE                    JSR     sub_CE58
ROM:C625 19 0B C0                    ORA     $C00B,Y
ROM:C628 19 0A C0                    ORA     $C00A,Y
ROM:C62B 20 58 CE                    JSR     sub_CE58
ROM:C62E 19 09 C0                    ORA     $C009,Y
ROM:C631 39 08 C0                    AND     $C008,Y
ROM:C634 20 58 CE                    JSR     sub_CE58
ROM:C637 19 07 C0                    ORA     $C007,Y
ROM:C63A 19 06 C0                    ORA     $C006,Y
ROM:C63D 20 58 CE                    JSR     sub_CE58
ROM:C640 19 05 C0                    ORA     $C005,Y
ROM:C643 E8                          INX
ROM:C644 30 D9                       BMI     loc_C61F
ROM:C646 A9 04                       LDA     #4
ROM:C648 0A                          ASL     A
ROM:C649 85 27                       STA     FKEYPH
ROM:C64B 86 3D                       STX     REG1H
ROM:C64D 86 41                       STX     byte_41
ROM:C64F 86 26                       STX     FKEYPL
ROM:C651
ROM:C651             loc_C651:                               ; CODE XREF: ROM:loc_C65F↓j
ROM:C651 20 A6 03                    JSR     unk_3A6
ROM:C654 18                          CLC
ROM:C655 90 13                       BCC     loc_C66A
ROM:C657 63 FF                       RRA     ($FF,X)
ROM:C659 FF FF FF                    ISB     $FFFF,X
ROM:C65C 38                          SEC
ROM:C65D B0 08                       BCS     loc_C667
ROM:C65F
ROM:C65F             loc_C65F:                               ; CODE XREF: ROM:C6DA↓j
ROM:C65F 90 F0                       BCC     loc_C651
ROM:C661 EA                          NOP
ROM:C662 EA                          NOP
ROM:C663 68                          PLA
ROM:C664 18                          CLC
ROM:C665 B0 00                       BCS     loc_C667
ROM:C667
ROM:C667             loc_C667:                               ; CODE XREF: ROM:C65D↑j
ROM:C667                                                     ; ROM:C665↑j
ROM:C667 20 7E 03                    JSR     unk_37E
ROM:C66A
ROM:C66A             loc_C66A:                               ; CODE XREF: ROM:C655↑j
ROM:C66A                                                     ; ROM:C6C4↓j
ROM:C66A A5 2B                       LDA     SBAS2H
ROM:C66C AA                          TAX
ROM:C66D A0 00                       LDY     #0
ROM:C66F 18                          CLC
ROM:C670 90 79                       BCC     loc_C6EB
ROM:C672 CD FF CF                    CMP     ROMCLEAR        ; disable all $C8XX rom extensions
ROM:C675 20 74 CE                    JSR     loc_CE73+1
ROM:C678 4C 00 C8                    JMP     locret_C800
ROM:C678             ; ---------------------------------------------------------------------------
ROM:C67B FF                          .BYTE $FF
ROM:C67C FF                          .BYTE $FF
ROM:C67D FF                          .BYTE $FF
ROM:C67E FF                          .BYTE $FF
ROM:C67F FF                          .BYTE $FF
ROM:C680 FF                          .BYTE $FF
ROM:C681 FF                          .BYTE $FF
ROM:C682 FF                          .BYTE $FF
ROM:C683 FF                          .BYTE $FF
ROM:C684 FF                          .BYTE $FF
ROM:C685 FF                          .BYTE $FF
ROM:C686 FF                          .BYTE $FF
ROM:C687 FF                          .BYTE $FF
ROM:C688 FF                          .BYTE $FF
ROM:C689 FF                          .BYTE $FF
ROM:C68A FF                          .BYTE $FF
ROM:C68B FF                          .BYTE $FF
ROM:C68C FF                          .BYTE $FF
ROM:C68D FF                          .BYTE $FF
ROM:C68E FF                          .BYTE $FF
ROM:C68F FF                          .BYTE $FF
ROM:C690 FF                          .BYTE $FF
ROM:C691 FF                          .BYTE $FF
ROM:C692 FF                          .BYTE $FF
ROM:C693 FF                          .BYTE $FF
ROM:C694 FF                          .BYTE $FF
ROM:C695 FF                          .BYTE $FF
ROM:C696 FF                          .BYTE $FF
ROM:C697 FF                          .BYTE $FF
ROM:C698 FF                          .BYTE $FF
ROM:C699 FF                          .BYTE $FF
ROM:C69A FF                          .BYTE $FF
ROM:C69B FF                          .BYTE $FF
ROM:C69C FF                          .BYTE $FF
ROM:C69D FF                          .BYTE $FF
ROM:C69E FF                          .BYTE $FF
ROM:C69F FF                          .BYTE $FF
ROM:C6A0 FF                          .BYTE $FF
ROM:C6A1 FF                          .BYTE $FF
ROM:C6A2 FF                          .BYTE $FF
ROM:C6A3 FF                          .BYTE $FF
ROM:C6A4 FF                          .BYTE $FF
ROM:C6A5 FF                          .BYTE $FF
ROM:C6A6             ; ---------------------------------------------------------------------------
ROM:C6A6 8D 9A 03                    STA     byte_39A
ROM:C6A9 A2 AB                       LDX     #$AB
ROM:C6AB AC 98 03                    LDY     byte_398
ROM:C6AE
ROM:C6AE             loc_C6AE:                               ; CODE XREF: ROM:C6B6↓j
ROM:C6AE B9 11 C0                    LDA     $C011,Y
ROM:C6B1 30 05                       BMI     loc_C6B8
ROM:C6B3 B9 11 C0                    LDA     $C011,Y
ROM:C6B6 10 F6                       BPL     loc_C6AE
ROM:C6B8
ROM:C6B8             loc_C6B8:                               ; CODE XREF: ROM:C6B1↑j
ROM:C6B8 0A                          ASL     A
ROM:C6B9 A8                          TAY
ROM:C6BA B9 00 CA                    LDA     $CA00,Y
ROM:C6BD 8D 00 03                    STA     byte_300
ROM:C6C0 20 EB C8                    JSR     loc_C8EB
ROM:C6C3 18                          CLC
ROM:C6C4 90 A4                       BCC     loc_C66A
ROM:C6C6
ROM:C6C6             loc_C6C6:                               ; CODE XREF: ROM:C6F1↓j
ROM:C6C6 A6 27                       LDX     FKEYPH
ROM:C6C8 E8                          INX
ROM:C6C9 86 27                       STX     FKEYPH
ROM:C6CB AC 98 03                    LDY     byte_398
ROM:C6CE A6 3D                       LDX     REG1H
ROM:C6D0 E8                          INX
ROM:C6D1 10 02                       BPL     loc_C6D5
ROM:C6D3 A4 2B                       LDY     SBAS2H
ROM:C6D5
ROM:C6D5             loc_C6D5:                               ; CODE XREF: ROM:C6D1↑j
ROM:C6D5 EC 00 08                    CPX     byte_800
ROM:C6D8 86 3D                       STX     REG1H
ROM:C6DA 90 83                       BCC     loc_C65F
ROM:C6DC 8A                          TXA
ROM:C6DD A0 00                       LDY     #0
ROM:C6DF A6 2B                       LDX     SBAS2H
ROM:C6E1 B0 15                       BCS     loc_C6F6+2
ROM:C6E3
ROM:C6E3             loc_C6E3:                               ; CODE XREF: ROM:C6FC↓j
ROM:C6E3 6C 50 CE                    JMP     (word_CE50)
ROM:C6E3             ; ---------------------------------------------------------------------------
ROM:C6E6 FF                          .BYTE $FF
ROM:C6E7 FF                          .BYTE $FF
ROM:C6E8 FF                          .BYTE $FF
ROM:C6E9 FF                          .BYTE $FF
ROM:C6EA FF                          .BYTE $FF
ROM:C6EB             ; ---------------------------------------------------------------------------
ROM:C6EB
ROM:C6EB             loc_C6EB:                               ; CODE XREF: ROM:C670↑j
ROM:C6EB EA                          NOP
ROM:C6EC EA                          NOP
ROM:C6ED EA                          NOP
ROM:C6EE EA                          NOP
ROM:C6EF EA                          NOP
ROM:C6F0 EA                          NOP
ROM:C6F1 90 D3                       BCC     loc_C6C6
ROM:C6F3 FF FF FF                    ISB     $FFFF,X
ROM:C6F6
ROM:C6F6             loc_C6F6:                               ; CODE XREF: ROM:C6E1↑j
ROM:C6F6 FF FF EA                    ISB     $EAFF,X
ROM:C6F9 EA                          NOP
ROM:C6FA EA                          NOP
ROM:C6FB EA                          NOP
ROM:C6FC B0 E5                       BCS     loc_C6E3
ROM:C6FE 00                          BRK
ROM:C6FE             ; ---------------------------------------------------------------------------
ROM:C6FF 00                          .BYTE   0
ROM:C700 FF                          .BYTE $FF
ROM:C701 FF                          .BYTE $FF
ROM:C702 FF                          .BYTE $FF
ROM:C703 FF                          .BYTE $FF
ROM:C704 FF                          .BYTE $FF
ROM:C705 FF                          .BYTE $FF
ROM:C706 FF                          .BYTE $FF
ROM:C707 FF                          .BYTE $FF
ROM:C708 FF                          .BYTE $FF
ROM:C709 FF                          .BYTE $FF
ROM:C70A FF                          .BYTE $FF
ROM:C70B FF                          .BYTE $FF
ROM:C70C FF                          .BYTE $FF
ROM:C70D FF                          .BYTE $FF
ROM:C70E FF                          .BYTE $FF
ROM:C70F FF                          .BYTE $FF
ROM:C710 FF                          .BYTE $FF
ROM:C711 FF                          .BYTE $FF
ROM:C712 FF                          .BYTE $FF
ROM:C713 FF                          .BYTE $FF
ROM:C714 FF                          .BYTE $FF
ROM:C715 FF                          .BYTE $FF
ROM:C716 FF                          .BYTE $FF
ROM:C717 FF                          .BYTE $FF
ROM:C718 FF                          .BYTE $FF
ROM:C719 FF                          .BYTE $FF
ROM:C71A FF                          .BYTE $FF
ROM:C71B FF                          .BYTE $FF
ROM:C71C FF                          .BYTE $FF
ROM:C71D FF                          .BYTE $FF
ROM:C71E FF                          .BYTE $FF
ROM:C71F FF                          .BYTE $FF
ROM:C720 FF                          .BYTE $FF
ROM:C721 FF                          .BYTE $FF
ROM:C722 FF                          .BYTE $FF
ROM:C723 FF                          .BYTE $FF
ROM:C724 FF                          .BYTE $FF
ROM:C725 FF                          .BYTE $FF
ROM:C726 FF                          .BYTE $FF
ROM:C727 FF                          .BYTE $FF
ROM:C728 FF                          .BYTE $FF
ROM:C729 FF                          .BYTE $FF
ROM:C72A FF                          .BYTE $FF
ROM:C72B FF                          .BYTE $FF
ROM:C72C FF                          .BYTE $FF
ROM:C72D FF                          .BYTE $FF
ROM:C72E FF                          .BYTE $FF
ROM:C72F FF                          .BYTE $FF
ROM:C730 FF                          .BYTE $FF
ROM:C731 FF                          .BYTE $FF
ROM:C732 FF                          .BYTE $FF
ROM:C733 FF                          .BYTE $FF
ROM:C734 FF                          .BYTE $FF
ROM:C735 FF                          .BYTE $FF
ROM:C736 FF                          .BYTE $FF
ROM:C737 FF                          .BYTE $FF
ROM:C738 FF                          .BYTE $FF
ROM:C739 FF                          .BYTE $FF
ROM:C73A FF                          .BYTE $FF
ROM:C73B FF                          .BYTE $FF
ROM:C73C FF                          .BYTE $FF
ROM:C73D FF                          .BYTE $FF
ROM:C73E FF                          .BYTE $FF
ROM:C73F FF                          .BYTE $FF
ROM:C740 FF                          .BYTE $FF
ROM:C741 FF                          .BYTE $FF
ROM:C742 FF                          .BYTE $FF
ROM:C743 FF                          .BYTE $FF
ROM:C744 FF                          .BYTE $FF
ROM:C745 FF                          .BYTE $FF
ROM:C746 FF                          .BYTE $FF
ROM:C747 FF                          .BYTE $FF
ROM:C748 FF                          .BYTE $FF
ROM:C749 FF                          .BYTE $FF
ROM:C74A FF                          .BYTE $FF
ROM:C74B FF                          .BYTE $FF
ROM:C74C FF                          .BYTE $FF
ROM:C74D FF                          .BYTE $FF
ROM:C74E FF                          .BYTE $FF
ROM:C74F FF                          .BYTE $FF
ROM:C750 FF                          .BYTE $FF
ROM:C751 FF                          .BYTE $FF
ROM:C752 FF                          .BYTE $FF
ROM:C753 FF                          .BYTE $FF
ROM:C754 FF                          .BYTE $FF
ROM:C755 FF                          .BYTE $FF
ROM:C756 FF                          .BYTE $FF
ROM:C757 FF                          .BYTE $FF
ROM:C758 FF                          .BYTE $FF
ROM:C759 FF                          .BYTE $FF
ROM:C75A FF                          .BYTE $FF
ROM:C75B FF                          .BYTE $FF
ROM:C75C FF                          .BYTE $FF
ROM:C75D FF                          .BYTE $FF
ROM:C75E FF                          .BYTE $FF
ROM:C75F FF                          .BYTE $FF
ROM:C760 FF                          .BYTE $FF
ROM:C761 FF                          .BYTE $FF
ROM:C762 FF                          .BYTE $FF
ROM:C763 FF                          .BYTE $FF
ROM:C764 FF                          .BYTE $FF
ROM:C765 FF                          .BYTE $FF
ROM:C766 FF                          .BYTE $FF
ROM:C767 FF                          .BYTE $FF
ROM:C768 FF                          .BYTE $FF
ROM:C769 FF                          .BYTE $FF
ROM:C76A FF                          .BYTE $FF
ROM:C76B FF                          .BYTE $FF
ROM:C76C FF                          .BYTE $FF
ROM:C76D FF                          .BYTE $FF
ROM:C76E FF                          .BYTE $FF
ROM:C76F FF                          .BYTE $FF
ROM:C770 FF                          .BYTE $FF
ROM:C771 FF                          .BYTE $FF
ROM:C772 FF                          .BYTE $FF
ROM:C773 FF                          .BYTE $FF
ROM:C774 FF                          .BYTE $FF
ROM:C775 FF                          .BYTE $FF
ROM:C776 FF                          .BYTE $FF
ROM:C777 FF                          .BYTE $FF
ROM:C778 FF                          .BYTE $FF
ROM:C779 FF                          .BYTE $FF
ROM:C77A FF                          .BYTE $FF
ROM:C77B FF                          .BYTE $FF
ROM:C77C FF                          .BYTE $FF
ROM:C77D FF                          .BYTE $FF
ROM:C77E FF                          .BYTE $FF
ROM:C77F FF                          .BYTE $FF
ROM:C780 FF                          .BYTE $FF
ROM:C781 FF                          .BYTE $FF
ROM:C782 FF                          .BYTE $FF
ROM:C783 FF                          .BYTE $FF
ROM:C784 FF                          .BYTE $FF
ROM:C785 FF                          .BYTE $FF
ROM:C786 FF                          .BYTE $FF
ROM:C787 FF                          .BYTE $FF
ROM:C788 FF                          .BYTE $FF
ROM:C789 FF                          .BYTE $FF
ROM:C78A FF                          .BYTE $FF
ROM:C78B FF                          .BYTE $FF
ROM:C78C FF                          .BYTE $FF
ROM:C78D FF                          .BYTE $FF
ROM:C78E FF                          .BYTE $FF
ROM:C78F FF                          .BYTE $FF
ROM:C790 FF                          .BYTE $FF
ROM:C791 FF                          .BYTE $FF
ROM:C792 FF                          .BYTE $FF
ROM:C793 FF                          .BYTE $FF
ROM:C794 FF                          .BYTE $FF
ROM:C795 FF                          .BYTE $FF
ROM:C796 FF                          .BYTE $FF
ROM:C797 FF                          .BYTE $FF
ROM:C798 FF                          .BYTE $FF
ROM:C799 FF                          .BYTE $FF
ROM:C79A FF                          .BYTE $FF
ROM:C79B FF                          .BYTE $FF
ROM:C79C FF                          .BYTE $FF
ROM:C79D FF                          .BYTE $FF
ROM:C79E FF                          .BYTE $FF
ROM:C79F FF                          .BYTE $FF
ROM:C7A0 FF                          .BYTE $FF
ROM:C7A1 FF                          .BYTE $FF
ROM:C7A2 FF                          .BYTE $FF
ROM:C7A3 FF                          .BYTE $FF
ROM:C7A4 FF                          .BYTE $FF
ROM:C7A5 FF                          .BYTE $FF
ROM:C7A6 FF                          .BYTE $FF
ROM:C7A7 FF                          .BYTE $FF
ROM:C7A8 FF                          .BYTE $FF
ROM:C7A9 FF                          .BYTE $FF
ROM:C7AA FF                          .BYTE $FF
ROM:C7AB FF                          .BYTE $FF
ROM:C7AC FF                          .BYTE $FF
ROM:C7AD FF                          .BYTE $FF
ROM:C7AE FF                          .BYTE $FF
ROM:C7AF FF                          .BYTE $FF
ROM:C7B0 FF                          .BYTE $FF
ROM:C7B1 FF                          .BYTE $FF
ROM:C7B2 FF                          .BYTE $FF
ROM:C7B3 FF                          .BYTE $FF
ROM:C7B4 FF                          .BYTE $FF
ROM:C7B5 FF                          .BYTE $FF
ROM:C7B6 FF                          .BYTE $FF
ROM:C7B7 FF                          .BYTE $FF
ROM:C7B8 FF                          .BYTE $FF
ROM:C7B9 FF                          .BYTE $FF
ROM:C7BA FF                          .BYTE $FF
ROM:C7BB FF                          .BYTE $FF
ROM:C7BC FF                          .BYTE $FF
ROM:C7BD FF                          .BYTE $FF
ROM:C7BE FF                          .BYTE $FF
ROM:C7BF FF                          .BYTE $FF
ROM:C7C0 FF                          .BYTE $FF
ROM:C7C1 FF                          .BYTE $FF
ROM:C7C2 FF                          .BYTE $FF
ROM:C7C3 FF                          .BYTE $FF
ROM:C7C4 FF                          .BYTE $FF
ROM:C7C5 FF                          .BYTE $FF
ROM:C7C6 FF                          .BYTE $FF
ROM:C7C7 FF                          .BYTE $FF
ROM:C7C8 FF                          .BYTE $FF
ROM:C7C9 FF                          .BYTE $FF
ROM:C7CA FF                          .BYTE $FF
ROM:C7CB FF                          .BYTE $FF
ROM:C7CC FF                          .BYTE $FF
ROM:C7CD FF                          .BYTE $FF
ROM:C7CE FF                          .BYTE $FF
ROM:C7CF FF                          .BYTE $FF
ROM:C7D0 FF                          .BYTE $FF
ROM:C7D1 FF                          .BYTE $FF
ROM:C7D2 FF                          .BYTE $FF
ROM:C7D3 FF                          .BYTE $FF
ROM:C7D4 FF                          .BYTE $FF
ROM:C7D5 FF                          .BYTE $FF
ROM:C7D6 FF                          .BYTE $FF
ROM:C7D7 FF                          .BYTE $FF
ROM:C7D8 FF                          .BYTE $FF
ROM:C7D9 FF                          .BYTE $FF
ROM:C7DA FF                          .BYTE $FF
ROM:C7DB FF                          .BYTE $FF
ROM:C7DC FF                          .BYTE $FF
ROM:C7DD FF                          .BYTE $FF
ROM:C7DE FF                          .BYTE $FF
ROM:C7DF FF                          .BYTE $FF
ROM:C7E0 FF                          .BYTE $FF
ROM:C7E1 FF                          .BYTE $FF
ROM:C7E2 FF                          .BYTE $FF
ROM:C7E3 FF                          .BYTE $FF
ROM:C7E4 FF                          .BYTE $FF
ROM:C7E5 FF                          .BYTE $FF
ROM:C7E6 FF                          .BYTE $FF
ROM:C7E7 FF                          .BYTE $FF
ROM:C7E8 FF                          .BYTE $FF
ROM:C7E9 FF                          .BYTE $FF
ROM:C7EA FF                          .BYTE $FF
ROM:C7EB FF                          .BYTE $FF
ROM:C7EC FF                          .BYTE $FF
ROM:C7ED FF                          .BYTE $FF
ROM:C7EE FF                          .BYTE $FF
ROM:C7EF FF                          .BYTE $FF
ROM:C7F0 FF                          .BYTE $FF
ROM:C7F1 FF                          .BYTE $FF
ROM:C7F2 FF                          .BYTE $FF
ROM:C7F3 FF                          .BYTE $FF
ROM:C7F4 FF                          .BYTE $FF
ROM:C7F5 FF                          .BYTE $FF
ROM:C7F6 FF                          .BYTE $FF
ROM:C7F7 FF                          .BYTE $FF
ROM:C7F8 FF                          .BYTE $FF
ROM:C7F9 FF                          .BYTE $FF
ROM:C7FA FF                          .BYTE $FF
ROM:C7FB FF                          .BYTE $FF
ROM:C7FC FF                          .BYTE $FF
ROM:C7FD FF                          .BYTE $FF
ROM:C7FE FF                          .BYTE $FF
ROM:C7FF FF                          .BYTE $FF
ROM:C800             ; ---------------------------------------------------------------------------
ROM:C800
ROM:C800             This is 80 Column $C8XX code. Printer/disk interfaces
ROM:C800             have their own blocks.
ROM:C800
ROM:C800             locret_C800:                            ; CODE XREF: ROM:C17C↑j
ROM:C800                                                     ; ROM:C678↑j
ROM:C800 60                          RTS
ROM:C801
ROM:C801             ; =============== S U B R O U T I N E =======================================
ROM:C801
ROM:C801
ROM:C801             SETUP:                                  ; CODE XREF: ROAD+16↑p
ROM:C801                                                     ; ROAD+43↑p ...
ROM:C801
ROM:C801             ; FUNCTION CHUNK AT ROM:CA76 SIZE 00000021 BYTES
ROM:C801
ROM:C801 20 2D C9                    JSR     WBANK           ; change bank setup to 2,1,X,F when running 80col CPM/PASCAL
ROM:C801                                                     ; 0 must be outside virtual memory area as it contains the screen mem
ROM:C804
ROM:C804             loc_C804:                               ; CODE XREF: ROM:C165↑j
ROM:C804                                                     ; ROM:C178↑j
ROM:C804 20 22 C8                    JSR     SETWND          ; setup 80x24 screen size
ROM:C807 A9 90                       LDA     #$90
ROM:C809 8D 7B 07                    STA     POWER
ROM:C80C A9 A0                       LDA     #$A0            ; clear TEMPA
ROM:C80E 8D FB 06                    STA     TEMPA
ROM:C811
ROM:C811             wait_vert:                              ; CODE XREF: SETUP+13↓j
ROM:C811 2C C3 C1                    BIT     VERTSC          ; Read Vertical blank status
ROM:C814 30 FB                       BMI     wait_vert       ; wait for vertical retrace before changing
ROM:C816 AD 56 C0                    LDA     VZSELF          ; change to 80 column mode
ROM:C819 AD 51 C0                    LDA     VZTEXT          ; text mode on
ROM:C81C AD 4F C0                    LDA     VZTX80          ; switches to 2MHz?
ROM:C81F 4C 76 CA                    JMP     CLRSCRN         ; clear screen
ROM:C81F             ; End of function SETUP
ROM:C81F
ROM:C822
ROM:C822             ; =============== S U B R O U T I N E =======================================
ROM:C822
ROM:C822             ; setup 80x24 screen size
ROM:C822
ROM:C822             SETWND:                                 ; CODE XREF: SETUP:loc_C804↑p
ROM:C822 A9 00                       LDA     #0
ROM:C824 85 22                       STA     WNDTOP
ROM:C826 85 20                       STA     WNDLEFT
ROM:C828 A9 18                       LDA     #24
ROM:C82A 85 23                       STA     WNDBTM
ROM:C82C A9 50                       LDA     #80
ROM:C82E 85 21                       STA     WNDWTH
ROM:C830 A9 10                       LDA     #$10
ROM:C832 8D 7B 05                    STA     TXTMOD          ; TEXT MODE : $10 = 80 cols, $04 = 40 cols
ROM:C835 60                          RTS
ROM:C835             ; End of function SETWND
ROM:C835
ROM:C836
ROM:C836             ; =============== S U B R O U T I N E =======================================
ROM:C836
ROM:C836
ROM:C836             COMPAT:                                 ; CODE XREF: STORAD+AF↓p
ROM:C836                                                     ; STORAD+C6↓p ...
ROM:C836 08                          PHP
ROM:C837 48                          PHA
ROM:C838 A5 29                       LDA     SBASH
ROM:C83A 49 40                       EOR     #$40 ; '@'
ROM:C83C 85 29                       STA     SBASH
ROM:C83E 68                          PLA
ROM:C83F 28                          PLP
ROM:C840 60                          RTS
ROM:C840             ; End of function COMPAT
ROM:C840
ROM:C840             ; ---------------------------------------------------------------------------
ROM:C841 FF                          .BYTE $FF
ROM:C842 FF                          .BYTE $FF
ROM:C843 FF                          .BYTE $FF
ROM:C844 FF                          .BYTE $FF
ROM:C845 FF                          .BYTE $FF
ROM:C846 FF                          .BYTE $FF
ROM:C847             ; ---------------------------------------------------------------------------
ROM:C847             ; START OF FUNCTION CHUNK FOR sub_ADBA
ROM:C847
ROM:C847             j_ESCX:                                 ; CODE XREF: sub_ADBA+A↑j
ROM:C847 4C F6 CB                    JMP     ESCX
ROM:C847             ; END OF FUNCTION CHUNK FOR sub_ADBA
ROM:C84A
ROM:C84A             ; =============== S U B R O U T I N E =======================================
ROM:C84A
ROM:C84A             ; Attributes: thunk
ROM:C84A
ROM:C84A             j_CLREOL:                               ; CODE XREF: sub_ADBA+15↑p
ROM:C84A 4C 97 CA                    JMP     CLREOL
ROM:C84A             ; End of function j_CLREOL
ROM:C84A
ROM:C84D
ROM:C84D             ; =============== S U B R O U T I N E =======================================
ROM:C84D
ROM:C84D
ROM:C84D             KEYIN_C8:                               ; CODE XREF: ESCHK+69↓j
ROM:C84D                                                     ; RDXWHO+3↓p ...
ROM:C84D 20 0D CC                    JSR     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:C850 AD 00 48                    LDA     KEYFLG
ROM:C853 20 17 CC                    JSR     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:C856 C9 99                       CMP     #$99
ROM:C858 D0 06                       BNE     KEYINH
ROM:C85A 20 FE C8                    JSR     KEYINB          ; get character from the function key buffer
ROM:C85D 4C 70 C8                    JMP     KEYHAB
ROM:C860             ; ---------------------------------------------------------------------------
ROM:C860
ROM:C860             KEYINH:                                 ; CODE XREF: KEYIN_C8+B↑j
ROM:C860 20 78 C8                    JSR     POLLKBD
ROM:C863 C9 9C                       CMP     #$9C            ; TAB?
ROM:C865 D0 02                       BNE     loc_C869
ROM:C867 A9 89                       LDA     #$89            ; ESC?
ROM:C869
ROM:C869             loc_C869:                               ; CODE XREF: KEYIN_C8+18↑j
ROM:C869 C9 9B                       CMP     #$9B
ROM:C86B D0 03                       BNE     KEYHAB
ROM:C86D 20 8A C8                    JSR     ESCHK
ROM:C870
ROM:C870             KEYHAB:                                 ; CODE XREF: KEYIN_C8+10↑j
ROM:C870                                                     ; KEYIN_C8+1E↑j
ROM:C870 48                          PHA
ROM:C871 29 7F                       AND     #$7F
ROM:C873 8D 7B 06                    STA     DISPBYTE
ROM:C876 68                          PLA
ROM:C877 60                          RTS
ROM:C877             ; End of function KEYIN_C8
ROM:C877
ROM:C878
ROM:C878             ; =============== S U B R O U T I N E =======================================
ROM:C878
ROM:C878
ROM:C878             POLLKBD:                                ; CODE XREF: KEYIN_C8:KEYINH↑p
ROM:C878                                                     ; POLLKBD+7↓j ...
ROM:C878 AD 00 C0                    LDA     KEYBOARD
ROM:C87B 30 09                       BMI     POLRTS          ; got key, clear keyboard register
ROM:C87D E6 4E                       INC     RNDNOL
ROM:C87F D0 F7                       BNE     POLLKBD
ROM:C881 E6 4F                       INC     RNDNOH
ROM:C883 4C 78 C8                    JMP     POLLKBD
ROM:C886             ; ---------------------------------------------------------------------------
ROM:C886
ROM:C886             POLRTS:                                 ; CODE XREF: POLLKBD+3↑j
ROM:C886 2C 10 C0                    BIT     KEYSTRB         ; got key, clear keyboard register
ROM:C889 60                          RTS
ROM:C889             ; End of function POLLKBD
ROM:C889
ROM:C88A
ROM:C88A             ; =============== S U B R O U T I N E =======================================
ROM:C88A
ROM:C88A
ROM:C88A             ESCHK:                                  ; CODE XREF: KEYIN_C8+20↑p
ROM:C88A A9 04                       LDA     #4
ROM:C88C 85 4F                       STA     RNDNOH          ; setup timer
ROM:C88E
ROM:C88E             ESCHK1:                                 ; CODE XREF: ESCHK+B↓j
ROM:C88E                                                     ; ESCHK+F↓j
ROM:C88E AD 00 C0                    LDA     KEYBOARD
ROM:C891 30 0B                       BMI     ESCHK2
ROM:C893 E6 4E                       INC     RNDNOL
ROM:C895 D0 F7                       BNE     ESCHK1
ROM:C897 C6 4F                       DEC     RNDNOH
ROM:C899 D0 F3                       BNE     ESCHK1          ; time up, must use ESC only
ROM:C89B
ROM:C89B             ESCRT:                                  ; CODE XREF: ESCHK+20↓j
ROM:C89B                                                     ; ESCHK+24↓j ...
ROM:C89B A9 9B                       LDA     #$9B
ROM:C89D 60                          RTS
ROM:C89E             ; ---------------------------------------------------------------------------
ROM:C89E
ROM:C89E             ESCHK2:                                 ; CODE XREF: ESCHK+7↑j
ROM:C89E 2C 10 C0                    BIT     KEYSTRB
ROM:C8A1 C9 C4                       CMP     #$C4            ; UP-ARROW
ROM:C8A3 D0 03                       BNE     loc_C8A8
ROM:C8A5 A9 9F                       LDA     #$9F
ROM:C8A7 60                          RTS
ROM:C8A8             ; ---------------------------------------------------------------------------
ROM:C8A8
ROM:C8A8             loc_C8A8:                               ; CODE XREF: ESCHK+19↑j
ROM:C8A8 C9 B0                       CMP     #$B0
ROM:C8AA 90 EF                       BCC     ESCRT
ROM:C8AC C9 B3                       CMP     #$B3
ROM:C8AE B0 EB                       BCS     ESCRT
ROM:C8B0 29 07                       AND     #7
ROM:C8B2 0A                          ASL     A
ROM:C8B3 0A                          ASL     A
ROM:C8B4 0A                          ASL     A
ROM:C8B5 85 26                       STA     FKEYPL
ROM:C8B7 20 78 C8                    JSR     POLLKBD
ROM:C8BA C9 B0                       CMP     #$B0
ROM:C8BC 90 DD                       BCC     ESCRT
ROM:C8BE C9 B8                       CMP     #$B8
ROM:C8C0 B0 D9                       BCS     ESCRT
ROM:C8C2 29 07                       AND     #7
ROM:C8C4 05 26                       ORA     FKEYPL
ROM:C8C6 85 2A                       STA     SBAS2L
ROM:C8C8 85 2B                       STA     SBAS2H
ROM:C8CA A9 00                       LDA     #0              ; setup pointer
ROM:C8CC A8                          TAY
ROM:C8CD 85 26                       STA     FKEYPL
ROM:C8CF A9 48                       LDA     #$48 ; 'H'
ROM:C8D1 85 27                       STA     FKEYPH          ; function key stored from $4800
ROM:C8D3 20 0D CC                    JSR     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:C8D6
ROM:C8D6             loc_C8D6:                               ; CODE XREF: ESCHK+5A↓j
ROM:C8D6 C6 2A                       DEC     SBAS2L
ROM:C8D8 30 0C                       BMI     loc_C8E6        ; has IN#8 happened?
ROM:C8DA
ROM:C8DA             loc_C8DA:                               ; CODE XREF: ESCHK+58↓j
ROM:C8DA E6 26                       INC     FKEYPL
ROM:C8DC D0 02                       BNE     loc_C8E0
ROM:C8DE E6 27                       INC     FKEYPH
ROM:C8E0
ROM:C8E0             loc_C8E0:                               ; CODE XREF: ESCHK+52↑j
ROM:C8E0 B1 26                       LDA     (FKEYPL),Y
ROM:C8E2 10 F6                       BPL     loc_C8DA
ROM:C8E4 30 F0                       BMI     loc_C8D6
ROM:C8E6
ROM:C8E6             loc_C8E6:                               ; CODE XREF: ESCHK+4E↑j
ROM:C8E6 AD 00 48                    LDA     KEYFLG          ; has IN#8 happened?
ROM:C8E9 C9 66                       CMP     #$66 ; 'f'
ROM:C8EB
ROM:C8EB             loc_C8EB:                               ; CODE XREF: ROM:C6C0↑p
ROM:C8EB D0 09                       BNE     loc_C8F6
ROM:C8ED 20 29 F2                    JSR     RENEW
ROM:C8F0 20 A0 CB                    JSR     ENCUR           ; Enable Cursor
ROM:C8F3 4C 4D C8                    JMP     KEYIN_C8
ROM:C8F6             ; ---------------------------------------------------------------------------
ROM:C8F6
ROM:C8F6             loc_C8F6:                               ; CODE XREF: ESCHK:loc_C8EB↑j
ROM:C8F6 A9 99                       LDA     #$99
ROM:C8F8 8D 00 48                    STA     KEYFLG
ROM:C8FB 20 17 CC                    JSR     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:C8FB             ; End of function ESCHK
ROM:C8FB
ROM:C8FE
ROM:C8FE             ; =============== S U B R O U T I N E =======================================
ROM:C8FE
ROM:C8FE             ; get character from the function key buffer
ROM:C8FE
ROM:C8FE             KEYINB:                                 ; CODE XREF: KEYIN_C8+D↑p
ROM:C8FE E6 26                       INC     FKEYPL
ROM:C900 D0 02                       BNE     loc_C904
ROM:C902 E6 27                       INC     FKEYPH
ROM:C904
ROM:C904             loc_C904:                               ; CODE XREF: KEYINB+2↑j
ROM:C904 20 0D CC                    JSR     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:C907 A0 00                       LDY     #0
ROM:C909 B1 26                       LDA     (FKEYPL),Y
ROM:C90B 10 03                       BPL     KEYBRT          ; end of a function key string?
ROM:C90D 8C 00 48                    STY     KEYFLG          ; yes, disable fn key
ROM:C910
ROM:C910             KEYBRT:                                 ; CODE XREF: KEYINB+D↑j
ROM:C910 20 17 CC                    JSR     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:C913 09 80                       ORA     #$80
ROM:C915 60                          RTS
ROM:C915             ; End of function KEYINB
ROM:C915
ROM:C916
ROM:C916             ; =============== S U B R O U T I N E =======================================
ROM:C916
ROM:C916             ; see if CTRL-S pressed
ROM:C916
ROM:C916             VIDWAIT:                                ; CODE XREF: STORAD+5↓p
ROM:C916 AD 00 C0                    LDA     KEYBOARD
ROM:C919 C9 93                       CMP     #$93            ; CTRL-S - Stop List
ROM:C91B D0 0F                       BNE     VWDONE
ROM:C91D 2C 10 C0                    BIT     KEYSTRB
ROM:C920
ROM:C920             VWLOOP:                                 ; CODE XREF: VIDWAIT+D↓j
ROM:C920 AD 00 C0                    LDA     KEYBOARD
ROM:C923 10 FB                       BPL     VWLOOP
ROM:C925 C9 83                       CMP     #$83            ; CTRL-C?
ROM:C927 F0 03                       BEQ     VWDONE
ROM:C929 2C 10 C0                    BIT     KEYSTRB
ROM:C92C
ROM:C92C             VWDONE:                                 ; CODE XREF: VIDWAIT+5↑j
ROM:C92C                                                     ; VIDWAIT+11↑j
ROM:C92C 60                          RTS
ROM:C92C             ; End of function VIDWAIT
ROM:C92C
ROM:C92D
ROM:C92D             ; =============== S U B R O U T I N E =======================================
ROM:C92D
ROM:C92D             ; change bank setup to 2,1,X,F when running 80col CPM/PASCAL
ROM:C92D             ; 0 must be outside virtual memory area as it contains the screen mem
ROM:C92D
ROM:C92D             WBANK:                                  ; CODE XREF: SETUP↑p
ROM:C92D A9 02                       LDA     #2
ROM:C92F 8D 7D C0                    STA     SBANK2          ; clopy block#1 into RAM#2
ROM:C932 A0 00                       LDY     #0
ROM:C934
ROM:C934             WBANK1:                                 ; CODE XREF: WBANK+E↓j
ROM:C934 B9 00 00                    LDA     0,Y             ; save ZERO Page data
ROM:C937 99 00 40                    STA     $4000,Y
ROM:C93A C8                          INY
ROM:C93B D0 F7                       BNE     WBANK1          ; save ZERO Page data
ROM:C93D 84 00                       STY     byte_0          ; now zero page is free to use.
ROM:C93F 84 02                       STY     byte_2
ROM:C941 A9 01                       LDA     #1
ROM:C943 85 01                       STA     byte_1
ROM:C945 A9 41                       LDA     #$41 ; 'A'
ROM:C947 85 03                       STA     byte_3
ROM:C949
ROM:C949             WBANK2:                                 ; CODE XREF: WBANK+21↓j
ROM:C949                                                     ; WBANK+2B↓j
ROM:C949 B1 00                       LDA     (0),Y
ROM:C94B 91 02                       STA     (2),Y
ROM:C94D C8                          INY
ROM:C94E D0 F9                       BNE     WBANK2
ROM:C950 E6 01                       INC     byte_1
ROM:C952 E6 03                       INC     byte_3
ROM:C954 A5 03                       LDA     byte_3
ROM:C956 C9 80                       CMP     #$80            ; Whole 16K finished?
ROM:C958 90 EF                       BCC     WBANK2
ROM:C95A
ROM:C95A             WBANK3:                                 ; CODE XREF: WBANK+34↓j
ROM:C95A B9 00 40                    LDA     $4000,Y
ROM:C95D 99 00 00                    STA     0,Y             ; recover ZERO page
ROM:C960 C8                          INY
ROM:C961 D0 F7                       BNE     WBANK3
ROM:C963 A9 02                       LDA     #2
ROM:C965 8D 7C C0                    STA     SBANK1          ; $0000-$3FFF
ROM:C968 A9 01                       LDA     #1
ROM:C96A 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
ROM:C96D 60                          RTS
ROM:C96D             ; End of function WBANK
ROM:C96D
ROM:C96D             ; ---------------------------------------------------------------------------
ROM:C96E 2D          SUBTBL:         .BYTE $2D ; -           ; DATA XREF: VIDOU1+12↓t
ROM:C96E                                                     ; low order byte (-1) of char out handlers. High byte is $CA
ROM:C96F 53                          .BYTE $53 ; S
ROM:C970 16                          .BYTE $16
ROM:C971 A6                          .BYTE $A6
ROM:C972 7E                          .BYTE $7E ; ~
ROM:C973 75                          .BYTE $75 ; u
ROM:C974 28                          .BYTE $28 ; (
ROM:C975 6A                          .BYTE $6A ; j
ROM:C976 16                          .BYTE $16
ROM:C977 16                          .BYTE $16
ROM:C978 1F                          .BYTE $1F
ROM:C979 96                          .BYTE $96
ROM:C97A 4A                          .BYTE $4A ; J
ROM:C97B 5D                          .BYTE $5D ; ]
ROM:C97C 75          ESCTBL:         .BYTE $75 ; u
ROM:C97D 1F                          .BYTE $1F
ROM:C97E 53                          .BYTE $53 ; S
ROM:C97F A6                          .BYTE $A6
ROM:C980 5D                          .BYTE $5D ; ]
ROM:C981 96                          .BYTE $96
ROM:C982 7E                          .BYTE $7E ; ~
ROM:C983 6A                          .BYTE $6A ; j
ROM:C984 C4          ESCTB1:         .BYTE $C4               ; DATA XREF: ESCX-9↓t
ROM:C984                                                     ; ROAD+977↓t
ROM:C985 C2                          .BYTE $C2
ROM:C986 C1                          .BYTE $C1
ROM:C987 C8                          .BYTE $C8
ROM:C988 C3                          .BYTE $C3
ROM:C989 00          SCREENBASE:     .BYTE 0                 ; table of screen base addresses. low-order byte only, 24 entries
ROM:C98A 80                          .BYTE $80
ROM:C98B 00                          .BYTE 0
ROM:C98C 80                          .BYTE $80
ROM:C98D 00                          .BYTE 0
ROM:C98E 80                          .BYTE $80
ROM:C98F 00                          .BYTE 0
ROM:C990 80                          .BYTE $80
ROM:C991 28                          .BYTE $28
ROM:C992 A8                          .BYTE $A8
ROM:C993 28                          .BYTE $28
ROM:C994 A8                          .BYTE $A8
ROM:C995 28                          .BYTE $28
ROM:C996 A8                          .BYTE $A8
ROM:C997 28                          .BYTE $28
ROM:C998 A8                          .BYTE $A8
ROM:C999 50                          .BYTE $50
ROM:C99A D0                          .BYTE $D0
ROM:C99B 50                          .BYTE $50
ROM:C99C D0                          .BYTE $D0
ROM:C99D 50                          .BYTE $50
ROM:C99E D0                          .BYTE $D0
ROM:C99F 50                          .BYTE $50
ROM:C9A0 D0                          .BYTE $D0
ROM:C9A1 FF                          .BYTE $FF               ; free space
ROM:C9A2 FF                          .BYTE $FF
ROM:C9A3 FF                          .BYTE $FF
ROM:C9A4 FF                          .BYTE $FF
ROM:C9A5 FF                          .BYTE $FF
ROM:C9A6 FF                          .BYTE $FF
ROM:C9A7 FF                          .BYTE $FF
ROM:C9A8 FF                          .BYTE $FF
ROM:C9A9 FF                          .BYTE $FF
ROM:C9AA             ; ---------------------------------------------------------------------------
ROM:C9AA AD 7B 07                    LDA     POWER           ; pascal and cp/m entry point
ROM:C9AD 29 FC                       AND     #$FC
ROM:C9AF C9 90                       CMP     #$90
ROM:C9B1 F0 03                       BEQ     loc_C9B6
ROM:C9B3 20 01 C8                    JSR     SETUP           ; init 80 col
ROM:C9B6
ROM:C9B6             loc_C9B6:                               ; CODE XREF: ROM:C9B1↑j
ROM:C9B6 20 DF CB                    JSR     DECUR
ROM:C9B9 AD 7B 07                    LDA     POWER
ROM:C9BC 29 03                       AND     #3              ; 2 or 1, if it is go XY
ROM:C9BE D0 09                       BNE     GOXY
ROM:C9C0
ROM:C9C0             ; =============== S U B R O U T I N E =======================================
ROM:C9C0
ROM:C9C0
ROM:C9C0             sub_C9C0:                               ; CODE XREF: ROM:C60E↑p
ROM:C9C0 AD 7B 06                    LDA     DISPBYTE
ROM:C9C3 20 F9 C9                    JSR     VIDOUT
ROM:C9C6
ROM:C9C6             PSCORT:                                 ; CODE XREF: ROM:C9CC↓j
ROM:C9C6 4C A0 CB                    JMP     ENCUR           ; Enable Cursor
ROM:C9C6             ; End of function sub_C9C0
ROM:C9C6
ROM:C9C9             ; ---------------------------------------------------------------------------
ROM:C9C9
ROM:C9C9             GOXY:                                   ; CODE XREF: ROM:C9BE↑j
ROM:C9C9 20 CF C9                    JSR     GOXY1
ROM:C9CC 4C C6 C9                    JMP     PSCORT
ROM:C9CF
ROM:C9CF             ; =============== S U B R O U T I N E =======================================
ROM:C9CF
ROM:C9CF
ROM:C9CF             GOXY1:                                  ; CODE XREF: ROM:GOXY↑p
ROM:C9CF                                                     ; COUT1-30E3↓p ...
ROM:C9CF AD 7B 06                    LDA     DISPBYTE
ROM:C9D2 29 7F                       AND     #$7F
ROM:C9D4 E9 20                       SBC     #$20 ; ' '
ROM:C9D6 48                          PHA
ROM:C9D7 CE 7B 07                    DEC     POWER
ROM:C9DA AD 7B 07                    LDA     POWER
ROM:C9DD 29 03                       AND     #3
ROM:C9DF D0 13                       BNE     GOTOX
ROM:C9E1 68                          PLA                     ; it is Y
ROM:C9E2 C5 23                       CMP     WNDBTM          ; Y > Window Bottom?
ROM:C9E4 B0 02                       BCS     loc_C9E8
ROM:C9E6 85 25                       STA     CVERT
ROM:C9E8
ROM:C9E8             loc_C9E8:                               ; CODE XREF: GOXY1+15↑j
ROM:C9E8 AD FB 05                    LDA     TEMPX
ROM:C9EB C5 21                       CMP     WNDWTH          ; X > Window Width?
ROM:C9ED B0 02                       BCS     loc_C9F1
ROM:C9EF 85 24                       STA     CHORIZ
ROM:C9F1
ROM:C9F1             loc_C9F1:                               ; CODE XREF: GOXY1+1E↑j
ROM:C9F1 4C 3F CB                    JMP     VTAB            ; calculate new screen address and position cursor
ROM:C9F4             ; ---------------------------------------------------------------------------
ROM:C9F4
ROM:C9F4             GOTOX:                                  ; CODE XREF: GOXY1+10↑j
ROM:C9F4 68                          PLA
ROM:C9F5 8D FB 05                    STA     TEMPX
ROM:C9F8 60                          RTS
ROM:C9F8             ; End of function GOXY1
ROM:C9F8
ROM:C9F9
ROM:C9F9             ; =============== S U B R O U T I N E =======================================
ROM:C9F9
ROM:C9F9
ROM:C9F9             VIDOUT:                                 ; CODE XREF: sub_C9C0+3↑p
ROM:C9F9 C9 20                       CMP     #$20 ; ' '
ROM:C9FB 90 04                       BCC     VIDOU1          ; check for displayable chars
ROM:C9FD 09 80                       ORA     #$80
ROM:C9FF 30 17                       BMI     STORAD          ; always
ROM:C9FF             ; End of function VIDOUT
ROM:C9FF
ROM:CA01
ROM:CA01             ; =============== S U B R O U T I N E =======================================
ROM:CA01
ROM:CA01
ROM:CA01             VIDOU1:                                 ; CODE XREF: VIDOUT+2↑j
ROM:CA01                                                     ; ROAD+950↓p ...
ROM:CA01 C9 07                       CMP     #7
ROM:CA03 90 12                       BCC     VIDRTS
ROM:CA05 C9 0E                       CMP     #$E
ROM:CA07 90 06                       BCC     VIDCON
ROM:CA09 C9 19                       CMP     #$19
ROM:CA0B 90 0A                       BCC     VIDRTS
ROM:CA0D E9 0B                       SBC     #$B
ROM:CA0F
ROM:CA0F             VIDCON:                                 ; CODE XREF: VIDOU1+6↑j
ROM:CA0F A8                          TAY
ROM:CA10 A9 CA                       LDA     #$CA
ROM:CA12 48                          PHA
ROM:CA13 B9 67 C9                    LDA     SUBTBL-7,Y      ; low order byte (-1) of char out handlers. High byte is $CA
ROM:CA16 48                          PHA                     ; push subroutine address on stack, then RTS to it.
ROM:CA17
ROM:CA17             VIDRTS:                                 ; CODE XREF: VIDOU1+2↑j
ROM:CA17                                                     ; VIDOU1+A↑j ...
ROM:CA17 60                          RTS
ROM:CA17             ; End of function VIDOU1
ROM:CA17
ROM:CA18
ROM:CA18             ; =============== S U B R O U T I N E =======================================
ROM:CA18
ROM:CA18             ; horizontal position
ROM:CA18
ROM:CA18             STORAD:                                 ; CODE XREF: VIDOUT+6↑j
ROM:CA18                                                     ; ROAD:loc_CC54↓p ...
ROM:CA18
ROM:CA18             ; FUNCTION CHUNK AT ROM:CAA4 SIZE 0000009B BYTES
ROM:CA18
ROM:CA18 A4 24                       LDY     CHORIZ
ROM:CA1A 20 54 CB                    JSR     CHARDISP        ; Y = Horizontal Offset
ROM:CA1A                                                     ; A = Character to display
ROM:CA1D 20 16 C9                    JSR     VIDWAIT         ; see if CTRL-S pressed
ROM:CA20
ROM:CA20             ADVANCE:                                ; CODE XREF: ROM:FBF7↓j
ROM:CA20 E6 24                       INC     CHORIZ
ROM:CA22 A5 24                       LDA     CHORIZ          ; does cursor exceed window width?
ROM:CA24 C5 21                       CMP     WNDWTH
ROM:CA26 B0 7C                       BCS     CRLF
ROM:CA28 60                          RTS
ROM:CA28             ; End of function STORAD
ROM:CA28
ROM:CA29
ROM:CA29             ; =============== S U B R O U T I N E =======================================
ROM:CA29
ROM:CA29             ; cursor to left of screen
ROM:CA29
ROM:CA29             CR:                                     ; CODE XREF: STORAD:CRLF↓p
ROM:CA29 A9 00                       LDA     #0
ROM:CA2B 85 24                       STA     CHORIZ
ROM:CA2D 60                          RTS
ROM:CA2D             ; End of function CR
ROM:CA2D
ROM:CA2E             ; ---------------------------------------------------------------------------
ROM:CA2E
ROM:CA2E             BELL:                                   ; CODE XREF: ROM:FBE7↓j
ROM:CA2E A9 C0                       LDA     #$C0            ; Buzz speaker at 1 kHz for 0.1 second
ROM:CA30 85 2A                       STA     SBAS2L
ROM:CA32 38                          SEC
ROM:CA33
ROM:CA33             loc_CA33:                               ; CODE XREF: ROM:CA48↓j
ROM:CA33 A9 08                       LDA     #8
ROM:CA35
ROM:CA35             loc_CA35:                               ; CODE XREF: ROM:CA38↓j
ROM:CA35                                                     ; ROM:CA41↓j
ROM:CA35 2C C2 C1                    BIT     HORIZSC         ; Read Horizontal blank status
ROM:CA38 30 FB                       BMI     loc_CA35
ROM:CA3A
ROM:CA3A             loc_CA3A:                               ; CODE XREF: ROM:CA3D↓j
ROM:CA3A 2C C2 C1                    BIT     HORIZSC         ; Read Horizontal blank status
ROM:CA3D 10 FB                       BPL     loc_CA3A
ROM:CA3F E9 01                       SBC     #1
ROM:CA41 D0 F2                       BNE     loc_CA35
ROM:CA43 AD 30 C0                    LDA     SPEAKER         ; toggle speaker
ROM:CA46 C6 2A                       DEC     SBAS2L
ROM:CA48 D0 E9                       BNE     loc_CA33
ROM:CA4A 60                          RTS
ROM:CA4B             ; ---------------------------------------------------------------------------
ROM:CA4B
ROM:CA4B             GOTOXY:
ROM:CA4B A9 02                       LDA     #2
ROM:CA4D 0D 7B 07                    ORA     POWER
ROM:CA50 8D 7B 07                    STA     POWER
ROM:CA53 60                          RTS
ROM:CA54             ; ---------------------------------------------------------------------------
ROM:CA54
ROM:CA54             BS:                                     ; CODE XREF: ROM:FC13↓j
ROM:CA54 C6 24                       DEC     CHORIZ
ROM:CA56 10 BF                       BPL     VIDRTS
ROM:CA58 A5 21                       LDA     WNDWTH          ; reached left margin, go up one line
ROM:CA5A 85 24                       STA     CHORIZ
ROM:CA5C C6 24                       DEC     CHORIZ          ; fall through to UP
ROM:CA5E
ROM:CA5E             UP:                                     ; CODE XREF: ROM:FC1D↓j
ROM:CA5E A5 25                       LDA     CVERT
ROM:CA60 C5 22                       CMP     WNDTOP          ; check if on top line already
ROM:CA62 90 B3                       BCC     VIDRTS
ROM:CA64 F0 B1                       BEQ     VIDRTS
ROM:CA66 C6 25                       DEC     CVERT
ROM:CA68 4C 3F CB                    JMP     VTAB            ; calculate new screen address and position cursor
ROM:CA6B
ROM:CA6B             ; =============== S U B R O U T I N E =======================================
ROM:CA6B
ROM:CA6B
ROM:CA6B             HOME:                                   ; CODE XREF: F8HOME:CLRSCRN↓p
ROM:CA6B A5 22                       LDA     WNDTOP
ROM:CA6D 85 25                       STA     CVERT
ROM:CA6F A9 00                       LDA     #0
ROM:CA71 85 24                       STA     CHORIZ
ROM:CA73 4C 3F CB                    JMP     VTAB            ; calculate new screen address and position cursor
ROM:CA73             ; End of function HOME
ROM:CA73
ROM:CA76             ; ---------------------------------------------------------------------------
ROM:CA76             ; START OF FUNCTION CHUNK FOR F8HOME
ROM:CA76             ;   ADDITIONAL PARENT FUNCTION SETUP
ROM:CA76
ROM:CA76             CLRSCRN:                                ; CODE XREF: SETUP+1E↑j
ROM:CA76                                                     ; F8HOME+3↓j
ROM:CA76 20 6B CA                    JSR     HOME
ROM:CA79 A5 22                       LDA     WNDTOP
ROM:CA7B A0 00                       LDY     #0
ROM:CA7D F0 04                       BEQ     loc_CA83
ROM:CA7F
ROM:CA7F             CLREOP:                                 ; CODE XREF: ROM:FC45↓j
ROM:CA7F A4 24                       LDY     CHORIZ
ROM:CA81 A5 25                       LDA     CVERT
ROM:CA83
ROM:CA83             loc_CA83:                               ; CODE XREF: F8HOME-31DB↑j
ROM:CA83                                                     ; F8HOME-31C6↓j
ROM:CA83 48                          PHA
ROM:CA84 20 41 CB                    JSR     ADRCAL          ; Calculate Screen Line base address
ROM:CA84                                                     ; A = Line Number
ROM:CA84                                                     ; SBASL,H = Base Address for this line
ROM:CA87 20 99 CA                    JSR     CLEOLZ
ROM:CA8A A0 00                       LDY     #0
ROM:CA8C 68                          PLA
ROM:CA8D 18                          CLC
ROM:CA8E 69 01                       ADC     #1
ROM:CA90 C5 23                       CMP     WNDBTM
ROM:CA92 90 EF                       BCC     loc_CA83
ROM:CA94 4C 3F CB                    JMP     VTAB            ; calculate new screen address and position cursor
ROM:CA94             ; END OF FUNCTION CHUNK FOR F8HOME
ROM:CA97
ROM:CA97             ; =============== S U B R O U T I N E =======================================
ROM:CA97
ROM:CA97
ROM:CA97             CLREOL:                                 ; CODE XREF: j_CLREOL↑j
ROM:CA97                                                     ; ROAD+997↓p ...
ROM:CA97 A4 24                       LDY     CHORIZ
ROM:CA97             ; End of function CLREOL
ROM:CA97
ROM:CA99
ROM:CA99             ; =============== S U B R O U T I N E =======================================
ROM:CA99
ROM:CA99
ROM:CA99             CLEOLZ:                                 ; CODE XREF: F8HOME-31D1↑p
ROM:CA99                                                     ; STORAD+124↓p ...
ROM:CA99 A9 A0                       LDA     #$A0
ROM:CA9B
ROM:CA9B             loc_CA9B:                               ; CODE XREF: CLEOLZ+8↓j
ROM:CA9B 20 54 CB                    JSR     CHARDISP        ; Y = Horizontal Offset
ROM:CA9B                                                     ; A = Character to display
ROM:CA9E C8                          INY
ROM:CA9F C4 21                       CPY     WNDWTH
ROM:CAA1 90 F8                       BCC     loc_CA9B
ROM:CAA3 60                          RTS
ROM:CAA3             ; End of function CLEOLZ
ROM:CAA3
ROM:CAA4             ; ---------------------------------------------------------------------------
ROM:CAA4             ; START OF FUNCTION CHUNK FOR STORAD
ROM:CAA4
ROM:CAA4             CRLF:                                   ; CODE XREF: STORAD+E↑j
ROM:CAA4                                                     ; ENTRY2+3↓j
ROM:CAA4 20 29 CA                    JSR     CR              ; cursor to left of screen
ROM:CAA7
ROM:CAA7             LF:                                     ; CODE XREF: ROM:FC69↓j
ROM:CAA7 E6 25                       INC     CVERT
ROM:CAA9 A5 25                       LDA     CVERT
ROM:CAAB C5 23                       CMP     WNDBTM
ROM:CAAD B0 03                       BCS     loc_CAB2
ROM:CAAF 4C 41 CB                    JMP     ADRCAL          ; Calculate Screen Line base address
ROM:CAAF                                                     ; A = Line Number
ROM:CAAF                                                     ; SBASL,H = Base Address for this line
ROM:CAB2             ; ---------------------------------------------------------------------------
ROM:CAB2
ROM:CAB2             loc_CAB2:                               ; CODE XREF: STORAD+95↑j
ROM:CAB2 C6 25                       DEC     CVERT
ROM:CAB4
ROM:CAB4             SCROLL:
ROM:CAB4 A5 21                       LDA     WNDWTH
ROM:CAB6 48                          PHA
ROM:CAB7 18                          CLC
ROM:CAB8 65 20                       ADC     WNDLEFT
ROM:CABA A8                          TAY
ROM:CABB 88                          DEY
ROM:CABC 84 21                       STY     WNDWTH
ROM:CABE 20 0D CC                    JSR     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:CAC1 A5 22                       LDA     WNDTOP
ROM:CAC3 48                          PHA
ROM:CAC4 20 41 CB                    JSR     ADRCAL          ; Calculate Screen Line base address
ROM:CAC4                                                     ; A = Line Number
ROM:CAC4                                                     ; SBASL,H = Base Address for this line
ROM:CAC7 20 36 C8                    JSR     COMPAT
ROM:CACA
ROM:CACA             SCROLL1:                                ; CODE XREF: STORAD+D8↓j
ROM:CACA                                                     ; STORAD+115↓j
ROM:CACA A5 28                       LDA     SBASL
ROM:CACC 85 2A                       STA     SBAS2L
ROM:CACE A5 29                       LDA     SBASH
ROM:CAD0 85 2B                       STA     SBAS2H
ROM:CAD2 68                          PLA                     ; get line count back
ROM:CAD3 18                          CLC
ROM:CAD4 69 01                       ADC     #1
ROM:CAD6 C5 23                       CMP     WNDBTM
ROM:CAD8 B0 57                       BCS     SCROLL6
ROM:CADA 48                          PHA
ROM:CADB 20 41 CB                    JSR     ADRCAL          ; Calculate Screen Line base address
ROM:CADB                                                     ; A = Line Number
ROM:CADB                                                     ; SBASL,H = Base Address for this line
ROM:CADE 20 36 C8                    JSR     COMPAT
ROM:CAE1 A4 21                       LDY     WNDWTH
ROM:CAE3 C0 28                       CPY     #40             ; 40 or 80 column mode?
ROM:CAE5 B0 0B                       BCS     loc_CAF2        ; some transformation for 80 col textmode
ROM:CAE7
ROM:CAE7             SCROLL2:                                ; CODE XREF: STORAD+D6↓j
ROM:CAE7                                                     ; STORAD+117↓j
ROM:CAE7 B1 28                       LDA     (SBASL),Y
ROM:CAE9 91 2A                       STA     (SBAS2L),Y
ROM:CAEB 88                          DEY
ROM:CAEC C4 20                       CPY     WNDLEFT         ; one line finished?
ROM:CAEE 10 F7                       BPL     SCROLL2         ; no, continue
ROM:CAF0 30 D8                       BMI     SCROLL1         ; yes, go for next line
ROM:CAF2
ROM:CAF2             loc_CAF2:                               ; CODE XREF: STORAD+CD↑j
ROM:CAF2 A5 29                       LDA     SBASH           ; some transformation for 80 col textmode
ROM:CAF4 09 04                       ORA     #4
ROM:CAF6 85 29                       STA     SBASH
ROM:CAF8 A5 2B                       LDA     SBAS2H
ROM:CAFA 09 04                       ORA     #4
ROM:CAFC 85 2B                       STA     SBAS2H
ROM:CAFE A5 20                       LDA     WNDLEFT
ROM:CB00 38                          SEC
ROM:CB01 E9 28                       SBC     #40
ROM:CB03 85 20                       STA     WNDLEFT
ROM:CB05 98                          TYA
ROM:CB06 38                          SEC
ROM:CB07 E9 28                       SBC     #40
ROM:CB09 A8                          TAY
ROM:CB0A
ROM:CB0A             loc_CB0A:                               ; CODE XREF: STORAD+FC↓j
ROM:CB0A B1 28                       LDA     (SBASL),Y
ROM:CB0C 91 2A                       STA     (SBAS2L),Y
ROM:CB0E 88                          DEY
ROM:CB0F C4 20                       CPY     WNDLEFT
ROM:CB11 30 03                       BMI     loc_CB16
ROM:CB13 98                          TYA
ROM:CB14 10 F4                       BPL     loc_CB0A
ROM:CB16
ROM:CB16             loc_CB16:                               ; CODE XREF: STORAD+F9↑j
ROM:CB16 A5 29                       LDA     SBASH
ROM:CB18 49 04                       EOR     #4
ROM:CB1A 85 29                       STA     SBASH
ROM:CB1C A5 2B                       LDA     SBAS2H
ROM:CB1E 49 04                       EOR     #4
ROM:CB20 85 2B                       STA     SBAS2H
ROM:CB22 A0 27                       LDY     #39
ROM:CB24 A5 20                       LDA     WNDLEFT
ROM:CB26 18                          CLC
ROM:CB27 69 28                       ADC     #40
ROM:CB29 85 20                       STA     WNDLEFT
ROM:CB2B C9 28                       CMP     #40
ROM:CB2D B0 9B                       BCS     SCROLL1         ; left edge >=40, we are finished
ROM:CB2F 90 B6                       BCC     SCROLL2
ROM:CB31
ROM:CB31             SCROLL6:                                ; CODE XREF: STORAD+C0↑j
ROM:CB31 20 36 C8                    JSR     COMPAT
ROM:CB34 20 17 CC                    JSR     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:CB37 68                          PLA
ROM:CB38 85 21                       STA     WNDWTH
ROM:CB3A A0 00                       LDY     #0
ROM:CB3C 20 99 CA                    JSR     CLEOLZ
ROM:CB3C             ; END OF FUNCTION CHUNK FOR STORAD
ROM:CB3F
ROM:CB3F             ; =============== S U B R O U T I N E =======================================
ROM:CB3F
ROM:CB3F             ; calculate new screen address and position cursor
ROM:CB3F
ROM:CB3F             VTAB:                                   ; CODE XREF: GOXY1:loc_C9F1↑j
ROM:CB3F                                                     ; ROM:CA68↑j ...
ROM:CB3F A5 25                       LDA     CVERT
ROM:CB3F             ; End of function VTAB
ROM:CB3F
ROM:CB41
ROM:CB41             ; =============== S U B R O U T I N E =======================================
ROM:CB41
ROM:CB41             ; Calculate Screen Line base address
ROM:CB41             ; A = Line Number
ROM:CB41             ; SBASL,H = Base Address for this line
ROM:CB41
ROM:CB41             ADRCAL:                                 ; CODE XREF: F8HOME-31D4↑p
ROM:CB41                                                     ; STORAD+97↑j ...
ROM:CB41 84 28                       STY     SBASL
ROM:CB43 A8                          TAY
ROM:CB44 4A                          LSR     A
ROM:CB45 29 03                       AND     #3
ROM:CB47 0D 7B 05                    ORA     TXTMOD          ; TEXT MODE : $10 = 80 cols, $04 = 40 cols
ROM:CB4A 85 29                       STA     SBASH
ROM:CB4C B9 89 C9                    LDA     SCREENBASE,Y
ROM:CB4F A4 28                       LDY     SBASL
ROM:CB51 85 28                       STA     SBASL
ROM:CB53 60                          RTS
ROM:CB53             ; End of function ADRCAL
ROM:CB53
ROM:CB54
ROM:CB54             ; =============== S U B R O U T I N E =======================================
ROM:CB54
ROM:CB54             ; Y = Horizontal Offset
ROM:CB54             ; A = Character to display
ROM:CB54
ROM:CB54             CHARDISP:                               ; CODE XREF: ROM:C372↑p
ROM:CB54                                                     ; STORAD+2↑p ...
ROM:CB54 20 81 CB                    JSR     TEST40C         ; require address modification?
ROM:CB57 B0 11                       BCS     CHRDIS1
ROM:CB59 20 0D CC                    JSR     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:CB5C 20 36 C8                    JSR     COMPAT
ROM:CB5F 91 28                       STA     (SBASL),Y
ROM:CB61 20 36 C8                    JSR     COMPAT
ROM:CB64 AC FB 04                    LDY     TEMPY
ROM:CB67 4C 17 CC                    JMP     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:CB6A             ; ---------------------------------------------------------------------------
ROM:CB6A
ROM:CB6A             CHRDIS1:                                ; CODE XREF: CHARDISP+3↑j
ROM:CB6A 20 8E CB                    JSR     SUBY40          ; modify base address
ROM:CB6D 20 0D CC                    JSR     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:CB70 20 36 C8                    JSR     COMPAT
ROM:CB73 91 28                       STA     (SBASL),Y
ROM:CB75 20 36 C8                    JSR     COMPAT
ROM:CB78 20 17 CC                    JSR     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:CB7B AC FB 04                    LDY     TEMPY
ROM:CB7E 4C 97 CB                    JMP     ADDY40
ROM:CB7E             ; End of function CHARDISP
ROM:CB7E
ROM:CB81
ROM:CB81             ; =============== S U B R O U T I N E =======================================
ROM:CB81
ROM:CB81             ; require address modification?
ROM:CB81
ROM:CB81             TEST40C:                                ; CODE XREF: CHARDISP↑p
ROM:CB81                                                     ; ENCUR+3↓p
ROM:CB81 48                          PHA
ROM:CB82 8C FB 04                    STY     TEMPY
ROM:CB85 98                          TYA
ROM:CB86 18                          CLC
ROM:CB87 65 20                       ADC     WNDLEFT         ; Y = Y + WNDLEFT
ROM:CB89 A8                          TAY
ROM:CB8A C9 28                       CMP     #40             ; are we somewhere in the 41-79 range?
ROM:CB8C 68                          PLA
ROM:CB8D 60                          RTS
ROM:CB8D             ; End of function TEST40C
ROM:CB8D
ROM:CB8E
ROM:CB8E             ; =============== S U B R O U T I N E =======================================
ROM:CB8E
ROM:CB8E             ; modify base address
ROM:CB8E
ROM:CB8E             SUBY40:                                 ; CODE XREF: CHARDISP:CHRDIS1↑p
ROM:CB8E                                                     ; ENCUR:ENCUR1↓p
ROM:CB8E 48                          PHA
ROM:CB8F 98                          TYA                     ; Y=Y-40
ROM:CB90 38                          SEC
ROM:CB91 E9 28                       SBC     #40
ROM:CB93 A8                          TAY
ROM:CB94 4C 98 CB                    JMP     TOGGSH
ROM:CB97             ; ---------------------------------------------------------------------------
ROM:CB97
ROM:CB97             ADDY40:                                 ; CODE XREF: CHARDISP+2A↑j
ROM:CB97                                                     ; ENCUR+1F↓j
ROM:CB97 48                          PHA
ROM:CB98
ROM:CB98             TOGGSH:                                 ; CODE XREF: SUBY40+6↑j
ROM:CB98 A5 29                       LDA     SBASH
ROM:CB9A 49 04                       EOR     #4
ROM:CB9C 85 29                       STA     SBASH
ROM:CB9E 68                          PLA
ROM:CB9F 60                          RTS
ROM:CB9F             ; End of function SUBY40
ROM:CB9F
ROM:CBA0
ROM:CBA0             ; =============== S U B R O U T I N E =======================================
ROM:CBA0
ROM:CBA0             ; Enable Cursor
ROM:CBA0
ROM:CBA0             ENCUR:                                  ; CODE XREF: ROM:C37B↑p
ROM:CBA0                                                     ; ESCHK+66↑p ...
ROM:CBA0 48                          PHA
ROM:CBA1 A4 24                       LDY     CHORIZ
ROM:CBA3 20 81 CB                    JSR     TEST40C         ; require address modification?
ROM:CBA6 B0 0A                       BCS     ENCUR1
ROM:CBA8 20 0D CC                    JSR     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:CBAB 20 C2 CB                    JSR     ENCUR3
ROM:CBAE 68                          PLA
ROM:CBAF 4C 17 CC                    JMP     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:CBB2             ; ---------------------------------------------------------------------------
ROM:CBB2
ROM:CBB2             ENCUR1:                                 ; CODE XREF: ENCUR+6↑j
ROM:CBB2 20 8E CB                    JSR     SUBY40          ; modify base address
ROM:CBB5 20 0D CC                    JSR     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:CBB8 20 C2 CB                    JSR     ENCUR3
ROM:CBBB 20 17 CC                    JSR     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:CBBE 68                          PLA
ROM:CBBF 4C 97 CB                    JMP     ADDY40
ROM:CBBF             ; End of function ENCUR
ROM:CBBF
ROM:CBC2
ROM:CBC2             ; =============== S U B R O U T I N E =======================================
ROM:CBC2
ROM:CBC2
ROM:CBC2             ENCUR3:                                 ; CODE XREF: ENCUR+B↑p
ROM:CBC2                                                     ; ENCUR+18↑p
ROM:CBC2 20 36 C8                    JSR     COMPAT
ROM:CBC5 B1 28                       LDA     (SBASL),Y
ROM:CBC7 8D FB 06                    STA     TEMPA
ROM:CBCA 2C C5 C1                    BIT     TWOMHZ          ; two kinds of cursor
ROM:CBCD 30 06                       BMI     loc_CBD5        ; for 80 column text
ROM:CBCF 29 3F                       AND     #$3F ; '?'      ; for 40 column text
ROM:CBD1 09 40                       ORA     #$40 ; '@'
ROM:CBD3 D0 02                       BNE     loc_CBD7
ROM:CBD5
ROM:CBD5             loc_CBD5:                               ; CODE XREF: ENCUR3+B↑j
ROM:CBD5 29 7F                       AND     #$7F            ; for 80 column text
ROM:CBD7
ROM:CBD7             loc_CBD7:                               ; CODE XREF: ENCUR3+11↑j
ROM:CBD7 91 28                       STA     (SBASL),Y
ROM:CBD9 AC FB 04                    LDY     TEMPY
ROM:CBDC 4C 36 C8                    JMP     COMPAT
ROM:CBDC             ; End of function ENCUR3
ROM:CBDC
ROM:CBDF
ROM:CBDF             ; =============== S U B R O U T I N E =======================================
ROM:CBDF
ROM:CBDF
ROM:CBDF             DECUR:                                  ; CODE XREF: ROM:loc_C9B6↑p
ROM:CBDF                                                     ; ROAD+923↓p ...
ROM:CBDF 08                          PHP
ROM:CBE0 48                          PHA
ROM:CBE1 A4 24                       LDY     CHORIZ
ROM:CBE3 AD FB 06                    LDA     TEMPA
ROM:CBE6 20 54 CB                    JSR     CHARDISP        ; Y = Horizontal Offset
ROM:CBE6                                                     ; A = Character to display
ROM:CBE9 68                          PLA
ROM:CBEA 28                          PLP
ROM:CBEB 60                          RTS
ROM:CBEB             ; End of function DECUR
ROM:CBEB
ROM:CBEC             ; ---------------------------------------------------------------------------
ROM:CBEC             ; START OF FUNCTION CHUNK FOR ESCX
ROM:CBEC
ROM:CBEC             ESCX2:                                  ; CODE XREF: ESCX+6↓j
ROM:CBEC A8                          TAY
ROM:CBED B9 BB C8                    LDA     ESCTB1-$C9,Y
ROM:CBF0 20 FE CB                    JSR     ESCX1
ROM:CBF3 20 0C FD                    JSR     RDKEY
ROM:CBF3             ; END OF FUNCTION CHUNK FOR ESCX
ROM:CBF6
ROM:CBF6             ; =============== S U B R O U T I N E =======================================
ROM:CBF6
ROM:CBF6
ROM:CBF6             ESCX:                                   ; CODE XREF: sub_ADBA:j_ESCX↑j
ROM:CBF6                                                     ; MRDKEY_PATCH+2A32↓p
ROM:CBF6
ROM:CBF6             ; FUNCTION CHUNK AT ROM:CBEC SIZE 0000000A BYTES
ROM:CBF6
ROM:CBF6 C9 CE                       CMP     #$CE
ROM:CBF8 B0 12                       BCS     locret_CC0C     ; >= 'M' ?
ROM:CBFA C9 C9                       CMP     #$C9
ROM:CBFC B0 EE                       BCS     ESCX2           ; < 'I' ?
ROM:CBFC             ; End of function ESCX
ROM:CBFC
ROM:CBFE
ROM:CBFE             ; =============== S U B R O U T I N E =======================================
ROM:CBFE
ROM:CBFE
ROM:CBFE             ESCX1:                                  ; CODE XREF: ESCX-6↑p
ROM:CBFE                                                     ; ROAD+97A↓p ...
ROM:CBFE 29 3F                       AND     #$3F ; '?'
ROM:CC00 C9 08                       CMP     #8
ROM:CC02 B0 08                       BCS     locret_CC0C
ROM:CC04 A8                          TAY
ROM:CC05 A9 CA                       LDA     #$CA
ROM:CC07 48                          PHA
ROM:CC08 B9 7C C9                    LDA     ESCTBL,Y
ROM:CC0B 48                          PHA
ROM:CC0C
ROM:CC0C             locret_CC0C:                            ; CODE XREF: ESCX+2↑j
ROM:CC0C                                                     ; ESCX1+4↑j
ROM:CC0C 60                          RTS
ROM:CC0C             ; End of function ESCX1
ROM:CC0C
ROM:CC0D
ROM:CC0D             ; =============== S U B R O U T I N E =======================================
ROM:CC0D
ROM:CC0D             ; Bring in RAM0 to $4000-$7FFF
ROM:CC0D
ROM:CC0D             RAM0IN:                                 ; CODE XREF: KEYIN_C8↑p
ROM:CC0D                                                     ; ESCHK+49↑p ...
ROM:CC0D 08                          PHP
ROM:CC0E 48                          PHA
ROM:CC0F A9 00                       LDA     #0
ROM:CC11 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
ROM:CC14 68                          PLA
ROM:CC15 28                          PLP
ROM:CC16 60                          RTS
ROM:CC16             ; End of function RAM0IN
ROM:CC16
ROM:CC17
ROM:CC17             ; =============== S U B R O U T I N E =======================================
ROM:CC17
ROM:CC17             ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:CC17
ROM:CC17             RAMODU:                                 ; CODE XREF: KEYIN_C8+6↑p
ROM:CC17                                                     ; ESCHK+71↑p ...
ROM:CC17 08                          PHP
ROM:CC18 48                          PHA
ROM:CC19 AD 7B 07                    LDA     POWER           ; running CP/M or pascal?
ROM:CC1C 29 FC                       AND     #$FC
ROM:CC1E C9 90                       CMP     #$90
ROM:CC20 F0 06                       BEQ     MUSTR1          ; if yes, move RAM1 in
ROM:CC22 A5 C6                       LDA     PBANK2          ; Save SBANK2 value : $4000-$7FFF
ROM:CC24 C9 10                       CMP     #$10
ROM:CC26 90 02                       BCC     loc_CC2A
ROM:CC28
ROM:CC28             MUSTR1:                                 ; CODE XREF: RAMODU+9↑j
ROM:CC28 A9 01                       LDA     #1
ROM:CC2A
ROM:CC2A             loc_CC2A:                               ; CODE XREF: RAMODU+F↑j
ROM:CC2A 8D 7D C0                    STA     SBANK2          ; $4000-$7FFF
ROM:CC2D 68                          PLA
ROM:CC2E 28                          PLP
ROM:CC2F 60                          RTS
ROM:CC2F             ; End of function RAMODU
ROM:CC2F
ROM:CC30             ; ---------------------------------------------------------------------------
ROM:CC30             ; START OF FUNCTION CHUNK FOR ROAD
ROM:CC30
ROM:CC30             IO:                                     ; CODE XREF: ROAD:loc_C31E↑j
ROM:CC30                                                     ; ROAD+58↑j
ROM:CC30 20 CA CC                    JSR     TUGGLE          ; Tuggle interchanges a set of ZERO page locs with Slot#3 locations
ROM:CC30                                                     ; Allows use by different operating systems
ROM:CC33 20 DF CB                    JSR     DECUR
ROM:CC36 B0 63                       BCS     BASINP
ROM:CC38 AD FB 07                    LDA     CVWHO
ROM:CC3B C5 25                       CMP     CVERT
ROM:CC3D F0 05                       BEQ     CVOK
ROM:CC3F 85 25                       STA     CVERT
ROM:CC41 20 3F CB                    JSR     VTAB            ; calculate new screen address and position cursor
ROM:CC44
ROM:CC44             CVOK:                                   ; CODE XREF: ROAD+92D↑j
ROM:CC44 AD 7B 04                    LDA     CHWHO
ROM:CC47 C5 24                       CMP     CHORIZ
ROM:CC49 90 02                       BCC     CHOK
ROM:CC4B 85 24                       STA     CHORIZ
ROM:CC4D
ROM:CC4D             CHOK:                                   ; CODE XREF: ROAD+939↑j
ROM:CC4D 4C 00 CE                    JMP     CHOK_PATCH
ROM:CC50             ; ---------------------------------------------------------------------------
ROM:CC50
ROM:CC50             CHOK_PATCH_RET:                         ; CODE XREF: ROAD+B16↓j
ROM:CC50 90 08                       BCC     BASOU1
ROM:CC52 25 32                       AND     INVFLG
ROM:CC54
ROM:CC54             loc_CC54:                               ; CODE XREF: ROAD+B11↓j
ROM:CC54 20 18 CA                    JSR     STORAD          ; horizontal position
ROM:CC57 4C 68 CC                    JMP     BASOU2
ROM:CC5A             ; ---------------------------------------------------------------------------
ROM:CC5A
ROM:CC5A             BASOU1:                                 ; CODE XREF: ROAD:CHOK_PATCH_RET↑j
ROM:CC5A 29 7F                       AND     #$7F
ROM:CC5C C9 0D                       CMP     #$D
ROM:CC5E D0 05                       BNE     BASOU3
ROM:CC60 20 01 CA                    JSR     VIDOU1
ROM:CC63 A9 0A                       LDA     #$A
ROM:CC65
ROM:CC65             BASOU3:                                 ; CODE XREF: ROAD+94E↑j
ROM:CC65 20 01 CA                    JSR     VIDOU1
ROM:CC68
ROM:CC68             BASOU2:                                 ; CODE XREF: ROAD+947↑j
ROM:CC68                                                     ; ROAD+B03↓j
ROM:CC68 A5 24                       LDA     CHORIZ
ROM:CC6A F0 06                       BEQ     CURECH
ROM:CC6C E9 47                       SBC     #$47 ; 'G'
ROM:CC6E 90 05                       BCC     DONE
ROM:CC70 29 1F                       AND     #$1F
ROM:CC72
ROM:CC72             CURECH:                                 ; CODE XREF: ROAD+95A↑j
ROM:CC72 8D 7B 04                    STA     CHWHO
ROM:CC75
ROM:CC75             DONE:                                   ; CODE XREF: ROAD+95E↑j
ROM:CC75                                                     ; ROAD+9AE↓j
ROM:CC75 A5 25                       LDA     CVERT
ROM:CC77 8D FB 07                    STA     CVWHO
ROM:CC7A 20 A0 CB                    JSR     ENCUR           ; Enable Cursor
ROM:CC7D 20 CA CC                    JSR     TUGGLE          ; Tuggle interchanges a set of ZERO page locs with Slot#3 locations
ROM:CC7D                                                     ; Allows use by different operating systems
ROM:CC80 68                          PLA
ROM:CC81 A8                          TAY
ROM:CC82 68                          PLA
ROM:CC83 AA                          TAX
ROM:CC84 68                          PLA
ROM:CC85
ROM:CC85             locret_CC85:                            ; CODE XREF: ROAD+982↓j
ROM:CC85 60                          RTS
ROM:CC86             ; ---------------------------------------------------------------------------
ROM:CC86
ROM:CC86             NEWESC:                                 ; CODE XREF: ROAD+986↓j
ROM:CC86 A8                          TAY
ROM:CC87 B9 BB C8                    LDA     ESCTB1-$C9,Y
ROM:CC8A 20 FE CB                    JSR     ESCX1
ROM:CC8D
ROM:CC8D             loc_CC8D:                               ; CODE XREF: ROAD+990↓j
ROM:CC8D 20 C1 CC                    JSR     RDXWHO
ROM:CC90 C9 CE                       CMP     #$CE
ROM:CC92 B0 F1                       BCS     locret_CC85
ROM:CC94 C9 C9                       CMP     #$C9
ROM:CC96 B0 EE                       BCS     NEWESC
ROM:CC98 20 FE CB                    JSR     ESCX1
ROM:CC9B
ROM:CC9B             BASINP:                                 ; CODE XREF: ROAD+926↑j
ROM:CC9B 20 C1 CC                    JSR     RDXWHO
ROM:CC9E C9 9B                       CMP     #$9B
ROM:CCA0 F0 EB                       BEQ     loc_CC8D
ROM:CCA2 C9 8D                       CMP     #$8D
ROM:CCA4 D0 05                       BNE     NOTCRW
ROM:CCA6 48                          PHA
ROM:CCA7 20 97 CA                    JSR     CLREOL
ROM:CCAA 68                          PLA
ROM:CCAB
ROM:CCAB             NOTCRW:                                 ; CODE XREF: ROAD+994↑j
ROM:CCAB C9 95                       CMP     #$95
ROM:CCAD D0 05                       BNE     NOPICK
ROM:CCAF AD FB 06                    LDA     TEMPA
ROM:CCB2 09 80                       ORA     #$80
ROM:CCB4
ROM:CCB4             NOPICK:                                 ; CODE XREF: ROAD+99D↑j
ROM:CCB4 BA                          TSX
ROM:CCB5 9D 04 01                    STA     $104,X
ROM:CCB8 A9 00                       LDA     #0
ROM:CCBA 8D 7B 04                    STA     CHWHO
ROM:CCBD 68                          PLA
ROM:CCBE 4C 75 CC                    JMP     DONE
ROM:CCBE             ; END OF FUNCTION CHUNK FOR ROAD
ROM:CCC1
ROM:CCC1             ; =============== S U B R O U T I N E =======================================
ROM:CCC1
ROM:CCC1
ROM:CCC1             RDXWHO:                                 ; CODE XREF: ROAD:loc_CC8D↑p
ROM:CCC1                                                     ; ROAD:BASINP↑p
ROM:CCC1 20 A0 CB                    JSR     ENCUR           ; Enable Cursor
ROM:CCC4 20 4D C8                    JSR     KEYIN_C8
ROM:CCC7 4C DF CB                    JMP     DECUR
ROM:CCC7             ; End of function RDXWHO
ROM:CCC7
ROM:CCCA
ROM:CCCA             ; =============== S U B R O U T I N E =======================================
ROM:CCCA
ROM:CCCA             ; Tuggle interchanges a set of ZERO page locs with Slot#3 locations
ROM:CCCA             ; Allows use by different operating systems
ROM:CCCA
ROM:CCCA             TUGGLE:                                 ; CODE XREF: ROAD:WHO↑p
ROM:CCCA                                                     ; ROAD+46↑p ...
ROM:CCCA 08                          PHP
ROM:CCCB 48                          PHA
ROM:CCCC A5 24                       LDA     CHORIZ
ROM:CCCE 48                          PHA
ROM:CCCF AD 7B 04                    LDA     CHWHO
ROM:CCD2 85 24                       STA     CHORIZ
ROM:CCD4 68                          PLA
ROM:CCD5 8D 7B 04                    STA     CHWHO
ROM:CCD8 A5 25                       LDA     CVERT
ROM:CCDA 48                          PHA
ROM:CCDB AD FB 07                    LDA     CVWHO
ROM:CCDE 85 25                       STA     CVERT
ROM:CCE0 68                          PLA
ROM:CCE1 8D FB 07                    STA     CVWHO
ROM:CCE4 A5 21                       LDA     WNDWTH
ROM:CCE6 48                          PHA
ROM:CCE7 AD 78 07                    LDA     SAVE1
ROM:CCEA 85 21                       STA     WNDWTH
ROM:CCEC 68                          PLA
ROM:CCED 20 20 CD                    JSR     TUGGLE_PATCH
ROM:CCF0 68                          PLA
ROM:CCF1 28                          PLP
ROM:CCF2 60                          RTS
ROM:CCF2             ; End of function TUGGLE
ROM:CCF2
ROM:CCF2             ; ---------------------------------------------------------------------------
ROM:CCF3 FF                          .BYTE $FF
ROM:CCF4 FF                          .BYTE $FF
ROM:CCF5 FF                          .BYTE $FF
ROM:CCF6 FF                          .BYTE $FF
ROM:CCF7 FF                          .BYTE $FF
ROM:CCF8 FF                          .BYTE $FF
ROM:CCF9 FF                          .BYTE $FF
ROM:CCFA FF                          .BYTE $FF
ROM:CCFB FF                          .BYTE $FF
ROM:CCFC FF                          .BYTE $FF
ROM:CCFD FF                          .BYTE $FF
ROM:CCFE FF                          .BYTE $FF
ROM:CCFF FF                          .BYTE $FF
ROM:CD00             ; ---------------------------------------------------------------------------
ROM:CD00             ; START OF FUNCTION CHUNK FOR COUT1
ROM:CD00
ROM:CD00             MCOUT1_PATCH:                           ; CODE XREF: COUT1+6↓j
ROM:CD00 29 7F                       AND     #$7F
ROM:CD02 8D 7B 06                    STA     DISPBYTE
ROM:CD05 AD 7B 07                    LDA     POWER
ROM:CD08 29 03                       AND     #3
ROM:CD0A F0 07                       BEQ     loc_CD13
ROM:CD0C 38                          SEC
ROM:CD0D 20 CF C9                    JSR     GOXY1
ROM:CD10 4C 14 FE                    JMP     MCOUT3
ROM:CD13             ; ---------------------------------------------------------------------------
ROM:CD13
ROM:CD13             loc_CD13:                               ; CODE XREF: COUT1-30E6↑j
ROM:CD13 68                          PLA
ROM:CD14 48                          PHA
ROM:CD15 30 03                       BMI     loc_CD1A
ROM:CD17 4C 00 FE                    JMP     loc_FE00
ROM:CD1A             ; ---------------------------------------------------------------------------
ROM:CD1A
ROM:CD1A             loc_CD1A:                               ; CODE XREF: COUT1-30DB↑j
ROM:CD1A 4C FA FD                    JMP     loc_FDFA
ROM:CD1A             ; END OF FUNCTION CHUNK FOR COUT1
ROM:CD1A             ; ---------------------------------------------------------------------------
ROM:CD1D FF                          .BYTE $FF
ROM:CD1E FF                          .BYTE $FF
ROM:CD1F FF                          .BYTE $FF
ROM:CD20
ROM:CD20             ; =============== S U B R O U T I N E =======================================
ROM:CD20
ROM:CD20
ROM:CD20             TUGGLE_PATCH:                           ; CODE XREF: TUGGLE+23↑p
ROM:CD20 8D 78 07                    STA     SAVE1
ROM:CD23 A5 28                       LDA     SBASL
ROM:CD25 48                          PHA
ROM:CD26 AD 78 04                    LDA     byte_478
ROM:CD29 85 28                       STA     SBASL
ROM:CD2B 68                          PLA
ROM:CD2C 8D 78 04                    STA     byte_478
ROM:CD2F A5 29                       LDA     SBASH
ROM:CD31 48                          PHA
ROM:CD32 AD F8 04                    LDA     byte_4F8
ROM:CD35 85 29                       STA     SBASH
ROM:CD37 68                          PLA
ROM:CD38 8D F8 04                    STA     byte_4F8
ROM:CD3B 60                          RTS
ROM:CD3B             ; End of function TUGGLE_PATCH
ROM:CD3B
ROM:CD3B             ; ---------------------------------------------------------------------------
ROM:CD3C FF                          .BYTE $FF
ROM:CD3D FF                          .BYTE $FF
ROM:CD3E FF                          .BYTE $FF
ROM:CD3F FF                          .BYTE $FF
ROM:CD40 FF                          .BYTE $FF
ROM:CD41 FF                          .BYTE $FF
ROM:CD42 FF                          .BYTE $FF
ROM:CD43 FF                          .BYTE $FF
ROM:CD44 FF                          .BYTE $FF
ROM:CD45 FF                          .BYTE $FF
ROM:CD46 FF                          .BYTE $FF
ROM:CD47 FF                          .BYTE $FF
ROM:CD48 FF                          .BYTE $FF
ROM:CD49 FF                          .BYTE $FF
ROM:CD4A FF                          .BYTE $FF
ROM:CD4B FF                          .BYTE $FF
ROM:CD4C FF                          .BYTE $FF
ROM:CD4D FF                          .BYTE $FF
ROM:CD4E FF                          .BYTE $FF
ROM:CD4F FF                          .BYTE $FF
ROM:CD50 FF                          .BYTE $FF
ROM:CD51 FF                          .BYTE $FF
ROM:CD52 FF                          .BYTE $FF
ROM:CD53 FF                          .BYTE $FF
ROM:CD54 FF                          .BYTE $FF
ROM:CD55 FF                          .BYTE $FF
ROM:CD56 FF                          .BYTE $FF
ROM:CD57 FF                          .BYTE $FF
ROM:CD58 FF                          .BYTE $FF
ROM:CD59 FF                          .BYTE $FF
ROM:CD5A FF                          .BYTE $FF
ROM:CD5B FF                          .BYTE $FF
ROM:CD5C FF                          .BYTE $FF
ROM:CD5D FF                          .BYTE $FF
ROM:CD5E FF                          .BYTE $FF
ROM:CD5F FF                          .BYTE $FF
ROM:CD60 FF                          .BYTE $FF
ROM:CD61 FF                          .BYTE $FF
ROM:CD62 FF                          .BYTE $FF
ROM:CD63 FF                          .BYTE $FF
ROM:CD64 FF                          .BYTE $FF
ROM:CD65 FF                          .BYTE $FF
ROM:CD66 FF                          .BYTE $FF
ROM:CD67 FF                          .BYTE $FF
ROM:CD68 FF                          .BYTE $FF
ROM:CD69 FF                          .BYTE $FF
ROM:CD6A FF                          .BYTE $FF
ROM:CD6B FF                          .BYTE $FF
ROM:CD6C FF                          .BYTE $FF
ROM:CD6D FF                          .BYTE $FF
ROM:CD6E FF                          .BYTE $FF
ROM:CD6F FF                          .BYTE $FF
ROM:CD70 FF                          .BYTE $FF
ROM:CD71 FF                          .BYTE $FF
ROM:CD72 FF                          .BYTE $FF
ROM:CD73 FF                          .BYTE $FF
ROM:CD74 FF                          .BYTE $FF
ROM:CD75 FF                          .BYTE $FF
ROM:CD76 FF                          .BYTE $FF
ROM:CD77 FF                          .BYTE $FF
ROM:CD78 FF                          .BYTE $FF
ROM:CD79 FF                          .BYTE $FF
ROM:CD7A FF                          .BYTE $FF
ROM:CD7B FF                          .BYTE $FF
ROM:CD7C FF                          .BYTE $FF
ROM:CD7D FF                          .BYTE $FF
ROM:CD7E FF                          .BYTE $FF
ROM:CD7F FF                          .BYTE $FF
ROM:CD80 FF                          .BYTE $FF
ROM:CD81 FF                          .BYTE $FF
ROM:CD82 FF                          .BYTE $FF
ROM:CD83 FF                          .BYTE $FF
ROM:CD84 FF                          .BYTE $FF
ROM:CD85 FF                          .BYTE $FF
ROM:CD86 FF                          .BYTE $FF
ROM:CD87 FF                          .BYTE $FF
ROM:CD88 FF                          .BYTE $FF
ROM:CD89 FF                          .BYTE $FF
ROM:CD8A FF                          .BYTE $FF
ROM:CD8B FF                          .BYTE $FF
ROM:CD8C FF                          .BYTE $FF
ROM:CD8D FF                          .BYTE $FF
ROM:CD8E FF                          .BYTE $FF
ROM:CD8F FF                          .BYTE $FF
ROM:CD90 FF                          .BYTE $FF
ROM:CD91 FF                          .BYTE $FF
ROM:CD92 FF                          .BYTE $FF
ROM:CD93 FF                          .BYTE $FF
ROM:CD94 FF                          .BYTE $FF
ROM:CD95 FF                          .BYTE $FF
ROM:CD96 FF                          .BYTE $FF
ROM:CD97 FF                          .BYTE $FF
ROM:CD98 FF                          .BYTE $FF
ROM:CD99 FF                          .BYTE $FF
ROM:CD9A FF                          .BYTE $FF
ROM:CD9B FF                          .BYTE $FF
ROM:CD9C FF                          .BYTE $FF
ROM:CD9D FF                          .BYTE $FF
ROM:CD9E FF                          .BYTE $FF
ROM:CD9F FF                          .BYTE $FF
ROM:CDA0 FF                          .BYTE $FF
ROM:CDA1 FF                          .BYTE $FF
ROM:CDA2 FF                          .BYTE $FF
ROM:CDA3 FF                          .BYTE $FF
ROM:CDA4 FF                          .BYTE $FF
ROM:CDA5 FF                          .BYTE $FF
ROM:CDA6 FF                          .BYTE $FF
ROM:CDA7 FF                          .BYTE $FF
ROM:CDA8 FF                          .BYTE $FF
ROM:CDA9 FF                          .BYTE $FF
ROM:CDAA FF                          .BYTE $FF
ROM:CDAB FF                          .BYTE $FF
ROM:CDAC FF                          .BYTE $FF
ROM:CDAD FF                          .BYTE $FF
ROM:CDAE FF                          .BYTE $FF
ROM:CDAF FF                          .BYTE $FF
ROM:CDB0 FF                          .BYTE $FF
ROM:CDB1 FF                          .BYTE $FF
ROM:CDB2 FF                          .BYTE $FF
ROM:CDB3 FF                          .BYTE $FF
ROM:CDB4 FF                          .BYTE $FF
ROM:CDB5 FF                          .BYTE $FF
ROM:CDB6 FF                          .BYTE $FF
ROM:CDB7 FF                          .BYTE $FF
ROM:CDB8 FF                          .BYTE $FF
ROM:CDB9 FF                          .BYTE $FF
ROM:CDBA FF                          .BYTE $FF
ROM:CDBB FF                          .BYTE $FF
ROM:CDBC FF                          .BYTE $FF
ROM:CDBD FF                          .BYTE $FF
ROM:CDBE FF                          .BYTE $FF
ROM:CDBF FF                          .BYTE $FF
ROM:CDC0 FF                          .BYTE $FF
ROM:CDC1 FF                          .BYTE $FF
ROM:CDC2 FF                          .BYTE $FF
ROM:CDC3 FF                          .BYTE $FF
ROM:CDC4 FF                          .BYTE $FF
ROM:CDC5 FF                          .BYTE $FF
ROM:CDC6 FF                          .BYTE $FF
ROM:CDC7 FF                          .BYTE $FF
ROM:CDC8 FF                          .BYTE $FF
ROM:CDC9 FF                          .BYTE $FF
ROM:CDCA FF                          .BYTE $FF
ROM:CDCB FF                          .BYTE $FF
ROM:CDCC FF                          .BYTE $FF
ROM:CDCD FF                          .BYTE $FF
ROM:CDCE FF                          .BYTE $FF
ROM:CDCF FF                          .BYTE $FF
ROM:CDD0 FF                          .BYTE $FF
ROM:CDD1 FF                          .BYTE $FF
ROM:CDD2 FF                          .BYTE $FF
ROM:CDD3 FF                          .BYTE $FF
ROM:CDD4 FF                          .BYTE $FF
ROM:CDD5 FF                          .BYTE $FF
ROM:CDD6 FF                          .BYTE $FF
ROM:CDD7 FF                          .BYTE $FF
ROM:CDD8 FF                          .BYTE $FF
ROM:CDD9 FF                          .BYTE $FF
ROM:CDDA FF                          .BYTE $FF
ROM:CDDB FF                          .BYTE $FF
ROM:CDDC FF                          .BYTE $FF
ROM:CDDD FF                          .BYTE $FF
ROM:CDDE FF                          .BYTE $FF
ROM:CDDF FF                          .BYTE $FF
ROM:CDE0 FF                          .BYTE $FF
ROM:CDE1 FF                          .BYTE $FF
ROM:CDE2 FF                          .BYTE $FF
ROM:CDE3 FF                          .BYTE $FF
ROM:CDE4 FF                          .BYTE $FF
ROM:CDE5 FF                          .BYTE $FF
ROM:CDE6 FF                          .BYTE $FF
ROM:CDE7 FF                          .BYTE $FF
ROM:CDE8 FF                          .BYTE $FF
ROM:CDE9 FF                          .BYTE $FF
ROM:CDEA FF                          .BYTE $FF
ROM:CDEB FF                          .BYTE $FF
ROM:CDEC FF                          .BYTE $FF
ROM:CDED FF                          .BYTE $FF
ROM:CDEE FF                          .BYTE $FF
ROM:CDEF FF                          .BYTE $FF
ROM:CDF0 FF                          .BYTE $FF
ROM:CDF1 FF                          .BYTE $FF
ROM:CDF2 FF                          .BYTE $FF
ROM:CDF3 FF                          .BYTE $FF
ROM:CDF4 FF                          .BYTE $FF
ROM:CDF5 FF                          .BYTE $FF
ROM:CDF6 FF                          .BYTE $FF
ROM:CDF7 FF                          .BYTE $FF
ROM:CDF8 FF                          .BYTE $FF
ROM:CDF9 FF                          .BYTE $FF
ROM:CDFA FF                          .BYTE $FF
ROM:CDFB FF                          .BYTE $FF
ROM:CDFC FF                          .BYTE $FF
ROM:CDFD FF                          .BYTE $FF
ROM:CDFE FF                          .BYTE $FF
ROM:CDFF FF                          .BYTE $FF
ROM:CE00             ; ---------------------------------------------------------------------------
ROM:CE00             ; START OF FUNCTION CHUNK FOR ROAD
ROM:CE00
ROM:CE00             CHOK_PATCH:                             ; CODE XREF: ROAD:CHOK↑j
ROM:CE00 68                          PLA
ROM:CE01 48                          PHA
ROM:CE02 29 7F                       AND     #$7F
ROM:CE04 8D 7B 06                    STA     DISPBYTE
ROM:CE07 AD 7B 07                    LDA     POWER
ROM:CE0A 29 03                       AND     #3
ROM:CE0C F0 08                       BEQ     loc_CE16
ROM:CE0E 38                          SEC
ROM:CE0F 20 CF C9                    JSR     GOXY1
ROM:CE12 68                          PLA
ROM:CE13 4C 68 CC                    JMP     BASOU2
ROM:CE16             ; ---------------------------------------------------------------------------
ROM:CE16
ROM:CE16             loc_CE16:                               ; CODE XREF: ROAD+AFC↑j
ROM:CE16 68                          PLA
ROM:CE17 EA                          NOP
ROM:CE18 EA                          NOP
ROM:CE19 EA                          NOP
ROM:CE1A EA                          NOP
ROM:CE1B EA                          NOP
ROM:CE1C EA                          NOP
ROM:CE1D C9 80                       CMP     #$80
ROM:CE1F B0 03                       BCS     loc_CE24
ROM:CE21 4C 54 CC                    JMP     loc_CC54
ROM:CE24             ; ---------------------------------------------------------------------------
ROM:CE24
ROM:CE24             loc_CE24:                               ; CODE XREF: ROAD+B0F↑j
ROM:CE24 C9 A0                       CMP     #$A0
ROM:CE26 4C 50 CC                    JMP     CHOK_PATCH_RET
ROM:CE26             ; END OF FUNCTION CHUNK FOR ROAD
ROM:CE26             ; ---------------------------------------------------------------------------
ROM:CE29 FF                          .BYTE $FF
ROM:CE2A FF                          .BYTE $FF
ROM:CE2B FF                          .BYTE $FF
ROM:CE2C FF                          .BYTE $FF
ROM:CE2D FF                          .BYTE $FF
ROM:CE2E FF                          .BYTE $FF
ROM:CE2F FF                          .BYTE $FF
ROM:CE30 FF                          .BYTE $FF
ROM:CE31 FF                          .BYTE $FF
ROM:CE32 FF                          .BYTE $FF
ROM:CE33 FF                          .BYTE $FF
ROM:CE34 FF                          .BYTE $FF
ROM:CE35 FF                          .BYTE $FF
ROM:CE36 FF                          .BYTE $FF
ROM:CE37 FF                          .BYTE $FF
ROM:CE38 FF                          .BYTE $FF
ROM:CE39 FF                          .BYTE $FF
ROM:CE3A FF                          .BYTE $FF
ROM:CE3B FF                          .BYTE $FF
ROM:CE3C FF                          .BYTE $FF
ROM:CE3D FF                          .BYTE $FF
ROM:CE3E FF                          .BYTE $FF
ROM:CE3F FF                          .BYTE $FF
ROM:CE40 FF                          .BYTE $FF
ROM:CE41 FF                          .BYTE $FF
ROM:CE42 FF                          .BYTE $FF
ROM:CE43 FF                          .BYTE $FF
ROM:CE44 FF                          .BYTE $FF
ROM:CE45 FF                          .BYTE $FF
ROM:CE46 FF                          .BYTE $FF
ROM:CE47 FF                          .BYTE $FF
ROM:CE48 FF                          .BYTE $FF
ROM:CE49 FF                          .BYTE $FF
ROM:CE4A FF                          .BYTE $FF
ROM:CE4B FF                          .BYTE $FF
ROM:CE4C FF                          .BYTE $FF
ROM:CE4D FF                          .BYTE $FF
ROM:CE4E FF                          .BYTE $FF
ROM:CE4F FF                          .BYTE $FF
ROM:CE50 FF FF       word_CE50:      .WORD $FFFF             ; DATA XREF: ROM:loc_C6E3↑r
ROM:CE52 FF                          .BYTE $FF
ROM:CE53 FF                          .BYTE $FF
ROM:CE54 FF                          .BYTE $FF
ROM:CE55 FF                          .BYTE $FF
ROM:CE56 FF                          .BYTE $FF
ROM:CE57 FF                          .BYTE $FF
ROM:CE58
ROM:CE58             ; =============== S U B R O U T I N E =======================================
ROM:CE58
ROM:CE58
ROM:CE58             sub_CE58:                               ; CODE XREF: ROM:C622↑p
ROM:CE58                                                     ; ROM:C62B↑p ...
ROM:CE58 FF FF FF                    ISB     $FFFF,X
ROM:CE5B FF FF FF                    ISB     $FFFF,X
ROM:CE5E FF FF FF                    ISB     $FFFF,X
ROM:CE61 FF FF FF                    ISB     $FFFF,X
ROM:CE64 FF FF FF                    ISB     $FFFF,X
ROM:CE67 FF FF FF                    ISB     $FFFF,X
ROM:CE6A FF FF FF                    ISB     $FFFF,X
ROM:CE6D FF FF FF                    ISB     $FFFF,X
ROM:CE70 FF FF FF                    ISB     $FFFF,X
ROM:CE73
ROM:CE73             loc_CE73:                               ; CODE XREF: ROM:C675↑p
ROM:CE73 FF FF FF                    ISB     $FFFF,X
ROM:CE73             ; End of function sub_CE58
ROM:CE73
ROM:CE76 FF FF FF                    ISB     $FFFF,X
ROM:CE79
ROM:CE79             loc_CE79:                               ; CODE XREF: ROM:C60B↑p
ROM:CE79 FF FF FF                    ISB     $FFFF,X
ROM:CE7C FF FF FF                    ISB     $FFFF,X
ROM:CE7F FF FF FF                    ISB     $FFFF,X
ROM:CE82 FF FF FF                    ISB     $FFFF,X
ROM:CE85 FF FF FF                    ISB     $FFFF,X
ROM:CE88 FF FF FF                    ISB     $FFFF,X
ROM:CE8B FF FF FF                    ISB     $FFFF,X
ROM:CE8E FF FF FF                    ISB     $FFFF,X
ROM:CE91 FF FF FF                    ISB     $FFFF,X
ROM:CE94 FF FF FF                    ISB     $FFFF,X
ROM:CE97 FF FF FF                    ISB     $FFFF,X
ROM:CE9A FF FF FF                    ISB     $FFFF,X
ROM:CE9D FF FF FF                    ISB     $FFFF,X
ROM:CEA0 FF FF FF                    ISB     $FFFF,X
ROM:CEA3 FF FF FF                    ISB     $FFFF,X
ROM:CEA6 FF FF FF                    ISB     $FFFF,X
ROM:CEA9 FF FF FF                    ISB     $FFFF,X
ROM:CEAC FF FF FF                    ISB     $FFFF,X
ROM:CEAF FF FF FF                    ISB     $FFFF,X
ROM:CEB2 FF FF FF                    ISB     $FFFF,X
ROM:CEB5 FF FF FF                    ISB     $FFFF,X
ROM:CEB8 FF FF FF                    ISB     $FFFF,X
ROM:CEBB FF FF FF                    ISB     $FFFF,X
ROM:CEBE FF FF FF                    ISB     $FFFF,X
ROM:CEC1 FF FF FF                    ISB     $FFFF,X
ROM:CEC4 FF FF FF                    ISB     $FFFF,X
ROM:CEC7 FF FF FF                    ISB     $FFFF,X
ROM:CECA FF FF FF                    ISB     $FFFF,X
ROM:CECD FF FF FF                    ISB     $FFFF,X
ROM:CED0 FF FF FF                    ISB     $FFFF,X
ROM:CED3 FF FF FF                    ISB     $FFFF,X
ROM:CED6 FF FF FF                    ISB     $FFFF,X
ROM:CED9 FF FF FF                    ISB     $FFFF,X
ROM:CEDC FF FF FF                    ISB     $FFFF,X
ROM:CEDF FF FF FF                    ISB     $FFFF,X
ROM:CEE2 FF FF FF                    ISB     $FFFF,X
ROM:CEE5 FF FF FF                    ISB     $FFFF,X
ROM:CEE8 FF FF FF                    ISB     $FFFF,X
ROM:CEEB FF FF FF                    ISB     $FFFF,X
ROM:CEEE FF FF FF                    ISB     $FFFF,X
ROM:CEF1 FF FF FF                    ISB     $FFFF,X
ROM:CEF4 FF FF FF                    ISB     $FFFF,X
ROM:CEF7 FF FF FF                    ISB     $FFFF,X
ROM:CEFA FF FF FF                    ISB     $FFFF,X
ROM:CEFD FF FF FF                    ISB     $FFFF,X
ROM:CF00 FF FF FF                    ISB     $FFFF,X
ROM:CF03 FF FF FF                    ISB     $FFFF,X
ROM:CF06 FF FF FF                    ISB     $FFFF,X
ROM:CF09 FF FF FF                    ISB     $FFFF,X
ROM:CF0C FF FF FF                    ISB     $FFFF,X
ROM:CF0F FF FF FF                    ISB     $FFFF,X
ROM:CF12 FF FF FF                    ISB     $FFFF,X
ROM:CF15 FF FF FF                    ISB     $FFFF,X
ROM:CF18 FF FF FF                    ISB     $FFFF,X
ROM:CF1B FF FF FF                    ISB     $FFFF,X
ROM:CF1E FF FF FF                    ISB     $FFFF,X
ROM:CF21 FF FF FF                    ISB     $FFFF,X
ROM:CF24 FF FF FF                    ISB     $FFFF,X
ROM:CF27 FF FF FF                    ISB     $FFFF,X
ROM:CF2A FF FF FF                    ISB     $FFFF,X
ROM:CF2D FF FF FF                    ISB     $FFFF,X
ROM:CF30 FF FF FF                    ISB     $FFFF,X
ROM:CF33 FF FF FF                    ISB     $FFFF,X
ROM:CF36 FF FF FF                    ISB     $FFFF,X
ROM:CF39 FF FF FF                    ISB     $FFFF,X
ROM:CF3C FF FF FF                    ISB     $FFFF,X
ROM:CF3F FF FF FF                    ISB     $FFFF,X
ROM:CF42 FF FF FF                    ISB     $FFFF,X
ROM:CF45 FF FF FF                    ISB     $FFFF,X
ROM:CF48 FF FF FF                    ISB     $FFFF,X
ROM:CF4B FF FF FF                    ISB     $FFFF,X
ROM:CF4E FF FF FF                    ISB     $FFFF,X
ROM:CF51 FF FF FF                    ISB     $FFFF,X
ROM:CF54 FF FF FF                    ISB     $FFFF,X
ROM:CF57 FF FF FF                    ISB     $FFFF,X
ROM:CF5A FF FF FF                    ISB     $FFFF,X
ROM:CF5D FF FF FF                    ISB     $FFFF,X
ROM:CF60 FF FF FF                    ISB     $FFFF,X
ROM:CF63 FF FF FF                    ISB     $FFFF,X
ROM:CF66 FF FF FF                    ISB     $FFFF,X
ROM:CF69 FF FF FF                    ISB     $FFFF,X
ROM:CF6C FF FF FF                    ISB     $FFFF,X
ROM:CF6F FF FF FF                    ISB     $FFFF,X
ROM:CF72 FF FF FF                    ISB     $FFFF,X
ROM:CF75 FF FF FF                    ISB     $FFFF,X
ROM:CF78 FF FF FF                    ISB     $FFFF,X
ROM:CF7B FF FF FF                    ISB     $FFFF,X
ROM:CF7E FF FF FF                    ISB     $FFFF,X
ROM:CF81 FF FF FF                    ISB     $FFFF,X
ROM:CF84 FF FF FF                    ISB     $FFFF,X
ROM:CF87 FF FF FF                    ISB     $FFFF,X
ROM:CF8A FF FF FF                    ISB     $FFFF,X
ROM:CF8D FF FF FF                    ISB     $FFFF,X
ROM:CF90 FF FF FF                    ISB     $FFFF,X
ROM:CF93 FF FF FF                    ISB     $FFFF,X
ROM:CF96 FF FF FF                    ISB     $FFFF,X
ROM:CF99 FF FF FF                    ISB     $FFFF,X
ROM:CF9C FF FF FF                    ISB     $FFFF,X
ROM:CF9F FF FF FF                    ISB     $FFFF,X
ROM:CFA2 FF FF FF                    ISB     $FFFF,X
ROM:CFA5 FF FF FF                    ISB     $FFFF,X
ROM:CFA8 FF FF FF                    ISB     $FFFF,X
ROM:CFAB FF FF FF                    ISB     $FFFF,X
ROM:CFAE FF FF FF                    ISB     $FFFF,X
ROM:CFB1 FF FF FF                    ISB     $FFFF,X
ROM:CFB4 FF FF FF                    ISB     $FFFF,X
ROM:CFB7 FF FF FF                    ISB     $FFFF,X
ROM:CFBA FF FF FF                    ISB     $FFFF,X
ROM:CFBD FF FF FF                    ISB     $FFFF,X
ROM:CFC0 FF FF FF                    ISB     $FFFF,X
ROM:CFC3 FF FF FF                    ISB     $FFFF,X
ROM:CFC6 FF FF FF                    ISB     $FFFF,X
ROM:CFC9 FF FF FF                    ISB     $FFFF,X
ROM:CFCC FF FF FF                    ISB     $FFFF,X
ROM:CFCF FF FF FF                    ISB     $FFFF,X
ROM:CFD2 FF FF FF                    ISB     $FFFF,X
ROM:CFD5 FF FF FF                    ISB     $FFFF,X
ROM:CFD8 FF FF FF                    ISB     $FFFF,X
ROM:CFDB FF FF FF                    ISB     $FFFF,X
ROM:CFDE FF FF FF                    ISB     $FFFF,X
ROM:CFE1 FF FF FF                    ISB     $FFFF,X
ROM:CFE4 FF FF FF                    ISB     $FFFF,X
ROM:CFE7 FF FF FF                    ISB     $FFFF,X
ROM:CFEA FF FF FF                    ISB     $FFFF,X
ROM:CFED FF FF FF                    ISB     $FFFF,X
ROM:CFF0 FF FF FF                    ISB     $FFFF,X
ROM:CFF3 FF FF FF                    ISB     $FFFF,X
ROM:CFF6 FF FF FF                    ISB     $FFFF,X
ROM:CFF9 FF FF FF                    ISB     $FFFF,X
ROM:CFFC FF FF FF                    ISB     $FFFF,X
ROM:CFFC             ; ---------------------------------------------------------------------------
ROM:CFFF FF          ROMCLEAR:       .BYTE $FF               ; DATA XREF: sub_ADBA+4↑w
ROM:CFFF                                                     ; sub_ADBA+F↑w ...
ROM:CFFF                                                     ; disable all $C8XX rom extensions
ROM:D000 6F D8       COMMAND_VECTORS:.WORD $D86F             ; BASIC command vectors, all -1
ROM:D002 65 D7                       .WORD FOR-1
ROM:D004 F8 DC                       .WORD $DCF8
ROM:D006 94 D9                       .WORD DATA-1
ROM:D008 B1 DB                       .WORD do_INPUT-1
ROM:D00A 30 F3                       .WORD $F330
ROM:D00C D8 DF                       .WORD DIM3-1
ROM:D00E E1 DB                       .WORD do_READ-1
ROM:D010 4C F6                       .WORD do_PAINT-1
ROM:D012 98 F3                       .WORD do_TEXT-1
ROM:D014 E4 F1                       .WORD do_PR-1
ROM:D016 DD F1                       .WORD do_IN-1
ROM:D018 D4 F1                       .WORD do_CALL-1
ROM:D01A 2D F5                       .WORD do_SWAP-1
ROM:D01C 06 F7                       .WORD do_NOISE-1
ROM:D01E 9D F6                       .WORD do_WIDTH-1
ROM:D020 D7 F3                       .WORD do_HGR2-1
ROM:D022 19 F4                       .WORD do_HGR-1
ROM:D024 E8 F6                       .WORD do_HCOLOR-1
ROM:D026 FD F6                       .WORD do_HPLOT-1
ROM:D028 42 F5                       .WORD do_DRAW-1
ROM:D02A 8F F5                       .WORD do_XDRAW-1
ROM:D02C E6 F7                       .WORD do_HTAB-1
ROM:D02E 57 FC                       .WORD F8HOME-1
ROM:D030 20 F7                       .WORD do_ROT-1          ; rotate shape
ROM:D032 26 F7                       .WORD do_SCALE-1        ; scale shape
ROM:D034 74 F7                       .WORD do_SHLOAD-1       ; load shape from tape
ROM:D036 31 F2                       .WORD do_TRON-1
ROM:D038 36 F2                       .WORD do_TROFF-1
ROM:D03A 3B F2                       .WORD NORMAL-1
ROM:D03C 76 F2                       .WORD INVERSE-1
ROM:D03E 44 F2                       .WORD FLASH-1
ROM:D040 F4 F6                       .WORD do_SOUND-1
ROM:D042 6A D9                       .WORD do_POP-1
ROM:D044 55 F2                       .WORD VTAB_0-1
ROM:D046 85 F2                       .WORD do_HIMEM-1
ROM:D048 A5 F2                       .WORD do_LOMEM-1
ROM:D04A CB F2                       .WORD do_ONERR-1
ROM:D04C 17 F3                       .WORD do_RESUME-1
ROM:D04E 2C F7                       .WORD do_RECALL-1       ; recall array of data from tape
ROM:D050 A1 F3                       .WORD do_STORE-1        ; store data array to tape
ROM:D052 61 F2                       .WORD do_SPEED-1
ROM:D054 45 DA                       .WORD LET-1
ROM:D056 3D D9                       .WORD GOTO-1
ROM:D058 11 D9                       .WORD RUN_0-1
ROM:D05A C8 D9                       .WORD IF-1
ROM:D05C 48 D8                       .WORD RESTOR-1
ROM:D05E F4 03                       .WORD $3F4              ;  & vector?
ROM:D060 20 D9                       .WORD GOSUB-1
ROM:D062 6A D9                       .WORD do_POP-1
ROM:D064 DB D9                       .WORD $D9DB
ROM:D066 6D D8                       .WORD $D86D
ROM:D068 EB D9                       .WORD $D9EB
ROM:D06A 83 E7                       .WORD FNWAIT-1
ROM:D06C C8 D8                       .WORD do_LOAD-1
ROM:D06E AF D8                       .WORD do_SAVE-1
ROM:D070 12 E3                       .WORD DEF-1
ROM:D072 7A E7                       .WORD POKE-1
ROM:D074 D4 DA                       .WORD $DAD4
ROM:D076 95 D8                       .WORD do_CONT-1
ROM:D078 A4 D6                       .WORD do_LIST-1
ROM:D07A 69 D6                       .WORD $D669
ROM:D07C 9F DB                       .WORD $DB9F
ROM:D07E 48 D6                       .WORD FLNRTS            ; End of function vector table
ROM:D080
ROM:D080
ROM:D080 90 EB                       .WORD SGN
ROM:D082 23 EC                       .WORD INT
ROM:D084 AF EB                       .WORD ABS
ROM:D086 0A 00                       .WORD $A                ; USR fn pointer
ROM:D088 DE E2                       .WORD FRE
ROM:D08A 12 D4                       .WORD $D412
ROM:D08C CD DF                       .WORD do_PDL-1
ROM:D08E FF E2                       .WORD $E2FF
ROM:D090 8D EE                       .WORD SQR               ; EXPONENTIATION AND SQUARE ROOT FUNCTION.
ROM:D092 AE EF                       .WORD RND
ROM:D094 41 E9                       .WORD LOG
ROM:D096 09 EF                       .WORD EXP
ROM:D098 EA EF                       .WORD COS               ; SINE, COSINE AND TANGENT FUNCTIONS.
ROM:D09A F1 EF                       .WORD SIN
ROM:D09C 3A F0                       .WORD TAN
ROM:D09E 9E F0                       .WORD ATN
ROM:D0A0 64 E7                       .WORD PEEK
ROM:D0A2 D6 E6                       .WORD LEN
ROM:D0A4 C5 E3                       .WORD STR
ROM:D0A6 07 E7                       .WORD VAL
ROM:D0A8 E5 E6                       .WORD ASC
ROM:D0AA 46 E6                       .WORD CHR
ROM:D0AC 5A E6                       .WORD LEFT
ROM:D0AE 86 E6                       .WORD RIGHT
ROM:D0B0 91 E6                       .WORD MID
ROM:D0B2 79          OPTAB:          .BYTE $79
ROM:D0B3 C0 E7                       .WORD FADDT-1
ROM:D0B5 79                          .BYTE $79 ; y
ROM:D0B6 A9 E7                       .WORD FSUBT-1
ROM:D0B8 7B                          .BYTE $7B
ROM:D0B9 81 E9                       .WORD FMULTT-1
ROM:D0BB 7B                          .BYTE $7B ; {
ROM:D0BC 68 EA                       .WORD FDIVT-1
ROM:D0BE 7D                          .BYTE $7D
ROM:D0BF 96 EE                       .WORD $EE96
ROM:D0C1 50                          .BYTE $50 ; P
ROM:D0C2 4E DF                       .WORD $DF4E
ROM:D0C4 46                          .BYTE $46
ROM:D0C5 56 DF                       .WORD $DF56
ROM:D0C7 7F                          .BYTE $7F
ROM:D0C8 CF EE                       .WORD NEGOP-1
ROM:D0CA 7F                          .BYTE $7F
ROM:D0CB 97 DE                       .WORD $DE97
ROM:D0CD 64                          .BYTE $64
ROM:D0CE 64 DF                       .WORD $DF64
ROM:D0D0 45          TOKENS:         .BYTE $45 ; E
ROM:D0D1 4E                          .BYTE $4E ; N
ROM:D0D2 C4                          .BYTE $C4
ROM:D0D3 46                          .BYTE $46 ; F
ROM:D0D4 4F                          .BYTE $4F ; O
ROM:D0D5 D2                          .BYTE $D2
ROM:D0D6 4E                          .BYTE $4E ; N
ROM:D0D7 45                          .BYTE $45 ; E
ROM:D0D8 58                          .BYTE $58 ; X
ROM:D0D9 D4                          .BYTE $D4
ROM:D0DA 44                          .BYTE $44 ; D
ROM:D0DB 41                          .BYTE $41 ; A
ROM:D0DC 54                          .BYTE $54 ; T
ROM:D0DD C1                          .BYTE $C1
ROM:D0DE 49                          .BYTE $49 ; I
ROM:D0DF 4E                          .BYTE $4E ; N
ROM:D0E0 50                          .BYTE $50 ; P
ROM:D0E1 55                          .BYTE $55 ; U
ROM:D0E2 D4                          .BYTE $D4
ROM:D0E3 44                          .BYTE $44 ; D
ROM:D0E4 45                          .BYTE $45 ; E
ROM:D0E5 CC                          .BYTE $CC
ROM:D0E6 44                          .BYTE $44 ; D
ROM:D0E7 49                          .BYTE $49 ; I
ROM:D0E8 CD                          .BYTE $CD
ROM:D0E9 52                          .BYTE $52 ; R
ROM:D0EA 45                          .BYTE $45 ; E
ROM:D0EB 41                          .BYTE $41 ; A
ROM:D0EC C4                          .BYTE $C4
ROM:D0ED 50                          .BYTE $50 ; P
ROM:D0EE 41                          .BYTE $41 ; A
ROM:D0EF 49                          .BYTE $49 ; I
ROM:D0F0 4E                          .BYTE $4E ; N
ROM:D0F1 D4                          .BYTE $D4
ROM:D0F2 54                          .BYTE $54 ; T
ROM:D0F3 45                          .BYTE $45 ; E
ROM:D0F4 58                          .BYTE $58 ; X
ROM:D0F5 D4                          .BYTE $D4
ROM:D0F6 50                          .BYTE $50 ; P
ROM:D0F7 52                          .BYTE $52 ; R
ROM:D0F8 A3                          .BYTE $A3
ROM:D0F9 49                          .BYTE $49 ; I
ROM:D0FA 4E                          .BYTE $4E ; N
ROM:D0FB A3                          .BYTE $A3
ROM:D0FC 43                          .BYTE $43 ; C
ROM:D0FD 41                          .BYTE $41 ; A
ROM:D0FE 4C                          .BYTE $4C ; L
ROM:D0FF CC                          .BYTE $CC
ROM:D100 53                          .BYTE $53 ; S
ROM:D101 57                          .BYTE $57 ; W
ROM:D102 41                          .BYTE $41 ; A
ROM:D103 D0                          .BYTE $D0
ROM:D104 4E                          .BYTE $4E ; N
ROM:D105 4F                          .BYTE $4F ; O
ROM:D106 49                          .BYTE $49 ; I
ROM:D107 53                          .BYTE $53 ; S
ROM:D108 C5                          .BYTE $C5
ROM:D109 57                          .BYTE $57 ; W
ROM:D10A 49                          .BYTE $49 ; I
ROM:D10B 44                          .BYTE $44 ; D
ROM:D10C 54                          .BYTE $54 ; T
ROM:D10D C8                          .BYTE $C8
ROM:D10E 48                          .BYTE $48 ; H           ; HGR2
ROM:D10F 47                          .BYTE $47 ; G
ROM:D110 52                          .BYTE $52 ; R
ROM:D111 B2                          .BYTE $B2
ROM:D112 48                          .BYTE $48 ; H           ; HGR
ROM:D113 47                          .BYTE $47 ; G
ROM:D114 D2                          .BYTE $D2
ROM:D115 48                          .BYTE $48 ; H
ROM:D116 43                          .BYTE $43 ; C
ROM:D117 4F                          .BYTE $4F ; O
ROM:D118 4C                          .BYTE $4C ; L
ROM:D119 4F                          .BYTE $4F ; O
ROM:D11A 52                          .BYTE $52 ; R
ROM:D11B BD                          .BYTE $BD
ROM:D11C 48                          .BYTE $48 ; H
ROM:D11D 50                          .BYTE $50 ; P
ROM:D11E 4C                          .BYTE $4C ; L
ROM:D11F 4F                          .BYTE $4F ; O
ROM:D120 D4                          .BYTE $D4
ROM:D121 44                          .BYTE $44 ; D
ROM:D122 52                          .BYTE $52 ; R
ROM:D123 41                          .BYTE $41 ; A
ROM:D124 D7                          .BYTE $D7
ROM:D125 58                          .BYTE $58 ; X
ROM:D126 44                          .BYTE $44 ; D
ROM:D127 52                          .BYTE $52 ; R
ROM:D128 41                          .BYTE $41 ; A
ROM:D129 D7                          .BYTE $D7
ROM:D12A 48                          .BYTE $48 ; H
ROM:D12B 54                          .BYTE $54 ; T
ROM:D12C 41                          .BYTE $41 ; A
ROM:D12D C2                          .BYTE $C2
ROM:D12E 48                          .BYTE $48 ; H
ROM:D12F 4F                          .BYTE $4F ; O
ROM:D130 4D                          .BYTE $4D ; M
ROM:D131 C5                          .BYTE $C5
ROM:D132 52                          .BYTE $52 ; R
ROM:D133 4F                          .BYTE $4F ; O
ROM:D134 54                          .BYTE $54 ; T
ROM:D135 BD                          .BYTE $BD
ROM:D136 53                          .BYTE $53 ; S
ROM:D137 43                          .BYTE $43 ; C
ROM:D138 41                          .BYTE $41 ; A
ROM:D139 4C                          .BYTE $4C ; L
ROM:D13A 45                          .BYTE $45 ; E
ROM:D13B BD                          .BYTE $BD
ROM:D13C 53                          .BYTE $53 ; S
ROM:D13D 48                          .BYTE $48 ; H
ROM:D13E 4C                          .BYTE $4C ; L
ROM:D13F 4F                          .BYTE $4F ; O
ROM:D140 41                          .BYTE $41 ; A
ROM:D141 C4                          .BYTE $C4
ROM:D142 54                          .BYTE $54 ; T
ROM:D143 52                          .BYTE $52 ; R
ROM:D144 4F                          .BYTE $4F ; O
ROM:D145 CE                          .BYTE $CE
ROM:D146 54                          .BYTE $54 ; T
ROM:D147 52                          .BYTE $52 ; R
ROM:D148 4F                          .BYTE $4F ; O
ROM:D149 46                          .BYTE $46 ; F
ROM:D14A C6                          .BYTE $C6
ROM:D14B 4E                          .BYTE $4E ; N
ROM:D14C 4F                          .BYTE $4F ; O
ROM:D14D 52                          .BYTE $52 ; R
ROM:D14E 4D                          .BYTE $4D ; M
ROM:D14F 41                          .BYTE $41 ; A
ROM:D150 CC                          .BYTE $CC
ROM:D151 49                          .BYTE $49 ; I
ROM:D152 4E                          .BYTE $4E ; N
ROM:D153 56                          .BYTE $56 ; V
ROM:D154 45                          .BYTE $45 ; E
ROM:D155 52                          .BYTE $52 ; R
ROM:D156 53                          .BYTE $53 ; S
ROM:D157 C5                          .BYTE $C5
ROM:D158 46                          .BYTE $46 ; F
ROM:D159 4C                          .BYTE $4C ; L
ROM:D15A 41                          .BYTE $41 ; A
ROM:D15B 53                          .BYTE $53 ; S
ROM:D15C C8                          .BYTE $C8
ROM:D15D 53                          .BYTE $53 ; S
ROM:D15E 4F                          .BYTE $4F ; O
ROM:D15F 55                          .BYTE $55 ; U
ROM:D160 4E                          .BYTE $4E ; N
ROM:D161 C4                          .BYTE $C4
ROM:D162 50                          .BYTE $50 ; P
ROM:D163 4F                          .BYTE $4F ; O
ROM:D164 D0                          .BYTE $D0
ROM:D165 56                          .BYTE $56 ; V
ROM:D166 54                          .BYTE $54 ; T
ROM:D167 41                          .BYTE $41 ; A
ROM:D168 C2                          .BYTE $C2
ROM:D169 48                          .BYTE $48 ; H
ROM:D16A 49                          .BYTE $49 ; I
ROM:D16B 4D                          .BYTE $4D ; M
ROM:D16C 45                          .BYTE $45 ; E
ROM:D16D 4D                          .BYTE $4D ; M
ROM:D16E BA                          .BYTE $BA
ROM:D16F 4C                          .BYTE $4C ; L
ROM:D170 4F                          .BYTE $4F ; O
ROM:D171 4D                          .BYTE $4D ; M
ROM:D172 45                          .BYTE $45 ; E
ROM:D173 4D                          .BYTE $4D ; M
ROM:D174 BA                          .BYTE $BA
ROM:D175 4F                          .BYTE $4F ; O
ROM:D176 4E                          .BYTE $4E ; N
ROM:D177 45                          .BYTE $45 ; E
ROM:D178 52                          .BYTE $52 ; R
ROM:D179 D2                          .BYTE $D2
ROM:D17A 52                          .BYTE $52 ; R
ROM:D17B 45                          .BYTE $45 ; E
ROM:D17C 53                          .BYTE $53 ; S
ROM:D17D 55                          .BYTE $55 ; U
ROM:D17E 4D                          .BYTE $4D ; M
ROM:D17F C5                          .BYTE $C5
ROM:D180 52                          .BYTE $52 ; R
ROM:D181 45                          .BYTE $45 ; E
ROM:D182 43                          .BYTE $43 ; C
ROM:D183 41                          .BYTE $41 ; A
ROM:D184 4C                          .BYTE $4C ; L
ROM:D185 CC                          .BYTE $CC
ROM:D186 53                          .BYTE $53 ; S
ROM:D187 54                          .BYTE $54 ; T
ROM:D188 4F                          .BYTE $4F ; O
ROM:D189 52                          .BYTE $52 ; R
ROM:D18A C5                          .BYTE $C5
ROM:D18B 53                          .BYTE $53 ; S
ROM:D18C 50                          .BYTE $50 ; P
ROM:D18D 45                          .BYTE $45 ; E
ROM:D18E 45                          .BYTE $45 ; E
ROM:D18F 44                          .BYTE $44 ; D
ROM:D190 BD                          .BYTE $BD
ROM:D191 4C                          .BYTE $4C ; L
ROM:D192 45                          .BYTE $45 ; E
ROM:D193 D4                          .BYTE $D4
ROM:D194 47                          .BYTE $47 ; G
ROM:D195 4F                          .BYTE $4F ; O
ROM:D196 54                          .BYTE $54 ; T
ROM:D197 CF                          .BYTE $CF
ROM:D198 52                          .BYTE $52 ; R
ROM:D199 55                          .BYTE $55 ; U
ROM:D19A CE                          .BYTE $CE
ROM:D19B 49                          .BYTE $49 ; I
ROM:D19C C6                          .BYTE $C6
ROM:D19D 52                          .BYTE $52 ; R
ROM:D19E 45                          .BYTE $45 ; E
ROM:D19F 53                          .BYTE $53 ; S
ROM:D1A0 54                          .BYTE $54 ; T
ROM:D1A1 4F                          .BYTE $4F ; O
ROM:D1A2 52                          .BYTE $52 ; R
ROM:D1A3 C5                          .BYTE $C5
ROM:D1A4 A6                          .BYTE $A6
ROM:D1A5 47                          .BYTE $47 ; G
ROM:D1A6 4F                          .BYTE $4F ; O
ROM:D1A7 53                          .BYTE $53 ; S
ROM:D1A8 55                          .BYTE $55 ; U
ROM:D1A9 C2                          .BYTE $C2
ROM:D1AA 52                          .BYTE $52 ; R
ROM:D1AB 45                          .BYTE $45 ; E
ROM:D1AC 54                          .BYTE $54 ; T
ROM:D1AD 55                          .BYTE $55 ; U
ROM:D1AE 52                          .BYTE $52 ; R
ROM:D1AF CE                          .BYTE $CE
ROM:D1B0 52                          .BYTE $52 ; R
ROM:D1B1 45                          .BYTE $45 ; E
ROM:D1B2 CD                          .BYTE $CD
ROM:D1B3 53                          .BYTE $53 ; S
ROM:D1B4 54                          .BYTE $54 ; T
ROM:D1B5 4F                          .BYTE $4F ; O
ROM:D1B6 D0                          .BYTE $D0
ROM:D1B7 4F                          .BYTE $4F ; O
ROM:D1B8 CE                          .BYTE $CE
ROM:D1B9 57                          .BYTE $57 ; W
ROM:D1BA 41                          .BYTE $41 ; A
ROM:D1BB 49                          .BYTE $49 ; I
ROM:D1BC D4                          .BYTE $D4
ROM:D1BD 4C                          .BYTE $4C ; L
ROM:D1BE 4F                          .BYTE $4F ; O
ROM:D1BF 41                          .BYTE $41 ; A
ROM:D1C0 C4                          .BYTE $C4
ROM:D1C1 53                          .BYTE $53 ; S
ROM:D1C2 41                          .BYTE $41 ; A
ROM:D1C3 56                          .BYTE $56 ; V
ROM:D1C4 C5                          .BYTE $C5
ROM:D1C5 44                          .BYTE $44 ; D
ROM:D1C6 45                          .BYTE $45 ; E
ROM:D1C7 C6                          .BYTE $C6
ROM:D1C8 50                          .BYTE $50 ; P
ROM:D1C9 4F                          .BYTE $4F ; O
ROM:D1CA 4B                          .BYTE $4B ; K
ROM:D1CB C5                          .BYTE $C5
ROM:D1CC 50                          .BYTE $50 ; P
ROM:D1CD 52                          .BYTE $52 ; R
ROM:D1CE 49                          .BYTE $49 ; I
ROM:D1CF 4E                          .BYTE $4E ; N
ROM:D1D0 D4                          .BYTE $D4
ROM:D1D1 43                          .BYTE $43 ; C
ROM:D1D2 4F                          .BYTE $4F ; O
ROM:D1D3 4E                          .BYTE $4E ; N
ROM:D1D4 D4                          .BYTE $D4
ROM:D1D5 4C                          .BYTE $4C ; L
ROM:D1D6 49                          .BYTE $49 ; I
ROM:D1D7 53                          .BYTE $53 ; S
ROM:D1D8 D4                          .BYTE $D4
ROM:D1D9 43                          .BYTE $43 ; C
ROM:D1DA 4C                          .BYTE $4C ; L
ROM:D1DB D2                          .BYTE $D2
ROM:D1DC 47                          .BYTE $47 ; G
ROM:D1DD 45                          .BYTE $45 ; E
ROM:D1DE D4                          .BYTE $D4
ROM:D1DF 4E                          .BYTE $4E ; N
ROM:D1E0 45                          .BYTE $45 ; E
ROM:D1E1 D7                          .BYTE $D7
ROM:D1E2 54                          .BYTE $54 ; T
ROM:D1E3 41                          .BYTE $41 ; A
ROM:D1E4 42                          .BYTE $42 ; B
ROM:D1E5 A8                          .BYTE $A8
ROM:D1E6 54                          .BYTE $54 ; T
ROM:D1E7 CF                          .BYTE $CF
ROM:D1E8 46                          .BYTE $46 ; F
ROM:D1E9 CE                          .BYTE $CE
ROM:D1EA 53                          .BYTE $53 ; S
ROM:D1EB 50                          .BYTE $50 ; P
ROM:D1EC 43                          .BYTE $43 ; C
ROM:D1ED A8                          .BYTE $A8
ROM:D1EE 54                          .BYTE $54 ; T
ROM:D1EF 48                          .BYTE $48 ; H
ROM:D1F0 45                          .BYTE $45 ; E
ROM:D1F1 CE                          .BYTE $CE
ROM:D1F2 41                          .BYTE $41 ; A
ROM:D1F3 D4                          .BYTE $D4
ROM:D1F4 4E                          .BYTE $4E ; N
ROM:D1F5 4F                          .BYTE $4F ; O
ROM:D1F6 D4                          .BYTE $D4
ROM:D1F7 53                          .BYTE $53 ; S
ROM:D1F8 54                          .BYTE $54 ; T
ROM:D1F9 45                          .BYTE $45 ; E
ROM:D1FA D0                          .BYTE $D0
ROM:D1FB AB                          .BYTE $AB
ROM:D1FC AD                          .BYTE $AD
ROM:D1FD AA                          .BYTE $AA
ROM:D1FE AF                          .BYTE $AF
ROM:D1FF DE                          .BYTE $DE
ROM:D200 41                          .BYTE $41 ; A
ROM:D201 4E                          .BYTE $4E ; N
ROM:D202 C4                          .BYTE $C4
ROM:D203 4F                          .BYTE $4F ; O
ROM:D204 D2                          .BYTE $D2
ROM:D205 BE                          .BYTE $BE
ROM:D206 BD                          .BYTE $BD
ROM:D207 BC                          .BYTE $BC
ROM:D208 53                          .BYTE $53 ; S
ROM:D209 47                          .BYTE $47 ; G
ROM:D20A CE                          .BYTE $CE
ROM:D20B 49                          .BYTE $49 ; I
ROM:D20C 4E                          .BYTE $4E ; N
ROM:D20D D4                          .BYTE $D4
ROM:D20E 41                          .BYTE $41 ; A
ROM:D20F 42                          .BYTE $42 ; B
ROM:D210 D3                          .BYTE $D3
ROM:D211 55                          .BYTE $55 ; U
ROM:D212 53                          .BYTE $53 ; S
ROM:D213 D2                          .BYTE $D2
ROM:D214 46                          .BYTE $46 ; F
ROM:D215 52                          .BYTE $52 ; R
ROM:D216 C5                          .BYTE $C5
ROM:D217 55                          .BYTE $55 ; U
ROM:D218 53                          .BYTE $53 ; S
ROM:D219 49                          .BYTE $49 ; I
ROM:D21A 4E                          .BYTE $4E ; N
ROM:D21B C7                          .BYTE $C7
ROM:D21C 50                          .BYTE $50 ; P
ROM:D21D 44                          .BYTE $44 ; D
ROM:D21E CC                          .BYTE $CC
ROM:D21F 50                          .BYTE $50 ; P
ROM:D220 4F                          .BYTE $4F ; O
ROM:D221 D3                          .BYTE $D3
ROM:D222 53                          .BYTE $53 ; S
ROM:D223 51                          .BYTE $51 ; Q
ROM:D224 D2                          .BYTE $D2
ROM:D225 52                          .BYTE $52 ; R
ROM:D226 4E                          .BYTE $4E ; N
ROM:D227 C4                          .BYTE $C4
ROM:D228 4C                          .BYTE $4C ; L
ROM:D229 4F                          .BYTE $4F ; O
ROM:D22A C7                          .BYTE $C7
ROM:D22B 45                          .BYTE $45 ; E
ROM:D22C 58                          .BYTE $58 ; X
ROM:D22D D0                          .BYTE $D0
ROM:D22E 43                          .BYTE $43 ; C
ROM:D22F 4F                          .BYTE $4F ; O
ROM:D230 D3                          .BYTE $D3
ROM:D231 53                          .BYTE $53 ; S
ROM:D232 49                          .BYTE $49 ; I
ROM:D233 CE                          .BYTE $CE
ROM:D234 54                          .BYTE $54 ; T
ROM:D235 41                          .BYTE $41 ; A
ROM:D236 CE                          .BYTE $CE
ROM:D237 41                          .BYTE $41 ; A
ROM:D238 54                          .BYTE $54 ; T
ROM:D239 CE                          .BYTE $CE
ROM:D23A 50                          .BYTE $50 ; P
ROM:D23B 45                          .BYTE $45 ; E
ROM:D23C 45                          .BYTE $45 ; E
ROM:D23D CB                          .BYTE $CB
ROM:D23E 4C                          .BYTE $4C ; L
ROM:D23F 45                          .BYTE $45 ; E
ROM:D240 CE                          .BYTE $CE
ROM:D241 53                          .BYTE $53 ; S
ROM:D242 54                          .BYTE $54 ; T
ROM:D243 52                          .BYTE $52 ; R
ROM:D244 A4                          .BYTE $A4
ROM:D245 56                          .BYTE $56 ; V
ROM:D246 41                          .BYTE $41 ; A
ROM:D247 CC                          .BYTE $CC
ROM:D248 41                          .BYTE $41 ; A
ROM:D249 53                          .BYTE $53 ; S
ROM:D24A C3                          .BYTE $C3
ROM:D24B 43                          .BYTE $43 ; C
ROM:D24C 48                          .BYTE $48 ; H
ROM:D24D 52                          .BYTE $52 ; R
ROM:D24E A4                          .BYTE $A4
ROM:D24F 4C                          .BYTE $4C ; L
ROM:D250 45                          .BYTE $45 ; E
ROM:D251 46                          .BYTE $46 ; F
ROM:D252 54                          .BYTE $54 ; T
ROM:D253 A4                          .BYTE $A4
ROM:D254 52                          .BYTE $52 ; R
ROM:D255 49                          .BYTE $49 ; I
ROM:D256 47                          .BYTE $47 ; G
ROM:D257 48                          .BYTE $48 ; H
ROM:D258 54                          .BYTE $54 ; T
ROM:D259 A4                          .BYTE $A4
ROM:D25A 4D                          .BYTE $4D ; M
ROM:D25B 49                          .BYTE $49 ; I
ROM:D25C 44                          .BYTE $44 ; D
ROM:D25D A4                          .BYTE $A4
ROM:D25E 00                          .BYTE   0
ROM:D25F 20                          .BYTE $20
ROM:D260 45 52 52 4F+aError:         .BYTE 'ERROR',7,0
ROM:D267 20 49 4E 20+aIn:            .BYTE ' IN ',0
ROM:D26C 0D                          .BYTE  $D
ROM:D26D 42 52 45 41+aBreak:         .BYTE 'BREAK',7,0
ROM:D274
ROM:D274             ; =============== S U B R O U T I N E =======================================
ROM:D274
ROM:D274
ROM:D274             sub_D274:                               ; CODE XREF: INPCO1:loc_DC63↓p
ROM:D274
ROM:D274             ; FUNCTION CHUNK AT ROM:DB71 SIZE 00000015 BYTES
ROM:D274
ROM:D274 08                          PHP
ROM:D275 C9 45                       CMP     #$45 ; 'E'
ROM:D277 F0 0C                       BEQ     loc_D285
ROM:D279 EA                          NOP
ROM:D27A EA                          NOP
ROM:D27B EA                          NOP
ROM:D27C EA                          NOP
ROM:D27D EA                          NOP
ROM:D27E EA                          NOP
ROM:D27F EA                          NOP
ROM:D280 EA                          NOP
ROM:D281 28                          PLP
ROM:D282 4C 4A EC                    JMP     FIN
ROM:D285             ; ---------------------------------------------------------------------------
ROM:D285
ROM:D285             loc_D285:                               ; CODE XREF: sub_D274+3↑j
ROM:D285 28                          PLP
ROM:D286 68                          PLA
ROM:D287 68                          PLA
ROM:D288 4C 71 DB                    JMP     TRMNOK          ; INPUT AND READ CODE
ROM:D288             ; End of function sub_D274
ROM:D288
ROM:D28B
ROM:D28B             ; =============== S U B R O U T I N E =======================================
ROM:D28B
ROM:D28B
ROM:D28B             sub_D28B:                               ; CODE XREF: ROM:D6C1↓p
ROM:D28B 90 03                       BCC     loc_D290
ROM:D28D 4C C9 DE                    JMP     SNERR
ROM:D290             ; ---------------------------------------------------------------------------
ROM:D290
ROM:D290             loc_D290:                               ; CODE XREF: sub_D28B↑j
ROM:D290 4C 0C DA                    JMP     LINGET          ; "LINGET" READS A LINE NUMBER FROM THE CURRENT TEXT POSITION.
ROM:D290             ; End of function sub_D28B
ROM:D290
ROM:D290             ; ---------------------------------------------------------------------------
ROM:D293 48                          .BYTE $48 ; H
ROM:D294 41                          .BYTE $41 ; A
ROM:D295 52                          .BYTE $52 ; R
ROM:D296 9F                          .BYTE $9F
ROM:D297 B9                          .BYTE $B9
ROM:D298 50                          .BYTE $50 ; P
ROM:D299 4E                          .BYTE $4E ; N
ROM:D29A 43                          .BYTE $43 ; C
ROM:D29B 48                          .BYTE $48 ; H
ROM:D29C 52                          .BYTE $52 ; R
ROM:D29D 32                          .BYTE $32 ; 2
ROM:D29E 9F                          .BYTE $9F
ROM:D29F BD                          .BYTE $BD
ROM:D2A0 50                          .BYTE $50 ; P
ROM:D2A1 4E                          .BYTE $4E ; N
ROM:D2A2 43                          .BYTE $43 ; C
ROM:D2A3 48                          .BYTE $48 ; H
ROM:D2A4 52                          .BYTE $52 ; R
ROM:D2A5 33                          .BYTE $33 ; 3
ROM:D2A6 9F                          .BYTE $9F
ROM:D2A7 CE                          .BYTE $CE
ROM:D2A8 4E                          .BYTE $4E ; N
ROM:D2A9 43                          .BYTE $43 ; C
ROM:D2AA 48                          .BYTE $48 ; H
ROM:D2AB 41                          .BYTE $41 ; A
ROM:D2AC 52                          .BYTE $52 ; R
ROM:D2AD 37                          .BYTE $37 ; 7
ROM:D2AE 9F                          .BYTE $9F
ROM:D2AF DF                          .BYTE $DF
ROM:D2B0 4E                          .BYTE $4E ; N
ROM:D2B1 43                          .BYTE $43 ; C
ROM:D2B2 48                          .BYTE $48 ; H
ROM:D2B3 41                          .BYTE $41 ; A
ROM:D2B4 52                          .BYTE $52 ; R
ROM:D2B5 41                          .BYTE $41 ; A
ROM:D2B6 9F                          .BYTE $9F
ROM:D2B7 ED                          .BYTE $ED
ROM:D2B8 4E                          .BYTE $4E ; N
ROM:D2B9 43                          .BYTE $43 ; C
ROM:D2BA 48                          .BYTE $48 ; H
ROM:D2BB 41                          .BYTE $41 ; A
ROM:D2BC 52                          .BYTE $52 ; R
ROM:D2BD 31                          .BYTE $31 ; 1
ROM:D2BE A0                          .BYTE $A0
ROM:D2BF 04                          .BYTE   4
ROM:D2C0 4E                          .BYTE $4E ; N
ROM:D2C1 43                          .BYTE $43 ; C
ROM:D2C2 48                          .BYTE $48 ; H
ROM:D2C3 41                          .BYTE $41 ; A
ROM:D2C4 52                          .BYTE $52 ; R
ROM:D2C5 32                          .BYTE $32 ; 2
ROM:D2C6 A0                          .BYTE $A0
ROM:D2C7 16                          .BYTE $16
ROM:D2C8 4E                          .BYTE $4E ; N
ROM:D2C9 43                          .BYTE $43 ; C
ROM:D2CA 48                          .BYTE $48 ; H
ROM:D2CB 41                          .BYTE $41 ; A
ROM:D2CC 52                          .BYTE $52 ; R
ROM:D2CD 34                          .BYTE $34 ; 4
ROM:D2CE A0                          .BYTE $A0
ROM:D2CF 1A                          .BYTE $1A
ROM:D2D0 4E                          .BYTE $4E ; N
ROM:D2D1 43                          .BYTE $43 ; C
ROM:D2D2 48                          .BYTE $48 ; H
ROM:D2D3 41                          .BYTE $41 ; A
ROM:D2D4 52                          .BYTE $52 ; R
ROM:D2D5 35                          .BYTE $35 ; 5
ROM:D2D6 A0                          .BYTE $A0
ROM:D2D7 30                          .BYTE $30 ; 0
ROM:D2D8 4E                          .BYTE $4E ; N
ROM:D2D9 43                          .BYTE $43 ; C
ROM:D2DA 48                          .BYTE $48 ; H
ROM:D2DB 41                          .BYTE $41 ; A
ROM:D2DC 52                          .BYTE $52 ; R
ROM:D2DD 36                          .BYTE $36 ; 6
ROM:D2DE A0                          .BYTE $A0
ROM:D2DF 39                          .BYTE $39 ; 9
ROM:D2E0 4E                          .BYTE $4E ; N
ROM:D2E1 43                          .BYTE $43 ; C
ROM:D2E2 48                          .BYTE $48 ; H
ROM:D2E3 41                          .BYTE $41 ; A
ROM:D2E4 52                          .BYTE $52 ; R
ROM:D2E5 33                          .BYTE $33 ; 3
ROM:D2E6 A0                          .BYTE $A0
ROM:D2E7 44                          .BYTE $44 ; D
ROM:D2E8 4E                          .BYTE $4E ; N
ROM:D2E9 50                          .BYTE $50 ; P
ROM:D2EA 43                          .BYTE $43 ; C
ROM:D2EB 48                          .BYTE $48 ; H
ROM:D2EC 41                          .BYTE $41 ; A
ROM:D2ED 52                          .BYTE $52 ; R
ROM:D2EE A0                          .BYTE $A0
ROM:D2EF 4C                          .BYTE $4C ; L
ROM:D2F0 4E                          .BYTE $4E ; N
ROM:D2F1 50                          .BYTE $50 ; P
ROM:D2F2 43                          .BYTE $43 ; C
ROM:D2F3 48                          .BYTE $48 ; H
ROM:D2F4 52                          .BYTE $52 ; R
ROM:D2F5 33                          .BYTE $33 ; 3
ROM:D2F6 A0                          .BYTE $A0
ROM:D2F7 58                          .BYTE $58 ; X
ROM:D2F8 4E                          .BYTE $4E ; N
ROM:D2F9 50                          .BYTE $50 ; P
ROM:D2FA 43                          .BYTE $43 ; C
ROM:D2FB 48                          .BYTE $48 ; H
ROM:D2FC 52                          .BYTE $52 ; R
ROM:D2FD 53                          .BYTE $53 ; S
ROM:D2FE A0                          .BYTE $A0
ROM:D2FF 5D                          .BYTE $5D ; ]
ROM:D300
ROM:D300             ; =============== S U B R O U T I N E =======================================
ROM:D300
ROM:D300
ROM:D300             MRDKEY_PATCH:                           ; CODE XREF: RDCHAR↓p
ROM:D300
ROM:D300             ; FUNCTION CHUNK AT ROM:FD2F SIZE 00000006 BYTES
ROM:D300
ROM:D300 20 0C FD                    JSR     RDKEY
ROM:D303 C9 9F                       CMP     #$9F
ROM:D305 D0 05                       BNE     loc_D30C
ROM:D307 A9 C4                       LDA     #$C4
ROM:D309 4C 2F FD                    JMP     ESC
ROM:D30C             ; ---------------------------------------------------------------------------
ROM:D30C
ROM:D30C             loc_D30C:                               ; CODE XREF: MRDKEY_PATCH+5↑j
ROM:D30C C9 8A                       CMP     #$8A
ROM:D30E D0 05                       BNE     locret_D315
ROM:D310 A9 C3                       LDA     #$C3
ROM:D312 4C 2F FD                    JMP     ESC
ROM:D315             ; ---------------------------------------------------------------------------
ROM:D315
ROM:D315             locret_D315:                            ; CODE XREF: MRDKEY_PATCH+E↑j
ROM:D315 60                          RTS
ROM:D315             ; End of function MRDKEY_PATCH
ROM:D315
ROM:D315             ; ---------------------------------------------------------------------------
ROM:D316 A0                          .BYTE $A0
ROM:D317 89                          .BYTE $89
ROM:D318 43                          .BYTE $43 ; C
ROM:D319 4C                          .BYTE $4C ; L
ROM:D31A 51                          .BYTE $51 ; Q
ROM:D31B 43                          .BYTE $43 ; C
ROM:D31C 48                          .BYTE $48 ; H
ROM:D31D 4B                          .BYTE $4B ; K
ROM:D31E A0                          .BYTE $A0
ROM:D31F 91                          .BYTE $91
ROM:D320 53                          .BYTE $53 ; S
ROM:D321 43                          .BYTE $43 ; C
ROM:D322 4F                          .BYTE $4F ; O
ROM:D323 4C                          .BYTE $4C ; L
ROM:D324 43                          .BYTE $43 ; C
ROM:D325 4B                          .BYTE $4B ; K
ROM:D326 A0                          .BYTE $A0
ROM:D327 94                          .BYTE $94
ROM:D328 54                          .BYTE $54 ; T
ROM:D329 4D                          .BYTE $4D ; M
ROM:D32A 49                          .BYTE $49 ; I
ROM:D32B 45                          .BYTE $45 ; E
ROM:D32C 52                          .BYTE $52 ; R
ROM:D32D 52                          .BYTE $52 ; R
ROM:D32E A0                          .BYTE $A0
ROM:D32F 99                          .BYTE $99
ROM:D330 4E                          .BYTE $4E ; N
ROM:D331 55                          .BYTE $55 ; U
ROM:D332 4D                          .BYTE $4D ; M
ROM:D333 50                          .BYTE $50 ; P
ROM:D334 52                          .BYTE $52 ; R
ROM:D335 4F                          .BYTE $4F ; O
ROM:D336 A0                          .BYTE $A0
ROM:D337 9E                          .BYTE $9E
ROM:D338 4E                          .BYTE $4E ; N
ROM:D339 55                          .BYTE $55 ; U
ROM:D33A 4D                          .BYTE $4D ; M
ROM:D33B 50                          .BYTE $50 ; P
ROM:D33C 52                          .BYTE $52 ; R
ROM:D33D 31                          .BYTE $31 ; 1
ROM:D33E A0                          .BYTE $A0
ROM:D33F AE                          .BYTE $AE
ROM:D340 4E                          .BYTE $4E ; N
ROM:D341 55                          .BYTE $55 ; U
ROM:D342 4D                          .BYTE $4D ; M
ROM:D343 50                          .BYTE $50 ; P
ROM:D344 52                          .BYTE $52 ; R
ROM:D345 32                          .BYTE $32 ; 2
ROM:D346 A0                          .BYTE $A0
ROM:D347 C7                          .BYTE $C7
ROM:D348 4E                          .BYTE $4E ; N
ROM:D349 55                          .BYTE $55 ; U
ROM:D34A 4D                          .BYTE $4D ; M
ROM:D34B 50                          .BYTE $50 ; P
ROM:D34C 52                          .BYTE $52 ; R
ROM:D34D 46                          .BYTE $46 ; F
ROM:D34E A0                          .BYTE $A0
ROM:D34F D0                          .BYTE $D0
ROM:D350 4E                          .BYTE $4E ; N
ROM:D351 55                          .BYTE $55 ; U
ROM:D352 4D                          .BYTE $4D ; M
ROM:D353 50                          .BYTE $50 ; P
ROM:D354 52                          .BYTE $52 ; R
ROM:D355 33                          .BYTE $33 ; 3
ROM:D356 A0                          .BYTE $A0
ROM:D357 DC                          .BYTE $DC
ROM:D358 4E                          .BYTE $4E ; N
ROM:D359 55                          .BYTE $55 ; U
ROM:D35A 4D                          .BYTE $4D ; M
ROM:D35B 50                          .BYTE $50 ; P
ROM:D35C 52                          .BYTE $52 ; R
ROM:D35D 38                          .BYTE $38 ; 8
ROM:D35E A0                          .BYTE $A0
ROM:D35F E2                          .BYTE $E2
ROM:D360 4E                          .BYTE $4E ; N
ROM:D361 55                          .BYTE $55 ; U
ROM:D362 4D                          .BYTE $4D ; M
ROM:D363 50                          .BYTE $50 ; P
ROM:D364 52                          .BYTE $52 ; R
ROM:D365
ROM:D365             ; =============== S U B R O U T I N E =======================================
ROM:D365
ROM:D365             ; FIND A "FOR" ENTRY ON THE STACK VIA "VARPNT".
ROM:D365             ;
ROM:D365
ROM:D365             FINDFOR:                                ; CODE XREF: ROM:D76D↓p
ROM:D365                                                     ; GOTO+33↓p ...
ROM:D365 BA                          TSX
ROM:D366 E8                          INX
ROM:D367 E8                          INX
ROM:D368 E8                          INX
ROM:D369 E8                          INX
ROM:D36A
ROM:D36A             FFLOOP:                                 ; CODE XREF: FINDFOR+2B↓j
ROM:D36A BD 01 01                    LDA     $101,X
ROM:D36D C9 81                       CMP     #$81            ; "FOR: token?
ROM:D36F D0 21                       BNE     FFRTS
ROM:D371 A5 86                       LDA     byte_86
ROM:D373 D0 0A                       BNE     loc_D37F
ROM:D375 BD 02 01                    LDA     $102,X
ROM:D378 85 85                       STA     byte_85
ROM:D37A BD 03 01                    LDA     $103,X
ROM:D37D 85 86                       STA     byte_86
ROM:D37F
ROM:D37F             loc_D37F:                               ; CODE XREF: FINDFOR+E↑j
ROM:D37F DD 03 01                    CMP     $103,X
ROM:D382 D0 07                       BNE     loc_D38B
ROM:D384 A5 85                       LDA     byte_85
ROM:D386 DD 02 01                    CMP     $102,X
ROM:D389 F0 07                       BEQ     FFRTS
ROM:D38B
ROM:D38B             loc_D38B:                               ; CODE XREF: FINDFOR+1D↑j
ROM:D38B 8A                          TXA
ROM:D38C 18                          CLC
ROM:D38D 69 12                       ADC     #$12
ROM:D38F AA                          TAX
ROM:D390 D0 D8                       BNE     FFLOOP
ROM:D392
ROM:D392             FFRTS:                                  ; CODE XREF: FINDFOR+A↑j
ROM:D392                                                     ; FINDFOR+24↑j
ROM:D392 60                          RTS
ROM:D392             ; End of function FINDFOR
ROM:D392
ROM:D393
ROM:D393             ; =============== S U B R O U T I N E =======================================
ROM:D393
ROM:D393             ; BLOCK TRANSFER ROUTINE
ROM:D393
ROM:D393             BLTU:                                   ; CODE XREF: REASON+E8↓p
ROM:D393                                                     ; PTRGT2+CC↓p
ROM:D393 20 E3 D3                    JSR     REASON
ROM:D396 85 6D                       STA     byte_6D
ROM:D398 84 6E                       STY     byte_6E
ROM:D398             ; End of function BLTU
ROM:D398
ROM:D39A
ROM:D39A             ; =============== S U B R O U T I N E =======================================
ROM:D39A
ROM:D39A
ROM:D39A             BLTUC:                                  ; CODE XREF: GARBA2+FE↓p
ROM:D39A 38                          SEC
ROM:D39B A5 96                       LDA     byte_96
ROM:D39D E5 9B                       SBC     byte_9B
ROM:D39F 85 5E                       STA     word_5E
ROM:D3A1 A8                          TAY
ROM:D3A2 A5 97                       LDA     byte_97
ROM:D3A4 E5 9C                       SBC     byte_9C
ROM:D3A6 AA                          TAX
ROM:D3A7 E8                          INX
ROM:D3A8 98                          TYA
ROM:D3A9 F0 23                       BEQ     DECBLT
ROM:D3AB A5 96                       LDA     byte_96
ROM:D3AD 38                          SEC
ROM:D3AE E5 5E                       SBC     word_5E
ROM:D3B0 85 96                       STA     byte_96
ROM:D3B2 B0 03                       BCS     BLT1
ROM:D3B4 C6 97                       DEC     byte_97
ROM:D3B6 38                          SEC
ROM:D3B7
ROM:D3B7             BLT1:                                   ; CODE XREF: BLTUC+18↑j
ROM:D3B7 A5 94                       LDA     byte_94
ROM:D3B9 E5 5E                       SBC     word_5E
ROM:D3BB 85 94                       STA     byte_94
ROM:D3BD B0 08                       BCS     MOREN1
ROM:D3BF C6 95                       DEC     byte_95
ROM:D3C1 90 04                       BCC     MOREN1
ROM:D3C3
ROM:D3C3             BLTLP:                                  ; CODE XREF: BLTUC+2E↓j
ROM:D3C3 B1 96                       LDA     ($96),Y
ROM:D3C5 91 94                       STA     ($94),Y
ROM:D3C7
ROM:D3C7             MOREN1:                                 ; CODE XREF: BLTUC+23↑j
ROM:D3C7                                                     ; BLTUC+27↑j ...
ROM:D3C7 88                          DEY
ROM:D3C8 D0 F9                       BNE     BLTLP
ROM:D3CA B1 96                       LDA     ($96),Y
ROM:D3CC 91 94                       STA     ($94),Y
ROM:D3CE
ROM:D3CE             DECBLT:                                 ; CODE XREF: BLTUC+F↑j
ROM:D3CE C6 97                       DEC     byte_97
ROM:D3D0 C6 95                       DEC     byte_95
ROM:D3D2 CA                          DEX
ROM:D3D3 D0 F2                       BNE     MOREN1
ROM:D3D5 60                          RTS
ROM:D3D5             ; End of function BLTUC
ROM:D3D5
ROM:D3D6
ROM:D3D6             ; =============== S U B R O U T I N E =======================================
ROM:D3D6
ROM:D3D6
ROM:D3D6             GETSTK:                                 ; CODE XREF: ROM:D77B↓p
ROM:D3D6                                                     ; ROM:D923↓p ...
ROM:D3D6 0A                          ASL     A
ROM:D3D7 69 36                       ADC     #$36 ; '6'
ROM:D3D9 B0 35                       BCS     OMERROR         ; ERROR HANDLER, READY, TERMINAL INPUT, COMPACTIFY, NEW, REINIT.
ROM:D3DB 85 5E                       STA     word_5E
ROM:D3DD BA                          TSX
ROM:D3DE E4 5E                       CPX     word_5E
ROM:D3E0 90 2E                       BCC     OMERROR         ; ERROR HANDLER, READY, TERMINAL INPUT, COMPACTIFY, NEW, REINIT.
ROM:D3E2 60                          RTS
ROM:D3E2             ; End of function GETSTK
ROM:D3E2
ROM:D3E3
ROM:D3E3             ; =============== S U B R O U T I N E =======================================
ROM:D3E3
ROM:D3E3
ROM:D3E3             REASON:                                 ; CODE XREF: BLTU↑p
ROM:D3E3                                                     ; PTRGT2+1DA↓p ...
ROM:D3E3
ROM:D3E3             ; FUNCTION CHUNK AT ROM:D7D2 SIZE 00000055 BYTES
ROM:D3E3             ; FUNCTION CHUNK AT ROM:D88A SIZE 0000000C BYTES
ROM:D3E3             ; FUNCTION CHUNK AT ROM:F2EB SIZE 0000002D BYTES
ROM:D3E3
ROM:D3E3 C4 70                       CPY     byte_70
ROM:D3E5 90 28                       BCC     REARTS
ROM:D3E7 D0 04                       BNE     TRYMOR
ROM:D3E9 C5 6F                       CMP     byte_6F
ROM:D3EB 90 22                       BCC     REARTS
ROM:D3ED
ROM:D3ED             TRYMOR:                                 ; CODE XREF: REASON+4↑j
ROM:D3ED 48                          PHA
ROM:D3EE A2 09                       LDX     #9
ROM:D3F0 98                          TYA
ROM:D3F1
ROM:D3F1             REASAV:                                 ; CODE XREF: REASON+12↓j
ROM:D3F1 48                          PHA
ROM:D3F2 B5 93                       LDA     $93,X
ROM:D3F4 CA                          DEX
ROM:D3F5 10 FA                       BPL     REASAV
ROM:D3F7 20 84 E4                    JSR     GARBA2
ROM:D3FA A2 F7                       LDX     #$F7
ROM:D3FC
ROM:D3FC             REASTO:                                 ; CODE XREF: REASON+1D↓j
ROM:D3FC 68                          PLA
ROM:D3FD 95 9D                       STA     $9D,X
ROM:D3FF E8                          INX
ROM:D400 30 FA                       BMI     REASTO
ROM:D402 68                          PLA
ROM:D403 A8                          TAY
ROM:D404 68                          PLA
ROM:D405 C4 70                       CPY     byte_70
ROM:D407 90 06                       BCC     REARTS
ROM:D409 D0 05                       BNE     OMERROR         ; ERROR HANDLER, READY, TERMINAL INPUT, COMPACTIFY, NEW, REINIT.
ROM:D40B C5 6F                       CMP     byte_6F
ROM:D40D B0 01                       BCS     OMERROR         ; ERROR HANDLER, READY, TERMINAL INPUT, COMPACTIFY, NEW, REINIT.
ROM:D40F
ROM:D40F             REARTS:                                 ; CODE XREF: REASON+2↑j
ROM:D40F                                                     ; REASON+8↑j ...
ROM:D40F 60                          RTS
ROM:D410             ; ---------------------------------------------------------------------------
ROM:D410
ROM:D410             OMERROR:                                ; CODE XREF: GETSTK+3↑j
ROM:D410                                                     ; GETSTK+A↑j ...
ROM:D410 A2 4D                       LDX     #$4D ; 'M'      ; ERROR HANDLER, READY, TERMINAL INPUT, COMPACTIFY, NEW, REINIT.
ROM:D412
ROM:D412             ERROR_0:                                ; CODE XREF: ROM:D89E↓j
ROM:D412                                                     ; GOTO+40↓j ...
ROM:D412 86 DE                       STX     byte_DE
ROM:D414 24 D8                       BIT     byte_D8
ROM:D416 10 03                       BPL     loc_D41B
ROM:D418 4C EB F2                    JMP     loc_F2EB
ROM:D41B             ; ---------------------------------------------------------------------------
ROM:D41B
ROM:D41B             loc_D41B:                               ; CODE XREF: REASON+33↑j
ROM:D41B 20 FB DA                    JSR     CRDO
ROM:D41E 20 5A DB                    JSR     OUTQST
ROM:D421
ROM:D421             GETERR:                                 ; CODE XREF: REASON+4D↓j
ROM:D421 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:D424 BD 00 90                    LDA     ERROR_TEXT,X
ROM:D427 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:D42A 48                          PHA
ROM:D42B 20 5C DB                    JSR     OUTDO
ROM:D42E E8                          INX
ROM:D42F 68                          PLA
ROM:D430 10 EF                       BPL     GETERR
ROM:D432 20 83 D6                    JSR     STKINI
ROM:D435 A9 5F                       LDA     #$5F ; '_'      ; $D25F ptr to "Error"
ROM:D437 A0 D2                       LDY     #$D2
ROM:D439
ROM:D439             loc_D439:                               ; CODE XREF: REASON+4AD↓j
ROM:D439 20 57 F7                    JSR     STROUT_0
ROM:D43C
ROM:D43C             MAIN:                                   ; CODE XREF: REASON+6C↓j
ROM:D43C                                                     ; REASON+D4↓j ...
ROM:D43C 20 60 F4                    JSR     sub_F460
ROM:D43F 20 FB DA                    JSR     CRDO
ROM:D442 A2 DD                       LDX     #$DD
ROM:D444 20 2E D5                    JSR     INLIN
ROM:D447 86 B8                       STX     byte_B8
ROM:D449 84 B9                       STY     byte_B9
ROM:D44B 20 B1 00                    JSR     CHRGET
ROM:D44E AA                          TAX
ROM:D44F F0 EB                       BEQ     MAIN
ROM:D451 A2 FF                       LDX     #$FF
ROM:D453 86 76                       STX     byte_76
ROM:D455 90 06                       BCC     MAIN1
ROM:D457 20 59 D5                    JSR     CRUNCH
ROM:D45A 4C 08 D8                    JMP     GONE
ROM:D45D             ; ---------------------------------------------------------------------------
ROM:D45D
ROM:D45D             MAIN1:                                  ; CODE XREF: REASON+72↑j
ROM:D45D 20 BD F2                    JSR     LINGET_0
ROM:D460 20 59 D5                    JSR     CRUNCH
ROM:D463 84 0F                       STY     byte_F          ; character count
ROM:D465 20 1A D6                    JSR     FINDLINE        ; SEARCHES THE PROGRAM TEXT FOR THE LINE
ROM:D465                                                     ;
ROM:D468 90 44                       BCC     NODEL
ROM:D46A A0 01                       LDY     #1
ROM:D46C B1 9B                       LDA     ($9B),Y
ROM:D46E 85 5F                       STA     word_5E+1
ROM:D470 A5 69                       LDA     byte_69
ROM:D472 85 5E                       STA     word_5E
ROM:D474 A5 9C                       LDA     byte_9C
ROM:D476 85 61                       STA     byte_61
ROM:D478 A5 9B                       LDA     byte_9B
ROM:D47A 88                          DEY
ROM:D47B F1 9B                       SBC     ($9B),Y
ROM:D47D 18                          CLC
ROM:D47E 65 69                       ADC     byte_69
ROM:D480 85 69                       STA     byte_69
ROM:D482 85 60                       STA     byte_60
ROM:D484 A5 6A                       LDA     byte_6A
ROM:D486 69 FF                       ADC     #$FF
ROM:D488 85 6A                       STA     byte_6A
ROM:D48A E5 9C                       SBC     byte_9C
ROM:D48C AA                          TAX
ROM:D48D 38                          SEC
ROM:D48E A5 9B                       LDA     byte_9B
ROM:D490 E5 69                       SBC     byte_69
ROM:D492 A8                          TAY
ROM:D493 B0 03                       BCS     QDECT1
ROM:D495 E8                          INX
ROM:D496 C6 61                       DEC     byte_61
ROM:D498
ROM:D498             QDECT1:                                 ; CODE XREF: REASON+B0↑j
ROM:D498 18                          CLC
ROM:D499 65 5E                       ADC     word_5E
ROM:D49B 90 03                       BCC     MLOOP
ROM:D49D C6 5F                       DEC     word_5E+1
ROM:D49F 18                          CLC
ROM:D4A0
ROM:D4A0             MLOOP:                                  ; CODE XREF: REASON+B8↑j
ROM:D4A0                                                     ; REASON+C2↓j ...
ROM:D4A0 B1 5E                       LDA     ($5E),Y
ROM:D4A2 91 60                       STA     ($60),Y
ROM:D4A4 C8                          INY
ROM:D4A5 D0 F9                       BNE     MLOOP
ROM:D4A7 E6 5F                       INC     word_5E+1
ROM:D4A9 E6 61                       INC     byte_61
ROM:D4AB CA                          DEX
ROM:D4AC D0 F2                       BNE     MLOOP
ROM:D4AE
ROM:D4AE             NODEL:                                  ; CODE XREF: REASON+85↑j
ROM:D4AE 20 65 D6                    JSR     RUNC
ROM:D4B1 20 03 D5                    JSR     LNKPRG
ROM:D4B4 AD 00 02                    LDA     KEYBUF
ROM:D4B7 F0 83                       BEQ     MAIN
ROM:D4B9 18                          CLC
ROM:D4BA A5 69                       LDA     byte_69
ROM:D4BC 85 96                       STA     byte_96
ROM:D4BE 65 0F                       ADC     byte_F
ROM:D4C0 85 94                       STA     byte_94
ROM:D4C2 A4 6A                       LDY     byte_6A
ROM:D4C4 84 97                       STY     byte_97
ROM:D4C6 90 01                       BCC     NODELC
ROM:D4C8 C8                          INY
ROM:D4C9
ROM:D4C9             NODELC:                                 ; CODE XREF: REASON+E3↑j
ROM:D4C9 84 95                       STY     byte_95
ROM:D4CB 20 93 D3                    JSR     BLTU            ; BLOCK TRANSFER ROUTINE
ROM:D4CE A5 6D                       LDA     byte_6D
ROM:D4D0 A4 6E                       LDY     byte_6E
ROM:D4D2 85 69                       STA     byte_69
ROM:D4D4 84 6A                       STY     byte_6A
ROM:D4D6 A5 50                       LDA     byte_50
ROM:D4D8 A4 51                       LDY     byte_51
ROM:D4DA 8D FE 01                    STA     byte_1FE
ROM:D4DD 8C FF 01                    STY     byte_1FF
ROM:D4E0 A4 0F                       LDY     byte_F
ROM:D4E2 88                          DEY
ROM:D4E3
ROM:D4E3             STOLOP:                                 ; CODE XREF: REASON+108↓j
ROM:D4E3 B9 FC 01                    LDA     $1FC,Y
ROM:D4E6 91 9B                       STA     ($9B),Y
ROM:D4E8 88                          DEY
ROM:D4E9 C0 FF                       CPY     #$FF
ROM:D4EB D0 F6                       BNE     STOLOP
ROM:D4ED 4C F2 D4                    JMP     loc_D4F2
ROM:D4ED             ; ---------------------------------------------------------------------------
ROM:D4F0 45                          .BYTE $45 ; E
ROM:D4F1 58                          .BYTE $58 ; X
ROM:D4F2             ; ---------------------------------------------------------------------------
ROM:D4F2
ROM:D4F2             loc_D4F2:                               ; CODE XREF: REASON+10A↑j
ROM:D4F2                                                     ; ROM:DCF1↓j ...
ROM:D4F2 20 65 D6                    JSR     RUNC
ROM:D4F5 20 03 D5                    JSR     LNKPRG
ROM:D4F8 A5 69                       LDA     byte_69
ROM:D4FA A4 6A                       LDY     byte_6A
ROM:D4FC 85 AF                       STA     byte_AF
ROM:D4FE 84 B0                       STY     byte_B0
ROM:D500 4C 3C D4                    JMP     MAIN
ROM:D500             ; End of function REASON
ROM:D500
ROM:D503
ROM:D503             ; =============== S U B R O U T I N E =======================================
ROM:D503
ROM:D503
ROM:D503             LNKPRG:                                 ; CODE XREF: REASON+CE↑p
ROM:D503                                                     ; REASON+112↑p
ROM:D503 20 10 F7                    JSR     SAVE_TXTAB
ROM:D506
ROM:D506             CHEAD:                                  ; CODE XREF: LNKPRG+24↓j
ROM:D506 A0 01                       LDY     #1
ROM:D508 B1 5E                       LDA     ($5E),Y
ROM:D50A F0 1D                       BEQ     LNKRTS
ROM:D50C A0 04                       LDY     #4
ROM:D50E
ROM:D50E             CZLOOP:                                 ; CODE XREF: LNKPRG+E↓j
ROM:D50E C8                          INY
ROM:D50F B1 5E                       LDA     ($5E),Y
ROM:D511 D0 FB                       BNE     CZLOOP
ROM:D513 C8                          INY
ROM:D514 98                          TYA
ROM:D515 65 5E                       ADC     word_5E
ROM:D517 AA                          TAX
ROM:D518 A0 00                       LDY     #0
ROM:D51A 91 5E                       STA     ($5E),Y
ROM:D51C A5 5F                       LDA     word_5E+1
ROM:D51E 69 00                       ADC     #0
ROM:D520 C8                          INY
ROM:D521 91 5E                       STA     ($5E),Y
ROM:D523 86 5E                       STX     word_5E
ROM:D525 85 5F                       STA     word_5E+1
ROM:D527 90 DD                       BCC     CHEAD
ROM:D529
ROM:D529             LNKRTS:                                 ; CODE XREF: LNKPRG+7↑j
ROM:D529 60                          RTS
ROM:D529             ; End of function LNKPRG
ROM:D529
ROM:D529             ; ---------------------------------------------------------------------------
ROM:D52A 49                          .BYTE $49 ; I
ROM:D52B 54                          .BYTE $54 ; T
ROM:D52C
ROM:D52C             ; =============== S U B R O U T I N E =======================================
ROM:D52C
ROM:D52C
ROM:D52C             sub_D52C:                               ; CODE XREF: set_WIDTH-1AD8↓p
ROM:D52C                                                     ; sub_DBDC+3↓j
ROM:D52C A2 80                       LDX     #$80
ROM:D52C             ; End of function sub_D52C
ROM:D52C
ROM:D52E
ROM:D52E             ; =============== S U B R O U T I N E =======================================
ROM:D52E
ROM:D52E
ROM:D52E             INLIN:                                  ; CODE XREF: REASON+61↑p
ROM:D52E
ROM:D52E             ; FUNCTION CHUNK AT ROM:D56C SIZE 00000005 BYTES
ROM:D52E             ; FUNCTION CHUNK AT ROM:F407 SIZE 00000006 BYTES
ROM:D52E
ROM:D52E 86 33                       STX     PROMPT
ROM:D530 20 6A FD                    JSR     GETLN
ROM:D533 E0 EE                       CPX     #$EE
ROM:D535 90 02                       BCC     loc_D539
ROM:D537 A2 EE                       LDX     #$EE
ROM:D539
ROM:D539             loc_D539:                               ; CODE XREF: INLIN+7↑j
ROM:D539 A9 00                       LDA     #0
ROM:D53B 9D 00 02                    STA     KEYBUF,X
ROM:D53E 8A                          TXA
ROM:D53F D0 03                       BNE     loc_D544
ROM:D541 CA                          DEX
ROM:D542 D0 28                       BNE     loc_D56C
ROM:D544
ROM:D544             loc_D544:                               ; CODE XREF: INLIN+11↑j
ROM:D544                                                     ; INLIN+21↓j
ROM:D544 BD 00 02                    LDA     KEYBUF,X
ROM:D547 29 7F                       AND     #$7F
ROM:D549 9D 00 02                    STA     KEYBUF,X
ROM:D54C CA                          DEX
ROM:D54D E0 FF                       CPX     #$FF
ROM:D54F D0 F3                       BNE     loc_D544
ROM:D551 F0 19                       BEQ     loc_D56C
ROM:D553 4C 07 F4                    JMP     loc_F407
ROM:D553             ; End of function INLIN
ROM:D553
ROM:D553             ; ---------------------------------------------------------------------------
ROM:D556 60                          .BYTE $60 ; `
ROM:D557 60                          .BYTE $60 ; `
ROM:D558 60                          .BYTE $60 ; `
ROM:D559
ROM:D559             ; =============== S U B R O U T I N E =======================================
ROM:D559
ROM:D559
ROM:D559             CRUNCH:                                 ; CODE XREF: REASON+74↑p
ROM:D559                                                     ; REASON+7D↑p
ROM:D559 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:D55C 20 BD 91                    JSR     CRUNCH_EXT
ROM:D55F 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:D55F             ; End of function CRUNCH
ROM:D55F
ROM:D55F             ; ---------------------------------------------------------------------------
ROM:D562 60                          .BYTE $60 ; `
ROM:D563 60                          .BYTE $60 ; `
ROM:D564 68                          .BYTE $68 ; h
ROM:D565 68                          .BYTE $68 ; h
ROM:D566             ; ---------------------------------------------------------------------------
ROM:D566 20 65 D6                    JSR     RUNC
ROM:D569 4C D2 D7                    JMP     NEWSTT
ROM:D56C             ; ---------------------------------------------------------------------------
ROM:D56C             ; START OF FUNCTION CHUNK FOR INLIN
ROM:D56C
ROM:D56C             loc_D56C:                               ; CODE XREF: INLIN+14↑j
ROM:D56C                                                     ; INLIN+23↑j
ROM:D56C A9 00                       LDA     #0
ROM:D56E A0 01                       LDY     #1
ROM:D570 60                          RTS
ROM:D570             ; END OF FUNCTION CHUNK FOR INLIN
ROM:D571             ; ---------------------------------------------------------------------------
ROM:D571
ROM:D571             RESET0:                                 ; CODE XREF: ROM:RESET↓j
ROM:D571 D8                          CLD
ROM:D572 A2 0F                       LDX     #$F
ROM:D574 E4 C8                       CPX     PBANK4          ; Save SBANK4 value : $C000-$FFFF
ROM:D576 F0 56                       BEQ     RESET1
ROM:D578 A0 A0                       LDY     #$A0
ROM:D57A
ROM:D57A             delay1:                                 ; CODE XREF: ROM:D57C↓j
ROM:D57A                                                     ; ROM:D57F↓j
ROM:D57A 69 01                       ADC     #1
ROM:D57C 90 FC                       BCC     delay1          ; wait for system to settle
ROM:D57E 88                          DEY
ROM:D57F D0 F9                       BNE     delay1
ROM:D581 8E 7F C0                    STX     SBANK4          ; X holds $0F from $D572
ROM:D584 8D 78 C0                    STA     SYSTEM          ; default mem config = 0,1,3,F
ROM:D587 8C 7C C0                    STY     SBANK1          ; Y == $00 here
ROM:D58A 84 C5                       STY     PBANK1          ; Save SBANK1 value : $0000-$3FFF
ROM:D58C 86 C8                       STX     PBANK4          ; Save SBANK4 value : $C000-$FFFF
ROM:D58E C8                          INY
ROM:D58F 8C 7D C0                    STY     SBANK2          ; Y == $01
ROM:D592 84 C6                       STY     PBANK2          ; Save SBANK2 value : $4000-$7FFF
ROM:D594 C8                          INY
ROM:D595 C8                          INY
ROM:D596 8C 7E C0                    STY     SBANK3          ; Y == $03
ROM:D599 84 C7                       STY     PBANK3          ; Save SBANK3 value : $8000-$BFFF
ROM:D59B A0 10                       LDY     #$10
ROM:D59D 84 68                       STY     TXTABH          ; $1000 = start of 80 column screen area
ROM:D59F 85 67                       STA     TXTABL
ROM:D5A1 85 48                       STA     STATUS
ROM:D5A3 A8                          TAY
ROM:D5A4
ROM:D5A4             CLEAR_SCREEN:                           ; CODE XREF: ROM:D5A9↓j
ROM:D5A4                                                     ; ROM:D5B1↓j
ROM:D5A4 A9 A0                       LDA     #$A0
ROM:D5A6 91 67                       STA     (TXTABL),Y      ; Clear the 80 column screen mem with SPC
ROM:D5A8 C8                          INY
ROM:D5A9 D0 F9                       BNE     CLEAR_SCREEN
ROM:D5AB E6 68                       INC     TXTABH
ROM:D5AD A5 68                       LDA     TXTABH
ROM:D5AF C9 18                       CMP     #$18            ; reached $1800 yet?. Also BASIC programs start at $1800
ROM:D5B1 D0 F1                       BNE     CLEAR_SCREEN
ROM:D5B3 AE 00 C0                    LDX     KEYBOARD
ROM:D5B6 E0 C1                       CPX     #$C1            ; "A" force BASIC programs to start at $800
ROM:D5B8 D0 02                       BNE     USUAL
ROM:D5BA A9 08                       LDA     #8              ; BASIC starts at $800
ROM:D5BC
ROM:D5BC             USUAL:                                  ; CODE XREF: ROM:D5B8↑j
ROM:D5BC 85 68                       STA     TXTABH
ROM:D5BE 4C 21 FE                    JMP     POWER_PATCH     ; small patch to init "POWER"
ROM:D5C1             ; ---------------------------------------------------------------------------
ROM:D5C1
ROM:D5C1             POWER_PATCH_RET:                        ; CODE XREF: ROM:FE29↓j
ROM:D5C1 E0 9B                       CPX     #$9B            ; ESC pressed?
ROM:D5C3 D0 06                       BNE     SETT40
ROM:D5C5 20 81 FB                    JSR     TEXT80
ROM:D5C8 4C CE D5                    JMP     RESET1
ROM:D5CB             ; ---------------------------------------------------------------------------
ROM:D5CB
ROM:D5CB             SETT40:                                 ; CODE XREF: ROM:D5C3↑j
ROM:D5CB 20 78 FB                    JSR     TEXT40
ROM:D5CE
ROM:D5CE             RESET1:                                 ; CODE XREF: ROM:D576↑j
ROM:D5CE                                                     ; ROM:D5C8↑j
ROM:D5CE 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:D5D1 20 CD FB                    JSR     FRAMOU
ROM:D5D4 20 3C F2                    JSR     NORMAL
ROM:D5D7 AD 28 C0                    LDA     TEXTCR          ; foreground WHITE
ROM:D5DA AD 18 C0                    LDA     BKGRND          ; background BLACK
ROM:D5DD AD 08 C0                    LDA     BKDROP          ; border BLACK
ROM:D5E0 20 FA FB                    JSR     SONINT          ; turn sound generators off
ROM:D5E3 20 2F FB                    JSR     VZINIT          ; init text display
ROM:D5E6 20 39 FE                    JSR     SCREEN          ; set output vector to Screen Handler
ROM:D5E9 20 42 FE                    JSR     KBDBRD          ; set input vector to Keyboard
ROM:D5EC 20 3A FF                    JSR     MBELL
ROM:D5EF AD F4 03                    LDA     RESTVR+2        ; check APPLE reset vector
ROM:D5F2 49 A5                       EOR     #$A5
ROM:D5F4 CD F3 03                    CMP     RESTVR+1
ROM:D5F7 D0 03                       BNE     FIRSTTIME
ROM:D5F9 4C F1 FC                    JMP     DEBUG1
ROM:D5FC             ; ---------------------------------------------------------------------------
ROM:D5FC
ROM:D5FC             FIRSTTIME:                              ; CODE XREF: ROM:D5F7↑j
ROM:D5FC 20 99 FB                    JSR     TITLE
ROM:D5FF 20 AA FB                    JSR     INFKEY          ; Init Function keys
ROM:D602 20 61 FB                    JSR     PRESP3          ; preset PAGE#3 vectors
ROM:D605 20 43 FD                    JSR     CHKDIS          ; Look for disk controller in Slot#6, then Slot#5
ROM:D608
ROM:D608             loc_D608:                               ; CODE XREF: ROM:FCFD↓j
ROM:D608 A9 03                       LDA     #3
ROM:D60A 8D F2 03                    STA     RESTVR
ROM:D60D 20 6F FB                    JSR     SRESTV
ROM:D610 4C 00 E0                    JMP     BASIC_COLD
ROM:D610             ; ---------------------------------------------------------------------------
ROM:D613 4D                          .BYTE $4D ; M
ROM:D614 41                          .BYTE $41 ; A
ROM:D615 33                          .BYTE $33 ; 3
ROM:D616 A5                          .BYTE $A5
ROM:D617 02                          .BYTE   2
ROM:D618 43                          .BYTE $43 ; C
ROM:D619 4F                          .BYTE $4F ; O
ROM:D61A
ROM:D61A             ; =============== S U B R O U T I N E =======================================
ROM:D61A
ROM:D61A             ; SEARCHES THE PROGRAM TEXT FOR THE LINE
ROM:D61A             ;
ROM:D61A
ROM:D61A             FINDLINE:                               ; CODE XREF: REASON+82↑p
ROM:D61A                                                     ; ROM:D6A9↓p ...
ROM:D61A A5 67                       LDA     TXTABL
ROM:D61C A6 68                       LDX     TXTABH
ROM:D61C             ; End of function FINDLINE
ROM:D61C
ROM:D61E
ROM:D61E             ; =============== S U B R O U T I N E =======================================
ROM:D61E
ROM:D61E
ROM:D61E             FLDLNC:                                 ; CODE XREF: FLDLNC+27↓j
ROM:D61E                                                     ; GOTO:loc_D959↓p
ROM:D61E A0 01                       LDY     #1
ROM:D620 85 9B                       STA     byte_9B
ROM:D622 86 9C                       STX     byte_9C
ROM:D624 B1 9B                       LDA     ($9B),Y
ROM:D626 F0 1F                       BEQ     FLINRT
ROM:D628 C8                          INY
ROM:D629 C8                          INY
ROM:D62A A5 51                       LDA     byte_51
ROM:D62C D1 9B                       CMP     ($9B),Y
ROM:D62E 90 18                       BCC     FLNRTS
ROM:D630 F0 03                       BEQ     FNDLO1
ROM:D632 88                          DEY
ROM:D633 D0 09                       BNE     AFFRTS
ROM:D635
ROM:D635             FNDLO1:                                 ; CODE XREF: FLDLNC+12↑j
ROM:D635 A5 50                       LDA     byte_50
ROM:D637 88                          DEY
ROM:D638 D1 9B                       CMP     ($9B),Y
ROM:D63A 90 0C                       BCC     FLNRTS
ROM:D63C F0 0A                       BEQ     FLNRTS
ROM:D63E
ROM:D63E             AFFRTS:                                 ; CODE XREF: FLDLNC+15↑j
ROM:D63E 88                          DEY
ROM:D63F B1 9B                       LDA     ($9B),Y
ROM:D641 AA                          TAX
ROM:D642 88                          DEY
ROM:D643 B1 9B                       LDA     ($9B),Y
ROM:D645 B0 D7                       BCS     FLDLNC
ROM:D647
ROM:D647             FLINRT:                                 ; CODE XREF: FLDLNC+8↑j
ROM:D647 18                          CLC
ROM:D648
ROM:D648             FLNRTS:                                 ; CODE XREF: FLDLNC+10↑j
ROM:D648                                                     ; FLDLNC+1C↑j ...
ROM:D648 60                          RTS
ROM:D648             ; End of function FLDLNC
ROM:D648
ROM:D649             ; ---------------------------------------------------------------------------
ROM:D649 D0 FD                       BNE     FLNRTS
ROM:D64B
ROM:D64B             ; =============== S U B R O U T I N E =======================================
ROM:D64B
ROM:D64B
ROM:D64B             SCRATCH:                                ; CODE XREF: PTRGT2+119C↓p
ROM:D64B A9 00                       LDA     #0
ROM:D64D EA                          NOP
ROM:D64E A8                          TAY
ROM:D64F 91 67                       STA     ($67),Y
ROM:D651 C8                          INY
ROM:D652 91 67                       STA     ($67),Y
ROM:D654 A5 67                       LDA     TXTABL
ROM:D656 18                          CLC
ROM:D657 69 02                       ADC     #2
ROM:D659 85 69                       STA     byte_69
ROM:D65B 85 AF                       STA     byte_AF
ROM:D65D A5 68                       LDA     TXTABH
ROM:D65F 69 00                       ADC     #0
ROM:D661 85 6A                       STA     byte_6A
ROM:D663 85 B0                       STA     byte_B0
ROM:D663             ; End of function SCRATCH
ROM:D663
ROM:D665
ROM:D665             ; =============== S U B R O U T I N E =======================================
ROM:D665
ROM:D665
ROM:D665             RUNC:                                   ; CODE XREF: REASON:NODEL↑p
ROM:D665                                                     ; REASON:loc_D4F2↑p ...
ROM:D665 20 97 D6                    JSR     STXTPT
ROM:D668
ROM:D668             loc_D668:
ROM:D668 A9 00                       LDA     #0
ROM:D66A D0 2A                       BNE     STKRTS
ROM:D66C
ROM:D66C             CLEARC:                                 ; CODE XREF: ROM:loc_D91B↓p
ROM:D66C                                                     ; ROM:F2BA↓j
ROM:D66C A5 73                       LDA     byte_73
ROM:D66E A4 74                       LDY     byte_74
ROM:D670 85 6F                       STA     byte_6F
ROM:D672 84 70                       STY     byte_70
ROM:D674 A5 69                       LDA     byte_69
ROM:D676 A4 6A                       LDY     byte_6A
ROM:D678 85 6B                       STA     byte_6B
ROM:D67A 84 6C                       STY     byte_6C
ROM:D67C 85 6D                       STA     byte_6D
ROM:D67E 84 6E                       STY     byte_6E
ROM:D680 20 49 D8                    JSR     RESTOR
ROM:D680             ; End of function RUNC
ROM:D680
ROM:D683
ROM:D683             ; =============== S U B R O U T I N E =======================================
ROM:D683
ROM:D683
ROM:D683             STKINI:                                 ; CODE XREF: REASON+4F↑p
ROM:D683 A2 55                       LDX     #$55 ; 'U'
ROM:D685 86 52                       STX     byte_52
ROM:D687 68                          PLA
ROM:D688 A8                          TAY
ROM:D689 68                          PLA
ROM:D68A A2 F8                       LDX     #$F8
ROM:D68C 9A                          TXS
ROM:D68D 48                          PHA
ROM:D68E 98                          TYA
ROM:D68F 48                          PHA
ROM:D690 A9 00                       LDA     #0
ROM:D692 85 7A                       STA     byte_7A
ROM:D694 85 14                       STA     byte_14
ROM:D696
ROM:D696             STKRTS:                                 ; CODE XREF: RUNC+5↑j
ROM:D696 60                          RTS
ROM:D696             ; End of function STKINI
ROM:D696
ROM:D697
ROM:D697             ; =============== S U B R O U T I N E =======================================
ROM:D697
ROM:D697
ROM:D697             STXTPT:                                 ; CODE XREF: RUNC↑p
ROM:D697 18                          CLC
ROM:D698 A5 67                       LDA     TXTABL
ROM:D69A 69 FF                       ADC     #$FF
ROM:D69C 85 B8                       STA     byte_B8
ROM:D69E A5 68                       LDA     TXTABH
ROM:D6A0 69 FF                       ADC     #$FF
ROM:D6A2 85 B9                       STA     byte_B9
ROM:D6A4 60                          RTS
ROM:D6A4             ; End of function STXTPT
ROM:D6A4
ROM:D6A5             ; ---------------------------------------------------------------------------
ROM:D6A5
ROM:D6A5             do_LIST:                                ; DATA XREF: ROM:D078↑t
ROM:D6A5 08                          PHP
ROM:D6A6 20 0C DA                    JSR     LINGET          ; "LINGET" READS A LINE NUMBER FROM THE CURRENT TEXT POSITION.
ROM:D6A9 20 1A D6                    JSR     FINDLINE        ; SEARCHES THE PROGRAM TEXT FOR THE LINE
ROM:D6A9                                                     ;
ROM:D6AC 28                          PLP
ROM:D6AD F0 18                       BEQ     loc_D6C7
ROM:D6AF 20 B7 00                    JSR     CHRGOT
ROM:D6B2 F0 19                       BEQ     LSTEND
ROM:D6B4 C9 C9                       CMP     #$C9
ROM:D6B6 F0 04                       BEQ     loc_D6BC
ROM:D6B8 C9 2C                       CMP     #$2C ; ','
ROM:D6BA D0 0A                       BNE     locret_D6C6
ROM:D6BC
ROM:D6BC             loc_D6BC:                               ; CODE XREF: ROM:D6B6↑j
ROM:D6BC 20 B1 00                    JSR     CHRGET
ROM:D6BF F0 06                       BEQ     loc_D6C7
ROM:D6C1 20 8B D2                    JSR     sub_D28B
ROM:D6C4 F0 07                       BEQ     LSTEND
ROM:D6C6
ROM:D6C6             locret_D6C6:                            ; CODE XREF: ROM:D6BA↑j
ROM:D6C6 60                          RTS
ROM:D6C7             ; ---------------------------------------------------------------------------
ROM:D6C7
ROM:D6C7             loc_D6C7:                               ; CODE XREF: ROM:D6AD↑j
ROM:D6C7                                                     ; ROM:D6BF↑j
ROM:D6C7 A9 FF                       LDA     #$FF
ROM:D6C9 85 50                       STA     byte_50
ROM:D6CB 85 51                       STA     byte_51
ROM:D6CD
ROM:D6CD             LSTEND:                                 ; CODE XREF: ROM:D6B2↑j
ROM:D6CD                                                     ; ROM:D6C4↑j
ROM:D6CD 68                          PLA
ROM:D6CE 68                          PLA
ROM:D6CF
ROM:D6CF             LIST4:                                  ; CODE XREF: ROM:D70D↓j
ROM:D6CF A0 01                       LDY     #1
ROM:D6D1 B1 9B                       LDA     ($9B),Y
ROM:D6D3 F0 3A                       BEQ     GRODY
ROM:D6D5 20 58 D8                    JSR     sub_D858
ROM:D6D8 20 FB DA                    JSR     CRDO
ROM:D6DB C8                          INY
ROM:D6DC B1 9B                       LDA     ($9B),Y
ROM:D6DE AA                          TAX
ROM:D6DF C8                          INY
ROM:D6E0 B1 9B                       LDA     ($9B),Y         ; get line number
ROM:D6E2 C5 51                       CMP     byte_51         ; beyond last line?
ROM:D6E4 D0 04                       BNE     TSTDUN
ROM:D6E6 E4 50                       CPX     byte_50
ROM:D6E8 F0 02                       BEQ     TYPELINE
ROM:D6EA
ROM:D6EA             TSTDUN:                                 ; CODE XREF: ROM:D6E4↑j
ROM:D6EA B0 23                       BCS     GRODY
ROM:D6EC
ROM:D6EC             TYPELINE:                               ; CODE XREF: ROM:D6E8↑j
ROM:D6EC 84 85                       STY     byte_85
ROM:D6EE 20 24 ED                    JSR     LINPRT          ; print line number as INT with no leading space
ROM:D6F1 A9 20                       LDA     #$20 ; ' '      ; followed by a space
ROM:D6F3
ROM:D6F3             loc_D6F3:                               ; CODE XREF: ROM:D74F↓j
ROM:D6F3 A4 85                       LDY     byte_85
ROM:D6F5 29 7F                       AND     #$7F
ROM:D6F7
ROM:D6F7             loc_D6F7:                               ; CODE XREF: ROM:loc_D71F↓j
ROM:D6F7 20 5C DB                    JSR     OUTDO
ROM:D6FA 20 BE F6                    JSR     loc_F6BE
ROM:D6FD C8                          INY
ROM:D6FE B1 9B                       LDA     ($9B),Y
ROM:D700 D0 1D                       BNE     loc_D71F
ROM:D702 A8                          TAY
ROM:D703 B1 9B                       LDA     ($9B),Y
ROM:D705 AA                          TAX
ROM:D706 C8                          INY
ROM:D707 B1 9B                       LDA     ($9B),Y
ROM:D709 86 9B                       STX     byte_9B
ROM:D70B 85 9C                       STA     byte_9C
ROM:D70D D0 C0                       BNE     LIST4
ROM:D70F
ROM:D70F             GRODY:                                  ; CODE XREF: ROM:D6D3↑j
ROM:D70F                                                     ; ROM:TSTDUN↑j
ROM:D70F A9 0D                       LDA     #$D
ROM:D711 20 5C DB                    JSR     OUTDO
ROM:D714 4C D2 D7                    JMP     NEWSTT
ROM:D717
ROM:D717             ; =============== S U B R O U T I N E =======================================
ROM:D717
ROM:D717
ROM:D717             sub_D717:                               ; CODE XREF: ROM:loc_D734↓p
ROM:D717                                                     ; ROM:loc_D740↓p
ROM:D717 C8                          INY
ROM:D718 D0 02                       BNE     loc_D71C
ROM:D71A E6 9E                       INC     byte_9E
ROM:D71C
ROM:D71C             loc_D71C:                               ; CODE XREF: sub_D717+1↑j
ROM:D71C B1 9D                       LDA     ($9D),Y
ROM:D71E 60                          RTS
ROM:D71E             ; End of function sub_D717
ROM:D71E
ROM:D71F             ; ---------------------------------------------------------------------------
ROM:D71F
ROM:D71F             loc_D71F:                               ; CODE XREF: ROM:D700↑j
ROM:D71F 10 D6                       BPL     loc_D6F7
ROM:D721 38                          SEC
ROM:D722 E9 7F                       SBC     #$7F
ROM:D724 AA                          TAX
ROM:D725 84 85                       STY     byte_85
ROM:D727 A9 D0                       LDA     #$D0
ROM:D729 A0 CF                       LDY     #$CF
ROM:D72B 85 9D                       STA     byte_9D
ROM:D72D 84 9E                       STY     byte_9E
ROM:D72F A0 FF                       LDY     #$FF
ROM:D731
ROM:D731             loc_D731:                               ; CODE XREF: ROM:D739↓j
ROM:D731 CA                          DEX
ROM:D732 F0 07                       BEQ     loc_D73B
ROM:D734
ROM:D734             loc_D734:                               ; CODE XREF: ROM:D737↓j
ROM:D734 20 17 D7                    JSR     sub_D717
ROM:D737 10 FB                       BPL     loc_D734
ROM:D739 30 F6                       BMI     loc_D731
ROM:D73B
ROM:D73B             loc_D73B:                               ; CODE XREF: ROM:D732↑j
ROM:D73B A9 20                       LDA     #$20 ; ' '
ROM:D73D 20 5C DB                    JSR     OUTDO
ROM:D740
ROM:D740             loc_D740:                               ; CODE XREF: ROM:D748↓j
ROM:D740 20 17 D7                    JSR     sub_D717
ROM:D743 30 05                       BMI     loc_D74A
ROM:D745 20 5C DB                    JSR     OUTDO
ROM:D748 D0 F6                       BNE     loc_D740
ROM:D74A
ROM:D74A             loc_D74A:                               ; CODE XREF: ROM:D743↑j
ROM:D74A 20 5C DB                    JSR     OUTDO
ROM:D74D A9 20                       LDA     #$20 ; ' '
ROM:D74F D0 A2                       BNE     loc_D6F3
ROM:D751             ; START OF FUNCTION CHUNK FOR sub_D858
ROM:D751
ROM:D751             loc_D751:                               ; CODE XREF: sub_D858:key_down↓j
ROM:D751 C9 83                       CMP     #$83
ROM:D753 F0 05                       BEQ     loc_D75A
ROM:D755 C9 FF                       CMP     #$FF
ROM:D757 F0 01                       BEQ     loc_D75A
ROM:D759 60                          RTS
ROM:D75A             ; ---------------------------------------------------------------------------
ROM:D75A
ROM:D75A             loc_D75A:                               ; CODE XREF: sub_D858-105↑j
ROM:D75A                                                     ; sub_D858-101↑j
ROM:D75A 2C 10 C0                    BIT     KEYSTRB
ROM:D75D A9 03                       LDA     #3
ROM:D75F 4C 61 D8                    JMP     loc_D861
ROM:D75F             ; END OF FUNCTION CHUNK FOR sub_D858
ROM:D75F             ; ---------------------------------------------------------------------------
ROM:D762 45                          .BYTE 'E'
ROM:D763 58                          .BYTE 'X'
ROM:D764 54                          .BYTE 'T'
ROM:D765 20                          .BYTE ' '
ROM:D766             ; ---------------------------------------------------------------------------
ROM:D766
ROM:D766             FOR:                                    ; DATA XREF: ROM:D002↑t
ROM:D766 A9 80                       LDA     #$80
ROM:D768 85 14                       STA     byte_14
ROM:D76A 20 46 DA                    JSR     LET
ROM:D76D 20 65 D3                    JSR     FINDFOR         ; FIND A "FOR" ENTRY ON THE STACK VIA "VARPNT".
ROM:D76D                                                     ;
ROM:D770 D0 05                       BNE     NOTOL
ROM:D772 8A                          TXA
ROM:D773 69 0F                       ADC     #$F
ROM:D775 AA                          TAX
ROM:D776 9A                          TXS
ROM:D777
ROM:D777             NOTOL:                                  ; CODE XREF: ROM:D770↑j
ROM:D777 68                          PLA
ROM:D778 68                          PLA
ROM:D779 A9 09                       LDA     #9
ROM:D77B 20 D6 D3                    JSR     GETSTK
ROM:D77E 20 A3 D9                    JSR     DATAN
ROM:D781 18                          CLC
ROM:D782 98                          TYA
ROM:D783 65 B8                       ADC     byte_B8
ROM:D785 48                          PHA
ROM:D786 A5 B9                       LDA     byte_B9
ROM:D788 69 00                       ADC     #0
ROM:D78A 48                          PHA
ROM:D78B A5 76                       LDA     byte_76
ROM:D78D 48                          PHA
ROM:D78E A5 75                       LDA     byte_75
ROM:D790 48                          PHA
ROM:D791 A9 C1                       LDA     #$C1
ROM:D793 20 C0 DE                    JSR     SYNCHR
ROM:D796 20 6A DD                    JSR     CHKNUM
ROM:D799 20 67 DD                    JSR     FRMNUM
ROM:D79C A5 A2                       LDA     byte_A2
ROM:D79E 09 7F                       ORA     #$7F
ROM:D7A0 25 9E                       AND     byte_9E
ROM:D7A2 85 9E                       STA     byte_9E
ROM:D7A4 A9 AF                       LDA     #$AF
ROM:D7A6 A0 D7                       LDY     #$D7            ; return to $D7AF
ROM:D7A8 85 5E                       STA     word_5E
ROM:D7AA 84 5F                       STY     word_5E+1
ROM:D7AC 4C 20 DE                    JMP     FORPSH
ROM:D7AF             ; ---------------------------------------------------------------------------
ROM:D7AF
ROM:D7AF             LDFONE:
ROM:D7AF A9 13                       LDA     #$13
ROM:D7B1 A0 E9                       LDY     #$E9
ROM:D7B3 20 F9 EA                    JSR     MOVFM
ROM:D7B6 20 B7 00                    JSR     CHRGOT
ROM:D7B9 C9 C7                       CMP     #$C7
ROM:D7BB D0 06                       BNE     ONEON
ROM:D7BD 20 B1 00                    JSR     CHRGET
ROM:D7C0 20 67 DD                    JSR     FRMNUM
ROM:D7C3
ROM:D7C3             ONEON:                                  ; CODE XREF: ROM:D7BB↑j
ROM:D7C3 20 82 EB                    JSR     SIGN
ROM:D7C6 20 15 DE                    JSR     PUSHF
ROM:D7C9 A5 86                       LDA     byte_86
ROM:D7CB 48                          PHA
ROM:D7CC A5 85                       LDA     byte_85
ROM:D7CE 48                          PHA
ROM:D7CF A9 81                       LDA     #$81
ROM:D7D1 48                          PHA
ROM:D7D2             ; START OF FUNCTION CHUNK FOR REASON
ROM:D7D2
ROM:D7D2             NEWSTT:                                 ; CODE XREF: ROM:D569↑j
ROM:D7D2                                                     ; ROM:D714↑j ...
ROM:D7D2 BA                          TSX
ROM:D7D3 86 F8                       STX     byte_F8
ROM:D7D5 20 58 D8                    JSR     sub_D858
ROM:D7D8 A5 B8                       LDA     byte_B8
ROM:D7DA A4 B9                       LDY     byte_B9
ROM:D7DC A6 76                       LDX     byte_76
ROM:D7DE E8                          INX
ROM:D7DF F0 04                       BEQ     loc_D7E5
ROM:D7E1 85 79                       STA     byte_79
ROM:D7E3 84 7A                       STY     byte_7A
ROM:D7E5
ROM:D7E5             loc_D7E5:                               ; CODE XREF: REASON+3FC↑j
ROM:D7E5 A0 00                       LDY     #0
ROM:D7E7 B1 B8                       LDA     ($B8),Y
ROM:D7E9 D0 57                       BNE     loc_D842
ROM:D7EB A0 02                       LDY     #2
ROM:D7ED B1 B8                       LDA     ($B8),Y
ROM:D7EF 18                          CLC
ROM:D7F0 D0 03                       BNE     loc_D7F5
ROM:D7F2 4C 8A D8                    JMP     loc_D88A
ROM:D7F5             ; ---------------------------------------------------------------------------
ROM:D7F5
ROM:D7F5             loc_D7F5:                               ; CODE XREF: REASON+40D↑j
ROM:D7F5 C8                          INY
ROM:D7F6 B1 B8                       LDA     ($B8),Y
ROM:D7F8 85 75                       STA     byte_75
ROM:D7FA C8                          INY
ROM:D7FB B1 B8                       LDA     ($B8),Y
ROM:D7FD 85 76                       STA     byte_76
ROM:D7FF 98                          TYA
ROM:D800 65 B8                       ADC     byte_B8
ROM:D802 85 B8                       STA     byte_B8
ROM:D804 90 02                       BCC     GONE
ROM:D806 E6 B9                       INC     byte_B9
ROM:D808
ROM:D808             GONE:                                   ; CODE XREF: REASON+77↑j
ROM:D808                                                     ; REASON+421↑j ...
ROM:D808 20 D5 F7                    JSR     sub_F7D5
ROM:D80B 10 11                       BPL     loc_D81E
ROM:D80D A9 F9                       LDA     #$F9
ROM:D80F A0 F5                       LDY     #$F5
ROM:D811 20 3A DB                    JSR     STROUT
ROM:D814 A6 75                       LDX     byte_75
ROM:D816 A5 76                       LDA     byte_76
ROM:D818 20 24 ED                    JSR     LINPRT
ROM:D81B 20 FB DA                    JSR     CRDO
ROM:D81E
ROM:D81E             loc_D81E:                               ; CODE XREF: REASON+428↑j
ROM:D81E 20 B1 00                    JSR     CHRGET
ROM:D821 20 28 D8                    JSR     GONE3
ROM:D824 4C D2 D7                    JMP     NEWSTT
ROM:D824             ; END OF FUNCTION CHUNK FOR REASON
ROM:D824             ; ---------------------------------------------------------------------------
ROM:D827 EA                          .BYTE $EA
ROM:D828
ROM:D828             ; =============== S U B R O U T I N E =======================================
ROM:D828
ROM:D828
ROM:D828             GONE3:                                  ; CODE XREF: REASON+43E↑p
ROM:D828                                                     ; sub_99C8:loc_D9E9↓j
ROM:D828 F0 33                       BEQ     locret_D85D
ROM:D82A
ROM:D82A             loc_D82A:                               ; CODE XREF: LINGET-F↓j
ROM:D82A E9 80                       SBC     #$80
ROM:D82C 90 11                       BCC     GLET
ROM:D82E C9 40                       CMP     #$40 ; '@'
ROM:D830 B0 14                       BCS     SNERRX
ROM:D832 0A                          ASL     A
ROM:D833 A8                          TAY
ROM:D834 B9 01 D0                    LDA     COMMAND_VECTORS+1,Y
ROM:D837 48                          PHA
ROM:D838 B9 00 D0                    LDA     COMMAND_VECTORS,Y
ROM:D83B 48                          PHA
ROM:D83C 4C B1 00                    JMP     CHRGET
ROM:D83F             ; ---------------------------------------------------------------------------
ROM:D83F
ROM:D83F             GLET:                                   ; CODE XREF: GONE3+4↑j
ROM:D83F 4C 46 DA                    JMP     LET
ROM:D842             ; ---------------------------------------------------------------------------
ROM:D842
ROM:D842             loc_D842:                               ; CODE XREF: REASON+406↑j
ROM:D842 C9 3A                       CMP     #$3A ; ':'
ROM:D844 F0 C2                       BEQ     GONE
ROM:D846
ROM:D846             SNERRX:                                 ; CODE XREF: GONE3+8↑j
ROM:D846 4C C9 DE                    JMP     SNERR
ROM:D846             ; End of function GONE3
ROM:D846
ROM:D849
ROM:D849             ; =============== S U B R O U T I N E =======================================
ROM:D849
ROM:D849
ROM:D849             RESTOR:                                 ; CODE XREF: RUNC+1B↑p
ROM:D849                                                     ; DATA XREF: ROM:D05C↑t
ROM:D849 38                          SEC
ROM:D84A A5 67                       LDA     TXTABL
ROM:D84C E9 01                       SBC     #1
ROM:D84E A4 68                       LDY     TXTABH
ROM:D850 B0 01                       BCS     RESFIN
ROM:D852 88                          DEY
ROM:D853
ROM:D853             RESFIN:                                 ; CODE XREF: RESTOR+7↑j
ROM:D853                                                     ; INPCO1+E3↓j
ROM:D853 85 7D                       STA     byte_7D
ROM:D855 84 7E                       STY     byte_7E
ROM:D857 60                          RTS
ROM:D857             ; End of function RESTOR
ROM:D857
ROM:D858
ROM:D858             ; =============== S U B R O U T I N E =======================================
ROM:D858
ROM:D858
ROM:D858             sub_D858:                               ; CODE XREF: ROM:D6D5↑p
ROM:D858                                                     ; REASON+3F2↑p
ROM:D858
ROM:D858             ; FUNCTION CHUNK AT ROM:D751 SIZE 00000011 BYTES
ROM:D858             ; FUNCTION CHUNK AT ROM:D8AF SIZE 00000001 BYTES
ROM:D858             ; FUNCTION CHUNK AT ROM:F2EB SIZE 0000002D BYTES
ROM:D858
ROM:D858 AD 00 C0                    LDA     KEYBOARD
ROM:D85B 30 01                       BMI     key_down
ROM:D85D
ROM:D85D             locret_D85D:                            ; CODE XREF: GONE3↑j
ROM:D85D 60                          RTS
ROM:D85E             ; ---------------------------------------------------------------------------
ROM:D85E
ROM:D85E             key_down:                               ; CODE XREF: sub_D858+3↑j
ROM:D85E 4C 51 D7                    JMP     loc_D751
ROM:D861             ; ---------------------------------------------------------------------------
ROM:D861
ROM:D861             loc_D861:                               ; CODE XREF: sub_D858-F9↑j
ROM:D861                                                     ; set_WIDTH-1ACC↓j
ROM:D861 A2 FF                       LDX     #$FF
ROM:D863 86 DE                       STX     byte_DE
ROM:D865 24 D8                       BIT     byte_D8
ROM:D867 10 03                       BPL     loc_D86C
ROM:D869 4C EB F2                    JMP     loc_F2EB
ROM:D86C             ; ---------------------------------------------------------------------------
ROM:D86C
ROM:D86C             loc_D86C:                               ; CODE XREF: sub_D858+F↑j
ROM:D86C C9 03                       CMP     #3
ROM:D86E
ROM:D86E             loc_D86E:
ROM:D86E B0 01                       BCS     loc_D871
ROM:D870 18                          CLC
ROM:D871
ROM:D871             loc_D871:                               ; CODE XREF: sub_D858:loc_D86E↑j
ROM:D871 D0 3C                       BNE     locret_D8AF
ROM:D873 A5 B8                       LDA     byte_B8
ROM:D875 A4 B9                       LDY     byte_B9
ROM:D877 A6 76                       LDX     byte_76
ROM:D879 E8                          INX
ROM:D87A F0 0C                       BEQ     loc_D888
ROM:D87C 85 79                       STA     byte_79
ROM:D87E 84 7A                       STY     byte_7A
ROM:D880 A5 75                       LDA     byte_75
ROM:D882 A4 76                       LDY     byte_76
ROM:D884 85 77                       STA     byte_77
ROM:D886 84 78                       STY     byte_78
ROM:D888
ROM:D888             loc_D888:                               ; CODE XREF: sub_D858+22↑j
ROM:D888 68                          PLA
ROM:D889 68                          PLA
ROM:D889             ; End of function sub_D858
ROM:D889
ROM:D88A             ; START OF FUNCTION CHUNK FOR REASON
ROM:D88A
ROM:D88A             loc_D88A:                               ; CODE XREF: REASON+40F↑j
ROM:D88A A9 6C                       LDA     #$6C ; 'l'
ROM:D88C A0 D2                       LDY     #$D2
ROM:D88E 90 03                       BCC     loc_D893
ROM:D890 4C 39 D4                    JMP     loc_D439
ROM:D893             ; ---------------------------------------------------------------------------
ROM:D893
ROM:D893             loc_D893:                               ; CODE XREF: REASON+4AB↑j
ROM:D893 4C 3C D4                    JMP     MAIN
ROM:D893             ; END OF FUNCTION CHUNK FOR REASON
ROM:D896             ; ---------------------------------------------------------------------------
ROM:D896
ROM:D896             do_CONT:                                ; DATA XREF: ROM:D076↑t
ROM:D896 D0 17                       BNE     locret_D8AF
ROM:D898 A2 D2                       LDX     #$D2
ROM:D89A A4 7A                       LDY     byte_7A
ROM:D89C D0 03                       BNE     loc_D8A1
ROM:D89E 4C 12 D4                    JMP     ERROR_0
ROM:D8A1             ; ---------------------------------------------------------------------------
ROM:D8A1
ROM:D8A1             loc_D8A1:                               ; CODE XREF: ROM:D89C↑j
ROM:D8A1 A5 79                       LDA     byte_79
ROM:D8A3 85 B8                       STA     byte_B8
ROM:D8A5 84 B9                       STY     byte_B9
ROM:D8A7 A5 77                       LDA     byte_77
ROM:D8A9 A4 78                       LDY     byte_78
ROM:D8AB 85 75                       STA     byte_75
ROM:D8AD 84 76                       STY     byte_76
ROM:D8AF             ; START OF FUNCTION CHUNK FOR sub_D858
ROM:D8AF
ROM:D8AF             locret_D8AF:                            ; CODE XREF: sub_D858:loc_D871↑j
ROM:D8AF                                                     ; ROM:do_CONT↑j
ROM:D8AF 60                          RTS
ROM:D8AF             ; END OF FUNCTION CHUNK FOR sub_D858
ROM:D8B0             ; ---------------------------------------------------------------------------
ROM:D8B0
ROM:D8B0             do_SAVE:                                ; DATA XREF: ROM:D06E↑t
ROM:D8B0 A5 AF                       LDA     byte_AF
ROM:D8B2 38                          SEC
ROM:D8B3 E5 67                       SBC     TXTABL
ROM:D8B5 85 D0                       STA     byte_D0
ROM:D8B7 A5 B0                       LDA     byte_B0
ROM:D8B9 E5 68                       SBC     TXTABH
ROM:D8BB 85 D1                       STA     byte_D1
ROM:D8BD 20 F0 D8                    JSR     sub_D8F0
ROM:D8C0 20 CD FE                    JSR     j_MTSAVE
ROM:D8C3 20 01 D9                    JSR     sub_D901
ROM:D8C6 4C CD FE                    JMP     j_MTSAVE
ROM:D8C9             ; ---------------------------------------------------------------------------
ROM:D8C9
ROM:D8C9             do_LOAD:                                ; DATA XREF: ROM:D06C↑t
ROM:D8C9 20 F0 D8                    JSR     sub_D8F0
ROM:D8CC 20 FD FE                    JSR     TLOAD
ROM:D8CF A5 67                       LDA     TXTABL
ROM:D8D1 18                          CLC
ROM:D8D2 65 D0                       ADC     byte_D0
ROM:D8D4 85 69                       STA     byte_69
ROM:D8D6 85 AF                       STA     byte_AF
ROM:D8D8 A5 68                       LDA     TXTABH
ROM:D8DA 65 D1                       ADC     byte_D1
ROM:D8DC 85 6A                       STA     byte_6A
ROM:D8DE 85 B0                       STA     byte_B0
ROM:D8E0 A5 D2                       LDA     byte_D2
ROM:D8E2 48                          PHA
ROM:D8E3 20 01 D9                    JSR     sub_D901
ROM:D8E6 20 FD FE                    JSR     TLOAD
ROM:D8E9 68                          PLA
ROM:D8EA 4C EF DC                    JMP     loc_DCEF
ROM:D8ED             ; ---------------------------------------------------------------------------
ROM:D8ED 20 A8 92                    JSR     byte_92A8
ROM:D8F0
ROM:D8F0             ; =============== S U B R O U T I N E =======================================
ROM:D8F0
ROM:D8F0
ROM:D8F0             sub_D8F0:                               ; CODE XREF: ROM:D8BD↑p
ROM:D8F0                                                     ; ROM:do_LOAD↑p ...
ROM:D8F0 A9 00                       LDA     #0
ROM:D8F2 85 D2                       STA     byte_D2
ROM:D8F4 85 3D                       STA     REG1H
ROM:D8F6 85 3F                       STA     REG2H
ROM:D8F8 A9 D0                       LDA     #$D0
ROM:D8FA 85 3C                       STA     REG1L
ROM:D8FC A9 D2                       LDA     #$D2
ROM:D8FE 85 3E                       STA     REG2L
ROM:D900 60                          RTS
ROM:D900             ; End of function sub_D8F0
ROM:D900
ROM:D901
ROM:D901             ; =============== S U B R O U T I N E =======================================
ROM:D901
ROM:D901
ROM:D901             sub_D901:                               ; CODE XREF: ROM:D8C3↑p
ROM:D901                                                     ; ROM:D8E3↑p
ROM:D901 A5 67                       LDA     TXTABL
ROM:D903 85 3C                       STA     REG1L
ROM:D905 A5 68                       LDA     TXTABH
ROM:D907 85 3D                       STA     REG1H
ROM:D909 A5 AF                       LDA     byte_AF
ROM:D90B 85 3E                       STA     REG2L
ROM:D90D A5 B0                       LDA     byte_B0
ROM:D90F 85 3F                       STA     REG2H
ROM:D911 60                          RTS
ROM:D911             ; End of function sub_D901
ROM:D911
ROM:D912             ; ---------------------------------------------------------------------------
ROM:D912
ROM:D912             RUN_0:                                  ; DATA XREF: ROM:D058↑t
ROM:D912 08                          PHP
ROM:D913 C6 76                       DEC     byte_76
ROM:D915 28                          PLP
ROM:D916 D0 03                       BNE     loc_D91B
ROM:D918
ROM:D918             RUN:
ROM:D918 4C 65 D6                    JMP     RUNC
ROM:D91B             ; ---------------------------------------------------------------------------
ROM:D91B
ROM:D91B             loc_D91B:                               ; CODE XREF: ROM:D916↑j
ROM:D91B 20 6C D6                    JSR     CLEARC
ROM:D91E 4C 35 D9                    JMP     RUNC2
ROM:D921             ; ---------------------------------------------------------------------------
ROM:D921
ROM:D921             GOSUB:                                  ; DATA XREF: ROM:D060↑t
ROM:D921 A9 03                       LDA     #3
ROM:D923 20 D6 D3                    JSR     GETSTK
ROM:D926 A5 B9                       LDA     byte_B9
ROM:D928 48                          PHA
ROM:D929 A5 B8                       LDA     byte_B8
ROM:D92B 48                          PHA
ROM:D92C A5 76                       LDA     byte_76
ROM:D92E 48                          PHA
ROM:D92F A5 75                       LDA     byte_75
ROM:D931 48                          PHA
ROM:D932 A9 B0                       LDA     #$B0            ; gosub token
ROM:D934 48                          PHA
ROM:D935
ROM:D935             RUNC2:                                  ; CODE XREF: ROM:D91E↑j
ROM:D935 20 B7 00                    JSR     CHRGOT
ROM:D938 20 3E D9                    JSR     GOTO
ROM:D93B 4C D2 D7                    JMP     NEWSTT
ROM:D93E
ROM:D93E             ; =============== S U B R O U T I N E =======================================
ROM:D93E
ROM:D93E
ROM:D93E             GOTO:                                   ; CODE XREF: ROM:D938↑p
ROM:D93E                                                     ; sub_99C8+401E↓j ...
ROM:D93E
ROM:D93E             ; FUNCTION CHUNK AT ROM:D984 SIZE 00000003 BYTES
ROM:D93E
ROM:D93E 20 0C DA                    JSR     LINGET          ; "LINGET" READS A LINE NUMBER FROM THE CURRENT TEXT POSITION.
ROM:D941 20 A6 D9                    JSR     REMN
ROM:D944 A5 76                       LDA     byte_76
ROM:D946 C5 51                       CMP     byte_51
ROM:D948 B0 0B                       BCS     loc_D955
ROM:D94A 98                          TYA
ROM:D94B 38                          SEC
ROM:D94C 65 B8                       ADC     byte_B8
ROM:D94E A6 B9                       LDX     byte_B9
ROM:D950 90 07                       BCC     loc_D959
ROM:D952 E8                          INX
ROM:D953 B0 04                       BCS     loc_D959
ROM:D955
ROM:D955             loc_D955:                               ; CODE XREF: GOTO+A↑j
ROM:D955 A5 67                       LDA     TXTABL
ROM:D957 A6 68                       LDX     TXTABH
ROM:D959
ROM:D959             loc_D959:                               ; CODE XREF: GOTO+12↑j
ROM:D959                                                     ; GOTO+15↑j
ROM:D959 20 1E D6                    JSR     FLDLNC
ROM:D95C 90 1E                       BCC     USERR
ROM:D95E A5 9B                       LDA     byte_9B
ROM:D960 E9 01                       SBC     #1
ROM:D962 85 B8                       STA     byte_B8
ROM:D964 A5 9C                       LDA     byte_9C
ROM:D966 E9 00                       SBC     #0
ROM:D968 85 B9                       STA     byte_B9
ROM:D96A
ROM:D96A             GORTS:                                  ; CODE XREF: GOTO:do_POP↓j
ROM:D96A 60                          RTS
ROM:D96B             ; ---------------------------------------------------------------------------
ROM:D96B
ROM:D96B             do_POP:                                 ; DATA XREF: ROM:D042↑t
ROM:D96B                                                     ; ROM:D062↑t
ROM:D96B D0 FD                       BNE     GORTS
ROM:D96D A9 FF                       LDA     #$FF
ROM:D96F 85 86                       STA     byte_86
ROM:D971 20 65 D3                    JSR     FINDFOR         ; FIND A "FOR" ENTRY ON THE STACK VIA "VARPNT".
ROM:D971                                                     ;
ROM:D974 9A                          TXS
ROM:D975 C9 B0                       CMP     #$B0
ROM:D977 F0 0B                       BEQ     loc_D984
ROM:D979 A2 16                       LDX     #$16
ROM:D979             ; ---------------------------------------------------------------------------
ROM:D97B 2C                          .BYTE $2C ; ,
ROM:D97C             ; ---------------------------------------------------------------------------
ROM:D97C
ROM:D97C             USERR:                                  ; CODE XREF: GOTO+1E↑j
ROM:D97C A2 5A                       LDX     #$5A ; 'Z'
ROM:D97E 4C 12 D4                    JMP     ERROR_0
ROM:D97E             ; End of function GOTO
ROM:D97E
ROM:D981             ; ---------------------------------------------------------------------------
ROM:D981             ; START OF FUNCTION CHUNK FOR LINGET
ROM:D981
ROM:D981             loc_D981:                               ; CODE XREF: LINGET-16↓j
ROM:D981 4C C9 DE                    JMP     SNERR
ROM:D981             ; END OF FUNCTION CHUNK FOR LINGET
ROM:D984             ; ---------------------------------------------------------------------------
ROM:D984             ; START OF FUNCTION CHUNK FOR GOTO
ROM:D984
ROM:D984             loc_D984:                               ; CODE XREF: GOTO+39↑j
ROM:D984 4C C5 D9                    JMP     loc_D9C5
ROM:D984             ; END OF FUNCTION CHUNK FOR GOTO
ROM:D987             ; ---------------------------------------------------------------------------
ROM:D987             ; START OF FUNCTION CHUNK FOR REMN
ROM:D987
ROM:D987             loc_D987:                               ; CODE XREF: REMN+1B24↓j
ROM:D987 C8                          INY
ROM:D988 68                          PLA
ROM:D989 68                          PLA
ROM:D98A 85 75                       STA     byte_75
ROM:D98C 68                          PLA
ROM:D98D 85 76                       STA     byte_76
ROM:D98F 68                          PLA
ROM:D990 85 B8                       STA     byte_B8
ROM:D992 68                          PLA
ROM:D993 85 B9                       STA     byte_B9
ROM:D993             ; END OF FUNCTION CHUNK FOR REMN
ROM:D995
ROM:D995             ; =============== S U B R O U T I N E =======================================
ROM:D995
ROM:D995
ROM:D995             DATA:                                   ; CODE XREF: ROM:E33B↓p
ROM:D995                                                     ; DATA XREF: ROM:D006↑t
ROM:D995 20 A3 D9                    JSR     DATAN
ROM:D995             ; End of function DATA
ROM:D995
ROM:D998
ROM:D998             ; =============== S U B R O U T I N E =======================================
ROM:D998
ROM:D998
ROM:D998             ADDON:                                  ; CODE XREF: sub_99C8+4017↓j
ROM:D998                                                     ; INPCO1+D1↓p ...
ROM:D998 98                          TYA
ROM:D999 18                          CLC
ROM:D99A 65 B8                       ADC     byte_B8
ROM:D99C 85 B8                       STA     byte_B8
ROM:D99E 90 02                       BCC     locret_D9A2
ROM:D9A0 E6 B9                       INC     byte_B9
ROM:D9A2
ROM:D9A2             locret_D9A2:                            ; CODE XREF: ADDON+6↑j
ROM:D9A2                                                     ; REMN+12↓j ...
ROM:D9A2 60                          RTS
ROM:D9A2             ; End of function ADDON
ROM:D9A2
ROM:D9A3             ; ---------------------------------------------------------------------------
ROM:D9A3
ROM:D9A3             DATAN:                                  ; CODE XREF: ROM:D77E↑p
ROM:D9A3                                                     ; DATA↑p ...
ROM:D9A3 A2 3A                       LDX     #$3A ; ':'
ROM:D9A3             ; ---------------------------------------------------------------------------
ROM:D9A5 2C                          .BYTE $2C ; ,
ROM:D9A6
ROM:D9A6             ; =============== S U B R O U T I N E =======================================
ROM:D9A6
ROM:D9A6
ROM:D9A6             REMN:                                   ; CODE XREF: GOTO+3↑p
ROM:D9A6                                                     ; sub_99C8:loc_D9DC↓p ...
ROM:D9A6
ROM:D9A6             ; FUNCTION CHUNK AT ROM:D987 SIZE 0000000E BYTES
ROM:D9A6             ; FUNCTION CHUNK AT ROM:F4C6 SIZE 0000000D BYTES
ROM:D9A6
ROM:D9A6 A2 00                       LDX     #0
ROM:D9A8 86 0D                       STX     byte_D
ROM:D9AA A0 00                       LDY     #0
ROM:D9AC 84 0E                       STY     byte_E
ROM:D9AE
ROM:D9AE             loc_D9AE:                               ; CODE XREF: REMN+1D↓j
ROM:D9AE A5 0E                       LDA     byte_E
ROM:D9B0 A6 0D                       LDX     byte_D
ROM:D9B2 85 0D                       STA     byte_D
ROM:D9B4 86 0E                       STX     byte_E
ROM:D9B6
ROM:D9B6             loc_D9B6:                               ; CODE XREF: REMN+1B↓j
ROM:D9B6 B1 B8                       LDA     ($B8),Y
ROM:D9B8 F0 E8                       BEQ     locret_D9A2
ROM:D9BA C5 0E                       CMP     byte_E
ROM:D9BC F0 E4                       BEQ     locret_D9A2
ROM:D9BE C8                          INY
ROM:D9BF C9 22                       CMP     #$22 ; '"'
ROM:D9C1 D0 F3                       BNE     loc_D9B6
ROM:D9C3 F0 E9                       BEQ     loc_D9AE
ROM:D9C5
ROM:D9C5             loc_D9C5:                               ; CODE XREF: GOTO:loc_D984↑j
ROM:D9C5 88                          DEY
ROM:D9C6 4C C6 F4                    JMP     loc_F4C6
ROM:D9C6             ; End of function REMN
ROM:D9C6
ROM:D9C9             ; ---------------------------------------------------------------------------
ROM:D9C9
ROM:D9C9             IF:                                     ; DATA XREF: ROM:D05A↑t
ROM:D9C9 20 7B DD                    JSR     FRMEVL
ROM:D9CC 20 B7 00                    JSR     CHRGOT
ROM:D9CF C9 AB                       CMP     #$AB            ; goto token
ROM:D9D1 F0 05                       BEQ     OKGOTO
ROM:D9D3 A9 C4                       LDA     #$C4
ROM:D9D5 20 C0 DE                    JSR     SYNCHR
ROM:D9D8
ROM:D9D8             OKGOTO:                                 ; CODE XREF: ROM:D9D1↑j
ROM:D9D8 A5 9D                       LDA     byte_9D
ROM:D9DA D0 05                       BNE     loc_D9E1
ROM:D9DC             ; START OF FUNCTION CHUNK FOR sub_99C8
ROM:D9DC
ROM:D9DC             loc_D9DC:                               ; CODE XREF: sub_99C8+5A20↓j
ROM:D9DC 20 A6 D9                    JSR     REMN
ROM:D9DF F0 B7                       BEQ     ADDON
ROM:D9E1
ROM:D9E1             loc_D9E1:                               ; CODE XREF: ROM:D9DA↑j
ROM:D9E1 20 B7 00                    JSR     CHRGOT
ROM:D9E4 B0 03                       BCS     loc_D9E9
ROM:D9E6 4C 3E D9                    JMP     GOTO
ROM:D9E9             ; ---------------------------------------------------------------------------
ROM:D9E9
ROM:D9E9             loc_D9E9:                               ; CODE XREF: sub_99C8+401C↑j
ROM:D9E9 4C 28 D8                    JMP     GONE3
ROM:D9E9             ; END OF FUNCTION CHUNK FOR sub_99C8
ROM:D9EC             ; ---------------------------------------------------------------------------
ROM:D9EC
ROM:D9EC             ON_GOTO:                                ; get single byte value from keyboard input
ROM:D9EC 20 F8 E6                    JSR     GETBYT
ROM:D9EF 48                          PHA
ROM:D9F0 C9 B0                       CMP     #$B0
ROM:D9F2 F0 04                       BEQ     loc_D9F8
ROM:D9F4             ; START OF FUNCTION CHUNK FOR LINGET
ROM:D9F4
ROM:D9F4             SNERR3:                                 ; CODE XREF: LINGET+12↓j
ROM:D9F4 C9 AB                       CMP     #$AB
ROM:D9F6 D0 89                       BNE     loc_D981
ROM:D9F8
ROM:D9F8             loc_D9F8:                               ; CODE XREF: ROM:D9F2↑j
ROM:D9F8                                                     ; LINGET-4↓j
ROM:D9F8 C6 A1                       DEC     byte_A1
ROM:D9FA D0 04                       BNE     loc_DA00
ROM:D9FC 68                          PLA
ROM:D9FD 4C 2A D8                    JMP     loc_D82A
ROM:DA00             ; ---------------------------------------------------------------------------
ROM:DA00
ROM:DA00             loc_DA00:                               ; CODE XREF: LINGET-12↑j
ROM:DA00 20 B1 00                    JSR     CHRGET
ROM:DA03 20 0C DA                    JSR     LINGET          ; "LINGET" READS A LINE NUMBER FROM THE CURRENT TEXT POSITION.
ROM:DA06 C9 2C                       CMP     #$2C ; ','
ROM:DA08 F0 EE                       BEQ     loc_D9F8
ROM:DA0A 68                          PLA
ROM:DA0B
ROM:DA0B             locret_DA0B:                            ; CODE XREF: LINGET:MORLIN↓j
ROM:DA0B 60                          RTS
ROM:DA0B             ; END OF FUNCTION CHUNK FOR LINGET
ROM:DA0C
ROM:DA0C             ; =============== S U B R O U T I N E =======================================
ROM:DA0C
ROM:DA0C             ; "LINGET" READS A LINE NUMBER FROM THE CURRENT TEXT POSITION.
ROM:DA0C
ROM:DA0C             LINGET:                                 ; CODE XREF: sub_D28B:loc_D290↑j
ROM:DA0C                                                     ; ROM:D6A6↑p ...
ROM:DA0C
ROM:DA0C             ; FUNCTION CHUNK AT ROM:D981 SIZE 00000003 BYTES
ROM:DA0C             ; FUNCTION CHUNK AT ROM:D9F4 SIZE 00000018 BYTES
ROM:DA0C
ROM:DA0C A2 00                       LDX     #0
ROM:DA0E 86 50                       STX     byte_50
ROM:DA10 86 51                       STX     byte_51
ROM:DA12
ROM:DA12             MORLIN:                                 ; CODE XREF: LINGET+37↓j
ROM:DA12 B0 F7                       BCS     locret_DA0B
ROM:DA14 E9 2F                       SBC     #$2F ; '/'
ROM:DA16 85 0D                       STA     byte_D
ROM:DA18 A5 51                       LDA     byte_51
ROM:DA1A 85 5E                       STA     word_5E
ROM:DA1C C9 19                       CMP     #$19
ROM:DA1E B0 D4                       BCS     SNERR3
ROM:DA20 A5 50                       LDA     byte_50
ROM:DA22 0A                          ASL     A
ROM:DA23 26 5E                       ROL     word_5E
ROM:DA25 0A                          ASL     A
ROM:DA26 26 5E                       ROL     word_5E
ROM:DA28 65 50                       ADC     byte_50
ROM:DA2A 85 50                       STA     byte_50
ROM:DA2C A5 5E                       LDA     word_5E
ROM:DA2E 65 51                       ADC     byte_51
ROM:DA30 85 51                       STA     byte_51
ROM:DA32 06 50                       ASL     byte_50
ROM:DA34 26 51                       ROL     byte_51
ROM:DA36 A5 50                       LDA     byte_50
ROM:DA38 65 0D                       ADC     byte_D
ROM:DA3A 85 50                       STA     byte_50
ROM:DA3C 90 02                       BCC     NXTLGC
ROM:DA3E E6 51                       INC     byte_51
ROM:DA40
ROM:DA40             NXTLGC:                                 ; CODE XREF: LINGET+30↑j
ROM:DA40 20 B1 00                    JSR     CHRGET
ROM:DA43 4C 12 DA                    JMP     MORLIN
ROM:DA43             ; End of function LINGET
ROM:DA43
ROM:DA46
ROM:DA46             ; =============== S U B R O U T I N E =======================================
ROM:DA46
ROM:DA46
ROM:DA46             LET:                                    ; CODE XREF: ROM:D76A↑p
ROM:DA46                                                     ; GONE3:GLET↑j
ROM:DA46                                                     ; DATA XREF: ...
ROM:DA46
ROM:DA46             ; FUNCTION CHUNK AT ROM:DA7A SIZE 00000001 BYTES
ROM:DA46
ROM:DA46 20 E3 DF                    JSR     PTRGET
ROM:DA49 85 85                       STA     byte_85
ROM:DA4B 84 86                       STY     byte_86
ROM:DA4D A9 D0                       LDA     #$D0
ROM:DA4F 20 C0 DE                    JSR     SYNCHR
ROM:DA52 A5 12                       LDA     byte_12
ROM:DA54 48                          PHA
ROM:DA55 A5 11                       LDA     byte_11
ROM:DA57 48                          PHA
ROM:DA58 20 7B DD                    JSR     FRMEVL
ROM:DA5B 68                          PLA
ROM:DA5C 2A                          ROL     A
ROM:DA5D 20 6D DD                    JSR     CHKVAL
ROM:DA60 D0 18                       BNE     loc_DA7A
ROM:DA62 68                          PLA
ROM:DA62             ; End of function LET
ROM:DA62
ROM:DA63
ROM:DA63             ; =============== S U B R O U T I N E =======================================
ROM:DA63
ROM:DA63
ROM:DA63             QINTGR:                                 ; CODE XREF: INPCO1+7D↓p
ROM:DA63 10 12                       BPL     COPFLT
ROM:DA65 20 72 EB                    JSR     ROUND
ROM:DA68 20 0C E1                    JSR     AYINT
ROM:DA6B A0 00                       LDY     #0
ROM:DA6D A5 A0                       LDA     byte_A0
ROM:DA6F 91 85                       STA     ($85),Y
ROM:DA71 C8                          INY
ROM:DA72 A5 A1                       LDA     byte_A1
ROM:DA74 91 85                       STA     ($85),Y
ROM:DA76 60                          RTS
ROM:DA77             ; ---------------------------------------------------------------------------
ROM:DA77
ROM:DA77             COPFLT:                                 ; CODE XREF: QINTGR↑j
ROM:DA77 4C 27 EB                    JMP     MOVVF
ROM:DA77             ; End of function QINTGR
ROM:DA77
ROM:DA7A             ; ---------------------------------------------------------------------------
ROM:DA7A             ; START OF FUNCTION CHUNK FOR LET
ROM:DA7A
ROM:DA7A             loc_DA7A:                               ; CODE XREF: LET+1A↑j
ROM:DA7A 68                          PLA
ROM:DA7A             ; END OF FUNCTION CHUNK FOR LET
ROM:DA7B
ROM:DA7B             ; =============== S U B R O U T I N E =======================================
ROM:DA7B
ROM:DA7B
ROM:DA7B             GETSPT:                                 ; CODE XREF: INPCO1+72↓p
ROM:DA7B A0 02                       LDY     #2
ROM:DA7D B1 A0                       LDA     ($A0),Y
ROM:DA7F C5 70                       CMP     byte_70
ROM:DA81 90 17                       BCC     DNTCPY
ROM:DA83 D0 07                       BNE     QVARIA
ROM:DA85 88                          DEY
ROM:DA86 B1 A0                       LDA     ($A0),Y
ROM:DA88 C5 6F                       CMP     byte_6F
ROM:DA8A 90 0E                       BCC     DNTCPY
ROM:DA8C
ROM:DA8C             QVARIA:                                 ; CODE XREF: GETSPT+8↑j
ROM:DA8C A4 A1                       LDY     byte_A1
ROM:DA8E C4 6A                       CPY     byte_6A
ROM:DA90 90 08                       BCC     DNTCPY
ROM:DA92 D0 0D                       BNE     COPY
ROM:DA94 A5 A0                       LDA     byte_A0
ROM:DA96 C5 69                       CMP     byte_69
ROM:DA98 B0 07                       BCS     COPY
ROM:DA9A
ROM:DA9A             DNTCPY:                                 ; CODE XREF: GETSPT+6↑j
ROM:DA9A                                                     ; GETSPT+F↑j ...
ROM:DA9A A5 A0                       LDA     byte_A0
ROM:DA9C A4 A1                       LDY     byte_A1
ROM:DA9E 4C B7 DA                    JMP     COPYZC
ROM:DAA1             ; ---------------------------------------------------------------------------
ROM:DAA1
ROM:DAA1             COPY:                                   ; CODE XREF: GETSPT+17↑j
ROM:DAA1                                                     ; GETSPT+1D↑j
ROM:DAA1 A0 00                       LDY     #0
ROM:DAA3 B1 A0                       LDA     ($A0),Y
ROM:DAA5 20 D5 E3                    JSR     STRINI
ROM:DAA8 A5 8C                       LDA     byte_8C
ROM:DAAA A4 8D                       LDY     byte_8D
ROM:DAAC 85 AB                       STA     byte_AB
ROM:DAAE 84 AC                       STY     byte_AC
ROM:DAB0 20 D4 E5                    JSR     MOVINS
ROM:DAB3 A9 9D                       LDA     #$9D
ROM:DAB5 A0 00                       LDY     #0
ROM:DAB7
ROM:DAB7             COPYZC:                                 ; CODE XREF: GETSPT+23↑j
ROM:DAB7 85 8C                       STA     byte_8C
ROM:DAB9 84 8D                       STY     byte_8D
ROM:DABB 20 35 E6                    JSR     FRETMS
ROM:DABE A0 00                       LDY     #0
ROM:DAC0 B1 8C                       LDA     ($8C),Y
ROM:DAC2 91 85                       STA     ($85),Y
ROM:DAC4 C8                          INY
ROM:DAC5 B1 8C                       LDA     ($8C),Y
ROM:DAC7 91 85                       STA     ($85),Y
ROM:DAC9 C8                          INY
ROM:DACA B1 8C                       LDA     ($8C),Y
ROM:DACC 91 85                       STA     ($85),Y
ROM:DACE 60                          RTS
ROM:DACE             ; End of function GETSPT
ROM:DACE
ROM:DACF             ; ---------------------------------------------------------------------------
ROM:DACF
ROM:DACF             loc_DACF:                               ; CODE XREF: ROM:DAF0↓j
ROM:DACF                                                     ; ROM:DAF8↓j
ROM:DACF 20 3D DB                    JSR     STRPRT
ROM:DAD2
ROM:DAD2             loc_DAD2:
ROM:DAD2 20 B7 00                    JSR     CHRGOT
ROM:DAD5 F0 24                       BEQ     CRDO
ROM:DAD7
ROM:DAD7             PRINTC:                                 ; CODE XREF: ROM:DB32↓j
ROM:DAD7 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:DADA 4C 24 9F                    JMP     EXT_PRINTC
ROM:DADD             ; ---------------------------------------------------------------------------
ROM:DADD
ROM:DADD             loc_DADD:                               ; CODE XREF: RAM:loc_9F2A↑j
ROM:DADD 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:DAE0 F0 34                       BEQ     loc_DB16
ROM:DAE2 C9 2C                       CMP     #$2C ; ','      ; comma
ROM:DAE4 18                          CLC
ROM:DAE5 F0 1C                       BEQ     COMPRT
ROM:DAE7 C9 3B                       CMP     #$3B ; ';'      ; semi-colon
ROM:DAE9 F0 44                       BEQ     NOTABR
ROM:DAEB 20 7B DD                    JSR     FRMEVL
ROM:DAEE 24 11                       BIT     byte_11
ROM:DAF0 30 DD                       BMI     loc_DACF
ROM:DAF2 20 34 ED                    JSR     FOUT
ROM:DAF5 20 E7 E3                    JSR     STRLIT
ROM:DAF8 4C CF DA                    JMP     loc_DACF
ROM:DAFB
ROM:DAFB             ; =============== S U B R O U T I N E =======================================
ROM:DAFB
ROM:DAFB
ROM:DAFB             CRDO:                                   ; CODE XREF: REASON:loc_D41B↑p
ROM:DAFB                                                     ; REASON+5C↑p ...
ROM:DAFB A9 0D                       LDA     #$D
ROM:DAFD 20 5C DB                    JSR     OUTDO
ROM:DAFD             ; End of function CRDO
ROM:DAFD
ROM:DB00
ROM:DB00             ; =============== S U B R O U T I N E =======================================
ROM:DB00
ROM:DB00
ROM:DB00             CRFIN:                                  ; CODE XREF: STROUT+17↓p
ROM:DB00 EA                          NOP
ROM:DB01 EA                          NOP
ROM:DB02
ROM:DB02             PRTRTS:                                 ; CODE XREF: STROUT+B↓j
ROM:DB02 60                          RTS
ROM:DB02             ; End of function CRFIN
ROM:DB02
ROM:DB03             ; ---------------------------------------------------------------------------
ROM:DB03
ROM:DB03             COMPRT:                                 ; CODE XREF: ROM:DAE5↑j
ROM:DB03 20 EF F5                    JSR     sub_F5EF
ROM:DB06 90 06                       BCC     MORCOM
ROM:DB08 20 FB DA                    JSR     CRDO
ROM:DB0B 4C 2F DB                    JMP     NOTABR
ROM:DB0E             ; ---------------------------------------------------------------------------
ROM:DB0E
ROM:DB0E             MORCOM:                                 ; CODE XREF: ROM:DB06↑j
ROM:DB0E 69 10                       ADC     #$10
ROM:DB10 29 F0                       AND     #$F0
ROM:DB12 85 24                       STA     CHORIZ
ROM:DB14 D0 19                       BNE     NOTABR
ROM:DB16
ROM:DB16             loc_DB16:                               ; CODE XREF: ROM:DAE0↑j
ROM:DB16 08                          PHP
ROM:DB17 20 F5 E6                    JSR     GTBYTC
ROM:DB1A C9 29                       CMP     #$29 ; ')'
ROM:DB1C F0 03                       BEQ     loc_DB21
ROM:DB1E 4C C9 DE                    JMP     SNERR
ROM:DB21             ; ---------------------------------------------------------------------------
ROM:DB21
ROM:DB21             loc_DB21:                               ; CODE XREF: ROM:DB1C↑j
ROM:DB21 28                          PLP
ROM:DB22 90 07                       BCC     XSPAC           ; print X spaces
ROM:DB24 CA                          DEX
ROM:DB25 8A                          TXA
ROM:DB26 E5 24                       SBC     CHORIZ
ROM:DB28 90 05                       BCC     NOTABR
ROM:DB2A AA                          TAX
ROM:DB2B
ROM:DB2B             XSPAC:                                  ; CODE XREF: ROM:DB22↑j
ROM:DB2B E8                          INX
ROM:DB2C
ROM:DB2C             XSPAC2:                                 ; CODE XREF: ROM:DB38↓j
ROM:DB2C CA                          DEX
ROM:DB2D D0 06                       BNE     XSPAC1
ROM:DB2F
ROM:DB2F             NOTABR:                                 ; CODE XREF: ROM:DAE9↑j
ROM:DB2F                                                     ; ROM:DB0B↑j ...
ROM:DB2F 20 B1 00                    JSR     CHRGET
ROM:DB32 4C D7 DA                    JMP     PRINTC
ROM:DB35             ; ---------------------------------------------------------------------------
ROM:DB35
ROM:DB35             XSPAC1:                                 ; CODE XREF: ROM:DB2D↑j
ROM:DB35 20 57 DB                    JSR     OUTSPC
ROM:DB38 D0 F2                       BNE     XSPAC2
ROM:DB3A
ROM:DB3A             ; =============== S U B R O U T I N E =======================================
ROM:DB3A
ROM:DB3A
ROM:DB3A             STROUT:                                 ; CODE XREF: REASON+42E↑p
ROM:DB3A                                                     ; INPCO1-57↓p ...
ROM:DB3A 20 E7 E3                    JSR     STRLIT
ROM:DB3D
ROM:DB3D             STRPRT:                                 ; CODE XREF: ROM:loc_DACF↑p
ROM:DB3D                                                     ; set_WIDTH-1AE3↓p
ROM:DB3D 20 00 E6                    JSR     FREFAC
ROM:DB40 AA                          TAX
ROM:DB41 A0 00                       LDY     #0
ROM:DB43 E8                          INX
ROM:DB44
ROM:DB44             STRPR2:                                 ; CODE XREF: STROUT+15↓j
ROM:DB44                                                     ; STROUT+1A↓j
ROM:DB44 CA                          DEX
ROM:DB45 F0 BB                       BEQ     PRTRTS
ROM:DB47 B1 5E                       LDA     ($5E),Y
ROM:DB49 20 5C DB                    JSR     OUTDO
ROM:DB4C C8                          INY
ROM:DB4D C9 0D                       CMP     #$D
ROM:DB4F D0 F3                       BNE     STRPR2
ROM:DB51 20 00 DB                    JSR     CRFIN
ROM:DB54 4C 44 DB                    JMP     STRPR2
ROM:DB54             ; End of function STROUT
ROM:DB54
ROM:DB57             ; ---------------------------------------------------------------------------
ROM:DB57
ROM:DB57             OUTSPC:                                 ; CODE XREF: ROM:XSPAC1↑p
ROM:DB57 A9 20                       LDA     #$20 ; ' '
ROM:DB57             ; ---------------------------------------------------------------------------
ROM:DB59 2C                          .BYTE $2C ; ,
ROM:DB5A
ROM:DB5A             ; =============== S U B R O U T I N E =======================================
ROM:DB5A
ROM:DB5A
ROM:DB5A             OUTQST:                                 ; CODE XREF: REASON+3B↑p
ROM:DB5A                                                     ; sub_DBDC↓p ...
ROM:DB5A A9 3F                       LDA     #$3F ; '?'
ROM:DB5A             ; End of function OUTQST
ROM:DB5A
ROM:DB5C
ROM:DB5C             ; =============== S U B R O U T I N E =======================================
ROM:DB5C
ROM:DB5C
ROM:DB5C             OUTDO:                                  ; CODE XREF: REASON+48↑p
ROM:DB5C                                                     ; ROM:loc_D6F7↑p ...
ROM:DB5C 48                          PHA
ROM:DB5D 09 80                       ORA     #$80
ROM:DB5F
ROM:DB5F             loc_DB5F:                               ; CODE XREF: set_WIDTH-1ACE↓j
ROM:DB5F C9 A0                       CMP     #$A0
ROM:DB61 90 02                       BCC     is_printable    ; check > $20 (not a control char)
ROM:DB63 05 F3                       ORA     byte_F3
ROM:DB65
ROM:DB65             is_printable:                           ; CODE XREF: OUTDO+5↑j
ROM:DB65 20 ED FD                    JSR     COUT
ROM:DB68 A5 F1                       LDA     byte_F1
ROM:DB6A 20 A8 FC                    JSR     j_MWAIT
ROM:DB6D 68                          PLA
ROM:DB6E 29 7F                       AND     #$7F
ROM:DB70 60                          RTS
ROM:DB70             ; End of function OUTDO
ROM:DB70
ROM:DB71             ; ---------------------------------------------------------------------------
ROM:DB71             ; START OF FUNCTION CHUNK FOR INPCO1
ROM:DB71             ;   ADDITIONAL PARENT FUNCTION sub_D274
ROM:DB71
ROM:DB71             TRMNOK:                                 ; CODE XREF: sub_D274+14↑j
ROM:DB71                                                     ; INPCO1+89↓j
ROM:DB71 A5 15                       LDA     byte_15         ; INPUT AND READ CODE
ROM:DB73 F0 12                       BEQ     TRMN01
ROM:DB75 30 04                       BMI     GETDTL
ROM:DB77 A0 FF                       LDY     #$FF
ROM:DB79 D0 08                       BNE     STCURL
ROM:DB7B
ROM:DB7B             GETDTL:                                 ; CODE XREF: INPCO1-76↑j
ROM:DB7B A5 7B                       LDA     byte_7B
ROM:DB7D A4 7C                       LDY     byte_7C
ROM:DB7F 85 75                       STA     byte_75
ROM:DB81 84 76                       STY     byte_76
ROM:DB83
ROM:DB83             STCURL:                                 ; CODE XREF: INPCO1-72↑j
ROM:DB83 4C C9 DE                    JMP     SNERR
ROM:DB83             ; END OF FUNCTION CHUNK FOR INPCO1
ROM:DB83             ; ---------------------------------------------------------------------------
ROM:DB86 68                          .BYTE $68 ; h
ROM:DB87             ; ---------------------------------------------------------------------------
ROM:DB87             ; START OF FUNCTION CHUNK FOR INPCO1
ROM:DB87
ROM:DB87             TRMN01:                                 ; CODE XREF: INPCO1-78↑j
ROM:DB87 A2 FE                       LDX     #$FE
ROM:DB89 86 DE                       STX     byte_DE
ROM:DB8B 4C 92 DC                    JMP     loc_DC92
ROM:DB8B             ; END OF FUNCTION CHUNK FOR INPCO1
ROM:DB8E             ; ---------------------------------------------------------------------------
ROM:DB8E EA                          NOP
ROM:DB8F EA                          NOP
ROM:DB90             ; START OF FUNCTION CHUNK FOR INPCO1
ROM:DB90
ROM:DB90             DOAGAIN:                                ; CODE XREF: INPCO1:loc_DC99↓j
ROM:DB90 A9 82                       LDA     #$82
ROM:DB92 A0 F3                       LDY     #$F3            ; REDO from start message
ROM:DB94 20 3A DB                    JSR     STROUT
ROM:DB97 A5 79                       LDA     byte_79
ROM:DB99 A4 7A                       LDY     byte_7A
ROM:DB9B 85 B8                       STA     byte_B8
ROM:DB9D 84 B9                       STY     byte_B9
ROM:DB9F
ROM:DB9F             locret_DB9F:
ROM:DB9F 60                          RTS
ROM:DB9F             ; END OF FUNCTION CHUNK FOR INPCO1
ROM:DBA0             ; ---------------------------------------------------------------------------
ROM:DBA0 20 06 E3                    JSR     ERRDIR
ROM:DBA3 A2 01                       LDX     #1
ROM:DBA5 A0 02                       LDY     #2
ROM:DBA7 A9 00                       LDA     #0
ROM:DBA9 8D 01 02                    STA     byte_201
ROM:DBAC A9 40                       LDA     #$40 ; '@'
ROM:DBAE 20 EB DB                    JSR     INPCO1
ROM:DBB1 60                          RTS
ROM:DBB2             ; ---------------------------------------------------------------------------
ROM:DBB2
ROM:DBB2             do_INPUT:                               ; DATA XREF: ROM:D008↑t
ROM:DBB2 EA                          NOP
ROM:DBB3 4C CD F6                    JMP     loc_F6CD
ROM:DBB6             ; ---------------------------------------------------------------------------
ROM:DBB6             ; START OF FUNCTION CHUNK FOR set_WIDTH
ROM:DBB6
ROM:DBB6             loc_DBB6:                               ; CODE XREF: set_WIDTH+30↓j
ROM:DBB6 20 81 DE                    JSR     sub_DE81
ROM:DBB9 A9 3B                       LDA     #$3B ; ';'
ROM:DBBB 20 C0 DE                    JSR     SYNCHR
ROM:DBBE 20 3D DB                    JSR     STRPRT
ROM:DBC1
ROM:DBC1             loc_DBC1:                               ; CODE XREF: set_WIDTH+36↓j
ROM:DBC1 20 06 E3                    JSR     ERRDIR
ROM:DBC4 A9 2C                       LDA     #$2C ; ','
ROM:DBC6 8D FF 01                    STA     byte_1FF
ROM:DBC9 20 2C D5                    JSR     sub_D52C
ROM:DBCC AD 00 02                    LDA     KEYBUF
ROM:DBCF C9 03                       CMP     #3
ROM:DBD1 D0 05                       BNE     loc_DBD8
ROM:DBD3 D0 8A                       BNE     loc_DB5F
ROM:DBD5 4C 61 D8                    JMP     loc_D861
ROM:DBD8             ; ---------------------------------------------------------------------------
ROM:DBD8
ROM:DBD8             loc_DBD8:                               ; CODE XREF: set_WIDTH-1AD0↑j
ROM:DBD8 A9 00                       LDA     #0
ROM:DBDA F0 0F                       BEQ     INPCO1
ROM:DBDA             ; END OF FUNCTION CHUNK FOR set_WIDTH
ROM:DBDC
ROM:DBDC             ; =============== S U B R O U T I N E =======================================
ROM:DBDC
ROM:DBDC
ROM:DBDC             sub_DBDC:                               ; CODE XREF: INPCO1+39↓p
ROM:DBDC 20 5A DB                    JSR     OUTQST
ROM:DBDF 4C 2C D5                    JMP     sub_D52C
ROM:DBDF             ; End of function sub_DBDC
ROM:DBDF
ROM:DBE2             ; ---------------------------------------------------------------------------
ROM:DBE2
ROM:DBE2             do_READ:                                ; DATA XREF: ROM:D00E↑t
ROM:DBE2 A6 7D                       LDX     byte_7D
ROM:DBE4 A4 7E                       LDY     byte_7E
ROM:DBE6 A9 80                       LDA     #$80
ROM:DBE6             ; ---------------------------------------------------------------------------
ROM:DBE8 2C                          .BYTE $2C
ROM:DBE9             ; ---------------------------------------------------------------------------
ROM:DBE9 66 66                       ROR     byte_66
ROM:DBEB
ROM:DBEB             ; =============== S U B R O U T I N E =======================================
ROM:DBEB
ROM:DBEB
ROM:DBEB             INPCO1:                                 ; CODE XREF: ROM:DBAE↑p
ROM:DBEB                                                     ; set_WIDTH-1AC7↑j
ROM:DBEB
ROM:DBEB             ; FUNCTION CHUNK AT ROM:DB71 SIZE 00000015 BYTES
ROM:DBEB             ; FUNCTION CHUNK AT ROM:DB87 SIZE 00000007 BYTES
ROM:DBEB             ; FUNCTION CHUNK AT ROM:DB90 SIZE 00000010 BYTES
ROM:DBEB             ; FUNCTION CHUNK AT ROM:DCA0 SIZE 0000003F BYTES
ROM:DBEB             ; FUNCTION CHUNK AT ROM:F2EB SIZE 0000002D BYTES
ROM:DBEB
ROM:DBEB 85 15                       STA     byte_15
ROM:DBED 86 7F                       STX     byte_7F
ROM:DBEF 84 80                       STY     byte_80
ROM:DBF1
ROM:DBF1             loc_DBF1:                               ; CODE XREF: INPCO1+A4↓j
ROM:DBF1 20 E3 DF                    JSR     PTRGET
ROM:DBF4 85 85                       STA     byte_85
ROM:DBF6 84 86                       STY     byte_86
ROM:DBF8 A5 B8                       LDA     byte_B8
ROM:DBFA A4 B9                       LDY     byte_B9
ROM:DBFC 85 87                       STA     byte_87
ROM:DBFE 84 88                       STY     byte_88
ROM:DC00 A6 7F                       LDX     byte_7F
ROM:DC02 A4 80                       LDY     byte_80
ROM:DC04 86 B8                       STX     byte_B8
ROM:DC06 84 B9                       STY     byte_B9
ROM:DC08 20 B7 00                    JSR     CHRGOT
ROM:DC0B D0 1E                       BNE     DATBK1
ROM:DC0D 24 15                       BIT     byte_15
ROM:DC0F 50 0E                       BVC     loc_DC1F
ROM:DC11 20 0C FD                    JSR     RDKEY
ROM:DC14 29 7F                       AND     #$7F
ROM:DC16 8D 00 02                    STA     KEYBUF
ROM:DC19 A2 FF                       LDX     #$FF
ROM:DC1B A0 01                       LDY     #1
ROM:DC1D 10 08                       BPL     loc_DC27
ROM:DC1F
ROM:DC1F             loc_DC1F:                               ; CODE XREF: INPCO1+24↑j
ROM:DC1F 30 7F                       BMI     DATALOP
ROM:DC21 20 5A DB                    JSR     OUTQST
ROM:DC24 20 DC DB                    JSR     sub_DBDC
ROM:DC27
ROM:DC27             loc_DC27:                               ; CODE XREF: INPCO1+32↑j
ROM:DC27 86 B8                       STX     byte_B8
ROM:DC29 84 B9                       STY     byte_B9
ROM:DC2B
ROM:DC2B             DATBK1:                                 ; CODE XREF: INPCO1+20↑j
ROM:DC2B                                                     ; INPCO1+D8↓j
ROM:DC2B 20 B1 00                    JSR     CHRGET
ROM:DC2E 24 11                       BIT     byte_11
ROM:DC30 10 31                       BPL     loc_DC63
ROM:DC32 24 15                       BIT     byte_15
ROM:DC34 50 09                       BVC     SETQUOTE
ROM:DC36 E8                          INX
ROM:DC37 86 B8                       STX     byte_B8
ROM:DC39 A9 00                       LDA     #0
ROM:DC3B 85 0D                       STA     byte_D
ROM:DC3D F0 0C                       BEQ     RESETC
ROM:DC3F
ROM:DC3F             SETQUOTE:                               ; CODE XREF: INPCO1+49↑j
ROM:DC3F 85 0D                       STA     byte_D
ROM:DC41 C9 22                       CMP     #$22 ; '"'
ROM:DC43 F0 07                       BEQ     NOWGET
ROM:DC45 A9 3A                       LDA     #$3A ; ':'
ROM:DC47 85 0D                       STA     byte_D
ROM:DC49 A9 2C                       LDA     #$2C ; ','
ROM:DC4B
ROM:DC4B             RESETC:                                 ; CODE XREF: INPCO1+52↑j
ROM:DC4B 18                          CLC
ROM:DC4C
ROM:DC4C             NOWGET:                                 ; CODE XREF: INPCO1+58↑j
ROM:DC4C 85 0E                       STA     byte_E
ROM:DC4E A5 B8                       LDA     byte_B8
ROM:DC50 A4 B9                       LDY     byte_B9
ROM:DC52 69 00                       ADC     #0
ROM:DC54 90 01                       BCC     NOWGE1
ROM:DC56 C8                          INY
ROM:DC57
ROM:DC57             NOWGE1:                                 ; CODE XREF: INPCO1+69↑j
ROM:DC57 20 ED E3                    JSR     loc_E3ED
ROM:DC5A 20 3D E7                    JSR     ST2TXT
ROM:DC5D 20 7B DA                    JSR     GETSPT
ROM:DC60 4C 6B DC                    JMP     loc_DC6B
ROM:DC63             ; ---------------------------------------------------------------------------
ROM:DC63
ROM:DC63             loc_DC63:                               ; CODE XREF: INPCO1+45↑j
ROM:DC63 20 74 D2                    JSR     sub_D274
ROM:DC66 A5 12                       LDA     byte_12
ROM:DC68 20 63 DA                    JSR     QINTGR
ROM:DC6B
ROM:DC6B             loc_DC6B:                               ; CODE XREF: INPCO1+75↑j
ROM:DC6B 20 B7 00                    JSR     CHRGOT
ROM:DC6E F0 07                       BEQ     loc_DC77
ROM:DC70 C9 2C                       CMP     #$2C ; ','
ROM:DC72 F0 03                       BEQ     loc_DC77
ROM:DC74 4C 71 DB                    JMP     TRMNOK          ; INPUT AND READ CODE
ROM:DC77             ; ---------------------------------------------------------------------------
ROM:DC77
ROM:DC77             loc_DC77:                               ; CODE XREF: INPCO1+83↑j
ROM:DC77                                                     ; INPCO1+87↑j
ROM:DC77 A5 B8                       LDA     byte_B8
ROM:DC79 A4 B9                       LDY     byte_B9
ROM:DC7B 85 7F                       STA     byte_7F
ROM:DC7D 84 80                       STY     byte_80
ROM:DC7F A5 87                       LDA     byte_87
ROM:DC81 A4 88                       LDY     byte_88
ROM:DC83 85 B8                       STA     byte_B8
ROM:DC85 84 B9                       STY     byte_B9
ROM:DC87 20 B7 00                    JSR     CHRGOT
ROM:DC8A F0 3A                       BEQ     VAREND
ROM:DC8C 20 BE DE                    JSR     CHKCOM
ROM:DC8F 4C F1 DB                    JMP     loc_DBF1
ROM:DC92             ; ---------------------------------------------------------------------------
ROM:DC92
ROM:DC92             loc_DC92:                               ; CODE XREF: INPCO1-60↑j
ROM:DC92 24 D8                       BIT     byte_D8
ROM:DC94 10 03                       BPL     loc_DC99
ROM:DC96 4C EB F2                    JMP     loc_F2EB
ROM:DC99             ; ---------------------------------------------------------------------------
ROM:DC99
ROM:DC99             loc_DC99:                               ; CODE XREF: INPCO1+A9↑j
ROM:DC99 4C 90 DB                    JMP     DOAGAIN
ROM:DC99             ; End of function INPCO1
ROM:DC99
ROM:DC99             ; ---------------------------------------------------------------------------
ROM:DC9C 4E                          .BYTE $4E ; N
ROM:DC9D 31                          .BYTE $31 ; 1
ROM:DC9E C8                          .BYTE $C8
ROM:DC9F 0A                          .BYTE  $A
ROM:DCA0             ; ---------------------------------------------------------------------------
ROM:DCA0             ; START OF FUNCTION CHUNK FOR INPCO1
ROM:DCA0
ROM:DCA0             DATALOP:                                ; CODE XREF: INPCO1:loc_DC1F↑j
ROM:DCA0                                                     ; INPCO1+D6↓j
ROM:DCA0 20 A3 D9                    JSR     DATAN
ROM:DCA3 C8                          INY
ROM:DCA4 AA                          TAX
ROM:DCA5 D0 12                       BNE     loc_DCB9
ROM:DCA7 A2 2A                       LDX     #$2A ; '*'
ROM:DCA9 C8                          INY
ROM:DCAA B1 B8                       LDA     ($B8),Y
ROM:DCAC F0 5F                       BEQ     ERRGO5
ROM:DCAE C8                          INY
ROM:DCAF B1 B8                       LDA     ($B8),Y
ROM:DCB1 85 7B                       STA     byte_7B
ROM:DCB3 C8                          INY
ROM:DCB4 B1 B8                       LDA     ($B8),Y
ROM:DCB6 C8                          INY
ROM:DCB7 85 7C                       STA     byte_7C
ROM:DCB9
ROM:DCB9             loc_DCB9:                               ; CODE XREF: INPCO1+BA↑j
ROM:DCB9 B1 B8                       LDA     ($B8),Y
ROM:DCBB AA                          TAX
ROM:DCBC 20 98 D9                    JSR     ADDON
ROM:DCBF E0 83                       CPX     #$83
ROM:DCC1 D0 DD                       BNE     DATALOP
ROM:DCC3 4C 2B DC                    JMP     DATBK1
ROM:DCC6             ; ---------------------------------------------------------------------------
ROM:DCC6
ROM:DCC6             VAREND:                                 ; CODE XREF: INPCO1+9F↑j
ROM:DCC6 A5 7F                       LDA     byte_7F
ROM:DCC8 A4 80                       LDY     byte_80
ROM:DCCA A6 15                       LDX     byte_15
ROM:DCCC 10 03                       BPL     VARY0
ROM:DCCE 4C 53 D8                    JMP     RESFIN
ROM:DCD1             ; ---------------------------------------------------------------------------
ROM:DCD1
ROM:DCD1             VARY0:                                  ; CODE XREF: INPCO1+E1↑j
ROM:DCD1 A0 00                       LDY     #0
ROM:DCD3 B1 7F                       LDA     ($7F),Y
ROM:DCD5 F0 07                       BEQ     INPRTS
ROM:DCD7 A9 DF                       LDA     #$DF            ; $DCDF - Extra Ignored
ROM:DCD9 A0 DC                       LDY     #$DC
ROM:DCDB 4C 3A DB                    JMP     STROUT
ROM:DCDE             ; ---------------------------------------------------------------------------
ROM:DCDE
ROM:DCDE             INPRTS:                                 ; CODE XREF: INPCO1+EA↑j
ROM:DCDE 60                          RTS
ROM:DCDE             ; END OF FUNCTION CHUNK FOR INPCO1
ROM:DCDE             ; ---------------------------------------------------------------------------
ROM:DCDF 3F 45 58 54+aExtraIgnored:  .BYTE '?EXTRA IGNORED',$D,0
ROM:DCEF             ; ---------------------------------------------------------------------------
ROM:DCEF
ROM:DCEF             loc_DCEF:                               ; CODE XREF: ROM:D8EA↑j
ROM:DCEF 30 03                       BMI     loc_DCF4
ROM:DCF1 4C F2 D4                    JMP     loc_D4F2
ROM:DCF4             ; ---------------------------------------------------------------------------
ROM:DCF4
ROM:DCF4             loc_DCF4:                               ; CODE XREF: ROM:loc_DCEF↑j
ROM:DCF4 4C 65 D6                    JMP     RUNC
ROM:DCF7             ; ---------------------------------------------------------------------------
ROM:DCF7 70 43                       BVS     loc_DD3C
ROM:DCF9 D0 04                       BNE     GETFOR
ROM:DCFB A0 00                       LDY     #0
ROM:DCFD F0 03                       BEQ     STXFOR
ROM:DCFF
ROM:DCFF             ; =============== S U B R O U T I N E =======================================
ROM:DCFF
ROM:DCFF
ROM:DCFF             GETFOR:                                 ; CODE XREF: ROM:DCF9↑j
ROM:DCFF                                                     ; GETFOR+65↓p
ROM:DCFF 20 E3 DF                    JSR     PTRGET
ROM:DD02
ROM:DD02             STXFOR:                                 ; CODE XREF: ROM:DCFD↑j
ROM:DD02 85 85                       STA     byte_85
ROM:DD04 84 86                       STY     byte_86
ROM:DD06 20 65 D3                    JSR     FINDFOR         ; FIND A "FOR" ENTRY ON THE STACK VIA "VARPNT".
ROM:DD06                                                     ;
ROM:DD09 F0 04                       BEQ     HAVFOR
ROM:DD0B A2 00                       LDX     #0
ROM:DD0D
ROM:DD0D             ERRGO5:                                 ; CODE XREF: INPCO1+C1↑j
ROM:DD0D F0 69                       BEQ     ERRGO4
ROM:DD0F
ROM:DD0F             HAVFOR:                                 ; CODE XREF: GETFOR+A↑j
ROM:DD0F 9A                          TXS
ROM:DD10 8A                          TXA
ROM:DD11 18                          CLC
ROM:DD12 69 04                       ADC     #4
ROM:DD14 48                          PHA
ROM:DD15 69 06                       ADC     #6
ROM:DD17 85 60                       STA     byte_60
ROM:DD19 68                          PLA
ROM:DD1A EA                          NOP
ROM:DD1B EA                          NOP
ROM:DD1C EA                          NOP
ROM:DD1D A0 01                       LDY     #1
ROM:DD1F 20 F9 EA                    JSR     MOVFM
ROM:DD22 BA                          TSX
ROM:DD23 BD 09 01                    LDA     $109,X
ROM:DD26 85 A2                       STA     byte_A2
ROM:DD28 A5 85                       LDA     byte_85
ROM:DD2A A4 86                       LDY     byte_86
ROM:DD2C 20 BE E7                    JSR     FADD
ROM:DD2F 20 27 EB                    JSR     MOVVF
ROM:DD32 A0 01                       LDY     #1
ROM:DD34 20 B4 EB                    JSR     FCOMPN          ; compare FAC
ROM:DD37 BA                          TSX
ROM:DD38 38                          SEC
ROM:DD39 FD 09 01                    SBC     $109,X
ROM:DD3C
ROM:DD3C             loc_DD3C:                               ; CODE XREF: ROM:DCF7↑j
ROM:DD3C F0 17                       BEQ     LOOPDN
ROM:DD3E BD 0F 01                    LDA     $10F,X
ROM:DD41 85 75                       STA     byte_75
ROM:DD43 BD 10 01                    LDA     $110,X
ROM:DD46 85 76                       STA     byte_76
ROM:DD48 BD 12 01                    LDA     $112,X
ROM:DD4B 85 B8                       STA     byte_B8
ROM:DD4D BD 11 01                    LDA     $111,X
ROM:DD50 85 B9                       STA     byte_B9
ROM:DD52
ROM:DD52             NEWSGO:                                 ; CODE XREF: GETFOR+60↓j
ROM:DD52 4C D2 D7                    JMP     NEWSTT
ROM:DD55             ; ---------------------------------------------------------------------------
ROM:DD55
ROM:DD55             LOOPDN:                                 ; CODE XREF: GETFOR:loc_DD3C↑j
ROM:DD55 8A                          TXA
ROM:DD56 69 11                       ADC     #$11
ROM:DD58 AA                          TAX
ROM:DD59 9A                          TXS
ROM:DD5A 20 B7 00                    JSR     CHRGOT
ROM:DD5D C9 2C                       CMP     #$2C ; ','
ROM:DD5F D0 F1                       BNE     NEWSGO
ROM:DD61 20 B1 00                    JSR     CHRGET
ROM:DD64 20 FF DC                    JSR     GETFOR
ROM:DD64             ; End of function GETFOR
ROM:DD64
ROM:DD67
ROM:DD67             ; =============== S U B R O U T I N E =======================================
ROM:DD67
ROM:DD67
ROM:DD67             FRMNUM:                                 ; CODE XREF: ROM:D799↑p
ROM:DD67                                                     ; ROM:D7C0↑p ...
ROM:DD67 20 7B DD                    JSR     FRMEVL
ROM:DD67             ; End of function FRMNUM
ROM:DD67
ROM:DD6A
ROM:DD6A             ; =============== S U B R O U T I N E =======================================
ROM:DD6A
ROM:DD6A
ROM:DD6A             CHKNUM:                                 ; CODE XREF: ROM:D796↑p
ROM:DD6A                                                     ; FRMEVL+58↓p ...
ROM:DD6A 18                          CLC
ROM:DD6A             ; End of function CHKNUM
ROM:DD6A
ROM:DD6A             ; ---------------------------------------------------------------------------
ROM:DD6B 24                          .BYTE $24               ; BIT
ROM:DD6C
ROM:DD6C             ; =============== S U B R O U T I N E =======================================
ROM:DD6C
ROM:DD6C
ROM:DD6C             CHKSTR:                                 ; CODE XREF: ROM:DF23↓p
ROM:DD6C                                                     ; FRMEVL:loc_E5A0↓p ...
ROM:DD6C 38                          SEC
ROM:DD6C             ; End of function CHKSTR
ROM:DD6C
ROM:DD6D
ROM:DD6D             ; =============== S U B R O U T I N E =======================================
ROM:DD6D
ROM:DD6D
ROM:DD6D             CHKVAL:                                 ; CODE XREF: LET+17↑p
ROM:DD6D                                                     ; ROM:DF65↓p
ROM:DD6D 24 11                       BIT     byte_11
ROM:DD6F 30 03                       BMI     DOCSTR
ROM:DD71 B0 03                       BCS     CHKERR
ROM:DD73
ROM:DD73             CHKOK:                                  ; CODE XREF: CHKVAL:DOCSTR↓j
ROM:DD73 60                          RTS
ROM:DD74             ; ---------------------------------------------------------------------------
ROM:DD74
ROM:DD74             DOCSTR:                                 ; CODE XREF: CHKVAL+2↑j
ROM:DD74 B0 FD                       BCS     CHKOK
ROM:DD76
ROM:DD76             CHKERR:                                 ; CODE XREF: CHKVAL+4↑j
ROM:DD76 A2 A3                       LDX     #$A3
ROM:DD78
ROM:DD78             ERRGO4:                                 ; CODE XREF: GETFOR:ERRGO5↑j
ROM:DD78 4C 12 D4                    JMP     ERROR_0
ROM:DD78             ; End of function CHKVAL
ROM:DD78
ROM:DD7B
ROM:DD7B             ; =============== S U B R O U T I N E =======================================
ROM:DD7B
ROM:DD7B
ROM:DD7B             FRMEVL:                                 ; CODE XREF: ROM:IF↑p
ROM:DD7B                                                     ; LET+12↑p ...
ROM:DD7B
ROM:DD7B             ; FUNCTION CHUNK AT ROM:DE0D SIZE 00000003 BYTES
ROM:DD7B             ; FUNCTION CHUNK AT ROM:DE35 SIZE 0000002B BYTES
ROM:DD7B             ; FUNCTION CHUNK AT ROM:E597 SIZE 0000003D BYTES
ROM:DD7B
ROM:DD7B A6 B8                       LDX     byte_B8
ROM:DD7D D0 02                       BNE     FRMEV1
ROM:DD7F C6 B9                       DEC     byte_B9
ROM:DD81
ROM:DD81             FRMEV1:                                 ; CODE XREF: FRMEVL+2↑j
ROM:DD81 C6 B8                       DEC     byte_B8
ROM:DD83 A2 00                       LDX     #0
ROM:DD83             ; ---------------------------------------------------------------------------
ROM:DD85 24                          .BYTE $24
ROM:DD86             ; ---------------------------------------------------------------------------
ROM:DD86
ROM:DD86             LPOPER:                                 ; CODE XREF: DOPRE1+D↓j
ROM:DD86 48                          PHA
ROM:DD87 8A                          TXA
ROM:DD88 48                          PHA
ROM:DD89 A9 01                       LDA     #1
ROM:DD8B 20 D6 D3                    JSR     GETSTK
ROM:DD8E 20 60 DE                    JSR     EVAL
ROM:DD91 A9 00                       LDA     #0
ROM:DD93 85 89                       STA     byte_89
ROM:DD95
ROM:DD95             TSTOP:                                  ; CODE XREF: FRMEVL+856↓j
ROM:DD95 20 B7 00                    JSR     CHRGOT
ROM:DD98
ROM:DD98             LOPREL:                                 ; CODE XREF: FRMEVL+36↓j
ROM:DD98 38                          SEC
ROM:DD99 E9 CF                       SBC     #$CF
ROM:DD9B 90 17                       BCC     ENDREL
ROM:DD9D C9 03                       CMP     #3
ROM:DD9F B0 13                       BCS     ENDREL
ROM:DDA1 C9 01                       CMP     #1
ROM:DDA3 2A                          ROL     A
ROM:DDA4 49 01                       EOR     #1
ROM:DDA6 45 89                       EOR     byte_89
ROM:DDA8 C5 89                       CMP     byte_89
ROM:DDAA 90 61                       BCC     loc_DE0D
ROM:DDAC 85 89                       STA     byte_89
ROM:DDAE 20 B1 00                    JSR     CHRGET
ROM:DDB1 4C 98 DD                    JMP     LOPREL
ROM:DDB4             ; ---------------------------------------------------------------------------
ROM:DDB4
ROM:DDB4             ENDREL:                                 ; CODE XREF: FRMEVL+20↑j
ROM:DDB4                                                     ; FRMEVL+24↑j
ROM:DDB4 A6 89                       LDX     byte_89
ROM:DDB6 D0 2C                       BNE     FINREL
ROM:DDB8 B0 7B                       BCS     QOP
ROM:DDBA 69 07                       ADC     #7
ROM:DDBC 90 77                       BCC     QOP
ROM:DDBE 65 11                       ADC     byte_11
ROM:DDC0 D0 03                       BNE     loc_DDC5
ROM:DDC2 4C 97 E5                    JMP     CAT             ; THE FOLLOWING ROUTINE CONCATENATES TWO STRINGS.
ROM:DDC5             ; ---------------------------------------------------------------------------
ROM:DDC5
ROM:DDC5             loc_DDC5:                               ; CODE XREF: FRMEVL+45↑j
ROM:DDC5 69 FF                       ADC     #$FF
ROM:DDC7 85 5E                       STA     word_5E
ROM:DDC9 0A                          ASL     A
ROM:DDCA 65 5E                       ADC     word_5E
ROM:DDCC A8                          TAY
ROM:DDCD
ROM:DDCD             QPREC:                                  ; CODE XREF: FRMEVL+79↓j
ROM:DDCD 68                          PLA
ROM:DDCE D9 B2 D0                    CMP     OPTAB,Y
ROM:DDD1 B0 67                       BCS     QCHNUM
ROM:DDD3 20 6A DD                    JSR     CHKNUM
ROM:DDD6
ROM:DDD6             DOPREC:                                 ; CODE XREF: FRMEVL+80↓j
ROM:DDD6 48                          PHA
ROM:DDD7
ROM:DDD7             NEGPRC:                                 ; CODE XREF: ROM:DED2↓j
ROM:DDD7 20 FD DD                    JSR     DOPRE1
ROM:DDDA 68                          PLA
ROM:DDDB A4 87                       LDY     byte_87
ROM:DDDD 10 17                       BPL     QPREC1
ROM:DDDF AA                          TAX
ROM:DDE0 F0 56                       BEQ     loc_DE38
ROM:DDE2 D0 5F                       BNE     PULSTK
ROM:DDE4
ROM:DDE4             FINREL:                                 ; CODE XREF: FRMEVL+3B↑j
ROM:DDE4 46 11                       LSR     byte_11
ROM:DDE6 8A                          TXA
ROM:DDE7 2A                          ROL     A
ROM:DDE8 A6 B8                       LDX     byte_B8
ROM:DDEA D0 02                       BNE     FINRE2
ROM:DDEC C6 B9                       DEC     byte_B9
ROM:DDEE
ROM:DDEE             FINRE2:                                 ; CODE XREF: FRMEVL+6F↑j
ROM:DDEE C6 B8                       DEC     byte_B8
ROM:DDF0 A0 1B                       LDY     #$1B
ROM:DDF2 85 89                       STA     byte_89
ROM:DDF4 D0 D7                       BNE     QPREC
ROM:DDF6
ROM:DDF6             QPREC1:                                 ; CODE XREF: FRMEVL+62↑j
ROM:DDF6 D9 B2 D0                    CMP     OPTAB,Y
ROM:DDF9 B0 48                       BCS     PULSTK
ROM:DDFB 90 D9                       BCC     DOPREC
ROM:DDFB             ; End of function FRMEVL
ROM:DDFB
ROM:DDFD
ROM:DDFD             ; =============== S U B R O U T I N E =======================================
ROM:DDFD
ROM:DDFD
ROM:DDFD             DOPRE1:                                 ; CODE XREF: FRMEVL:NEGPRC↑p
ROM:DDFD B9 B4 D0                    LDA     $D0B4,Y
ROM:DE00 48                          PHA
ROM:DE01 B9 B3 D0                    LDA     $D0B3,Y
ROM:DE04 48                          PHA
ROM:DE05 20 10 DE                    JSR     PUSHF1
ROM:DE08 A5 89                       LDA     byte_89
ROM:DE0A 4C 86 DD                    JMP     LPOPER
ROM:DE0A             ; End of function DOPRE1
ROM:DE0A
ROM:DE0D             ; ---------------------------------------------------------------------------
ROM:DE0D             ; START OF FUNCTION CHUNK FOR FRMEVL
ROM:DE0D
ROM:DE0D             loc_DE0D:                               ; CODE XREF: FRMEVL+2F↑j
ROM:DE0D 4C C9 DE                    JMP     SNERR
ROM:DE0D             ; END OF FUNCTION CHUNK FOR FRMEVL
ROM:DE10
ROM:DE10             ; =============== S U B R O U T I N E =======================================
ROM:DE10
ROM:DE10
ROM:DE10             PUSHF1:                                 ; CODE XREF: DOPRE1+8↑p
ROM:DE10
ROM:DE10             ; FUNCTION CHUNK AT ROM:DE20 SIZE 00000015 BYTES
ROM:DE10             ; FUNCTION CHUNK AT ROM:DEF9 SIZE 0000000B BYTES
ROM:DE10
ROM:DE10 A5 A2                       LDA     byte_A2
ROM:DE12 BE B2 D0                    LDX     OPTAB,Y
ROM:DE15
ROM:DE15             PUSHF:                                  ; CODE XREF: ROM:D7C6↑p
ROM:DE15 A8                          TAY
ROM:DE16 68                          PLA
ROM:DE17 85 5E                       STA     word_5E
ROM:DE19 68                          PLA
ROM:DE1A 85 5F                       STA     word_5E+1
ROM:DE1C 4C F9 DE                    JMP     loc_DEF9        ; minor patch
ROM:DE1C             ; End of function PUSHF1
ROM:DE1C
ROM:DE1F             ; ---------------------------------------------------------------------------
ROM:DE1F 48                          PHA
ROM:DE20             ; START OF FUNCTION CHUNK FOR PUSHF1
ROM:DE20
ROM:DE20             FORPSH:                                 ; CODE XREF: ROM:D7AC↑j
ROM:DE20                                                     ; PUSHF1+F1↓j
ROM:DE20 20 72 EB                    JSR     ROUND
ROM:DE23 A5 A1                       LDA     byte_A1
ROM:DE25 48                          PHA
ROM:DE26 A5 A0                       LDA     byte_A0
ROM:DE28 48                          PHA
ROM:DE29 A5 9F                       LDA     byte_9F
ROM:DE2B 48                          PHA
ROM:DE2C A5 9E                       LDA     byte_9E
ROM:DE2E 48                          PHA
ROM:DE2F A5 9D                       LDA     byte_9D
ROM:DE31 48                          PHA
ROM:DE32 6C 5E 00                    JMP     (word_5E)       ; Return
ROM:DE32             ; END OF FUNCTION CHUNK FOR PUSHF1
ROM:DE35             ; ---------------------------------------------------------------------------
ROM:DE35             ; START OF FUNCTION CHUNK FOR FRMEVL
ROM:DE35
ROM:DE35             QOP:                                    ; CODE XREF: FRMEVL+3D↑j
ROM:DE35                                                     ; FRMEVL+41↑j
ROM:DE35 A0 FF                       LDY     #$FF
ROM:DE37 68                          PLA
ROM:DE38
ROM:DE38             loc_DE38:                               ; CODE XREF: FRMEVL+65↑j
ROM:DE38 F0 23                       BEQ     QOPRTS
ROM:DE3A
ROM:DE3A             QCHNUM:                                 ; CODE XREF: FRMEVL+56↑j
ROM:DE3A C9 64                       CMP     #$64 ; 'd'
ROM:DE3C F0 03                       BEQ     UNPSTK
ROM:DE3E 20 6A DD                    JSR     CHKNUM
ROM:DE41
ROM:DE41             UNPSTK:                                 ; CODE XREF: FRMEVL+C1↑j
ROM:DE41 84 87                       STY     byte_87
ROM:DE43
ROM:DE43             PULSTK:                                 ; CODE XREF: FRMEVL+67↑j
ROM:DE43                                                     ; FRMEVL+7E↑j
ROM:DE43 68                          PLA
ROM:DE44 4A                          LSR     A
ROM:DE45 85 16                       STA     byte_16
ROM:DE47 68                          PLA
ROM:DE48 85 A5                       STA     byte_A5
ROM:DE4A 68                          PLA
ROM:DE4B 85 A6                       STA     byte_A6
ROM:DE4D 68                          PLA
ROM:DE4E 85 A7                       STA     byte_A7
ROM:DE50 68                          PLA
ROM:DE51 85 A8                       STA     byte_A8
ROM:DE53 68                          PLA
ROM:DE54 85 A9                       STA     byte_A9
ROM:DE56 68                          PLA
ROM:DE57 85 AA                       STA     byte_AA
ROM:DE59 45 A2                       EOR     byte_A2
ROM:DE5B 85 AB                       STA     byte_AB
ROM:DE5D
ROM:DE5D             QOPRTS:                                 ; CODE XREF: FRMEVL:loc_DE38↑j
ROM:DE5D A5 9D                       LDA     byte_9D
ROM:DE5F 60                          RTS
ROM:DE5F             ; END OF FUNCTION CHUNK FOR FRMEVL
ROM:DE60             ; ---------------------------------------------------------------------------
ROM:DE60
ROM:DE60             EVAL:                                   ; CODE XREF: FRMEVL+13↑p
ROM:DE60                                                     ; FRMEVL+822↓p
ROM:DE60 A9 00                       LDA     #0
ROM:DE62 85 11                       STA     byte_11
ROM:DE64
ROM:DE64             EVAL0:                                  ; CODE XREF: ROM:DE7B↓j
ROM:DE64 20 B1 00                    JSR     CHRGET
ROM:DE67 B0 03                       BCS     EVAL2
ROM:DE69
ROM:DE69             EVAL1:                                  ; CODE XREF: ROM:DE73↓j
ROM:DE69 4C 4A EC                    JMP     FIN
ROM:DE6C             ; ---------------------------------------------------------------------------
ROM:DE6C
ROM:DE6C             EVAL2:                                  ; CODE XREF: ROM:DE67↑j
ROM:DE6C 20 7D E0                    JSR     ISLETC
ROM:DE6F B0 64                       BCS     ISVAR
ROM:DE71 C9 2E                       CMP     #$2E ; '.'
ROM:DE73 F0 F4                       BEQ     EVAL1
ROM:DE75 C9 C9                       CMP     #$C9
ROM:DE77 F0 55                       BEQ     loc_DECE
ROM:DE79 C9 C8                       CMP     #$C8
ROM:DE7B F0 E7                       BEQ     EVAL0
ROM:DE7D C9 22                       CMP     #$22 ; '"'
ROM:DE7F D0 0F                       BNE     loc_DE90
ROM:DE81
ROM:DE81             ; =============== S U B R O U T I N E =======================================
ROM:DE81
ROM:DE81
ROM:DE81             sub_DE81:                               ; CODE XREF: set_WIDTH:loc_DBB6↑p
ROM:DE81 A5 B8                       LDA     byte_B8
ROM:DE83 A4 B9                       LDY     byte_B9
ROM:DE85 69 00                       ADC     #0
ROM:DE87 90 01                       BCC     STRTX2
ROM:DE89 C8                          INY
ROM:DE8A
ROM:DE8A             STRTX2:                                 ; CODE XREF: sub_DE81+6↑j
ROM:DE8A 20 E7 E3                    JSR     STRLIT
ROM:DE8D 4C 3D E7                    JMP     ST2TXT
ROM:DE8D             ; End of function sub_DE81
ROM:DE8D
ROM:DE90             ; ---------------------------------------------------------------------------
ROM:DE90
ROM:DE90             loc_DE90:                               ; CODE XREF: ROM:DE7F↑j
ROM:DE90 C9 C6                       CMP     #$C6
ROM:DE92 D0 10                       BNE     EVAL4
ROM:DE94 A0 18                       LDY     #$18
ROM:DE96 D0 38                       BNE     GONPRC
ROM:DE98 A5 9D                       LDA     byte_9D
ROM:DE9A F0 03                       BEQ     loc_DE9F
ROM:DE9C A0 00                       LDY     #0
ROM:DE9C             ; ---------------------------------------------------------------------------
ROM:DE9E 2C                          .BYTE $2C
ROM:DE9F             ; ---------------------------------------------------------------------------
ROM:DE9F
ROM:DE9F             loc_DE9F:                               ; CODE XREF: ROM:DE9A↑j
ROM:DE9F A0 01                       LDY     #1
ROM:DEA1 4C 01 E3                    JMP     SNGFLT
ROM:DEA4             ; ---------------------------------------------------------------------------
ROM:DEA4
ROM:DEA4             EVAL4:                                  ; CODE XREF: ROM:DE92↑j
ROM:DEA4 C9 C2                       CMP     #$C2
ROM:DEA6 D0 03                       BNE     loc_DEAB
ROM:DEA8 4C 54 E3                    JMP     FNDOER
ROM:DEAB             ; ---------------------------------------------------------------------------
ROM:DEAB
ROM:DEAB             loc_DEAB:                               ; CODE XREF: ROM:DEA6↑j
ROM:DEAB C9 D2                       CMP     #$D2
ROM:DEAD 90 03                       BCC     PARCHK
ROM:DEAF 4C 0C DF                    JMP     ISFUN
ROM:DEB2
ROM:DEB2             ; =============== S U B R O U T I N E =======================================
ROM:DEB2
ROM:DEB2
ROM:DEB2             PARCHK:                                 ; CODE XREF: ROM:DEAD↑j
ROM:DEB2                                                     ; ROM:OKNORM↓p ...
ROM:DEB2 20 BB DE                    JSR     CHKOPN
ROM:DEB5 20 7B DD                    JSR     FRMEVL
ROM:DEB5             ; End of function PARCHK
ROM:DEB5
ROM:DEB8
ROM:DEB8             ; =============== S U B R O U T I N E =======================================
ROM:DEB8
ROM:DEB8
ROM:DEB8             CHKCLS:                                 ; CODE XREF: PTRGT2+172↓p
ROM:DEB8                                                     ; ROM:E326↓p ...
ROM:DEB8 A9 29                       LDA     #$29 ; ')'
ROM:DEB8             ; End of function CHKCLS
ROM:DEB8
ROM:DEB8             ; ---------------------------------------------------------------------------
ROM:DEBA 2C                          .BYTE $2C
ROM:DEBB             ; ---------------------------------------------------------------------------
ROM:DEBB
ROM:DEBB             CHKOPN:                                 ; CODE XREF: PARCHK↑p
ROM:DEBB                                                     ; ROM:DF1A↓p ...
ROM:DEBB A9 28                       LDA     #$28 ; '('
ROM:DEBB             ; ---------------------------------------------------------------------------
ROM:DEBD 2C                          .BYTE $2C
ROM:DEBE
ROM:DEBE             ; =============== S U B R O U T I N E =======================================
ROM:DEBE
ROM:DEBE
ROM:DEBE             CHKCOM:                                 ; CODE XREF: INPCO1+A1↑p
ROM:DEBE                                                     ; ROM:DF20↓p ...
ROM:DEBE A9 2C                       LDA     #$2C ; ','
ROM:DEBE             ; End of function CHKCOM
ROM:DEBE
ROM:DEC0
ROM:DEC0             ; =============== S U B R O U T I N E =======================================
ROM:DEC0
ROM:DEC0
ROM:DEC0             SYNCHR:                                 ; CODE XREF: ROM:D793↑p
ROM:DEC0                                                     ; ROM:D9D5↑p ...
ROM:DEC0 A0 00                       LDY     #0
ROM:DEC2 D1 B8                       CMP     ($B8),Y
ROM:DEC4 D0 03                       BNE     SNERR
ROM:DEC6 4C B1 00                    JMP     CHRGET
ROM:DEC9             ; ---------------------------------------------------------------------------
ROM:DEC9
ROM:DEC9             SNERR:                                  ; CODE XREF: sub_D28B+2↑j
ROM:DEC9                                                     ; GONE3:SNERRX↑j ...
ROM:DEC9 A2 10                       LDX     #$10
ROM:DECB 4C 12 D4                    JMP     ERROR_0
ROM:DECB             ; End of function SYNCHR
ROM:DECB
ROM:DECE             ; ---------------------------------------------------------------------------
ROM:DECE
ROM:DECE             loc_DECE:                               ; CODE XREF: ROM:DE77↑j
ROM:DECE A0 15                       LDY     #$15
ROM:DED0
ROM:DED0             GONPRC:                                 ; CODE XREF: ROM:DE96↑j
ROM:DED0 68                          PLA
ROM:DED1 68                          PLA
ROM:DED2 4C D7 DD                    JMP     NEGPRC
ROM:DED5             ; ---------------------------------------------------------------------------
ROM:DED5
ROM:DED5             ISVAR:                                  ; CODE XREF: ROM:DE6F↑j
ROM:DED5 20 E3 DF                    JSR     PTRGET
ROM:DED8 85 A0                       STA     byte_A0
ROM:DEDA 84 A1                       STY     byte_A1
ROM:DEDC A6 11                       LDX     byte_11
ROM:DEDE F0 05                       BEQ     GOOD
ROM:DEE0 A2 00                       LDX     #0
ROM:DEE2 86 AC                       STX     byte_AC
ROM:DEE4 60                          RTS
ROM:DEE5             ; ---------------------------------------------------------------------------
ROM:DEE5
ROM:DEE5             GOOD:                                   ; CODE XREF: ROM:DEDE↑j
ROM:DEE5 A6 12                       LDX     byte_12
ROM:DEE7 10 0D                       BPL     GOOOOO
ROM:DEE9 A0 00                       LDY     #0
ROM:DEEB B1 A0                       LDA     ($A0),Y
ROM:DEED AA                          TAX
ROM:DEEE C8                          INY
ROM:DEEF B1 A0                       LDA     ($A0),Y
ROM:DEF1 A8                          TAY
ROM:DEF2 8A                          TXA
ROM:DEF3 4C F2 E2                    JMP     GIVAYF
ROM:DEF6             ; ---------------------------------------------------------------------------
ROM:DEF6
ROM:DEF6             GOOOOO:                                 ; CODE XREF: ROM:DEE7↑j
ROM:DEF6 4C F9 EA                    JMP     MOVFM
ROM:DEF9             ; ---------------------------------------------------------------------------
ROM:DEF9             ; START OF FUNCTION CHUNK FOR PUSHF1
ROM:DEF9
ROM:DEF9             loc_DEF9:                               ; CODE XREF: PUSHF1+C↑j
ROM:DEF9 E6 5E                       INC     word_5E
ROM:DEFB D0 02                       BNE     loc_DEFF
ROM:DEFD E6 5F                       INC     word_5E+1
ROM:DEFF
ROM:DEFF             loc_DEFF:                               ; CODE XREF: PUSHF1+EB↑j
ROM:DEFF 98                          TYA
ROM:DF00 48                          PHA
ROM:DF01 4C 20 DE                    JMP     FORPSH
ROM:DF01             ; END OF FUNCTION CHUNK FOR PUSHF1
ROM:DF01             ; ---------------------------------------------------------------------------
ROM:DF04 41                          .BYTE $41 ; A
ROM:DF05 20                          .BYTE $20
ROM:DF06 CC                          .BYTE $CC
ROM:DF07 16                          .BYTE $16
ROM:DF08 52                          .BYTE $52 ; R
ROM:DF09 47                          .BYTE $47 ; G
ROM:DF0A 42                          .BYTE $42 ; B
ROM:DF0B 42                          .BYTE $42 ; B
ROM:DF0C             ; ---------------------------------------------------------------------------
ROM:DF0C
ROM:DF0C             ISFUN:                                  ; CODE XREF: ROM:DEAF↑j
ROM:DF0C C9 D7                       CMP     #$D7
ROM:DF0E F0 B9                       BEQ     SNERR
ROM:DF10 0A                          ASL     A
ROM:DF11 48                          PHA
ROM:DF12 AA                          TAX
ROM:DF13 20 B1 00                    JSR     CHRGET
ROM:DF16 E0 CF                       CPX     #$CF
ROM:DF18 90 20                       BCC     OKNORM
ROM:DF1A 20 BB DE                    JSR     CHKOPN
ROM:DF1D 20 7B DD                    JSR     FRMEVL
ROM:DF20 20 BE DE                    JSR     CHKCOM
ROM:DF23 20 6C DD                    JSR     CHKSTR
ROM:DF26 68                          PLA
ROM:DF27 AA                          TAX
ROM:DF28 A5 A1                       LDA     byte_A1
ROM:DF2A 48                          PHA
ROM:DF2B A5 A0                       LDA     byte_A0
ROM:DF2D 48                          PHA
ROM:DF2E 8A                          TXA
ROM:DF2F 48                          PHA
ROM:DF30 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:DF33 68                          PLA
ROM:DF34 A8                          TAY
ROM:DF35 8A                          TXA
ROM:DF36 48                          PHA
ROM:DF37 4C 3F DF                    JMP     FINGO           ; dispatch to function
ROM:DF3A             ; ---------------------------------------------------------------------------
ROM:DF3A
ROM:DF3A             OKNORM:                                 ; CODE XREF: ROM:DF18↑j
ROM:DF3A 20 B2 DE                    JSR     PARCHK
ROM:DF3D 68                          PLA
ROM:DF3E A8                          TAY
ROM:DF3F
ROM:DF3F             FINGO:                                  ; CODE XREF: ROM:DF37↑j
ROM:DF3F B9 DC CF                    LDA     $CFDC,Y         ; dispatch to function
ROM:DF42 85 91                       STA     byte_91
ROM:DF44 B9 DD CF                    LDA     $CFDD,Y
ROM:DF47 85 92                       STA     byte_92
ROM:DF49 20 90 00                    JSR     JMPER
ROM:DF4C 4C 6A DD                    JMP     CHKNUM
ROM:DF4F             ; ---------------------------------------------------------------------------
ROM:DF4F A5 9D                       LDA     byte_9D
ROM:DF51 F0 0D                       BEQ     loc_DF60
ROM:DF53 A5 A5                       LDA     byte_A5
ROM:DF55 F0 09                       BEQ     loc_DF60
ROM:DF57 A5 9D                       LDA     byte_9D
ROM:DF59 05 A5                       ORA     byte_A5
ROM:DF5B F0 03                       BEQ     loc_DF60
ROM:DF5D A0 01                       LDY     #1
ROM:DF5D             ; ---------------------------------------------------------------------------
ROM:DF5F AD                          .BYTE $AD               ; LDA
ROM:DF60             ; ---------------------------------------------------------------------------
ROM:DF60
ROM:DF60             loc_DF60:                               ; CODE XREF: ROM:DF51↑j
ROM:DF60                                                     ; ROM:DF55↑j ...
ROM:DF60 A0 00                       LDY     #0
ROM:DF62 4C 01 E3                    JMP     SNGFLT
ROM:DF65             ; ---------------------------------------------------------------------------
ROM:DF65 20 6D DD                    JSR     CHKVAL
ROM:DF68 B0 13                       BCS     loc_DF7D
ROM:DF6A A5 AA                       LDA     byte_AA
ROM:DF6C 09 7F                       ORA     #$7F
ROM:DF6E 25 A6                       AND     byte_A6
ROM:DF70 85 A6                       STA     byte_A6
ROM:DF72 A9 A5                       LDA     #$A5
ROM:DF74 A0 00                       LDY     #0
ROM:DF76 20 B2 EB                    JSR     FCOMP
ROM:DF79 AA                          TAX
ROM:DF7A 4C B0 DF                    JMP     loc_DFB0
ROM:DF7D             ; ---------------------------------------------------------------------------
ROM:DF7D
ROM:DF7D             loc_DF7D:                               ; CODE XREF: ROM:DF68↑j
ROM:DF7D A9 00                       LDA     #0
ROM:DF7F 85 11                       STA     byte_11
ROM:DF81 C6 89                       DEC     byte_89
ROM:DF83 20 00 E6                    JSR     FREFAC
ROM:DF86 85 9D                       STA     byte_9D
ROM:DF88 86 9E                       STX     byte_9E
ROM:DF8A 84 9F                       STY     byte_9F
ROM:DF8C A5 A8                       LDA     byte_A8
ROM:DF8E A4 A9                       LDY     byte_A9
ROM:DF90 20 04 E6                    JSR     FRETMP
ROM:DF93 86 A8                       STX     byte_A8
ROM:DF95 84 A9                       STY     byte_A9
ROM:DF97 AA                          TAX
ROM:DF98 38                          SEC
ROM:DF99 E5 9D                       SBC     byte_9D
ROM:DF9B F0 08                       BEQ     loc_DFA5
ROM:DF9D A9 01                       LDA     #1
ROM:DF9F 90 04                       BCC     loc_DFA5
ROM:DFA1 A6 9D                       LDX     byte_9D
ROM:DFA3 A9 FF                       LDA     #$FF
ROM:DFA5
ROM:DFA5             loc_DFA5:                               ; CODE XREF: ROM:DF9B↑j
ROM:DFA5                                                     ; ROM:DF9F↑j
ROM:DFA5 85 A2                       STA     byte_A2
ROM:DFA7 A0 FF                       LDY     #$FF
ROM:DFA9 E8                          INX
ROM:DFAA
ROM:DFAA             loc_DFAA:                               ; CODE XREF: ROM:DFB9↓j
ROM:DFAA C8                          INY
ROM:DFAB CA                          DEX
ROM:DFAC D0 07                       BNE     loc_DFB5
ROM:DFAE A6 A2                       LDX     byte_A2
ROM:DFB0
ROM:DFB0             loc_DFB0:                               ; CODE XREF: ROM:DF7A↑j
ROM:DFB0 30 0F                       BMI     loc_DFC1
ROM:DFB2 18                          CLC
ROM:DFB3 90 0C                       BCC     loc_DFC1
ROM:DFB5
ROM:DFB5             loc_DFB5:                               ; CODE XREF: ROM:DFAC↑j
ROM:DFB5 B1 A8                       LDA     ($A8),Y
ROM:DFB7 D1 9E                       CMP     ($9E),Y
ROM:DFB9 F0 EF                       BEQ     loc_DFAA
ROM:DFBB A2 FF                       LDX     #$FF
ROM:DFBD B0 02                       BCS     loc_DFC1
ROM:DFBF A2 01                       LDX     #1
ROM:DFC1
ROM:DFC1             loc_DFC1:                               ; CODE XREF: ROM:loc_DFB0↑j
ROM:DFC1                                                     ; ROM:DFB3↑j ...
ROM:DFC1 E8                          INX
ROM:DFC2 8A                          TXA
ROM:DFC3 2A                          ROL     A
ROM:DFC4 25 16                       AND     byte_16
ROM:DFC6 F0 02                       BEQ     loc_DFCA
ROM:DFC8 A9 01                       LDA     #1
ROM:DFCA
ROM:DFCA             loc_DFCA:                               ; CODE XREF: ROM:DFC6↑j
ROM:DFCA 4C 93 EB                    JMP     FLOAT
ROM:DFCD             ; ---------------------------------------------------------------------------
ROM:DFCD
ROM:DFCD             do_PDL:                                 ; DATA XREF: ROM:D08C↑t
ROM:DFCD 20 FB E6                    JSR     CONINT          ; read paddle
ROM:DFD0 20 1E FB                    JSR     MPREAD
ROM:DFD3 4C 01 E3                    JMP     SNGFLT
ROM:DFD6             ; ---------------------------------------------------------------------------
ROM:DFD6
ROM:DFD6             DIM3:                                   ; CODE XREF: ROM:DFE0↓j
ROM:DFD6                                                     ; DATA XREF: ROM:D00C↑t
ROM:DFD6 20 BE DE                    JSR     CHKCOM
ROM:DFD9 AA                          TAX
ROM:DFDA 20 E8 DF                    JSR     PTRGT1
ROM:DFDD 20 B7 00                    JSR     CHRGOT
ROM:DFE0 D0 F4                       BNE     DIM3
ROM:DFE2 60                          RTS
ROM:DFE3
ROM:DFE3             ; =============== S U B R O U T I N E =======================================
ROM:DFE3
ROM:DFE3
ROM:DFE3             PTRGET:                                 ; CODE XREF: LET↑p
ROM:DFE3                                                     ; INPCO1:loc_DBF1↑p ...
ROM:DFE3 A2 00                       LDX     #0
ROM:DFE5 20 B7 00                    JSR     CHRGOT
ROM:DFE8
ROM:DFE8             PTRGT1:                                 ; CODE XREF: ROM:DFDA↑p
ROM:DFE8 86 10                       STX     byte_10
ROM:DFE8             ; End of function PTRGET
ROM:DFE8
ROM:DFEA
ROM:DFEA             ; =============== S U B R O U T I N E =======================================
ROM:DFEA
ROM:DFEA
ROM:DFEA             PTRGT2:                                 ; CODE XREF: GETFNM+9↓p
ROM:DFEA
ROM:DFEA             ; FUNCTION CHUNK AT ROM:E087 SIZE 00000013 BYTES
ROM:DFEA             ; FUNCTION CHUNK AT ROM:E09C SIZE 00000051 BYTES
ROM:DFEA             ; FUNCTION CHUNK AT ROM:E11E SIZE 0000018F BYTES
ROM:DFEA             ; FUNCTION CHUNK AT ROM:F12E SIZE 00000083 BYTES
ROM:DFEA
ROM:DFEA 85 81                       STA     byte_81
ROM:DFEC 20 B7 00                    JSR     CHRGOT
ROM:DFEF 20 7D E0                    JSR     ISLETC
ROM:DFF2 B0 03                       BCS     PTRGT3
ROM:DFF4
ROM:DFF4             INTERR:                                 ; CODE XREF: PTRGT2+42↓j
ROM:DFF4 4C C9 DE                    JMP     SNERR
ROM:DFF7             ; ---------------------------------------------------------------------------
ROM:DFF7
ROM:DFF7             PTRGT3:                                 ; CODE XREF: PTRGT2+8↑j
ROM:DFF7 A2 00                       LDX     #0
ROM:DFF9 86 11                       STX     byte_11
ROM:DFFB 86 12                       STX     byte_12
ROM:DFFD 4C 07 E0                    JMP     skip_start_vectors
ROM:E000             ; ---------------------------------------------------------------------------
ROM:E000
ROM:E000             BASIC_COLD:                             ; CODE XREF: ROM:D610↑j
ROM:E000                                                     ; DATA XREF: ROM:FA9B↓t ...
ROM:E000 4C 2E F1                    JMP     BASIC_START
ROM:E003             ; ---------------------------------------------------------------------------
ROM:E003
ROM:E003             BASIC_WARM:                             ; DATA XREF: ROM:ADRTBL↓t
ROM:E003 4C 3C D4                    JMP     MAIN
ROM:E003             ; ---------------------------------------------------------------------------
ROM:E006 99                          .BYTE $99
ROM:E007             ; ---------------------------------------------------------------------------
ROM:E007
ROM:E007             skip_start_vectors:                     ; CODE XREF: PTRGT2+13↑j
ROM:E007 20 B1 00                    JSR     CHRGET
ROM:E00A 90 05                       BCC     ISSEC
ROM:E00C 20 7D E0                    JSR     ISLETC
ROM:E00F 90 0B                       BCC     NOSEC
ROM:E011
ROM:E011             ISSEC:                                  ; CODE XREF: PTRGT2+20↑j
ROM:E011 AA                          TAX
ROM:E012
ROM:E012             EATEM:                                  ; CODE XREF: PTRGT2+2B↓j
ROM:E012                                                     ; PTRGT2+30↓j
ROM:E012 20 B1 00                    JSR     CHRGET
ROM:E015 90 FB                       BCC     EATEM
ROM:E017 20 7D E0                    JSR     ISLETC
ROM:E01A B0 F6                       BCS     EATEM
ROM:E01C
ROM:E01C             NOSEC:                                  ; CODE XREF: PTRGT2+25↑j
ROM:E01C C9 24                       CMP     #$24 ; '$'
ROM:E01E D0 06                       BNE     NOTSTR
ROM:E020 A9 FF                       LDA     #$FF
ROM:E022 85 11                       STA     byte_11
ROM:E024 D0 10                       BNE     TURNON
ROM:E026
ROM:E026             NOTSTR:                                 ; CODE XREF: PTRGT2+34↑j
ROM:E026 C9 25                       CMP     #$25 ; '%'
ROM:E028 D0 13                       BNE     STRNAM
ROM:E02A A5 14                       LDA     byte_14
ROM:E02C D0 C6                       BNE     INTERR
ROM:E02E A9 80                       LDA     #$80
ROM:E030 85 12                       STA     byte_12
ROM:E032 05 81                       ORA     byte_81
ROM:E034 85 81                       STA     byte_81
ROM:E036
ROM:E036             TURNON:                                 ; CODE XREF: PTRGT2+3A↑j
ROM:E036 8A                          TXA
ROM:E037 09 80                       ORA     #$80
ROM:E039 AA                          TAX
ROM:E03A 20 B1 00                    JSR     CHRGET
ROM:E03D
ROM:E03D             STRNAM:                                 ; CODE XREF: PTRGT2+3E↑j
ROM:E03D 86 82                       STX     byte_82
ROM:E03F 38                          SEC
ROM:E040 05 14                       ORA     byte_14
ROM:E042 E9 28                       SBC     #$28 ; '('
ROM:E044 D0 03                       BNE     ISARRAY
ROM:E046
ROM:E046             loc_E046:                               ; CODE XREF: PTRGT2+63↓j
ROM:E046 4C 1E E1                    JMP     loc_E11E
ROM:E049             ; ---------------------------------------------------------------------------
ROM:E049
ROM:E049             ISARRAY:                                ; CODE XREF: PTRGT2+5A↑j
ROM:E049 A5 14                       LDA     byte_14
ROM:E04B C9 66                       CMP     #$66 ; 'f'
ROM:E04D F0 F7                       BEQ     loc_E046
ROM:E04F A9 00                       LDA     #0
ROM:E051 85 14                       STA     byte_14
ROM:E053 A5 69                       LDA     byte_69
ROM:E055 A6 6A                       LDX     byte_6A
ROM:E057 A0 00                       LDY     #0
ROM:E059
ROM:E059             STXFND:                                 ; CODE XREF: PTRGT2+91↓j
ROM:E059 86 9C                       STX     byte_9C
ROM:E05B
ROM:E05B             LOPFND:                                 ; CODE XREF: PTRGT2+8E↓j
ROM:E05B 85 9B                       STA     byte_9B
ROM:E05D E4 6C                       CPX     byte_6C
ROM:E05F D0 04                       BNE     LOPFN
ROM:E061 C5 6B                       CMP     byte_6B
ROM:E063 F0 22                       BEQ     NOTFNS
ROM:E065
ROM:E065             LOPFN:                                  ; CODE XREF: PTRGT2+75↑j
ROM:E065 A5 81                       LDA     byte_81
ROM:E067 D1 9B                       CMP     ($9B),Y
ROM:E069 D0 08                       BNE     NOTIT
ROM:E06B A5 82                       LDA     byte_82
ROM:E06D C8                          INY
ROM:E06E D1 9B                       CMP     ($9B),Y
ROM:E070 F0 6C                       BEQ     loc_E0DE
ROM:E072 88                          DEY
ROM:E073
ROM:E073             NOTIT:                                  ; CODE XREF: PTRGT2+7F↑j
ROM:E073 18                          CLC
ROM:E074 A5 9B                       LDA     byte_9B
ROM:E076 69 07                       ADC     #7
ROM:E078 90 E1                       BCC     LOPFND
ROM:E07A E8                          INX
ROM:E07B D0 DC                       BNE     STXFND
ROM:E07B             ; End of function PTRGT2
ROM:E07B
ROM:E07D
ROM:E07D             ; =============== S U B R O U T I N E =======================================
ROM:E07D
ROM:E07D
ROM:E07D             ISLETC:                                 ; CODE XREF: ROM:EVAL2↑p
ROM:E07D                                                     ; PTRGT2+5↑p ...
ROM:E07D C9 41                       CMP     #'A'
ROM:E07F 90 05                       BCC     ISLRTS
ROM:E081 E9 5B                       SBC     #$5B ; '['      ; Z + 1
ROM:E083 38                          SEC
ROM:E084 E9 A5                       SBC     #$A5
ROM:E086
ROM:E086             ISLRTS:                                 ; CODE XREF: ISLETC+2↑j
ROM:E086 60                          RTS
ROM:E086             ; End of function ISLETC
ROM:E086
ROM:E087             ; ---------------------------------------------------------------------------
ROM:E087             ; START OF FUNCTION CHUNK FOR PTRGT2
ROM:E087
ROM:E087             NOTFNS:                                 ; CODE XREF: PTRGT2+79↑j
ROM:E087 68                          PLA
ROM:E088 48                          PHA
ROM:E089 C9 D7                       CMP     #$D7
ROM:E08B D0 0F                       BNE     NOTEVL
ROM:E08D BA                          TSX
ROM:E08E BD 02 01                    LDA     $102,X
ROM:E091 C9 DE                       CMP     #$DE
ROM:E093 D0 07                       BNE     NOTEVL
ROM:E095 A9 9A                       LDA     #$9A
ROM:E097 A0 E0                       LDY     #$E0
ROM:E099 60                          RTS
ROM:E099             ; END OF FUNCTION CHUNK FOR PTRGT2
ROM:E099             ; ---------------------------------------------------------------------------
ROM:E09A 00                          .BYTE   0
ROM:E09B 00                          .BYTE   0
ROM:E09C             ; ---------------------------------------------------------------------------
ROM:E09C             ; START OF FUNCTION CHUNK FOR PTRGT2
ROM:E09C
ROM:E09C             NOTEVL:                                 ; CODE XREF: PTRGT2+A1↑j
ROM:E09C                                                     ; PTRGT2+A9↑j
ROM:E09C A5 6B                       LDA     byte_6B
ROM:E09E A4 6C                       LDY     byte_6C
ROM:E0A0 85 9B                       STA     byte_9B
ROM:E0A2 84 9C                       STY     byte_9C
ROM:E0A4 A5 6D                       LDA     byte_6D
ROM:E0A6 A4 6E                       LDY     byte_6E
ROM:E0A8
ROM:E0A8             loc_E0A8:
ROM:E0A8 85 96                       STA     byte_96
ROM:E0AA 84 97                       STY     byte_97
ROM:E0AC 18                          CLC
ROM:E0AD 69 07                       ADC     #7
ROM:E0AF 90 01                       BCC     loc_E0B2
ROM:E0B1 C8                          INY
ROM:E0B2
ROM:E0B2             loc_E0B2:                               ; CODE XREF: PTRGT2+C5↑j
ROM:E0B2 85 94                       STA     byte_94
ROM:E0B4 84 95                       STY     byte_95
ROM:E0B6 20 93 D3                    JSR     BLTU            ; BLOCK TRANSFER ROUTINE
ROM:E0B9 A5 94                       LDA     byte_94
ROM:E0BB A4 95                       LDY     byte_95
ROM:E0BD C8                          INY
ROM:E0BE 85 6B                       STA     byte_6B
ROM:E0C0 84 6C                       STY     byte_6C
ROM:E0C2 A0 00                       LDY     #0
ROM:E0C4 A5 81                       LDA     byte_81
ROM:E0C6 91 9B                       STA     ($9B),Y
ROM:E0C8 C8                          INY
ROM:E0C9 A5 82                       LDA     byte_82
ROM:E0CB 91 9B                       STA     ($9B),Y
ROM:E0CD A9 00                       LDA     #0
ROM:E0CF C8                          INY
ROM:E0D0 91 9B                       STA     ($9B),Y
ROM:E0D2 C8                          INY
ROM:E0D3 91 9B                       STA     ($9B),Y
ROM:E0D5 C8                          INY
ROM:E0D6 91 9B                       STA     ($9B),Y
ROM:E0D8 C8                          INY
ROM:E0D9 91 9B                       STA     ($9B),Y
ROM:E0DB C8                          INY
ROM:E0DC 91 9B                       STA     ($9B),Y
ROM:E0DE
ROM:E0DE             loc_E0DE:                               ; CODE XREF: PTRGT2+86↑j
ROM:E0DE A5 9B                       LDA     byte_9B
ROM:E0E0 18                          CLC
ROM:E0E1 69 02                       ADC     #2
ROM:E0E3 A4 9C                       LDY     byte_9C
ROM:E0E5 90 01                       BCC     FINNOW
ROM:E0E7 C8                          INY
ROM:E0E8
ROM:E0E8             FINNOW:                                 ; CODE XREF: PTRGT2+FB↑j
ROM:E0E8 85 83                       STA     byte_83
ROM:E0EA 84 84                       STY     byte_84
ROM:E0EC 60                          RTS
ROM:E0EC             ; END OF FUNCTION CHUNK FOR PTRGT2
ROM:E0ED
ROM:E0ED             ; =============== S U B R O U T I N E =======================================
ROM:E0ED
ROM:E0ED
ROM:E0ED             FMAPTR:                                 ; CODE XREF: PTRGT2:loc_E1AA↓p
ROM:E0ED                                                     ; PTRGT2:NOTFDD↓p
ROM:E0ED A5 0F                       LDA     byte_F
ROM:E0EF
ROM:E0EF             loc_E0EF:                               ; CODE XREF: ROM:F698↓p
ROM:E0EF                                                     ; sub_F7B8+11↓p
ROM:E0EF 0A                          ASL     A
ROM:E0F0 69 05                       ADC     #5
ROM:E0F2 65 9B                       ADC     byte_9B
ROM:E0F4 A4 9C                       LDY     byte_9C
ROM:E0F6 90 01                       BCC     JSRGM
ROM:E0F8 C8                          INY
ROM:E0F9
ROM:E0F9             JSRGM:                                  ; CODE XREF: FMAPTR+9↑j
ROM:E0F9 85 94                       STA     byte_94
ROM:E0FB 84 95                       STY     byte_95
ROM:E0FD 60                          RTS
ROM:E0FD             ; End of function FMAPTR
ROM:E0FD
ROM:E0FD             ; ---------------------------------------------------------------------------
ROM:E0FE 90                          .BYTE 144               ; -32768
ROM:E0FF 80                          .BYTE 128
ROM:E100 00                          .BYTE 0
ROM:E101 00                          .BYTE 0
ROM:E102
ROM:E102             ; =============== S U B R O U T I N E =======================================
ROM:E102
ROM:E102
ROM:E102             INTIDX:                                 ; CODE XREF: PTRGT2+14A↓p
ROM:E102 20 B1 00                    JSR     CHRGET
ROM:E105 20 67 DD                    JSR     FRMNUM
ROM:E105             ; End of function INTIDX
ROM:E105
ROM:E108
ROM:E108             ; =============== S U B R O U T I N E =======================================
ROM:E108
ROM:E108
ROM:E108             POSINT:                                 ; CODE XREF: GETBYT:CONINT↓p
ROM:E108
ROM:E108             ; FUNCTION CHUNK AT ROM:E119 SIZE 00000005 BYTES
ROM:E108
ROM:E108 A5 A2                       LDA     byte_A2
ROM:E10A 30 0D                       BMI     loc_E119
ROM:E10A             ; End of function POSINT
ROM:E10A
ROM:E10C
ROM:E10C             ; =============== S U B R O U T I N E =======================================
ROM:E10C
ROM:E10C
ROM:E10C             AYINT:                                  ; CODE XREF: QINTGR+5↑p
ROM:E10C A5 9D                       LDA     byte_9D
ROM:E10E C9 90                       CMP     #$90
ROM:E110 90 09                       BCC     QINTGO
ROM:E112 A9 FE                       LDA     #$FE            ; -32768 above
ROM:E114 A0 E0                       LDY     #$E0
ROM:E116 20 B2 EB                    JSR     FCOMP
ROM:E116             ; End of function AYINT
ROM:E116
ROM:E119             ; START OF FUNCTION CHUNK FOR POSINT
ROM:E119
ROM:E119             loc_E119:                               ; CODE XREF: POSINT+2↑j
ROM:E119 D0 7E                       BNE     FCERR
ROM:E11B
ROM:E11B             QINTGO:                                 ; CODE XREF: AYINT+4↑j
ROM:E11B 4C F2 EB                    JMP     QINT
ROM:E11B             ; END OF FUNCTION CHUNK FOR POSINT
ROM:E11E             ; ---------------------------------------------------------------------------
ROM:E11E             ; START OF FUNCTION CHUNK FOR PTRGT2
ROM:E11E
ROM:E11E             loc_E11E:                               ; CODE XREF: PTRGT2:loc_E046↑j
ROM:E11E A5 14                       LDA     byte_14
ROM:E120 D0 47                       BNE     loc_E169
ROM:E122 A5 10                       LDA     byte_10
ROM:E124 05 12                       ORA     byte_12
ROM:E126 48                          PHA
ROM:E127 A5 11                       LDA     byte_11
ROM:E129 48                          PHA
ROM:E12A A0 00                       LDY     #0
ROM:E12C
ROM:E12C             loc_E12C:                               ; CODE XREF: PTRGT2+16E↓j
ROM:E12C 98                          TYA
ROM:E12D 48                          PHA
ROM:E12E A5 82                       LDA     byte_82
ROM:E130 48                          PHA
ROM:E131 A5 81                       LDA     byte_81
ROM:E133 48                          PHA
ROM:E134 20 02 E1                    JSR     INTIDX
ROM:E137 68                          PLA
ROM:E138 85 81                       STA     byte_81
ROM:E13A 68                          PLA
ROM:E13B 85 82                       STA     byte_82
ROM:E13D 68                          PLA
ROM:E13E A8                          TAY
ROM:E13F BA                          TSX
ROM:E140 BD 02 01                    LDA     $102,X
ROM:E143 48                          PHA
ROM:E144 BD 01 01                    LDA     $101,X
ROM:E147 48                          PHA
ROM:E148 A5 A0                       LDA     byte_A0
ROM:E14A 9D 02 01                    STA     $102,X
ROM:E14D A5 A1                       LDA     byte_A1
ROM:E14F 9D 01 01                    STA     $101,X
ROM:E152 C8                          INY
ROM:E153 20 B7 00                    JSR     CHRGOT
ROM:E156 C9 2C                       CMP     #$2C ; ','      ; comma
ROM:E158 F0 D2                       BEQ     loc_E12C
ROM:E15A 84 0F                       STY     byte_F
ROM:E15C 20 B8 DE                    JSR     CHKCLS
ROM:E15F 68                          PLA
ROM:E160 85 11                       STA     byte_11
ROM:E162 68                          PLA
ROM:E163 85 12                       STA     byte_12
ROM:E165 29 7F                       AND     #$7F
ROM:E167 85 10                       STA     byte_10
ROM:E169
ROM:E169             loc_E169:                               ; CODE XREF: PTRGT2+136↑j
ROM:E169 A6 6B                       LDX     byte_6B
ROM:E16B A5 6C                       LDA     byte_6C
ROM:E16D
ROM:E16D             loc_E16D:                               ; CODE XREF: PTRGT2+1AA↓j
ROM:E16D 86 9B                       STX     byte_9B
ROM:E16F 85 9C                       STA     byte_9C
ROM:E171 C5 6E                       CMP     byte_6E
ROM:E173 D0 04                       BNE     loc_E179
ROM:E175 E4 6D                       CPX     byte_6D
ROM:E177 F0 3F                       BEQ     loc_E1B8
ROM:E179
ROM:E179             loc_E179:                               ; CODE XREF: PTRGT2+189↑j
ROM:E179 A0 00                       LDY     #0
ROM:E17B B1 9B                       LDA     ($9B),Y
ROM:E17D C8                          INY
ROM:E17E C5 81                       CMP     byte_81
ROM:E180 D0 06                       BNE     loc_E188
ROM:E182 A5 82                       LDA     byte_82
ROM:E184 D1 9B                       CMP     ($9B),Y
ROM:E186 F0 16                       BEQ     loc_E19E
ROM:E188
ROM:E188             loc_E188:                               ; CODE XREF: PTRGT2+196↑j
ROM:E188 C8                          INY
ROM:E189 B1 9B                       LDA     ($9B),Y
ROM:E18B 18                          CLC
ROM:E18C 65 9B                       ADC     byte_9B
ROM:E18E AA                          TAX
ROM:E18F C8                          INY
ROM:E190 B1 9B                       LDA     ($9B),Y
ROM:E192 65 9C                       ADC     byte_9C
ROM:E194 90 D7                       BCC     loc_E16D
ROM:E196
ROM:E196             BSERR:                                  ; CODE XREF: PTRGT2+1C9↓j
ROM:E196                                                     ; PTRGT2:BSERR7↓j
ROM:E196 A2 6B                       LDX     #$6B ; 'k'
ROM:E196             ; ---------------------------------------------------------------------------
ROM:E198 2C                          .BYTE $2C
ROM:E199             ; ---------------------------------------------------------------------------
ROM:E199
ROM:E199             FCERR:                                  ; CODE XREF: POSINT:loc_E119↑j
ROM:E199                                                     ; GETBYT:GOFUC↓j ...
ROM:E199 A2 35                       LDX     #$35 ; '5'
ROM:E19B
ROM:E19B             loc_E19B:                               ; CODE XREF: PTRGT2+1B8↓j
ROM:E19B 4C 12 D4                    JMP     ERROR_0
ROM:E19E             ; ---------------------------------------------------------------------------
ROM:E19E
ROM:E19E             loc_E19E:                               ; CODE XREF: PTRGT2+19C↑j
ROM:E19E A2 78                       LDX     #$78 ; 'x'
ROM:E1A0 A5 10                       LDA     byte_10
ROM:E1A2 D0 F7                       BNE     loc_E19B
ROM:E1A4 A5 14                       LDA     byte_14
ROM:E1A6 F0 02                       BEQ     loc_E1AA
ROM:E1A8 38                          SEC
ROM:E1A9 60                          RTS
ROM:E1AA             ; ---------------------------------------------------------------------------
ROM:E1AA
ROM:E1AA             loc_E1AA:                               ; CODE XREF: PTRGT2+1BC↑j
ROM:E1AA 20 ED E0                    JSR     FMAPTR
ROM:E1AD A5 0F                       LDA     byte_F
ROM:E1AF A0 04                       LDY     #4
ROM:E1B1 D1 9B                       CMP     ($9B),Y
ROM:E1B3 D0 E1                       BNE     BSERR
ROM:E1B5 4C 4B E2                    JMP     GETDEF
ROM:E1B8             ; ---------------------------------------------------------------------------
ROM:E1B8
ROM:E1B8             loc_E1B8:                               ; CODE XREF: PTRGT2+18D↑j
ROM:E1B8 A5 14                       LDA     byte_14
ROM:E1BA F0 05                       BEQ     NOTFDD
ROM:E1BC A2 2A                       LDX     #$2A ; '*'
ROM:E1BE 4C 12 D4                    JMP     ERROR_0
ROM:E1C1             ; ---------------------------------------------------------------------------
ROM:E1C1
ROM:E1C1             NOTFDD:                                 ; CODE XREF: PTRGT2+1D0↑j
ROM:E1C1 20 ED E0                    JSR     FMAPTR
ROM:E1C4 20 E3 D3                    JSR     REASON
ROM:E1C7 A9 00                       LDA     #0
ROM:E1C9 A8                          TAY
ROM:E1CA 85 AE                       STA     byte_AE
ROM:E1CC A2 05                       LDX     #5
ROM:E1CE A5 81                       LDA     byte_81
ROM:E1D0 91 9B                       STA     ($9B),Y
ROM:E1D2 10 01                       BPL     NOTFLT
ROM:E1D4 CA                          DEX
ROM:E1D5
ROM:E1D5             NOTFLT:                                 ; CODE XREF: PTRGT2+1E8↑j
ROM:E1D5 C8                          INY
ROM:E1D6 A5 82                       LDA     byte_82
ROM:E1D8 91 9B                       STA     ($9B),Y
ROM:E1DA 10 02                       BPL     STOMLT
ROM:E1DC CA                          DEX
ROM:E1DD CA                          DEX
ROM:E1DE
ROM:E1DE             STOMLT:                                 ; CODE XREF: PTRGT2+1F0↑j
ROM:E1DE 86 AD                       STX     byte_AD
ROM:E1E0 A5 0F                       LDA     byte_F
ROM:E1E2 C8                          INY
ROM:E1E3 C8                          INY
ROM:E1E4 C8                          INY
ROM:E1E5 91 9B                       STA     ($9B),Y
ROM:E1E7
ROM:E1E7             LOPPTA:                                 ; CODE XREF: PTRGT2+21F↓j
ROM:E1E7 A2 0B                       LDX     #$B
ROM:E1E9 A9 00                       LDA     #0
ROM:E1EB 24 10                       BIT     byte_10
ROM:E1ED 50 08                       BVC     NOTDIM
ROM:E1EF 68                          PLA
ROM:E1F0 18                          CLC
ROM:E1F1 69 01                       ADC     #1
ROM:E1F3 AA                          TAX
ROM:E1F4 68                          PLA
ROM:E1F5 69 00                       ADC     #0
ROM:E1F7
ROM:E1F7             NOTDIM:                                 ; CODE XREF: PTRGT2+203↑j
ROM:E1F7 C8                          INY
ROM:E1F8 91 9B                       STA     ($9B),Y
ROM:E1FA C8                          INY
ROM:E1FB 8A                          TXA
ROM:E1FC 91 9B                       STA     ($9B),Y
ROM:E1FE 20 AD E2                    JSR     UMULT
ROM:E201 86 AD                       STX     byte_AD
ROM:E203 85 AE                       STA     byte_AE
ROM:E205 A4 5E                       LDY     word_5E
ROM:E207 C6 0F                       DEC     byte_F
ROM:E209 D0 DC                       BNE     LOPPTA
ROM:E20B 65 95                       ADC     byte_95
ROM:E20D B0 5D                       BCS     OMERR1
ROM:E20F 85 95                       STA     byte_95
ROM:E211 A8                          TAY
ROM:E212 8A                          TXA
ROM:E213 65 94                       ADC     byte_94
ROM:E215 90 03                       BCC     GREASE
ROM:E217 C8                          INY
ROM:E218 F0 52                       BEQ     OMERR1
ROM:E21A
ROM:E21A             GREASE:                                 ; CODE XREF: PTRGT2+22B↑j
ROM:E21A 20 E3 D3                    JSR     REASON
ROM:E21D 85 6D                       STA     byte_6D
ROM:E21F 84 6E                       STY     byte_6E
ROM:E221 A9 00                       LDA     #0
ROM:E223 E6 AE                       INC     byte_AE
ROM:E225 A4 AD                       LDY     byte_AD
ROM:E227 F0 05                       BEQ     DECCUR
ROM:E229
ROM:E229             ZERITA:                                 ; CODE XREF: PTRGT2+242↓j
ROM:E229                                                     ; PTRGT2+248↓j
ROM:E229 88                          DEY
ROM:E22A 91 94                       STA     ($94),Y
ROM:E22C D0 FB                       BNE     ZERITA
ROM:E22E
ROM:E22E             DECCUR:                                 ; CODE XREF: PTRGT2+23D↑j
ROM:E22E C6 95                       DEC     byte_95
ROM:E230 C6 AE                       DEC     byte_AE
ROM:E232 D0 F5                       BNE     ZERITA
ROM:E234 E6 95                       INC     byte_95
ROM:E236 38                          SEC
ROM:E237 A5 6D                       LDA     byte_6D
ROM:E239 E5 9B                       SBC     byte_9B
ROM:E23B A0 02                       LDY     #2
ROM:E23D 91 9B                       STA     ($9B),Y
ROM:E23F A5 6E                       LDA     byte_6E
ROM:E241 C8                          INY
ROM:E242 E5 9C                       SBC     byte_9C
ROM:E244 91 9B                       STA     ($9B),Y
ROM:E246 A5 10                       LDA     byte_10
ROM:E248 D0 62                       BNE     DIMRTS
ROM:E24A C8                          INY
ROM:E24B
ROM:E24B             GETDEF:                                 ; CODE XREF: PTRGT2+1CB↑j
ROM:E24B B1 9B                       LDA     ($9B),Y
ROM:E24D 85 0F                       STA     byte_F
ROM:E24F A9 00                       LDA     #0
ROM:E251 85 AD                       STA     byte_AD
ROM:E253
ROM:E253             INLPNM:                                 ; CODE XREF: PTRGT2+29D↓j
ROM:E253 85 AE                       STA     byte_AE
ROM:E255 C8                          INY
ROM:E256 68                          PLA
ROM:E257 AA                          TAX
ROM:E258 85 A0                       STA     byte_A0
ROM:E25A 68                          PLA
ROM:E25B 85 A1                       STA     byte_A1
ROM:E25D D1 9B                       CMP     ($9B),Y
ROM:E25F 90 0E                       BCC     INLPN2
ROM:E261 D0 06                       BNE     BSERR7
ROM:E263 C8                          INY
ROM:E264 8A                          TXA
ROM:E265 D1 9B                       CMP     ($9B),Y
ROM:E267 90 07                       BCC     INLPN1
ROM:E269
ROM:E269             BSERR7:                                 ; CODE XREF: PTRGT2+277↑j
ROM:E269 4C 96 E1                    JMP     BSERR
ROM:E26C             ; ---------------------------------------------------------------------------
ROM:E26C
ROM:E26C             OMERR1:                                 ; CODE XREF: PTRGT2+223↑j
ROM:E26C                                                     ; PTRGT2+22E↑j ...
ROM:E26C 4C 10 D4                    JMP     OMERROR         ; ERROR HANDLER, READY, TERMINAL INPUT, COMPACTIFY, NEW, REINIT.
ROM:E26F             ; ---------------------------------------------------------------------------
ROM:E26F
ROM:E26F             INLPN2:                                 ; CODE XREF: PTRGT2+275↑j
ROM:E26F C8                          INY
ROM:E270
ROM:E270             INLPN1:                                 ; CODE XREF: PTRGT2+27D↑j
ROM:E270 A5 AE                       LDA     byte_AE
ROM:E272 05 AD                       ORA     byte_AD
ROM:E274 18                          CLC
ROM:E275 F0 0A                       BEQ     ADDIND
ROM:E277 20 AD E2                    JSR     UMULT
ROM:E27A 8A                          TXA
ROM:E27B 65 A0                       ADC     byte_A0
ROM:E27D AA                          TAX
ROM:E27E 98                          TYA
ROM:E27F A4 5E                       LDY     word_5E
ROM:E281
ROM:E281             ADDIND:                                 ; CODE XREF: PTRGT2+28B↑j
ROM:E281 65 A1                       ADC     byte_A1
ROM:E283 86 AD                       STX     byte_AD
ROM:E285 C6 0F                       DEC     byte_F
ROM:E287 D0 CA                       BNE     INLPNM
ROM:E289 85 AE                       STA     byte_AE
ROM:E28B A2 05                       LDX     #5
ROM:E28D A5 81                       LDA     byte_81
ROM:E28F 10 01                       BPL     NOTFL1
ROM:E291 CA                          DEX
ROM:E292
ROM:E292             NOTFL1:                                 ; CODE XREF: PTRGT2+2A5↑j
ROM:E292 A5 82                       LDA     byte_82
ROM:E294 10 02                       BPL     STOML1
ROM:E296 CA                          DEX
ROM:E297 CA                          DEX
ROM:E298
ROM:E298             STOML1:                                 ; CODE XREF: PTRGT2+2AA↑j
ROM:E298 86 64                       STX     byte_64
ROM:E29A A9 00                       LDA     #0
ROM:E29C 20 B6 E2                    JSR     UMULTD
ROM:E29F 8A                          TXA
ROM:E2A0 65 94                       ADC     byte_94
ROM:E2A2 85 83                       STA     byte_83
ROM:E2A4 98                          TYA
ROM:E2A5 65 95                       ADC     byte_95
ROM:E2A7 85 84                       STA     byte_84
ROM:E2A9 A8                          TAY
ROM:E2AA A5 83                       LDA     byte_83
ROM:E2AC
ROM:E2AC             DIMRTS:                                 ; CODE XREF: PTRGT2+25E↑j
ROM:E2AC                                                     ; SNGFLT+8↓j
ROM:E2AC 60                          RTS
ROM:E2AC             ; END OF FUNCTION CHUNK FOR PTRGT2
ROM:E2AD
ROM:E2AD             ; =============== S U B R O U T I N E =======================================
ROM:E2AD
ROM:E2AD
ROM:E2AD             UMULT:                                  ; CODE XREF: PTRGT2+214↑p
ROM:E2AD                                                     ; PTRGT2+28D↑p
ROM:E2AD 84 5E                       STY     word_5E
ROM:E2AF B1 9B                       LDA     ($9B),Y
ROM:E2B1 85 64                       STA     byte_64
ROM:E2B3 88                          DEY
ROM:E2B4 B1 9B                       LDA     ($9B),Y
ROM:E2B4             ; End of function UMULT
ROM:E2B4
ROM:E2B6
ROM:E2B6             ; =============== S U B R O U T I N E =======================================
ROM:E2B6
ROM:E2B6
ROM:E2B6             UMULTD:                                 ; CODE XREF: PTRGT2+2B2↑p
ROM:E2B6 85 65                       STA     byte_65
ROM:E2B8 A9 10                       LDA     #$10
ROM:E2BA 85 99                       STA     byte_99
ROM:E2BC A2 00                       LDX     #0
ROM:E2BE A0 00                       LDY     #0
ROM:E2C0
ROM:E2C0             UMULTC:                                 ; CODE XREF: UMULTD+25↓j
ROM:E2C0 8A                          TXA
ROM:E2C1 0A                          ASL     A
ROM:E2C2 AA                          TAX
ROM:E2C3 98                          TYA
ROM:E2C4 2A                          ROL     A
ROM:E2C5 A8                          TAY
ROM:E2C6 B0 A4                       BCS     OMERR1
ROM:E2C8 06 AD                       ASL     byte_AD
ROM:E2CA 26 AE                       ROL     byte_AE
ROM:E2CC 90 0B                       BCC     UMLCNT
ROM:E2CE 18                          CLC
ROM:E2CF 8A                          TXA
ROM:E2D0 65 64                       ADC     byte_64
ROM:E2D2 AA                          TAX
ROM:E2D3 98                          TYA
ROM:E2D4 65 65                       ADC     byte_65
ROM:E2D6 A8                          TAY
ROM:E2D7 B0 93                       BCS     OMERR1
ROM:E2D9
ROM:E2D9             UMLCNT:                                 ; CODE XREF: UMULTD+16↑j
ROM:E2D9 C6 99                       DEC     byte_99
ROM:E2DB D0 E3                       BNE     UMULTC
ROM:E2DD 60                          RTS
ROM:E2DD             ; End of function UMULTD
ROM:E2DD
ROM:E2DE             ; ---------------------------------------------------------------------------
ROM:E2DE
ROM:E2DE             FRE:                                    ; DATA XREF: ROM:D088↑o
ROM:E2DE A5 11                       LDA     byte_11
ROM:E2E0 F0 03                       BEQ     NOFREF
ROM:E2E2 20 00 E6                    JSR     FREFAC
ROM:E2E5
ROM:E2E5             NOFREF:                                 ; CODE XREF: ROM:E2E0↑j
ROM:E2E5 20 84 E4                    JSR     GARBA2
ROM:E2E8 38                          SEC
ROM:E2E9 A5 6F                       LDA     byte_6F
ROM:E2EB E5 6D                       SBC     byte_6D
ROM:E2ED A8                          TAY
ROM:E2EE A5 70                       LDA     byte_70
ROM:E2F0 E5 6E                       SBC     byte_6E
ROM:E2F2             ; START OF FUNCTION CHUNK FOR SNGFLT
ROM:E2F2
ROM:E2F2             GIVAYF:                                 ; CODE XREF: ROM:DEF3↑j
ROM:E2F2                                                     ; SNGFLT+3↓j
ROM:E2F2 A2 00                       LDX     #0
ROM:E2F4 86 11                       STX     byte_11
ROM:E2F6 85 9E                       STA     byte_9E
ROM:E2F8 84 9F                       STY     byte_9F
ROM:E2FA A2 90                       LDX     #$90
ROM:E2FC 4C 9B EB                    JMP     FLOATS
ROM:E2FC             ; END OF FUNCTION CHUNK FOR SNGFLT
ROM:E2FF             ; ---------------------------------------------------------------------------
ROM:E2FF A4 24                       LDY     CHORIZ
ROM:E301
ROM:E301             ; =============== S U B R O U T I N E =======================================
ROM:E301
ROM:E301
ROM:E301             SNGFLT:                                 ; CODE XREF: ROM:DEA1↑j
ROM:E301                                                     ; ROM:DF62↑j ...
ROM:E301
ROM:E301             ; FUNCTION CHUNK AT ROM:E2F2 SIZE 0000000D BYTES
ROM:E301
ROM:E301 A9 00                       LDA     #0
ROM:E303 38                          SEC
ROM:E304 F0 EC                       BEQ     GIVAYF
ROM:E306
ROM:E306             ERRDIR:                                 ; CODE XREF: ROM:DBA0↑p
ROM:E306                                                     ; set_WIDTH:loc_DBC1↑p ...
ROM:E306 A6 76                       LDX     byte_76
ROM:E308 E8                          INX
ROM:E309 D0 A1                       BNE     DIMRTS
ROM:E30B A2 95                       LDX     #$95
ROM:E30B             ; ---------------------------------------------------------------------------
ROM:E30D 2C                          .BYTE $2C
ROM:E30E             ; ---------------------------------------------------------------------------
ROM:E30E
ROM:E30E             ERRGUF:                                 ; CODE XREF: ROM:E373↓j
ROM:E30E A2 E0                       LDX     #$E0
ROM:E310 4C 12 D4                    JMP     ERROR_0
ROM:E310             ; End of function SNGFLT
ROM:E310
ROM:E313             ; ---------------------------------------------------------------------------
ROM:E313
ROM:E313             DEF:                                    ; DATA XREF: ROM:D070↑t
ROM:E313 20 41 E3                    JSR     GETFNM
ROM:E316 20 06 E3                    JSR     ERRDIR
ROM:E319 20 BB DE                    JSR     CHKOPN
ROM:E31C A9 80                       LDA     #$80
ROM:E31E 85 14                       STA     byte_14
ROM:E320 20 E3 DF                    JSR     PTRGET
ROM:E323 20 6A DD                    JSR     CHKNUM
ROM:E326 20 B8 DE                    JSR     CHKCLS
ROM:E329 A9 D0                       LDA     #$D0
ROM:E32B 20 C0 DE                    JSR     SYNCHR
ROM:E32E 48                          PHA
ROM:E32F A5 84                       LDA     byte_84
ROM:E331 48                          PHA
ROM:E332 A5 83                       LDA     byte_83
ROM:E334 48                          PHA
ROM:E335 A5 B9                       LDA     byte_B9
ROM:E337 48                          PHA
ROM:E338 A5 B8                       LDA     byte_B8
ROM:E33A 48                          PHA
ROM:E33B 20 95 D9                    JSR     DATA
ROM:E33E 4C AF E3                    JMP     DEFFIN
ROM:E341
ROM:E341             ; =============== S U B R O U T I N E =======================================
ROM:E341
ROM:E341
ROM:E341             GETFNM:                                 ; CODE XREF: ROM:DEF↑p
ROM:E341                                                     ; ROM:FNDOER↓p
ROM:E341 A9 C2                       LDA     #$C2
ROM:E343 20 C0 DE                    JSR     SYNCHR
ROM:E346 09 80                       ORA     #$80
ROM:E348 85 14                       STA     byte_14
ROM:E34A 20 EA DF                    JSR     PTRGT2
ROM:E34D 85 8A                       STA     byte_8A
ROM:E34F 84 8B                       STY     byte_8B
ROM:E351 4C 6A DD                    JMP     CHKNUM
ROM:E351             ; End of function GETFNM
ROM:E351
ROM:E354             ; ---------------------------------------------------------------------------
ROM:E354
ROM:E354             FNDOER:                                 ; CODE XREF: ROM:DEA8↑j
ROM:E354 20 41 E3                    JSR     GETFNM
ROM:E357 A5 8B                       LDA     byte_8B
ROM:E359 48                          PHA
ROM:E35A A5 8A                       LDA     byte_8A
ROM:E35C 48                          PHA
ROM:E35D 20 B2 DE                    JSR     PARCHK
ROM:E360 20 6A DD                    JSR     CHKNUM
ROM:E363 68                          PLA
ROM:E364 85 8A                       STA     byte_8A
ROM:E366 68                          PLA
ROM:E367 85 8B                       STA     byte_8B
ROM:E369 A0 02                       LDY     #2
ROM:E36B B1 8A                       LDA     ($8A),Y
ROM:E36D 85 83                       STA     byte_83
ROM:E36F AA                          TAX
ROM:E370 C8                          INY
ROM:E371 B1 8A                       LDA     ($8A),Y
ROM:E373 F0 99                       BEQ     ERRGUF
ROM:E375 85 84                       STA     byte_84
ROM:E377 C8                          INY
ROM:E378
ROM:E378             DEFSTF:                                 ; CODE XREF: ROM:E37C↓j
ROM:E378 B1 83                       LDA     ($83),Y
ROM:E37A 48                          PHA
ROM:E37B 88                          DEY
ROM:E37C 10 FA                       BPL     DEFSTF
ROM:E37E A4 84                       LDY     byte_84
ROM:E380 20 2B EB                    JSR     MOVMF
ROM:E383 A5 B9                       LDA     byte_B9
ROM:E385 48                          PHA
ROM:E386 A5 B8                       LDA     byte_B8
ROM:E388 48                          PHA
ROM:E389 B1 8A                       LDA     ($8A),Y
ROM:E38B 85 B8                       STA     byte_B8
ROM:E38D C8                          INY
ROM:E38E B1 8A                       LDA     ($8A),Y
ROM:E390 85 B9                       STA     byte_B9
ROM:E392 A5 84                       LDA     byte_84
ROM:E394 48                          PHA
ROM:E395 A5 83                       LDA     byte_83
ROM:E397 48                          PHA
ROM:E398 20 67 DD                    JSR     FRMNUM
ROM:E39B 68                          PLA
ROM:E39C 85 8A                       STA     byte_8A
ROM:E39E 68                          PLA
ROM:E39F 85 8B                       STA     byte_8B
ROM:E3A1 20 B7 00                    JSR     CHRGOT
ROM:E3A4 F0 03                       BEQ     loc_E3A9
ROM:E3A6 4C C9 DE                    JMP     SNERR
ROM:E3A9             ; ---------------------------------------------------------------------------
ROM:E3A9
ROM:E3A9             loc_E3A9:                               ; CODE XREF: ROM:E3A4↑j
ROM:E3A9 68                          PLA
ROM:E3AA 85 B8                       STA     byte_B8
ROM:E3AC 68                          PLA
ROM:E3AD 85 B9                       STA     byte_B9
ROM:E3AF
ROM:E3AF             DEFFIN:                                 ; CODE XREF: ROM:E33E↑j
ROM:E3AF A0 00                       LDY     #0
ROM:E3B1 68                          PLA
ROM:E3B2 91 8A                       STA     ($8A),Y
ROM:E3B4 68                          PLA
ROM:E3B5 C8                          INY
ROM:E3B6 91 8A                       STA     ($8A),Y
ROM:E3B8 68                          PLA
ROM:E3B9 C8                          INY
ROM:E3BA 91 8A                       STA     ($8A),Y
ROM:E3BC 68                          PLA
ROM:E3BD C8                          INY
ROM:E3BE 91 8A                       STA     ($8A),Y
ROM:E3C0 68                          PLA
ROM:E3C1 C8                          INY
ROM:E3C2 91 8A                       STA     ($8A),Y
ROM:E3C4 60                          RTS
ROM:E3C5             ; ---------------------------------------------------------------------------
ROM:E3C5
ROM:E3C5             STR:                                    ; DATA XREF: ROM:D0A4↑o
ROM:E3C5 20 6A DD                    JSR     CHKNUM
ROM:E3C8 A0 00                       LDY     #0
ROM:E3CA 20 36 ED                    JSR     FOUTC
ROM:E3CD 68                          PLA
ROM:E3CE 68                          PLA
ROM:E3CF A9 FF                       LDA     #$FF
ROM:E3D1 A0 00                       LDY     #0
ROM:E3D3 F0 12                       BEQ     STRLIT
ROM:E3D5
ROM:E3D5             ; =============== S U B R O U T I N E =======================================
ROM:E3D5
ROM:E3D5
ROM:E3D5             STRINI:                                 ; CODE XREF: GETSPT+2A↑p
ROM:E3D5                                                     ; STRLIT+39↓p ...
ROM:E3D5 A6 A0                       LDX     byte_A0
ROM:E3D7 A4 A1                       LDY     byte_A1
ROM:E3D9 86 8C                       STX     byte_8C
ROM:E3DB 84 8D                       STY     byte_8D
ROM:E3DD
ROM:E3DD             STRSPA:                                 ; CODE XREF: ROM:E64D↓p
ROM:E3DD                                                     ; ROM:E669↓p
ROM:E3DD 20 52 E4                    JSR     GETSPA
ROM:E3E0 86 9E                       STX     byte_9E
ROM:E3E2 84 9F                       STY     byte_9F
ROM:E3E4 85 9D                       STA     byte_9D
ROM:E3E6 60                          RTS
ROM:E3E6             ; End of function STRINI
ROM:E3E6
ROM:E3E7
ROM:E3E7             ; =============== S U B R O U T I N E =======================================
ROM:E3E7
ROM:E3E7
ROM:E3E7             STRLIT:                                 ; CODE XREF: ROM:DAF5↑p
ROM:E3E7                                                     ; STROUT↑p ...
ROM:E3E7 A2 22                       LDX     #$22 ; '"'
ROM:E3E9 86 0D                       STX     byte_D
ROM:E3EB 86 0E                       STX     byte_E
ROM:E3ED
ROM:E3ED             loc_E3ED:                               ; CODE XREF: INPCO1:NOWGE1↑p
ROM:E3ED 85 AB                       STA     byte_AB
ROM:E3EF 84 AC                       STY     byte_AC
ROM:E3F1 85 9E                       STA     byte_9E
ROM:E3F3 84 9F                       STY     byte_9F
ROM:E3F5 A0 FF                       LDY     #$FF
ROM:E3F7
ROM:E3F7             STRGET:                                 ; CODE XREF: STRLIT+1B↓j
ROM:E3F7 C8                          INY
ROM:E3F8 B1 AB                       LDA     ($AB),Y
ROM:E3FA F0 0C                       BEQ     STRFI1
ROM:E3FC C5 0D                       CMP     byte_D
ROM:E3FE F0 04                       BEQ     STRFIN
ROM:E400 C5 0E                       CMP     byte_E
ROM:E402 D0 F3                       BNE     STRGET
ROM:E404
ROM:E404             STRFIN:                                 ; CODE XREF: STRLIT+17↑j
ROM:E404 C9 22                       CMP     #$22 ; '"'
ROM:E406 F0 01                       BEQ     STRFI2
ROM:E408
ROM:E408             STRFI1:                                 ; CODE XREF: STRLIT+13↑j
ROM:E408 18                          CLC
ROM:E409
ROM:E409             STRFI2:                                 ; CODE XREF: STRLIT+1F↑j
ROM:E409 84 9D                       STY     byte_9D
ROM:E40B 98                          TYA
ROM:E40C 65 AB                       ADC     byte_AB
ROM:E40E 85 AD                       STA     byte_AD
ROM:E410 A6 AC                       LDX     byte_AC
ROM:E412 90 01                       BCC     STRST2
ROM:E414 E8                          INX
ROM:E415
ROM:E415             STRST2:                                 ; CODE XREF: STRLIT+2B↑j
ROM:E415 86 AE                       STX     byte_AE
ROM:E417 A5 AC                       LDA     byte_AC
ROM:E419 F0 04                       BEQ     STRCP
ROM:E41B C9 02                       CMP     #2
ROM:E41D D0 0B                       BNE     PUTNEW
ROM:E41F
ROM:E41F             STRCP:                                  ; CODE XREF: STRLIT+32↑j
ROM:E41F 98                          TYA
ROM:E420 20 D5 E3                    JSR     STRINI
ROM:E423 A6 AB                       LDX     byte_AB
ROM:E425 A4 AC                       LDY     byte_AC
ROM:E427 20 E2 E5                    JSR     MOVSTR
ROM:E427             ; End of function STRLIT
ROM:E427
ROM:E42A
ROM:E42A             ; =============== S U B R O U T I N E =======================================
ROM:E42A
ROM:E42A
ROM:E42A             PUTNEW:                                 ; CODE XREF: STRLIT+36↑j
ROM:E42A                                                     ; FRMEVL+853↓p ...
ROM:E42A A6 52                       LDX     byte_52
ROM:E42C E0 5E                       CPX     #$5E ; '^'
ROM:E42E D0 05                       BNE     PUTNW1
ROM:E430 A2 BF                       LDX     #$BF
ROM:E432
ROM:E432             ERRGO2:                                 ; CODE XREF: GETSPA+26↓j
ROM:E432 4C 12 D4                    JMP     ERROR_0
ROM:E435             ; ---------------------------------------------------------------------------
ROM:E435
ROM:E435             PUTNW1:                                 ; CODE XREF: PUTNEW+4↑j
ROM:E435 A5 9D                       LDA     byte_9D
ROM:E437 95 00                       STA     0,X
ROM:E439 A5 9E                       LDA     byte_9E
ROM:E43B 95 01                       STA     1,X
ROM:E43D A5 9F                       LDA     byte_9F
ROM:E43F 95 02                       STA     2,X
ROM:E441 A0 00                       LDY     #0
ROM:E443 86 A0                       STX     byte_A0
ROM:E445 84 A1                       STY     byte_A1
ROM:E447 88                          DEY
ROM:E448 84 11                       STY     byte_11
ROM:E44A 86 53                       STX     byte_53
ROM:E44C E8                          INX
ROM:E44D E8                          INX
ROM:E44E E8                          INX
ROM:E44F 86 52                       STX     byte_52
ROM:E451 60                          RTS
ROM:E451             ; End of function PUTNEW
ROM:E451
ROM:E452
ROM:E452             ; =============== S U B R O U T I N E =======================================
ROM:E452
ROM:E452
ROM:E452             GETSPA:                                 ; CODE XREF: STRINI:STRSPA↑p
ROM:E452 46 13                       LSR     byte_13
ROM:E454
ROM:E454             TRYAG2:                                 ; CODE XREF: GETSPA+30↓j
ROM:E454 48                          PHA
ROM:E455 49 FF                       EOR     #$FF
ROM:E457 38                          SEC
ROM:E458 65 6F                       ADC     byte_6F
ROM:E45A A4 70                       LDY     byte_70
ROM:E45C B0 01                       BCS     TRYAG3
ROM:E45E 88                          DEY
ROM:E45F
ROM:E45F             TRYAG3:                                 ; CODE XREF: GETSPA+A↑j
ROM:E45F C4 6E                       CPY     byte_6E
ROM:E461 90 11                       BCC     GARBAG
ROM:E463 D0 04                       BNE     STRFRE
ROM:E465 C5 6D                       CMP     byte_6D
ROM:E467 90 0B                       BCC     GARBAG
ROM:E469
ROM:E469             STRFRE:                                 ; CODE XREF: GETSPA+11↑j
ROM:E469 85 6F                       STA     byte_6F
ROM:E46B 84 70                       STY     byte_70
ROM:E46D 85 71                       STA     byte_71
ROM:E46F 84 72                       STY     byte_72
ROM:E471 AA                          TAX
ROM:E472 68                          PLA
ROM:E473 60                          RTS
ROM:E474             ; ---------------------------------------------------------------------------
ROM:E474
ROM:E474             GARBAG:                                 ; CODE XREF: GETSPA+F↑j
ROM:E474                                                     ; GETSPA+15↑j
ROM:E474 A2 4D                       LDX     #$4D ; 'M'
ROM:E476 A5 13                       LDA     byte_13
ROM:E478 30 B8                       BMI     ERRGO2
ROM:E47A 20 84 E4                    JSR     GARBA2
ROM:E47D A9 80                       LDA     #$80
ROM:E47F 85 13                       STA     byte_13
ROM:E481 68                          PLA
ROM:E482 D0 D0                       BNE     TRYAG2
ROM:E482             ; End of function GETSPA
ROM:E482
ROM:E484
ROM:E484             ; =============== S U B R O U T I N E =======================================
ROM:E484
ROM:E484
ROM:E484             GARBA2:                                 ; CODE XREF: REASON+14↑p
ROM:E484                                                     ; ROM:NOFREF↑p ...
ROM:E484
ROM:E484             ; FUNCTION CHUNK AT ROM:E562 SIZE 00000035 BYTES
ROM:E484
ROM:E484 A6 73                       LDX     byte_73
ROM:E486 A5 74                       LDA     byte_74
ROM:E488
ROM:E488             FNDVAR:                                 ; CODE XREF: GARBA2+110↓j
ROM:E488 86 6F                       STX     byte_6F
ROM:E48A 85 70                       STA     byte_70
ROM:E48C A0 00                       LDY     #0
ROM:E48E 84 8B                       STY     byte_8B
ROM:E490 A5 6D                       LDA     byte_6D
ROM:E492 A6 6E                       LDX     byte_6E
ROM:E494 85 9B                       STA     byte_9B
ROM:E496 86 9C                       STX     byte_9C
ROM:E498 A9 55                       LDA     #$55 ; 'U'
ROM:E49A A2 00                       LDX     #0
ROM:E49C 85 5E                       STA     word_5E
ROM:E49E 86 5F                       STX     word_5E+1
ROM:E4A0
ROM:E4A0             TVAR:                                   ; CODE XREF: GARBA2+23↓j
ROM:E4A0 C5 52                       CMP     byte_52
ROM:E4A2 F0 05                       BEQ     SVARS
ROM:E4A4 20 23 E5                    JSR     DVAR
ROM:E4A7 F0 F7                       BEQ     TVAR
ROM:E4A9
ROM:E4A9             SVARS:                                  ; CODE XREF: GARBA2+1E↑j
ROM:E4A9 A9 07                       LDA     #7
ROM:E4AB 85 8F                       STA     byte_8F
ROM:E4AD A5 69                       LDA     byte_69
ROM:E4AF A6 6A                       LDX     byte_6A
ROM:E4B1 85 5E                       STA     word_5E
ROM:E4B3 86 5F                       STX     word_5E+1
ROM:E4B5
ROM:E4B5             SVAR:                                   ; CODE XREF: GARBA2+3C↓j
ROM:E4B5 E4 6C                       CPX     byte_6C
ROM:E4B7 D0 04                       BNE     SVARGO
ROM:E4B9 C5 6B                       CMP     byte_6B
ROM:E4BB F0 05                       BEQ     ARYVAR
ROM:E4BD
ROM:E4BD             SVARGO:                                 ; CODE XREF: GARBA2+33↑j
ROM:E4BD 20 19 E5                    JSR     DVARS
ROM:E4C0 F0 F3                       BEQ     SVAR
ROM:E4C2
ROM:E4C2             ARYVAR:                                 ; CODE XREF: GARBA2+37↑j
ROM:E4C2 85 94                       STA     byte_94
ROM:E4C4 86 95                       STX     byte_95
ROM:E4C6 A9 03                       LDA     #3
ROM:E4C8 85 8F                       STA     byte_8F
ROM:E4CA
ROM:E4CA             loc_E4CA:                               ; CODE XREF: GARBA2+71↓j
ROM:E4CA                                                     ; GARBA2+74↓j
ROM:E4CA A5 94                       LDA     byte_94
ROM:E4CC A6 95                       LDX     byte_95
ROM:E4CE
ROM:E4CE             loc_E4CE:                               ; CODE XREF: GARBA2+8E↓j
ROM:E4CE E4 6E                       CPX     byte_6E
ROM:E4D0 D0 07                       BNE     ARYVGO
ROM:E4D2 C5 6D                       CMP     byte_6D
ROM:E4D4 D0 03                       BNE     ARYVGO
ROM:E4D6 4C 62 E5                    JMP     GRBPAS
ROM:E4D9             ; ---------------------------------------------------------------------------
ROM:E4D9
ROM:E4D9             ARYVGO:                                 ; CODE XREF: GARBA2+4C↑j
ROM:E4D9                                                     ; GARBA2+50↑j
ROM:E4D9 85 5E                       STA     word_5E
ROM:E4DB 86 5F                       STX     word_5E+1
ROM:E4DD A0 00                       LDY     #0
ROM:E4DF B1 5E                       LDA     ($5E),Y
ROM:E4E1 AA                          TAX
ROM:E4E2 C8                          INY
ROM:E4E3 B1 5E                       LDA     ($5E),Y
ROM:E4E5 08                          PHP
ROM:E4E6 C8                          INY
ROM:E4E7 B1 5E                       LDA     ($5E),Y
ROM:E4E9 65 94                       ADC     byte_94
ROM:E4EB 85 94                       STA     byte_94
ROM:E4ED C8                          INY
ROM:E4EE B1 5E                       LDA     ($5E),Y
ROM:E4F0 65 95                       ADC     byte_95
ROM:E4F2 85 95                       STA     byte_95
ROM:E4F4 28                          PLP
ROM:E4F5 10 D3                       BPL     loc_E4CA
ROM:E4F7 8A                          TXA
ROM:E4F8 30 D0                       BMI     loc_E4CA
ROM:E4FA C8                          INY
ROM:E4FB B1 5E                       LDA     ($5E),Y
ROM:E4FD A0 00                       LDY     #0
ROM:E4FF 0A                          ASL     A
ROM:E500 69 05                       ADC     #5
ROM:E502 65 5E                       ADC     word_5E
ROM:E504 85 5E                       STA     word_5E
ROM:E506 90 02                       BCC     loc_E50A
ROM:E508 E6 5F                       INC     word_5E+1
ROM:E50A
ROM:E50A             loc_E50A:                               ; CODE XREF: GARBA2+82↑j
ROM:E50A A6 5F                       LDX     word_5E+1
ROM:E50C
ROM:E50C             ARYSTR:                                 ; CODE XREF: GARBA2+93↓j
ROM:E50C E4 95                       CPX     byte_95
ROM:E50E D0 04                       BNE     loc_E514
ROM:E510 C5 94                       CMP     byte_94
ROM:E512 F0 BA                       BEQ     loc_E4CE
ROM:E514
ROM:E514             loc_E514:                               ; CODE XREF: GARBA2+8A↑j
ROM:E514 20 23 E5                    JSR     DVAR
ROM:E517 F0 F3                       BEQ     ARYSTR
ROM:E517             ; End of function GARBA2
ROM:E517
ROM:E519
ROM:E519             ; =============== S U B R O U T I N E =======================================
ROM:E519
ROM:E519
ROM:E519             DVARS:                                  ; CODE XREF: GARBA2:SVARGO↑p
ROM:E519 B1 5E                       LDA     ($5E),Y
ROM:E51B 30 35                       BMI     DVARTS
ROM:E51D C8                          INY
ROM:E51E B1 5E                       LDA     ($5E),Y
ROM:E520 10 30                       BPL     DVARTS
ROM:E522 C8                          INY
ROM:E522             ; End of function DVARS
ROM:E522
ROM:E523
ROM:E523             ; =============== S U B R O U T I N E =======================================
ROM:E523
ROM:E523
ROM:E523             DVAR:                                   ; CODE XREF: GARBA2+20↑p
ROM:E523                                                     ; GARBA2:loc_E514↑p
ROM:E523 B1 5E                       LDA     ($5E),Y
ROM:E525 F0 2B                       BEQ     DVARTS
ROM:E527 C8                          INY
ROM:E528 B1 5E                       LDA     ($5E),Y
ROM:E52A AA                          TAX
ROM:E52B C8                          INY
ROM:E52C B1 5E                       LDA     ($5E),Y
ROM:E52E C5 70                       CMP     byte_70
ROM:E530 90 06                       BCC     DVAR2
ROM:E532 D0 1E                       BNE     DVARTS
ROM:E534 E4 6F                       CPX     byte_6F
ROM:E536 B0 1A                       BCS     DVARTS
ROM:E538
ROM:E538             DVAR2:                                  ; CODE XREF: DVAR+D↑j
ROM:E538 C5 9C                       CMP     byte_9C
ROM:E53A 90 16                       BCC     DVARTS
ROM:E53C D0 04                       BNE     DVAR3
ROM:E53E E4 9B                       CPX     byte_9B
ROM:E540 90 10                       BCC     DVARTS
ROM:E542
ROM:E542             DVAR3:                                  ; CODE XREF: DVAR+19↑j
ROM:E542 86 9B                       STX     byte_9B
ROM:E544 85 9C                       STA     byte_9C
ROM:E546 A5 5E                       LDA     word_5E
ROM:E548 A6 5F                       LDX     word_5E+1
ROM:E54A 85 8A                       STA     byte_8A
ROM:E54C 86 8B                       STX     byte_8B
ROM:E54E A5 8F                       LDA     byte_8F
ROM:E550 85 91                       STA     byte_91
ROM:E552
ROM:E552             DVARTS:                                 ; CODE XREF: DVARS+2↑j
ROM:E552                                                     ; DVARS+7↑j ...
ROM:E552 A5 8F                       LDA     byte_8F
ROM:E554 18                          CLC
ROM:E555 65 5E                       ADC     word_5E
ROM:E557 85 5E                       STA     word_5E
ROM:E559 90 02                       BCC     GRBRTS
ROM:E55B E6 5F                       INC     word_5E+1
ROM:E55D
ROM:E55D             GRBRTS:                                 ; CODE XREF: DVAR+36↑j
ROM:E55D                                                     ; GARBA2+E0↓j
ROM:E55D A6 5F                       LDX     word_5E+1
ROM:E55F A0 00                       LDY     #0
ROM:E561 60                          RTS
ROM:E561             ; End of function DVAR
ROM:E561
ROM:E562             ; ---------------------------------------------------------------------------
ROM:E562             ; START OF FUNCTION CHUNK FOR GARBA2
ROM:E562
ROM:E562             GRBPAS:                                 ; CODE XREF: GARBA2+52↑j
ROM:E562 A6 8B                       LDX     byte_8B
ROM:E564 F0 F7                       BEQ     GRBRTS
ROM:E566 A5 91                       LDA     byte_91
ROM:E568 29 04                       AND     #4
ROM:E56A 4A                          LSR     A
ROM:E56B A8                          TAY
ROM:E56C 85 91                       STA     byte_91
ROM:E56E B1 8A                       LDA     ($8A),Y
ROM:E570 65 9B                       ADC     byte_9B
ROM:E572 85 96                       STA     byte_96
ROM:E574 A5 9C                       LDA     byte_9C
ROM:E576 69 00                       ADC     #0
ROM:E578 85 97                       STA     byte_97
ROM:E57A A5 6F                       LDA     byte_6F
ROM:E57C A6 70                       LDX     byte_70
ROM:E57E 85 94                       STA     byte_94
ROM:E580 86 95                       STX     byte_95
ROM:E582 20 9A D3                    JSR     BLTUC
ROM:E585 A4 91                       LDY     byte_91
ROM:E587 C8                          INY
ROM:E588 A5 94                       LDA     byte_94
ROM:E58A 91 8A                       STA     ($8A),Y
ROM:E58C AA                          TAX
ROM:E58D E6 95                       INC     byte_95
ROM:E58F A5 95                       LDA     byte_95
ROM:E591 C8                          INY
ROM:E592 91 8A                       STA     ($8A),Y
ROM:E594 4C 88 E4                    JMP     FNDVAR
ROM:E594             ; END OF FUNCTION CHUNK FOR GARBA2
ROM:E597             ; ---------------------------------------------------------------------------
ROM:E597             ; START OF FUNCTION CHUNK FOR FRMEVL
ROM:E597
ROM:E597             CAT:                                    ; CODE XREF: FRMEVL+47↑j
ROM:E597 A5 A1                       LDA     byte_A1         ; THE FOLLOWING ROUTINE CONCATENATES TWO STRINGS.
ROM:E599 48                          PHA
ROM:E59A A5 A0                       LDA     byte_A0
ROM:E59C 48                          PHA
ROM:E59D 20 60 DE                    JSR     EVAL
ROM:E5A0
ROM:E5A0             loc_E5A0:
ROM:E5A0 20 6C DD                    JSR     CHKSTR
ROM:E5A3 68                          PLA
ROM:E5A4 85 AB                       STA     byte_AB
ROM:E5A6 68                          PLA
ROM:E5A7 85 AC                       STA     byte_AC
ROM:E5A9 A0 00                       LDY     #0
ROM:E5AB B1 AB                       LDA     ($AB),Y
ROM:E5AD 18                          CLC
ROM:E5AE 71 A0                       ADC     ($A0),Y
ROM:E5B0 90 05                       BCC     SIZEOK
ROM:E5B2 A2 B0                       LDX     #$B0
ROM:E5B4 4C 12 D4                    JMP     ERROR_0
ROM:E5B7             ; ---------------------------------------------------------------------------
ROM:E5B7
ROM:E5B7             SIZEOK:                                 ; CODE XREF: FRMEVL+835↑j
ROM:E5B7 20 D5 E3                    JSR     STRINI
ROM:E5BA 20 D4 E5                    JSR     MOVINS
ROM:E5BD A5 8C                       LDA     byte_8C
ROM:E5BF A4 8D                       LDY     byte_8D
ROM:E5C1 20 04 E6                    JSR     FRETMP
ROM:E5C4 20 E6 E5                    JSR     MOVDO
ROM:E5C7 A5 AB                       LDA     byte_AB
ROM:E5C9 A4 AC                       LDY     byte_AC
ROM:E5CB 20 04 E6                    JSR     FRETMP
ROM:E5CE 20 2A E4                    JSR     PUTNEW
ROM:E5D1 4C 95 DD                    JMP     TSTOP
ROM:E5D1             ; END OF FUNCTION CHUNK FOR FRMEVL
ROM:E5D4
ROM:E5D4             ; =============== S U B R O U T I N E =======================================
ROM:E5D4
ROM:E5D4
ROM:E5D4             MOVINS:                                 ; CODE XREF: GETSPT+35↑p
ROM:E5D4                                                     ; FRMEVL+83F↑p
ROM:E5D4 A0 00                       LDY     #0
ROM:E5D6 B1 AB                       LDA     ($AB),Y
ROM:E5D8 48                          PHA
ROM:E5D9 C8                          INY
ROM:E5DA B1 AB                       LDA     ($AB),Y
ROM:E5DC AA                          TAX
ROM:E5DD C8                          INY
ROM:E5DE B1 AB                       LDA     ($AB),Y
ROM:E5E0 A8                          TAY
ROM:E5E1 68                          PLA
ROM:E5E1             ; End of function MOVINS
ROM:E5E1
ROM:E5E2
ROM:E5E2             ; =============== S U B R O U T I N E =======================================
ROM:E5E2
ROM:E5E2
ROM:E5E2             MOVSTR:                                 ; CODE XREF: STRLIT+40↑p
ROM:E5E2 86 5E                       STX     word_5E
ROM:E5E4 84 5F                       STY     word_5E+1
ROM:E5E4             ; End of function MOVSTR
ROM:E5E4
ROM:E5E6
ROM:E5E6             ; =============== S U B R O U T I N E =======================================
ROM:E5E6
ROM:E5E6
ROM:E5E6             MOVDO:                                  ; CODE XREF: FRMEVL+849↑p
ROM:E5E6                                                     ; ROM:E680↓p
ROM:E5E6 A8                          TAY
ROM:E5E7 F0 0A                       BEQ     MVDONE
ROM:E5E9 48                          PHA
ROM:E5EA
ROM:E5EA             MOVLP:                                  ; CODE XREF: MOVDO+A↓j
ROM:E5EA 88                          DEY
ROM:E5EB B1 5E                       LDA     ($5E),Y
ROM:E5ED 91 71                       STA     ($71),Y
ROM:E5EF 98                          TYA
ROM:E5F0 D0 F8                       BNE     MOVLP
ROM:E5F2 68                          PLA
ROM:E5F3
ROM:E5F3             MVDONE:                                 ; CODE XREF: MOVDO+1↑j
ROM:E5F3 18                          CLC
ROM:E5F4 65 71                       ADC     byte_71
ROM:E5F6 85 71                       STA     byte_71
ROM:E5F8 90 02                       BCC     MVSTRT
ROM:E5FA E6 72                       INC     byte_72
ROM:E5FC
ROM:E5FC             MVSTRT:                                 ; CODE XREF: MOVDO+12↑j
ROM:E5FC 60                          RTS
ROM:E5FC             ; End of function MOVDO
ROM:E5FC
ROM:E5FD
ROM:E5FD             ; =============== S U B R O U T I N E =======================================
ROM:E5FD
ROM:E5FD
ROM:E5FD             FRESTR:                                 ; CODE XREF: LEN1↓p
ROM:E5FD 20 6C DD                    JSR     CHKSTR
ROM:E5FD             ; End of function FRESTR
ROM:E5FD
ROM:E600
ROM:E600             ; =============== S U B R O U T I N E =======================================
ROM:E600
ROM:E600
ROM:E600             FREFAC:                                 ; CODE XREF: STROUT:STRPRT↑p
ROM:E600                                                     ; ROM:DF83↑p ...
ROM:E600 A5 A0                       LDA     byte_A0
ROM:E602 A4 A1                       LDY     byte_A1
ROM:E602             ; End of function FREFAC
ROM:E602
ROM:E604
ROM:E604             ; =============== S U B R O U T I N E =======================================
ROM:E604
ROM:E604
ROM:E604             FRETMP:                                 ; CODE XREF: ROM:DF90↑p
ROM:E604                                                     ; FRMEVL+846↑p ...
ROM:E604 85 5E                       STA     word_5E
ROM:E606 84 5F                       STY     word_5E+1
ROM:E608 20 35 E6                    JSR     FRETMS
ROM:E60B 08                          PHP
ROM:E60C A0 00                       LDY     #0
ROM:E60E B1 5E                       LDA     ($5E),Y
ROM:E610 48                          PHA
ROM:E611 C8                          INY
ROM:E612 B1 5E                       LDA     ($5E),Y
ROM:E614 AA                          TAX
ROM:E615 C8                          INY
ROM:E616 B1 5E                       LDA     ($5E),Y
ROM:E618 A8                          TAY
ROM:E619 68                          PLA
ROM:E61A 28                          PLP
ROM:E61B D0 13                       BNE     FRETRT
ROM:E61D C4 70                       CPY     byte_70
ROM:E61F D0 0F                       BNE     FRETRT
ROM:E621 E4 6F                       CPX     byte_6F
ROM:E623 D0 0B                       BNE     FRETRT
ROM:E625 48                          PHA
ROM:E626 18                          CLC
ROM:E627 65 6F                       ADC     byte_6F
ROM:E629 85 6F                       STA     byte_6F
ROM:E62B 90 02                       BCC     FREPLA
ROM:E62D E6 70                       INC     byte_70
ROM:E62F
ROM:E62F             FREPLA:                                 ; CODE XREF: FRETMP+27↑j
ROM:E62F 68                          PLA
ROM:E630
ROM:E630             FRETRT:                                 ; CODE XREF: FRETMP+17↑j
ROM:E630                                                     ; FRETMP+1B↑j ...
ROM:E630 86 5E                       STX     word_5E
ROM:E632 84 5F                       STY     word_5E+1
ROM:E634 60                          RTS
ROM:E634             ; End of function FRETMP
ROM:E634
ROM:E635
ROM:E635             ; =============== S U B R O U T I N E =======================================
ROM:E635
ROM:E635
ROM:E635             FRETMS:                                 ; CODE XREF: GETSPT+40↑p
ROM:E635                                                     ; FRETMP+4↑p
ROM:E635 C4 54                       CPY     byte_54
ROM:E637 D0 0C                       BNE     FRERTS
ROM:E639 C5 53                       CMP     byte_53
ROM:E63B D0 08                       BNE     FRERTS
ROM:E63D 85 52                       STA     byte_52
ROM:E63F E9 03                       SBC     #3
ROM:E641 85 53                       STA     byte_53
ROM:E643 A0 00                       LDY     #0
ROM:E645
ROM:E645             FRERTS:                                 ; CODE XREF: FRETMS+2↑j
ROM:E645                                                     ; FRETMS+6↑j
ROM:E645 60                          RTS
ROM:E645             ; End of function FRETMS
ROM:E645
ROM:E646             ; ---------------------------------------------------------------------------
ROM:E646
ROM:E646             CHR:                                    ; DATA XREF: ROM:D0AA↑o
ROM:E646 20 FB E6                    JSR     CONINT
ROM:E649 8A                          TXA
ROM:E64A 48                          PHA
ROM:E64B A9 01                       LDA     #1
ROM:E64D 20 DD E3                    JSR     STRSPA
ROM:E650 68                          PLA
ROM:E651 A0 00                       LDY     #0
ROM:E653 91 9E                       STA     ($9E),Y
ROM:E655 68                          PLA
ROM:E656 68                          PLA
ROM:E657 4C 2A E4                    JMP     PUTNEW
ROM:E65A             ; ---------------------------------------------------------------------------
ROM:E65A
ROM:E65A             LEFT:                                   ; DATA XREF: ROM:D0AC↑o
ROM:E65A 20 B9 E6                    JSR     PREAM
ROM:E65D D1 8C                       CMP     ($8C),Y
ROM:E65F 98                          TYA
ROM:E660
ROM:E660             RLEFT:                                  ; CODE XREF: ROM:E68E↓j
ROM:E660 90 04                       BCC     RLEFT1
ROM:E662 B1 8C                       LDA     ($8C),Y
ROM:E664 AA                          TAX
ROM:E665 98                          TYA
ROM:E666
ROM:E666             RLEFT1:                                 ; CODE XREF: ROM:RLEFT↑j
ROM:E666 48                          PHA
ROM:E667
ROM:E667             RLEFT2:                                 ; CODE XREF: ROM:E6AD↓j
ROM:E667 8A                          TXA
ROM:E668
ROM:E668             RLEFT3:                                 ; CODE XREF: ROM:E6B3↓j
ROM:E668                                                     ; ROM:E6B7↓j
ROM:E668 48                          PHA
ROM:E669 20 DD E3                    JSR     STRSPA
ROM:E66C A5 8C                       LDA     byte_8C
ROM:E66E A4 8D                       LDY     byte_8D
ROM:E670 20 04 E6                    JSR     FRETMP
ROM:E673 68                          PLA
ROM:E674 A8                          TAY
ROM:E675 68                          PLA
ROM:E676 18                          CLC
ROM:E677 65 5E                       ADC     word_5E
ROM:E679 85 5E                       STA     word_5E
ROM:E67B 90 02                       BCC     PULMOR
ROM:E67D E6 5F                       INC     word_5E+1
ROM:E67F
ROM:E67F             PULMOR:                                 ; CODE XREF: ROM:E67B↑j
ROM:E67F 98                          TYA
ROM:E680 20 E6 E5                    JSR     MOVDO
ROM:E683 4C 2A E4                    JMP     PUTNEW
ROM:E686             ; ---------------------------------------------------------------------------
ROM:E686
ROM:E686             RIGHT:                                  ; DATA XREF: ROM:D0AE↑o
ROM:E686 20 B9 E6                    JSR     PREAM
ROM:E689 18                          CLC
ROM:E68A F1 8C                       SBC     ($8C),Y
ROM:E68C 49 FF                       EOR     #$FF
ROM:E68E 4C 60 E6                    JMP     RLEFT
ROM:E691             ; ---------------------------------------------------------------------------
ROM:E691
ROM:E691             MID:                                    ; DATA XREF: ROM:D0B0↑o
ROM:E691 A9 FF                       LDA     #$FF
ROM:E693 85 A1                       STA     byte_A1
ROM:E695 20 B7 00                    JSR     CHRGOT
ROM:E698 C9 29                       CMP     #$29 ; ')'
ROM:E69A F0 06                       BEQ     MID2
ROM:E69C 20 BE DE                    JSR     CHKCOM
ROM:E69F 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:E6A2
ROM:E6A2             MID2:                                   ; CODE XREF: ROM:E69A↑j
ROM:E6A2 20 B9 E6                    JSR     PREAM
ROM:E6A5 CA                          DEX
ROM:E6A6 8A                          TXA
ROM:E6A7 48                          PHA
ROM:E6A8 18                          CLC
ROM:E6A9 A2 00                       LDX     #0
ROM:E6AB F1 8C                       SBC     ($8C),Y
ROM:E6AD B0 B8                       BCS     RLEFT2
ROM:E6AF 49 FF                       EOR     #$FF
ROM:E6B1 C5 A1                       CMP     byte_A1
ROM:E6B3 90 B3                       BCC     RLEFT3
ROM:E6B5 A5 A1                       LDA     byte_A1
ROM:E6B7 B0 AF                       BCS     RLEFT3
ROM:E6B9
ROM:E6B9             ; =============== S U B R O U T I N E =======================================
ROM:E6B9
ROM:E6B9
ROM:E6B9             PREAM:                                  ; CODE XREF: ROM:LEFT↑p
ROM:E6B9                                                     ; ROM:RIGHT↑p ...
ROM:E6B9
ROM:E6B9             ; FUNCTION CHUNK AT ROM:E6F2 SIZE 00000003 BYTES
ROM:E6B9
ROM:E6B9 20 B8 DE                    JSR     CHKCLS
ROM:E6BC 68                          PLA
ROM:E6BD A8                          TAY
ROM:E6BE 68                          PLA
ROM:E6BF 85 91                       STA     byte_91
ROM:E6C1 68                          PLA
ROM:E6C2 68                          PLA
ROM:E6C3 68                          PLA
ROM:E6C4 AA                          TAX
ROM:E6C5 68                          PLA
ROM:E6C6 85 8C                       STA     byte_8C
ROM:E6C8 68                          PLA
ROM:E6C9 85 8D                       STA     byte_8D
ROM:E6CB A5 91                       LDA     byte_91
ROM:E6CD 48                          PHA
ROM:E6CE 98                          TYA
ROM:E6CF 48                          PHA
ROM:E6D0 A0 00                       LDY     #0
ROM:E6D2 8A                          TXA
ROM:E6D3 F0 1D                       BEQ     GOFUC
ROM:E6D5 60                          RTS
ROM:E6D5             ; End of function PREAM
ROM:E6D5
ROM:E6D6             ; ---------------------------------------------------------------------------
ROM:E6D6
ROM:E6D6             LEN:                                    ; DATA XREF: ROM:D0A2↑o
ROM:E6D6 20 DC E6                    JSR     LEN1
ROM:E6D9 4C 01 E3                    JMP     SNGFLT
ROM:E6DC
ROM:E6DC             ; =============== S U B R O U T I N E =======================================
ROM:E6DC
ROM:E6DC
ROM:E6DC             LEN1:                                   ; CODE XREF: ROM:LEN↑p
ROM:E6DC                                                     ; ROM:ASC↓p ...
ROM:E6DC 20 FD E5                    JSR     FRESTR
ROM:E6DF A2 00                       LDX     #0
ROM:E6E1 86 11                       STX     byte_11
ROM:E6E3 A8                          TAY
ROM:E6E4 60                          RTS
ROM:E6E4             ; End of function LEN1
ROM:E6E4
ROM:E6E5             ; ---------------------------------------------------------------------------
ROM:E6E5
ROM:E6E5             ASC:                                    ; DATA XREF: ROM:D0A8↑o
ROM:E6E5 20 DC E6                    JSR     LEN1
ROM:E6E8 F0 08                       BEQ     GOFUC
ROM:E6EA A0 00                       LDY     #0
ROM:E6EC B1 5E                       LDA     ($5E),Y
ROM:E6EE A8                          TAY
ROM:E6EF 4C 01 E3                    JMP     SNGFLT
ROM:E6F2             ; ---------------------------------------------------------------------------
ROM:E6F2             ; START OF FUNCTION CHUNK FOR GETBYT
ROM:E6F2             ;   ADDITIONAL PARENT FUNCTION PREAM
ROM:E6F2             ;   ADDITIONAL PARENT FUNCTION GETADR_50
ROM:E6F2
ROM:E6F2             GOFUC:                                  ; CODE XREF: PREAM+1A↑j
ROM:E6F2                                                     ; ROM:E6E8↑j ...
ROM:E6F2 4C 99 E1                    JMP     FCERR
ROM:E6F2             ; END OF FUNCTION CHUNK FOR GETBYT
ROM:E6F5
ROM:E6F5             ; =============== S U B R O U T I N E =======================================
ROM:E6F5
ROM:E6F5
ROM:E6F5             GTBYTC:                                 ; CODE XREF: ROM:DB17↑p
ROM:E6F5 20 B1 00                    JSR     CHRGET
ROM:E6F5             ; End of function GTBYTC
ROM:E6F5
ROM:E6F8
ROM:E6F8             ; =============== S U B R O U T I N E =======================================
ROM:E6F8
ROM:E6F8             ; get single byte value from keyboard input
ROM:E6F8
ROM:E6F8             GETBYT:                                 ; CODE XREF: ROM:ON_GOTO↑p
ROM:E6F8                                                     ; ROM:DF30↑p ...
ROM:E6F8
ROM:E6F8             ; FUNCTION CHUNK AT ROM:E6F2 SIZE 00000003 BYTES
ROM:E6F8
ROM:E6F8 20 67 DD                    JSR     FRMNUM
ROM:E6FB
ROM:E6FB             CONINT:                                 ; CODE XREF: ROM:do_PDL↑p
ROM:E6FB                                                     ; ROM:CHR↑p ...
ROM:E6FB 20 08 E1                    JSR     POSINT
ROM:E6FE A6 A0                       LDX     byte_A0
ROM:E700 D0 F0                       BNE     GOFUC
ROM:E702 A6 A1                       LDX     byte_A1
ROM:E704 4C B7 00                    JMP     CHRGOT
ROM:E704             ; End of function GETBYT
ROM:E704
ROM:E707             ; ---------------------------------------------------------------------------
ROM:E707
ROM:E707             VAL:                                    ; DATA XREF: ROM:D0A6↑o
ROM:E707 20 DC E6                    JSR     LEN1
ROM:E70A D0 03                       BNE     loc_E70F
ROM:E70C 4C 4E E8                    JMP     ZEROFC
ROM:E70F             ; ---------------------------------------------------------------------------
ROM:E70F
ROM:E70F             loc_E70F:                               ; CODE XREF: ROM:E70A↑j
ROM:E70F A6 B8                       LDX     byte_B8
ROM:E711 A4 B9                       LDY     byte_B9
ROM:E713 86 AD                       STX     byte_AD
ROM:E715 84 AE                       STY     byte_AE
ROM:E717 A6 5E                       LDX     word_5E
ROM:E719 86 B8                       STX     byte_B8
ROM:E71B 18                          CLC
ROM:E71C 65 5E                       ADC     word_5E
ROM:E71E 85 60                       STA     byte_60
ROM:E720 A6 5F                       LDX     word_5E+1
ROM:E722 86 B9                       STX     byte_B9
ROM:E724 90 01                       BCC     VAL2
ROM:E726 E8                          INX
ROM:E727
ROM:E727             VAL2:                                   ; CODE XREF: ROM:E724↑j
ROM:E727 86 61                       STX     byte_61
ROM:E729 A0 00                       LDY     #0
ROM:E72B B1 60                       LDA     ($60),Y
ROM:E72D 48                          PHA
ROM:E72E A9 00                       LDA     #0
ROM:E730 91 60                       STA     ($60),Y
ROM:E732 20 B7 00                    JSR     CHRGOT
ROM:E735 20 4A EC                    JSR     FIN
ROM:E738 68                          PLA
ROM:E739 A0 00                       LDY     #0
ROM:E73B 91 60                       STA     ($60),Y
ROM:E73D
ROM:E73D             ; =============== S U B R O U T I N E =======================================
ROM:E73D
ROM:E73D
ROM:E73D             ST2TXT:                                 ; CODE XREF: INPCO1+6F↑p
ROM:E73D                                                     ; sub_DE81+C↑j
ROM:E73D A6 AD                       LDX     byte_AD
ROM:E73F A4 AE                       LDY     byte_AE
ROM:E741 86 B8                       STX     byte_B8
ROM:E743 84 B9                       STY     byte_B9
ROM:E745 60                          RTS
ROM:E745             ; End of function ST2TXT
ROM:E745
ROM:E746
ROM:E746             ; =============== S U B R O U T I N E =======================================
ROM:E746
ROM:E746             ; PEEK, POKE, AND FNWAIT.
ROM:E746
ROM:E746             GETNUM_0:                               ; CODE XREF: ROM:POKE↓p
ROM:E746                                                     ; ROM:FNWAIT↓p
ROM:E746 20 67 DD                    JSR     FRMNUM
ROM:E749 20 52 E7                    JSR     GETADR_50       ; evaluate 2 byte address value => $50,$51
ROM:E74C
ROM:E74C             COMBYT:                                 ; CODE XREF: ROM:E790↓p
ROM:E74C 20 BE DE                    JSR     CHKCOM
ROM:E74F 4C F8 E6                    JMP     GETBYT          ; get single byte value from keyboard input
ROM:E74F             ; End of function GETNUM_0
ROM:E74F
ROM:E752
ROM:E752             ; =============== S U B R O U T I N E =======================================
ROM:E752
ROM:E752             ; evaluate 2 byte address value => $50,$51
ROM:E752
ROM:E752             GETADR_50:                              ; CODE XREF: GETNUM_0+3↑p
ROM:E752                                                     ; ROM:E76A↓p ...
ROM:E752
ROM:E752             ; FUNCTION CHUNK AT ROM:E6F2 SIZE 00000003 BYTES
ROM:E752
ROM:E752 A5 9D                       LDA     byte_9D
ROM:E754 C9 91                       CMP     #$91
ROM:E756 B0 9A                       BCS     GOFUC
ROM:E758 20 F2 EB                    JSR     QINT
ROM:E75B A5 A0                       LDA     byte_A0
ROM:E75D A4 A1                       LDY     byte_A1
ROM:E75F 85 51                       STA     byte_51
ROM:E761 84 50                       STY     byte_50
ROM:E763 60                          RTS
ROM:E763             ; End of function GETADR_50
ROM:E763
ROM:E764             ; ---------------------------------------------------------------------------
ROM:E764
ROM:E764             PEEK:                                   ; DATA XREF: ROM:D0A0↑o
ROM:E764 A5 50                       LDA     byte_50
ROM:E766 48                          PHA
ROM:E767 A5 51                       LDA     byte_51         ; Save existing values @ $50,$51
ROM:E769 48                          PHA
ROM:E76A 20 52 E7                    JSR     GETADR_50       ; evaluate 2 byte address value => $50,$51
ROM:E76D A0 00                       LDY     #0
ROM:E76F B1 50                       LDA     ($50),Y
ROM:E771 A8                          TAY
ROM:E772 68                          PLA
ROM:E773 85 51                       STA     byte_51         ; restore old values to $50,$51
ROM:E775 68                          PLA
ROM:E776 85 50                       STA     byte_50
ROM:E778 4C 01 E3                    JMP     SNGFLT
ROM:E77B             ; ---------------------------------------------------------------------------
ROM:E77B
ROM:E77B             POKE:                                   ; DATA XREF: ROM:D072↑t
ROM:E77B 20 46 E7                    JSR     GETNUM_0        ; PEEK, POKE, AND FNWAIT.
ROM:E77E 8A                          TXA
ROM:E77F A0 00                       LDY     #0
ROM:E781 91 50                       STA     ($50),Y
ROM:E783 60                          RTS
ROM:E784             ; ---------------------------------------------------------------------------
ROM:E784
ROM:E784             FNWAIT:                                 ; DATA XREF: ROM:D06A↑t
ROM:E784 20 46 E7                    JSR     GETNUM_0        ; PEEK, POKE, AND FNWAIT.
ROM:E787 86 85                       STX     byte_85
ROM:E789 A2 00                       LDX     #0
ROM:E78B 20 B7 00                    JSR     CHRGOT
ROM:E78E F0 03                       BEQ     ZSTORD0
ROM:E790 20 4C E7                    JSR     COMBYT
ROM:E793
ROM:E793             ZSTORD0:                                ; CODE XREF: ROM:E78E↑j
ROM:E793 86 86                       STX     byte_86
ROM:E795 A0 00                       LDY     #0
ROM:E797
ROM:E797             WAITER:                                 ; CODE XREF: ROM:E79D↓j
ROM:E797 B1 50                       LDA     ($50),Y
ROM:E799 45 86                       EOR     byte_86
ROM:E79B 25 85                       AND     byte_85
ROM:E79D F0 F8                       BEQ     WAITER
ROM:E79F             ; START OF FUNCTION CHUNK FOR FADDC
ROM:E79F
ROM:E79F             ZERRTS:                                 ; CODE XREF: FADDC+1↓j
ROM:E79F 60                          RTS
ROM:E79F             ; END OF FUNCTION CHUNK FOR FADDC
ROM:E7A0
ROM:E7A0             ; =============== S U B R O U T I N E =======================================
ROM:E7A0
ROM:E7A0             ; FLOATING POINT ADDITION AND SUBTRACTION.
ROM:E7A0
ROM:E7A0             FADDH:                                  ; CODE XREF: FOUT:loc_ED86↓p
ROM:E7A0                                                     ; SIN+25↓p
ROM:E7A0
ROM:E7A0             ; FUNCTION CHUNK AT ROM:EB53 SIZE 00000002 BYTES
ROM:E7A0
ROM:E7A0 A9 64                       LDA     #$64 ; 'd'
ROM:E7A2 A0 EE                       LDY     #$EE
ROM:E7A4 4C BE E7                    JMP     FADD
ROM:E7A7             ; ---------------------------------------------------------------------------
ROM:E7A7
ROM:E7A7             FSUB:                                   ; CODE XREF: ROM:E966↓p
ROM:E7A7                                                     ; SIN+1D↓p ...
ROM:E7A7 20 E3 E9                    JSR     CONUPK
ROM:E7AA
ROM:E7AA             FSUBT:                                  ; CODE XREF: sub_A623+3↑j
ROM:E7AA                                                     ; EXP+3D↓p ...
ROM:E7AA A5 A2                       LDA     byte_A2
ROM:E7AC 49 FF                       EOR     #$FF
ROM:E7AE 85 A2                       STA     byte_A2
ROM:E7B0 45 AA                       EOR     byte_AA
ROM:E7B2 85 AB                       STA     byte_AB
ROM:E7B4 A5 9D                       LDA     byte_9D
ROM:E7B6 4C C1 E7                    JMP     FADDT
ROM:E7B9             ; ---------------------------------------------------------------------------
ROM:E7B9
ROM:E7B9             FADD5:                                  ; CODE XREF: FADDC+22↓j
ROM:E7B9 20 F0 E8                    JSR     SHIFTR
ROM:E7BC 90 3C                       BCC     FADD4
ROM:E7BE
ROM:E7BE             FADD:                                   ; CODE XREF: GETFOR+2D↑p
ROM:E7BE                                                     ; FADDH+4↑j ...
ROM:E7BE 20 E3 E9                    JSR     CONUPK
ROM:E7C1
ROM:E7C1             FADDT:                                  ; CODE XREF: sub_A61D+3↑j
ROM:E7C1                                                     ; FADDH+16↑j ...
ROM:E7C1 D0 03                       BNE     loc_E7C6
ROM:E7C3 4C 53 EB                    JMP     loc_EB53
ROM:E7C6             ; ---------------------------------------------------------------------------
ROM:E7C6
ROM:E7C6             loc_E7C6:                               ; CODE XREF: FADDH:FADDT↑j
ROM:E7C6 A6 AC                       LDX     byte_AC
ROM:E7C8 86 92                       STX     byte_92
ROM:E7CA A2 A5                       LDX     #$A5
ROM:E7CC A5 A5                       LDA     byte_A5
ROM:E7CC             ; End of function FADDH
ROM:E7CC
ROM:E7CE
ROM:E7CE             ; =============== S U B R O U T I N E =======================================
ROM:E7CE
ROM:E7CE
ROM:E7CE             FADDC:                                  ; CODE XREF: MUL10+F↓p
ROM:E7CE
ROM:E7CE             ; FUNCTION CHUNK AT ROM:E79F SIZE 00000001 BYTES
ROM:E7CE             ; FUNCTION CHUNK AT ROM:E8D5 SIZE 00000005 BYTES
ROM:E7CE
ROM:E7CE A8                          TAY
ROM:E7CF F0 CE                       BEQ     ZERRTS
ROM:E7D1 38                          SEC
ROM:E7D2 E5 9D                       SBC     byte_9D
ROM:E7D4 F0 24                       BEQ     FADD4
ROM:E7D6 90 12                       BCC     loc_E7EA
ROM:E7D8 84 9D                       STY     byte_9D
ROM:E7DA A4 AA                       LDY     byte_AA
ROM:E7DC 84 A2                       STY     byte_A2
ROM:E7DE 49 FF                       EOR     #$FF
ROM:E7E0 69 00                       ADC     #0
ROM:E7E2 A0 00                       LDY     #0
ROM:E7E4 84 92                       STY     byte_92
ROM:E7E6 A2 9D                       LDX     #$9D
ROM:E7E8 D0 04                       BNE     loc_E7EE
ROM:E7EA
ROM:E7EA             loc_E7EA:                               ; CODE XREF: FADDC+8↑j
ROM:E7EA A0 00                       LDY     #0
ROM:E7EC 84 AC                       STY     byte_AC
ROM:E7EE
ROM:E7EE             loc_E7EE:                               ; CODE XREF: FADDC+1A↑j
ROM:E7EE C9 F9                       CMP     #$F9
ROM:E7F0 30 C7                       BMI     FADD5
ROM:E7F2 A8                          TAY
ROM:E7F3 A5 AC                       LDA     byte_AC
ROM:E7F5 56 01                       LSR     1,X
ROM:E7F7 20 07 E9                    JSR     sub_E907
ROM:E7FA
ROM:E7FA             FADD4:                                  ; CODE XREF: FADDH+1C↑j
ROM:E7FA                                                     ; FADDC+6↑j
ROM:E7FA 24 AB                       BIT     byte_AB
ROM:E7FC 10 57                       BPL     loc_E855
ROM:E7FE A0 9D                       LDY     #$9D
ROM:E800 E0 A5                       CPX     #$A5
ROM:E802 F0 02                       BEQ     loc_E806
ROM:E804 A0 A5                       LDY     #$A5
ROM:E806
ROM:E806             loc_E806:                               ; CODE XREF: FADDC+34↑j
ROM:E806 38                          SEC
ROM:E807 49 FF                       EOR     #$FF
ROM:E809 65 92                       ADC     byte_92
ROM:E80B 85 AC                       STA     byte_AC
ROM:E80D B9 04 00                    LDA     4,Y
ROM:E810 F5 04                       SBC     4,X
ROM:E812 85 A1                       STA     byte_A1
ROM:E814 B9 03 00                    LDA     3,Y
ROM:E817 F5 03                       SBC     3,X
ROM:E819 85 A0                       STA     byte_A0
ROM:E81B B9 02 00                    LDA     2,Y
ROM:E81E F5 02                       SBC     2,X
ROM:E820 85 9F                       STA     byte_9F
ROM:E822 B9 01 00                    LDA     1,Y
ROM:E825 F5 01                       SBC     1,X
ROM:E827 85 9E                       STA     byte_9E
ROM:E829
ROM:E829             FADFLT:                                 ; CODE XREF: FLOATC+C↓j
ROM:E829                                                     ; QINT+4B↓j
ROM:E829 B0 03                       BCS     NORMAL_0
ROM:E82B 20 9E E8                    JSR     sub_E89E
ROM:E82E
ROM:E82E             NORMAL_0:                               ; CODE XREF: FADDC:FADFLT↑j
ROM:E82E                                                     ; sub_EA55+A1↓j ...
ROM:E82E A0 00                       LDY     #0
ROM:E830 98                          TYA
ROM:E831 18                          CLC
ROM:E832
ROM:E832             loc_E832:                               ; CODE XREF: FADDC+7E↓j
ROM:E832 A6 9E                       LDX     byte_9E
ROM:E834 D0 4A                       BNE     loc_E880
ROM:E836 A6 9F                       LDX     byte_9F
ROM:E838 86 9E                       STX     byte_9E
ROM:E83A A6 A0                       LDX     byte_A0
ROM:E83C 86 9F                       STX     byte_9F
ROM:E83E A6 A1                       LDX     byte_A1
ROM:E840 86 A0                       STX     byte_A0
ROM:E842 A6 AC                       LDX     byte_AC
ROM:E844 86 A1                       STX     byte_A1
ROM:E846 84 AC                       STY     byte_AC
ROM:E848 69 08                       ADC     #8
ROM:E84A C9 20                       CMP     #$20 ; ' '
ROM:E84C D0 E4                       BNE     loc_E832
ROM:E84E
ROM:E84E             ZEROFC:                                 ; CODE XREF: ROM:E70C↑j
ROM:E84E                                                     ; FADDC+B7↓j ...
ROM:E84E A9 00                       LDA     #0
ROM:E850
ROM:E850             ZEROF1:                                 ; CODE XREF: ROM:EE9D↓j
ROM:E850 85 9D                       STA     byte_9D
ROM:E852
ROM:E852             loc_E852:                               ; CODE XREF: ROM:EA23↓j
ROM:E852 85 A2                       STA     byte_A2
ROM:E854 60                          RTS
ROM:E855             ; ---------------------------------------------------------------------------
ROM:E855
ROM:E855             loc_E855:                               ; CODE XREF: FADDC+2E↑j
ROM:E855 65 92                       ADC     byte_92
ROM:E857 85 AC                       STA     byte_AC
ROM:E859 A5 A1                       LDA     byte_A1
ROM:E85B 65 A9                       ADC     byte_A9
ROM:E85D 85 A1                       STA     byte_A1
ROM:E85F A5 A0                       LDA     byte_A0
ROM:E861 65 A8                       ADC     byte_A8
ROM:E863 85 A0                       STA     byte_A0
ROM:E865 A5 9F                       LDA     byte_9F
ROM:E867 65 A7                       ADC     byte_A7
ROM:E869 85 9F                       STA     byte_9F
ROM:E86B A5 9E                       LDA     byte_9E
ROM:E86D 65 A6                       ADC     byte_A6
ROM:E86F 85 9E                       STA     byte_9E
ROM:E871 4C 8D E8                    JMP     loc_E88D
ROM:E874             ; ---------------------------------------------------------------------------
ROM:E874
ROM:E874             loc_E874:                               ; CODE XREF: FADDC:loc_E880↓j
ROM:E874 69 01                       ADC     #1
ROM:E876 06 AC                       ASL     byte_AC
ROM:E878 26 A1                       ROL     byte_A1
ROM:E87A 26 A0                       ROL     byte_A0
ROM:E87C 26 9F                       ROL     byte_9F
ROM:E87E 26 9E                       ROL     byte_9E
ROM:E880
ROM:E880             loc_E880:                               ; CODE XREF: FADDC+66↑j
ROM:E880 10 F2                       BPL     loc_E874
ROM:E882 38                          SEC
ROM:E883 E5 9D                       SBC     byte_9D
ROM:E885 B0 C7                       BCS     ZEROFC
ROM:E887 49 FF                       EOR     #$FF
ROM:E889 69 01                       ADC     #1
ROM:E88B 85 9D                       STA     byte_9D
ROM:E88D
ROM:E88D             loc_E88D:                               ; CODE XREF: FADDC+A3↑j
ROM:E88D 90 0E                       BCC     locret_E89D
ROM:E88F
ROM:E88F             RNDSHF:                                 ; CODE XREF: ROUND+D↓j
ROM:E88F E6 9D                       INC     byte_9D
ROM:E891 F0 42                       BEQ     OVERR
ROM:E893 66 9E                       ROR     byte_9E
ROM:E895 66 9F                       ROR     byte_9F
ROM:E897 66 A0                       ROR     byte_A0
ROM:E899 66 A1                       ROR     byte_A1
ROM:E89B 66 AC                       ROR     byte_AC
ROM:E89D
ROM:E89D             locret_E89D:                            ; CODE XREF: FADDC:loc_E88D↑j
ROM:E89D 60                          RTS
ROM:E89D             ; End of function FADDC
ROM:E89D
ROM:E89E
ROM:E89E             ; =============== S U B R O U T I N E =======================================
ROM:E89E
ROM:E89E
ROM:E89E             sub_E89E:                               ; CODE XREF: FADDC+5D↑p
ROM:E89E A5 A2                       LDA     byte_A2
ROM:E8A0 49 FF                       EOR     #$FF
ROM:E8A2 85 A2                       STA     byte_A2
ROM:E8A2             ; End of function sub_E89E
ROM:E8A2
ROM:E8A4
ROM:E8A4             ; =============== S U B R O U T I N E =======================================
ROM:E8A4
ROM:E8A4
ROM:E8A4             sub_E8A4:                               ; CODE XREF: QINT+10↓p
ROM:E8A4 A5 9E                       LDA     byte_9E
ROM:E8A6 49 FF                       EOR     #$FF
ROM:E8A8 85 9E                       STA     byte_9E
ROM:E8AA A5 9F                       LDA     byte_9F
ROM:E8AC 49 FF                       EOR     #$FF
ROM:E8AE 85 9F                       STA     byte_9F
ROM:E8B0 A5 A0                       LDA     byte_A0
ROM:E8B2 49 FF                       EOR     #$FF
ROM:E8B4 85 A0                       STA     byte_A0
ROM:E8B6 A5 A1                       LDA     byte_A1
ROM:E8B8 49 FF                       EOR     #$FF
ROM:E8BA 85 A1                       STA     byte_A1
ROM:E8BC A5 AC                       LDA     byte_AC
ROM:E8BE 49 FF                       EOR     #$FF
ROM:E8C0 85 AC                       STA     byte_AC
ROM:E8C2 E6 AC                       INC     byte_AC
ROM:E8C4 D0 0E                       BNE     locret_E8D4
ROM:E8C4             ; End of function sub_E8A4
ROM:E8C4
ROM:E8C6
ROM:E8C6             ; =============== S U B R O U T I N E =======================================
ROM:E8C6
ROM:E8C6
ROM:E8C6             sub_E8C6:                               ; CODE XREF: ROUND:INCRND↓p
ROM:E8C6 E6 A1                       INC     byte_A1
ROM:E8C8 D0 0A                       BNE     locret_E8D4
ROM:E8CA E6 A0                       INC     byte_A0
ROM:E8CC D0 06                       BNE     locret_E8D4
ROM:E8CE E6 9F                       INC     byte_9F
ROM:E8D0 D0 02                       BNE     locret_E8D4
ROM:E8D2 E6 9E                       INC     byte_9E
ROM:E8D4
ROM:E8D4             locret_E8D4:                            ; CODE XREF: sub_E8A4+20↑j
ROM:E8D4                                                     ; sub_E8C6+2↑j ...
ROM:E8D4 60                          RTS
ROM:E8D4             ; End of function sub_E8C6
ROM:E8D4
ROM:E8D5             ; ---------------------------------------------------------------------------
ROM:E8D5             ; START OF FUNCTION CHUNK FOR FADDC
ROM:E8D5             ;   ADDITIONAL PARENT FUNCTION MUL10
ROM:E8D5             ;   ADDITIONAL PARENT FUNCTION FIN
ROM:E8D5
ROM:E8D5             OVERR:                                  ; CODE XREF: FADDC+C3↑j
ROM:E8D5                                                     ; MUL10:GOOVER↓j ...
ROM:E8D5 A2 45                       LDX     #$45 ; 'E'
ROM:E8D7 4C 12 D4                    JMP     ERROR_0
ROM:E8D7             ; END OF FUNCTION CHUNK FOR FADDC
ROM:E8DA             ; ---------------------------------------------------------------------------
ROM:E8DA             ; START OF FUNCTION CHUNK FOR MLTPLY
ROM:E8DA
ROM:E8DA             loc_E8DA:                               ; CODE XREF: MLTPLY+2↓j
ROM:E8DA A2 61                       LDX     #$61 ; 'a'
ROM:E8DA             ; END OF FUNCTION CHUNK FOR MLTPLY
ROM:E8DC             ; START OF FUNCTION CHUNK FOR SHIFTR
ROM:E8DC
ROM:E8DC             loc_E8DC:                               ; CODE XREF: SHIFTR+2↓j
ROM:E8DC                                                     ; SHIFTR+4↓j
ROM:E8DC B4 04                       LDY     4,X
ROM:E8DE 84 AC                       STY     byte_AC
ROM:E8E0 B4 03                       LDY     3,X
ROM:E8E2 94 04                       STY     4,X
ROM:E8E4 B4 02                       LDY     2,X
ROM:E8E6 94 03                       STY     3,X
ROM:E8E8 B4 01                       LDY     1,X
ROM:E8EA 94 02                       STY     2,X
ROM:E8EC A4 A4                       LDY     byte_A4
ROM:E8EE 94 01                       STY     1,X
ROM:E8EE             ; END OF FUNCTION CHUNK FOR SHIFTR
ROM:E8F0
ROM:E8F0             ; =============== S U B R O U T I N E =======================================
ROM:E8F0
ROM:E8F0
ROM:E8F0             SHIFTR:                                 ; CODE XREF: FADDH:FADD5↑p
ROM:E8F0                                                     ; QINT+1A↓p
ROM:E8F0
ROM:E8F0             ; FUNCTION CHUNK AT ROM:E8DC SIZE 00000014 BYTES
ROM:E8F0
ROM:E8F0 69 08                       ADC     #8
ROM:E8F2 30 E8                       BMI     loc_E8DC
ROM:E8F4 F0 E6                       BEQ     loc_E8DC
ROM:E8F6 E9 08                       SBC     #8
ROM:E8F8 A8                          TAY
ROM:E8F9 A5 AC                       LDA     byte_AC
ROM:E8FB B0 14                       BCS     loc_E911
ROM:E8FD
ROM:E8FD             loc_E8FD:                               ; CODE XREF: sub_E907+8↓j
ROM:E8FD 16 01                       ASL     1,X
ROM:E8FF 90 02                       BCC     loc_E903
ROM:E901 F6 01                       INC     1,X
ROM:E903
ROM:E903             loc_E903:                               ; CODE XREF: SHIFTR+F↑j
ROM:E903 76 01                       ROR     1,X
ROM:E905 76 01                       ROR     1,X
ROM:E905             ; End of function SHIFTR
ROM:E905
ROM:E907
ROM:E907             ; =============== S U B R O U T I N E =======================================
ROM:E907
ROM:E907
ROM:E907             sub_E907:                               ; CODE XREF: FADDC+29↑p
ROM:E907                                                     ; QINT+2B↓p
ROM:E907 76 02                       ROR     2,X
ROM:E909 76 03                       ROR     3,X
ROM:E90B 76 04                       ROR     4,X
ROM:E90D 6A                          ROR     A
ROM:E90E C8                          INY
ROM:E90F D0 EC                       BNE     loc_E8FD
ROM:E911
ROM:E911             loc_E911:                               ; CODE XREF: SHIFTR+B↑j
ROM:E911 18                          CLC
ROM:E912 60                          RTS
ROM:E912             ; End of function sub_E907
ROM:E912
ROM:E912             ; ---------------------------------------------------------------------------
ROM:E913 81          FONE:           .BYTE $81               ; NATURAL LOG FUNCTION.
ROM:E914 00                          .BYTE   0
ROM:E915 00                          .BYTE   0
ROM:E916 00                          .BYTE   0
ROM:E917 00                          .BYTE   0
ROM:E918 03                          .BYTE   3
ROM:E919 7F                          .BYTE $7F ; 
ROM:E91A 5E                          .BYTE $5E ; ^
ROM:E91B 56                          .BYTE $56 ; V
ROM:E91C CB                          .BYTE $CB
ROM:E91D 79                          .BYTE $79 ; y
ROM:E91E 80                          .BYTE $80
ROM:E91F 13                          .BYTE $13
ROM:E920 9B                          .BYTE $9B
ROM:E921 0B                          .BYTE  $B
ROM:E922 64                          .BYTE $64 ; d
ROM:E923 80                          .BYTE $80
ROM:E924 76                          .BYTE $76 ; v
ROM:E925 38                          .BYTE $38 ; 8
ROM:E926 93                          .BYTE $93
ROM:E927 16                          .BYTE $16
ROM:E928 82                          .BYTE $82
ROM:E929 38                          .BYTE $38 ; 8
ROM:E92A AA                          .BYTE $AA
ROM:E92B 3B                          .BYTE $3B ; ;
ROM:E92C 20                          .BYTE $20
ROM:E92D 80                          .BYTE $80
ROM:E92E 35                          .BYTE $35 ; 5
ROM:E92F 04                          .BYTE   4
ROM:E930 F3                          .BYTE $F3
ROM:E931 34                          .BYTE $34 ; 4
ROM:E932 81                          .BYTE $81
ROM:E933 35                          .BYTE $35 ; 5
ROM:E934 04                          .BYTE   4
ROM:E935 F3                          .BYTE $F3
ROM:E936 34                          .BYTE $34 ; 4
ROM:E937 80                          .BYTE $80
ROM:E938 80                          .BYTE $80
ROM:E939 00                          .BYTE   0
ROM:E93A 00                          .BYTE   0
ROM:E93B 00                          .BYTE   0
ROM:E93C 80                          .BYTE $80
ROM:E93D 31                          .BYTE $31 ; 1
ROM:E93E 72                          .BYTE $72 ; r
ROM:E93F 17                          .BYTE $17
ROM:E940 F8                          .BYTE $F8
ROM:E941             ; ---------------------------------------------------------------------------
ROM:E941
ROM:E941             LOG:                                    ; CODE XREF: ROM:EEBF↓p
ROM:E941                                                     ; DATA XREF: ROM:D094↑o
ROM:E941 20 82 EB                    JSR     SIGN
ROM:E944 F0 02                       BEQ     LOGERR
ROM:E946 10 03                       BPL     LOG1
ROM:E948
ROM:E948             LOGERR:                                 ; CODE XREF: ROM:E944↑j
ROM:E948 4C 99 E1                    JMP     FCERR
ROM:E94B             ; ---------------------------------------------------------------------------
ROM:E94B
ROM:E94B             LOG1:                                   ; CODE XREF: ROM:E946↑j
ROM:E94B A5 9D                       LDA     byte_9D
ROM:E94D E9 7F                       SBC     #$7F
ROM:E94F 48                          PHA
ROM:E950 A9 80                       LDA     #$80
ROM:E952 85 9D                       STA     byte_9D
ROM:E954 A9 2D                       LDA     #$2D ; '-'
ROM:E956 A0 E9                       LDY     #$E9
ROM:E958 20 BE E7                    JSR     FADD
ROM:E95B A9 32                       LDA     #$32 ; '2'
ROM:E95D A0 E9                       LDY     #$E9
ROM:E95F 20 66 EA                    JSR     FDIV
ROM:E962 A9 13                       LDA     #$13
ROM:E964 A0 E9                       LDY     #$E9
ROM:E966 20 A7 E7                    JSR     FSUB
ROM:E969 A9 18                       LDA     #$18
ROM:E96B A0 E9                       LDY     #$E9
ROM:E96D 20 5C EF                    JSR     POLYX
ROM:E970 A9 37                       LDA     #$37 ; '7'
ROM:E972 A0 E9                       LDY     #$E9
ROM:E974 20 BE E7                    JSR     FADD
ROM:E977 68                          PLA
ROM:E978 20 D5 EC                    JSR     FINLOG
ROM:E97B A9 3C                       LDA     #$3C ; '<'
ROM:E97D A0 E9                       LDY     #$E9
ROM:E97F
ROM:E97F             ; =============== S U B R O U T I N E =======================================
ROM:E97F
ROM:E97F
ROM:E97F             FMULT:                                  ; CODE XREF: sub_99C8+C↑p
ROM:E97F                                                     ; sub_9AB9+A↑p ...
ROM:E97F 20 E3 E9                    JSR     CONUPK
ROM:E982
ROM:E982             FMULTT:                                 ; DATA XREF: ROM:D0B9↑t
ROM:E982 D0 03                       BNE     loc_E987
ROM:E984 4C E2 E9                    JMP     locret_E9E2
ROM:E987             ; ---------------------------------------------------------------------------
ROM:E987
ROM:E987             loc_E987:                               ; CODE XREF: FMULT:FMULTT↑j
ROM:E987 20 0E EA                    JSR     MULDIV
ROM:E98A A9 00                       LDA     #0
ROM:E98C 85 62                       STA     byte_62
ROM:E98E 85 63                       STA     byte_63
ROM:E990 85 64                       STA     byte_64
ROM:E992 85 65                       STA     byte_65
ROM:E994 A5 AC                       LDA     byte_AC
ROM:E996 20 B0 E9                    JSR     MLTPLY
ROM:E999 A5 A1                       LDA     byte_A1
ROM:E99B 20 B0 E9                    JSR     MLTPLY
ROM:E99E A5 A0                       LDA     byte_A0
ROM:E9A0 20 B0 E9                    JSR     MLTPLY
ROM:E9A3 A5 9F                       LDA     byte_9F
ROM:E9A5 20 B0 E9                    JSR     MLTPLY
ROM:E9A8 A5 9E                       LDA     byte_9E
ROM:E9AA 20 B5 E9                    JSR     MULTPL1
ROM:E9AD 4C E6 EA                    JMP     MOVFR
ROM:E9AD             ; End of function FMULT
ROM:E9AD
ROM:E9B0
ROM:E9B0             ; =============== S U B R O U T I N E =======================================
ROM:E9B0
ROM:E9B0
ROM:E9B0             MLTPLY:                                 ; CODE XREF: FMULT+17↑p
ROM:E9B0                                                     ; FMULT+1C↑p ...
ROM:E9B0
ROM:E9B0             ; FUNCTION CHUNK AT ROM:E8DA SIZE 00000002 BYTES
ROM:E9B0
ROM:E9B0 D0 03                       BNE     MULTPL1
ROM:E9B2 4C DA E8                    JMP     loc_E8DA
ROM:E9B2             ; End of function MLTPLY
ROM:E9B2
ROM:E9B5
ROM:E9B5             ; =============== S U B R O U T I N E =======================================
ROM:E9B5
ROM:E9B5
ROM:E9B5             MULTPL1:                                ; CODE XREF: FMULT+2B↑p
ROM:E9B5                                                     ; MLTPLY↑j
ROM:E9B5 4A                          LSR     A
ROM:E9B6 09 80                       ORA     #$80
ROM:E9B8
ROM:E9B8             loc_E9B8:                               ; CODE XREF: MULTPL1+2B↓j
ROM:E9B8 A8                          TAY
ROM:E9B9 90 19                       BCC     loc_E9D4
ROM:E9BB 18                          CLC
ROM:E9BC A5 65                       LDA     byte_65
ROM:E9BE 65 A9                       ADC     byte_A9
ROM:E9C0 85 65                       STA     byte_65
ROM:E9C2 A5 64                       LDA     byte_64
ROM:E9C4 65 A8                       ADC     byte_A8
ROM:E9C6 85 64                       STA     byte_64
ROM:E9C8 A5 63                       LDA     byte_63
ROM:E9CA 65 A7                       ADC     byte_A7
ROM:E9CC 85 63                       STA     byte_63
ROM:E9CE A5 62                       LDA     byte_62
ROM:E9D0 65 A6                       ADC     byte_A6
ROM:E9D2 85 62                       STA     byte_62
ROM:E9D4
ROM:E9D4             loc_E9D4:                               ; CODE XREF: MULTPL1+4↑j
ROM:E9D4 66 62                       ROR     byte_62
ROM:E9D6 66 63                       ROR     byte_63
ROM:E9D8 66 64                       ROR     byte_64
ROM:E9DA 66 65                       ROR     byte_65
ROM:E9DC 66 AC                       ROR     byte_AC
ROM:E9DE 98                          TYA
ROM:E9DF 4A                          LSR     A
ROM:E9E0 D0 D6                       BNE     loc_E9B8
ROM:E9E2
ROM:E9E2             locret_E9E2:                            ; CODE XREF: FMULT+5↑j
ROM:E9E2 60                          RTS
ROM:E9E2             ; End of function MULTPL1
ROM:E9E2
ROM:E9E3
ROM:E9E3             ; =============== S U B R O U T I N E =======================================
ROM:E9E3
ROM:E9E3
ROM:E9E3             CONUPK:                                 ; CODE XREF: sub_A61D↑p
ROM:E9E3                                                     ; sub_A623↑p ...
ROM:E9E3 85 5E                       STA     word_5E
ROM:E9E5 84 5F                       STY     word_5E+1
ROM:E9E7 A0 04                       LDY     #4
ROM:E9E9 B1 5E                       LDA     ($5E),Y
ROM:E9EB 85 A9                       STA     byte_A9
ROM:E9ED 88                          DEY
ROM:E9EE B1 5E                       LDA     ($5E),Y
ROM:E9F0 85 A8                       STA     byte_A8
ROM:E9F2 88                          DEY
ROM:E9F3 B1 5E                       LDA     ($5E),Y
ROM:E9F5 85 A7                       STA     byte_A7
ROM:E9F7 88                          DEY
ROM:E9F8 B1 5E                       LDA     ($5E),Y
ROM:E9FA 85 AA                       STA     byte_AA
ROM:E9FC 45 A2                       EOR     byte_A2
ROM:E9FE 85 AB                       STA     byte_AB
ROM:EA00 A5 AA                       LDA     byte_AA
ROM:EA02 09 80                       ORA     #$80
ROM:EA04 85 A6                       STA     byte_A6
ROM:EA06 88                          DEY
ROM:EA07 B1 5E                       LDA     ($5E),Y
ROM:EA09 85 A5                       STA     byte_A5
ROM:EA0B A5 9D                       LDA     byte_9D
ROM:EA0D 60                          RTS
ROM:EA0D             ; End of function CONUPK
ROM:EA0D
ROM:EA0E             ; ---------------------------------------------------------------------------
ROM:EA0E
ROM:EA0E             MULDIV:                                 ; CODE XREF: FMULT:loc_E987↑p
ROM:EA0E                                                     ; sub_EA55+20↓p
ROM:EA0E A5 A5                       LDA     byte_A5
ROM:EA10
ROM:EA10             loc_EA10:                               ; CODE XREF: EXP+4F↓p
ROM:EA10 F0 1F                       BEQ     loc_EA31
ROM:EA12 18                          CLC
ROM:EA13 65 9D                       ADC     byte_9D
ROM:EA15 90 04                       BCC     TRYOFF
ROM:EA17 30 1D                       BMI     GOOVER
ROM:EA19 18                          CLC
ROM:EA19             ; ---------------------------------------------------------------------------
ROM:EA1A 2C                          .BYTE $2C
ROM:EA1B             ; ---------------------------------------------------------------------------
ROM:EA1B
ROM:EA1B             TRYOFF:                                 ; CODE XREF: ROM:EA15↑j
ROM:EA1B 10 14                       BPL     loc_EA31
ROM:EA1D 69 80                       ADC     #$80
ROM:EA1F 85 9D                       STA     byte_9D
ROM:EA21 D0 03                       BNE     loc_EA26
ROM:EA23 4C 52 E8                    JMP     loc_E852
ROM:EA26             ; ---------------------------------------------------------------------------
ROM:EA26
ROM:EA26             loc_EA26:                               ; CODE XREF: ROM:EA21↑j
ROM:EA26 A5 AB                       LDA     byte_AB
ROM:EA28 85 A2                       STA     byte_A2
ROM:EA2A 60                          RTS
ROM:EA2B
ROM:EA2B             ; =============== S U B R O U T I N E =======================================
ROM:EA2B
ROM:EA2B
ROM:EA2B             MLDVEX:                                 ; CODE XREF: EXP:GOMLDV↓p
ROM:EA2B
ROM:EA2B             ; FUNCTION CHUNK AT ROM:EA36 SIZE 00000003 BYTES
ROM:EA2B
ROM:EA2B A5 A2                       LDA     byte_A2
ROM:EA2D 49 FF                       EOR     #$FF
ROM:EA2F 30 05                       BMI     GOOVER
ROM:EA31
ROM:EA31             loc_EA31:                               ; CODE XREF: ROM:loc_EA10↑j
ROM:EA31                                                     ; ROM:TRYOFF↑j
ROM:EA31 68                          PLA
ROM:EA32 68                          PLA
ROM:EA33 4C 4E E8                    JMP     ZEROFC
ROM:EA33             ; End of function MLDVEX
ROM:EA33
ROM:EA36             ; ---------------------------------------------------------------------------
ROM:EA36             ; START OF FUNCTION CHUNK FOR MUL10
ROM:EA36             ;   ADDITIONAL PARENT FUNCTION MLDVEX
ROM:EA36             ;   ADDITIONAL PARENT FUNCTION sub_EA55
ROM:EA36
ROM:EA36             GOOVER:                                 ; CODE XREF: ROM:EA17↑j
ROM:EA36                                                     ; MLDVEX+4↑j ...
ROM:EA36 4C D5 E8                    JMP     OVERR
ROM:EA36             ; END OF FUNCTION CHUNK FOR MUL10
ROM:EA39
ROM:EA39             ; =============== S U B R O U T I N E =======================================
ROM:EA39
ROM:EA39
ROM:EA39             MUL10:                                  ; CODE XREF: FIN:loc_ECB2↓p
ROM:EA39                                                     ; FIN:loc_ECC8↓p ...
ROM:EA39
ROM:EA39             ; FUNCTION CHUNK AT ROM:E8D5 SIZE 00000005 BYTES
ROM:EA39             ; FUNCTION CHUNK AT ROM:EA36 SIZE 00000003 BYTES
ROM:EA39
ROM:EA39 20 63 EB                    JSR     MOVAF
ROM:EA3C AA                          TAX
ROM:EA3D F0 10                       BEQ     locret_EA4F
ROM:EA3F 18                          CLC
ROM:EA40 69 02                       ADC     #2
ROM:EA42 B0 F2                       BCS     GOOVER
ROM:EA44 A2 00                       LDX     #0
ROM:EA46 86 AB                       STX     byte_AB
ROM:EA48 20 CE E7                    JSR     FADDC
ROM:EA4B E6 9D                       INC     byte_9D
ROM:EA4D F0 E7                       BEQ     GOOVER
ROM:EA4F
ROM:EA4F             locret_EA4F:                            ; CODE XREF: MUL10+4↑j
ROM:EA4F 60                          RTS
ROM:EA4F             ; End of function MUL10
ROM:EA4F
ROM:EA4F             ; ---------------------------------------------------------------------------
ROM:EA50 84          TENZC:          .BYTE $84
ROM:EA51 20                          .BYTE $20
ROM:EA52 00                          .BYTE   0
ROM:EA53 00                          .BYTE   0
ROM:EA54 00                          .BYTE   0
ROM:EA55
ROM:EA55             ; =============== S U B R O U T I N E =======================================
ROM:EA55
ROM:EA55
ROM:EA55             sub_EA55:                               ; CODE XREF: FIN:loc_ECA9↓p
ROM:EA55                                                     ; FOUT:loc_ED7F↓p
ROM:EA55
ROM:EA55             ; FUNCTION CHUNK AT ROM:EA36 SIZE 00000003 BYTES
ROM:EA55
ROM:EA55 20 63 EB                    JSR     MOVAF
ROM:EA58 A9 50                       LDA     #$50 ; 'P'
ROM:EA5A A0 EA                       LDY     #$EA
ROM:EA5C A2 00                       LDX     #0
ROM:EA5E
ROM:EA5E             FDIVF:                                  ; CODE XREF: SIN+9↓p
ROM:EA5E 86 AB                       STX     byte_AB
ROM:EA60 20 F9 EA                    JSR     MOVFM
ROM:EA63 4C 69 EA                    JMP     FDIVT
ROM:EA66             ; ---------------------------------------------------------------------------
ROM:EA66
ROM:EA66             FDIV:                                   ; CODE XREF: ROM:E95F↑p
ROM:EA66                                                     ; ROM:F05F↓j ...
ROM:EA66 20 E3 E9                    JSR     CONUPK
ROM:EA69
ROM:EA69             FDIVT:                                  ; CODE XREF: sub_A629+3↑j
ROM:EA69                                                     ; sub_EA55+E↑j
ROM:EA69                                                     ; DATA XREF: ...
ROM:EA69 F0 76                       BEQ     DV0ERR
ROM:EA6B 20 72 EB                    JSR     ROUND
ROM:EA6E A9 00                       LDA     #0
ROM:EA70 38                          SEC
ROM:EA71 E5 9D                       SBC     byte_9D
ROM:EA73 85 9D                       STA     byte_9D
ROM:EA75 20 0E EA                    JSR     MULDIV
ROM:EA78 E6 9D                       INC     byte_9D
ROM:EA7A F0 BA                       BEQ     GOOVER
ROM:EA7C A2 FC                       LDX     #$FC
ROM:EA7E A9 01                       LDA     #1
ROM:EA80
ROM:EA80             loc_EA80:                               ; CODE XREF: sub_EA55+5B↓j
ROM:EA80 A4 A6                       LDY     byte_A6
ROM:EA82 C4 9E                       CPY     byte_9E
ROM:EA84 D0 10                       BNE     loc_EA96
ROM:EA86 A4 A7                       LDY     byte_A7
ROM:EA88 C4 9F                       CPY     byte_9F
ROM:EA8A D0 0A                       BNE     loc_EA96
ROM:EA8C A4 A8                       LDY     byte_A8
ROM:EA8E C4 A0                       CPY     byte_A0
ROM:EA90 D0 04                       BNE     loc_EA96
ROM:EA92 A4 A9                       LDY     byte_A9
ROM:EA94 C4 A1                       CPY     byte_A1
ROM:EA96
ROM:EA96             loc_EA96:                               ; CODE XREF: sub_EA55+2F↑j
ROM:EA96                                                     ; sub_EA55+35↑j ...
ROM:EA96 08                          PHP
ROM:EA97 2A                          ROL     A
ROM:EA98 90 09                       BCC     loc_EAA3
ROM:EA9A E8                          INX
ROM:EA9B 95 65                       STA     $65,X
ROM:EA9D F0 32                       BEQ     LD100
ROM:EA9F 10 34                       BPL     loc_EAD5
ROM:EAA1 A9 01                       LDA     #1
ROM:EAA3
ROM:EAA3             loc_EAA3:                               ; CODE XREF: sub_EA55+43↑j
ROM:EAA3                                                     ; sub_EA55+7E↓j
ROM:EAA3 28                          PLP
ROM:EAA4 B0 0E                       BCS     loc_EAB4
ROM:EAA6
ROM:EAA6             SHFARG:                                 ; CODE XREF: sub_EA55+79↓j
ROM:EAA6 06 A9                       ASL     byte_A9
ROM:EAA8 26 A8                       ROL     byte_A8
ROM:EAAA 26 A7                       ROL     byte_A7
ROM:EAAC 26 A6                       ROL     byte_A6
ROM:EAAE B0 E6                       BCS     loc_EA96
ROM:EAB0 30 CE                       BMI     loc_EA80
ROM:EAB2 10 E2                       BPL     loc_EA96
ROM:EAB4
ROM:EAB4             loc_EAB4:                               ; CODE XREF: sub_EA55+4F↑j
ROM:EAB4 A8                          TAY
ROM:EAB5 A5 A9                       LDA     byte_A9
ROM:EAB7 E5 A1                       SBC     byte_A1
ROM:EAB9 85 A9                       STA     byte_A9
ROM:EABB A5 A8                       LDA     byte_A8
ROM:EABD E5 A0                       SBC     byte_A0
ROM:EABF 85 A8                       STA     byte_A8
ROM:EAC1 A5 A7                       LDA     byte_A7
ROM:EAC3 E5 9F                       SBC     byte_9F
ROM:EAC5 85 A7                       STA     byte_A7
ROM:EAC7 A5 A6                       LDA     byte_A6
ROM:EAC9 E5 9E                       SBC     byte_9E
ROM:EACB 85 A6                       STA     byte_A6
ROM:EACD 98                          TYA
ROM:EACE 4C A6 EA                    JMP     SHFARG
ROM:EAD1             ; ---------------------------------------------------------------------------
ROM:EAD1
ROM:EAD1             LD100:                                  ; CODE XREF: sub_EA55+48↑j
ROM:EAD1 A9 40                       LDA     #$40 ; '@'
ROM:EAD3 D0 CE                       BNE     loc_EAA3
ROM:EAD5
ROM:EAD5             loc_EAD5:                               ; CODE XREF: sub_EA55+4A↑j
ROM:EAD5 0A                          ASL     A
ROM:EAD6 0A                          ASL     A
ROM:EAD7 0A                          ASL     A
ROM:EAD8 0A                          ASL     A
ROM:EAD9 0A                          ASL     A
ROM:EADA 0A                          ASL     A
ROM:EADB 85 AC                       STA     byte_AC
ROM:EADD 28                          PLP
ROM:EADE 4C E6 EA                    JMP     MOVFR
ROM:EAE1             ; ---------------------------------------------------------------------------
ROM:EAE1
ROM:EAE1             DV0ERR:                                 ; CODE XREF: sub_EA55:FDIVT↑j
ROM:EAE1 A2 85                       LDX     #$85
ROM:EAE3 4C 12 D4                    JMP     ERROR_0
ROM:EAE6             ; ---------------------------------------------------------------------------
ROM:EAE6
ROM:EAE6             MOVFR:                                  ; CODE XREF: FMULT+2E↑j
ROM:EAE6                                                     ; sub_EA55+89↑j
ROM:EAE6 A5 62                       LDA     byte_62
ROM:EAE8 85 9E                       STA     byte_9E
ROM:EAEA A5 63                       LDA     byte_63
ROM:EAEC 85 9F                       STA     byte_9F
ROM:EAEE A5 64                       LDA     byte_64
ROM:EAF0 85 A0                       STA     byte_A0
ROM:EAF2 A5 65                       LDA     byte_65
ROM:EAF4 85 A1                       STA     byte_A1
ROM:EAF6 4C 2E E8                    JMP     NORMAL_0
ROM:EAF6             ; End of function sub_EA55
ROM:EAF6
ROM:EAF9
ROM:EAF9             ; =============== S U B R O U T I N E =======================================
ROM:EAF9
ROM:EAF9
ROM:EAF9             MOVFM:                                  ; CODE XREF: sub_99C8+16↑p
ROM:EAF9                                                     ; sub_99C8+2D↑p ...
ROM:EAF9 85 5E                       STA     word_5E
ROM:EAFB 84 5F                       STY     word_5E+1
ROM:EAFD A0 04                       LDY     #4
ROM:EAFF B1 5E                       LDA     ($5E),Y
ROM:EB01 85 A1                       STA     byte_A1
ROM:EB03 88                          DEY
ROM:EB04 B1 5E                       LDA     ($5E),Y
ROM:EB06 85 A0                       STA     byte_A0
ROM:EB08 88                          DEY
ROM:EB09 B1 5E                       LDA     ($5E),Y
ROM:EB0B 85 9F                       STA     byte_9F
ROM:EB0D 88                          DEY
ROM:EB0E B1 5E                       LDA     ($5E),Y
ROM:EB10 85 A2                       STA     byte_A2
ROM:EB12 09 80                       ORA     #$80
ROM:EB14 85 9E                       STA     byte_9E
ROM:EB16 88                          DEY
ROM:EB17 B1 5E                       LDA     ($5E),Y
ROM:EB19 85 9D                       STA     byte_9D
ROM:EB1B 84 AC                       STY     byte_AC
ROM:EB1D 60                          RTS
ROM:EB1D             ; End of function MOVFM
ROM:EB1D
ROM:EB1E             ; ---------------------------------------------------------------------------
ROM:EB1E
ROM:EB1E             MOV2F:                                  ; CODE XREF: POLY1↓p
ROM:EB1E A2 98                       LDX     #$98
ROM:EB1E             ; ---------------------------------------------------------------------------
ROM:EB20 2C                          .BYTE $2C ; ,
ROM:EB21
ROM:EB21             ; =============== S U B R O U T I N E =======================================
ROM:EB21
ROM:EB21
ROM:EB21             MOV1F:                                  ; CODE XREF: POLYX+4↓p
ROM:EB21                                                     ; ROM:TAN↓p
ROM:EB21 A2 93                       LDX     #$93
ROM:EB23 A0 00                       LDY     #0
ROM:EB25 F0 04                       BEQ     MOVMF
ROM:EB25             ; End of function MOV1F
ROM:EB25
ROM:EB27
ROM:EB27             ; =============== S U B R O U T I N E =======================================
ROM:EB27
ROM:EB27
ROM:EB27             MOVVF:                                  ; CODE XREF: QINTGR:COPFLT↑j
ROM:EB27                                                     ; GETFOR+30↑p
ROM:EB27 A6 85                       LDX     byte_85
ROM:EB29 A4 86                       LDY     byte_86
ROM:EB29             ; End of function MOVVF
ROM:EB29
ROM:EB2B
ROM:EB2B             ; =============== S U B R O U T I N E =======================================
ROM:EB2B
ROM:EB2B
ROM:EB2B             MOVMF:                                  ; CODE XREF: RAM:9B72↑j
ROM:EB2B                                                     ; ROM:E380↑p ...
ROM:EB2B 20 72 EB                    JSR     ROUND
ROM:EB2E 86 5E                       STX     word_5E
ROM:EB30 84 5F                       STY     word_5E+1
ROM:EB32 A0 04                       LDY     #4
ROM:EB34 A5 A1                       LDA     byte_A1
ROM:EB36 91 5E                       STA     ($5E),Y
ROM:EB38 88                          DEY
ROM:EB39 A5 A0                       LDA     byte_A0
ROM:EB3B 91 5E                       STA     ($5E),Y
ROM:EB3D 88                          DEY
ROM:EB3E A5 9F                       LDA     byte_9F
ROM:EB40 91 5E                       STA     ($5E),Y
ROM:EB42 88                          DEY
ROM:EB43 A5 A2                       LDA     byte_A2
ROM:EB45 09 7F                       ORA     #$7F
ROM:EB47 25 9E                       AND     byte_9E
ROM:EB49 91 5E                       STA     ($5E),Y
ROM:EB4B 88                          DEY
ROM:EB4C A5 9D                       LDA     byte_9D
ROM:EB4E 91 5E                       STA     ($5E),Y
ROM:EB50 84 AC                       STY     byte_AC
ROM:EB52 60                          RTS
ROM:EB52             ; End of function MOVMF
ROM:EB52
ROM:EB53             ; ---------------------------------------------------------------------------
ROM:EB53             ; START OF FUNCTION CHUNK FOR FADDH
ROM:EB53
ROM:EB53             loc_EB53:                               ; CODE XREF: FADDH+23↑j
ROM:EB53 A5 AA                       LDA     byte_AA
ROM:EB53             ; END OF FUNCTION CHUNK FOR FADDH
ROM:EB55
ROM:EB55             ; =============== S U B R O U T I N E =======================================
ROM:EB55
ROM:EB55
ROM:EB55             MOVFA1:                                 ; CODE XREF: ROM:loc_EEBA↓p
ROM:EB55 85 A2                       STA     byte_A2
ROM:EB57 A2 05                       LDX     #5
ROM:EB59
ROM:EB59             loc_EB59:                               ; CODE XREF: MOVFA1+9↓j
ROM:EB59 B5 A4                       LDA     $A4,X
ROM:EB5B 95 9C                       STA     $9C,X
ROM:EB5D CA                          DEX
ROM:EB5E D0 F9                       BNE     loc_EB59
ROM:EB60 86 AC                       STX     byte_AC
ROM:EB62 60                          RTS
ROM:EB62             ; End of function MOVFA1
ROM:EB62
ROM:EB63
ROM:EB63             ; =============== S U B R O U T I N E =======================================
ROM:EB63
ROM:EB63
ROM:EB63             MOVAF:                                  ; CODE XREF: MUL10↑p
ROM:EB63                                                     ; sub_EA55↑p ...
ROM:EB63 20 72 EB                    JSR     ROUND
ROM:EB66
ROM:EB66             loc_EB66:                               ; CODE XREF: EXP+12↓p
ROM:EB66 A2 06                       LDX     #6
ROM:EB68
ROM:EB68             loc_EB68:                               ; CODE XREF: MOVAF+A↓j
ROM:EB68 B5 9C                       LDA     $9C,X
ROM:EB6A 95 A4                       STA     $A4,X
ROM:EB6C CA                          DEX
ROM:EB6D D0 F9                       BNE     loc_EB68
ROM:EB6F 86 AC                       STX     byte_AC
ROM:EB71
ROM:EB71             locret_EB71:                            ; CODE XREF: ROUND+2↓j
ROM:EB71                                                     ; ROUND+6↓j ...
ROM:EB71 60                          RTS
ROM:EB71             ; End of function MOVAF
ROM:EB71
ROM:EB72
ROM:EB72             ; =============== S U B R O U T I N E =======================================
ROM:EB72
ROM:EB72
ROM:EB72             ROUND:                                  ; CODE XREF: QINTGR+2↑p
ROM:EB72                                                     ; PUSHF1:FORPSH↑p ...
ROM:EB72 A5 9D                       LDA     byte_9D
ROM:EB74 F0 FB                       BEQ     locret_EB71
ROM:EB76 06 AC                       ASL     byte_AC
ROM:EB78 90 F7                       BCC     locret_EB71
ROM:EB7A
ROM:EB7A             INCRND:                                 ; CODE XREF: EXP+D↓p
ROM:EB7A 20 C6 E8                    JSR     sub_E8C6
ROM:EB7D D0 F2                       BNE     locret_EB71
ROM:EB7F 4C 8F E8                    JMP     RNDSHF
ROM:EB7F             ; End of function ROUND
ROM:EB7F
ROM:EB82
ROM:EB82             ; =============== S U B R O U T I N E =======================================
ROM:EB82
ROM:EB82
ROM:EB82             SIGN:                                   ; CODE XREF: sub_9C89↑p
ROM:EB82                                                     ; ROM:ONEON↑p ...
ROM:EB82 A5 9D                       LDA     byte_9D
ROM:EB84 F0 09                       BEQ     locret_EB8F
ROM:EB86
ROM:EB86             loc_EB86:                               ; CODE XREF: FCOMP+10↓j
ROM:EB86 A5 A2                       LDA     byte_A2
ROM:EB88
ROM:EB88             loc_EB88:                               ; CODE XREF: FCOMP:loc_EBEF↓j
ROM:EB88 2A                          ROL     A
ROM:EB89 A9 FF                       LDA     #$FF
ROM:EB8B B0 02                       BCS     locret_EB8F
ROM:EB8D A9 01                       LDA     #1
ROM:EB8F
ROM:EB8F             locret_EB8F:                            ; CODE XREF: SIGN+2↑j
ROM:EB8F                                                     ; SIGN+9↑j
ROM:EB8F 60                          RTS
ROM:EB8F             ; End of function SIGN
ROM:EB8F
ROM:EB90             ; ---------------------------------------------------------------------------
ROM:EB90
ROM:EB90             SGN:                                    ; DATA XREF: ROM:D080↑o
ROM:EB90 20 82 EB                    JSR     SIGN
ROM:EB93
ROM:EB93             ; =============== S U B R O U T I N E =======================================
ROM:EB93
ROM:EB93
ROM:EB93             FLOAT:                                  ; CODE XREF: ROM:loc_DFCA↑j
ROM:EB93                                                     ; FINLOG+5↓p
ROM:EB93 85 9E                       STA     byte_9E
ROM:EB95 A9 00                       LDA     #0
ROM:EB97 85 9F                       STA     byte_9F
ROM:EB99 A2 88                       LDX     #$88
ROM:EB9B
ROM:EB9B             FLOATS:                                 ; CODE XREF: SNGFLT-5↑j
ROM:EB9B A5 9E                       LDA     byte_9E
ROM:EB9D 49 FF                       EOR     #$FF
ROM:EB9F 2A                          ROL     A
ROM:EB9F             ; End of function FLOAT
ROM:EB9F
ROM:EBA0
ROM:EBA0             ; =============== S U B R O U T I N E =======================================
ROM:EBA0
ROM:EBA0
ROM:EBA0             FLOATC:                                 ; CODE XREF: LINPRT+7↓p
ROM:EBA0 A9 00                       LDA     #0
ROM:EBA2 85 A1                       STA     byte_A1
ROM:EBA4 85 A0                       STA     byte_A0
ROM:EBA6 86 9D                       STX     byte_9D
ROM:EBA8 85 AC                       STA     byte_AC
ROM:EBAA 85 A2                       STA     byte_A2
ROM:EBAC 4C 29 E8                    JMP     FADFLT
ROM:EBAC             ; End of function FLOATC
ROM:EBAC
ROM:EBAF             ; ---------------------------------------------------------------------------
ROM:EBAF
ROM:EBAF             ABS:                                    ; DATA XREF: ROM:D084↑o
ROM:EBAF 46 A2                       LSR     byte_A2
ROM:EBB1 60                          RTS
ROM:EBB2
ROM:EBB2             ; =============== S U B R O U T I N E =======================================
ROM:EBB2
ROM:EBB2
ROM:EBB2             FCOMP:                                  ; CODE XREF: sub_99C8+7C↑p
ROM:EBB2                                                     ; sub_99C8+AA↑p ...
ROM:EBB2 85 60                       STA     byte_60
ROM:EBB4
ROM:EBB4             FCOMPN:                                 ; CODE XREF: GETFOR+35↑p
ROM:EBB4 84 61                       STY     byte_61         ; compare FAC
ROM:EBB6 A0 00                       LDY     #0
ROM:EBB8 B1 60                       LDA     ($60),Y
ROM:EBBA C8                          INY
ROM:EBBB AA                          TAX
ROM:EBBC F0 C4                       BEQ     SIGN
ROM:EBBE B1 60                       LDA     ($60),Y
ROM:EBC0 45 A2                       EOR     byte_A2
ROM:EBC2 30 C2                       BMI     loc_EB86
ROM:EBC4 E4 9D                       CPX     byte_9D
ROM:EBC6 D0 21                       BNE     loc_EBE9
ROM:EBC8 B1 60                       LDA     ($60),Y
ROM:EBCA 09 80                       ORA     #$80
ROM:EBCC C5 9E                       CMP     byte_9E
ROM:EBCE D0 19                       BNE     loc_EBE9
ROM:EBD0 C8                          INY
ROM:EBD1 B1 60                       LDA     ($60),Y
ROM:EBD3 C5 9F                       CMP     byte_9F
ROM:EBD5 D0 12                       BNE     loc_EBE9
ROM:EBD7 C8                          INY
ROM:EBD8 B1 60                       LDA     ($60),Y
ROM:EBDA C5 A0                       CMP     byte_A0
ROM:EBDC D0 0B                       BNE     loc_EBE9
ROM:EBDE C8                          INY
ROM:EBDF A9 7F                       LDA     #$7F
ROM:EBE1 C5 AC                       CMP     byte_AC
ROM:EBE3 B1 60                       LDA     ($60),Y
ROM:EBE5 E5 A1                       SBC     byte_A1
ROM:EBE7 F0 28                       BEQ     locret_EC11
ROM:EBE9
ROM:EBE9             loc_EBE9:                               ; CODE XREF: FCOMP+14↑j
ROM:EBE9                                                     ; FCOMP+1C↑j ...
ROM:EBE9 A5 A2                       LDA     byte_A2
ROM:EBEB 90 02                       BCC     loc_EBEF
ROM:EBED 49 FF                       EOR     #$FF
ROM:EBEF
ROM:EBEF             loc_EBEF:                               ; CODE XREF: FCOMP+39↑j
ROM:EBEF 4C 88 EB                    JMP     loc_EB88
ROM:EBEF             ; End of function FCOMP
ROM:EBEF
ROM:EBF2
ROM:EBF2             ; =============== S U B R O U T I N E =======================================
ROM:EBF2
ROM:EBF2
ROM:EBF2             QINT:                                   ; CODE XREF: POSINT:QINTGO↑j
ROM:EBF2                                                     ; GETADR_50+6↑p ...
ROM:EBF2 A5 9D                       LDA     byte_9D
ROM:EBF4 F0 4A                       BEQ     loc_EC40
ROM:EBF6 38                          SEC
ROM:EBF7 E9 A0                       SBC     #$A0
ROM:EBF9 24 A2                       BIT     byte_A2
ROM:EBFB 10 09                       BPL     loc_EC06
ROM:EBFD AA                          TAX
ROM:EBFE A9 FF                       LDA     #$FF
ROM:EC00 85 A4                       STA     byte_A4
ROM:EC02 20 A4 E8                    JSR     sub_E8A4
ROM:EC05 8A                          TXA
ROM:EC06
ROM:EC06             loc_EC06:                               ; CODE XREF: QINT+9↑j
ROM:EC06 A2 9D                       LDX     #$9D
ROM:EC08 C9 F9                       CMP     #$F9
ROM:EC0A 10 06                       BPL     loc_EC12
ROM:EC0C 20 F0 E8                    JSR     SHIFTR
ROM:EC0F 84 A4                       STY     byte_A4
ROM:EC11
ROM:EC11             locret_EC11:                            ; CODE XREF: FCOMP+35↑j
ROM:EC11 60                          RTS
ROM:EC12             ; ---------------------------------------------------------------------------
ROM:EC12
ROM:EC12             loc_EC12:                               ; CODE XREF: QINT+18↑j
ROM:EC12 A8                          TAY
ROM:EC13 A5 A2                       LDA     byte_A2
ROM:EC15 29 80                       AND     #$80
ROM:EC17 46 9E                       LSR     byte_9E
ROM:EC19 05 9E                       ORA     byte_9E
ROM:EC1B 85 9E                       STA     byte_9E
ROM:EC1D 20 07 E9                    JSR     sub_E907
ROM:EC20 84 A4                       STY     byte_A4
ROM:EC22 60                          RTS
ROM:EC23             ; ---------------------------------------------------------------------------
ROM:EC23
ROM:EC23             INT:                                    ; CODE XREF: ROM:EEAB↓p
ROM:EC23                                                     ; EXP:EXP1↓p ...
ROM:EC23 A5 9D                       LDA     byte_9D
ROM:EC25 C9 A0                       CMP     #$A0
ROM:EC27 B0 20                       BCS     locret_EC49
ROM:EC29 20 F2 EB                    JSR     QINT
ROM:EC2C 84 AC                       STY     byte_AC
ROM:EC2E A5 A2                       LDA     byte_A2
ROM:EC30 84 A2                       STY     byte_A2
ROM:EC32 49 80                       EOR     #$80
ROM:EC34 2A                          ROL     A
ROM:EC35 A9 A0                       LDA     #$A0
ROM:EC37 85 9D                       STA     byte_9D
ROM:EC39 A5 A1                       LDA     byte_A1
ROM:EC3B 85 0D                       STA     byte_D
ROM:EC3D 4C 29 E8                    JMP     FADFLT
ROM:EC40             ; ---------------------------------------------------------------------------
ROM:EC40
ROM:EC40             loc_EC40:                               ; CODE XREF: QINT+2↑j
ROM:EC40 85 9E                       STA     byte_9E
ROM:EC42 85 9F                       STA     byte_9F
ROM:EC44 85 A0                       STA     byte_A0
ROM:EC46 85 A1                       STA     byte_A1
ROM:EC48 A8                          TAY
ROM:EC49
ROM:EC49             locret_EC49:                            ; CODE XREF: QINT+35↑j
ROM:EC49 60                          RTS
ROM:EC49             ; End of function QINT
ROM:EC49
ROM:EC4A
ROM:EC4A             ; =============== S U B R O U T I N E =======================================
ROM:EC4A
ROM:EC4A
ROM:EC4A             FIN:                                    ; CODE XREF: sub_D274+E↑j
ROM:EC4A                                                     ; ROM:EVAL1↑j ...
ROM:EC4A
ROM:EC4A             ; FUNCTION CHUNK AT ROM:E8D5 SIZE 00000005 BYTES
ROM:EC4A             ; FUNCTION CHUNK AT ROM:ECE8 SIZE 00000022 BYTES
ROM:EC4A
ROM:EC4A A0 00                       LDY     #0
ROM:EC4C A2 0A                       LDX     #$A
ROM:EC4E
ROM:EC4E             loc_EC4E:                               ; CODE XREF: FIN+7↓j
ROM:EC4E 94 99                       STY     $99,X
ROM:EC50 CA                          DEX
ROM:EC51 10 FB                       BPL     loc_EC4E
ROM:EC53 90 0F                       BCC     loc_EC64
ROM:EC55 C9 2D                       CMP     #$2D ; '-'
ROM:EC57 D0 04                       BNE     loc_EC5D
ROM:EC59 86 A3                       STX     byte_A3
ROM:EC5B F0 04                       BEQ     loc_EC61
ROM:EC5D
ROM:EC5D             loc_EC5D:                               ; CODE XREF: FIN+D↑j
ROM:EC5D C9 2B                       CMP     #$2B ; '+'
ROM:EC5F D0 05                       BNE     loc_EC66
ROM:EC61
ROM:EC61             loc_EC61:                               ; CODE XREF: FIN+11↑j
ROM:EC61                                                     ; FIN+52↓j ...
ROM:EC61 20 B1 00                    JSR     CHRGET
ROM:EC64
ROM:EC64             loc_EC64:                               ; CODE XREF: FIN+9↑j
ROM:EC64 90 5B                       BCC     loc_ECC1
ROM:EC66
ROM:EC66             loc_EC66:                               ; CODE XREF: FIN+15↑j
ROM:EC66 C9 2E                       CMP     #$2E ; '.'
ROM:EC68 F0 2E                       BEQ     loc_EC98
ROM:EC6A C9 45                       CMP     #$45 ; 'E'
ROM:EC6C D0 30                       BNE     loc_EC9E
ROM:EC6E 20 B1 00                    JSR     CHRGET
ROM:EC71 90 17                       BCC     loc_EC8A
ROM:EC73 C9 C9                       CMP     #$C9
ROM:EC75 F0 0E                       BEQ     loc_EC85
ROM:EC77 C9 2D                       CMP     #$2D ; '-'
ROM:EC79 F0 0A                       BEQ     loc_EC85
ROM:EC7B C9 C8                       CMP     #$C8
ROM:EC7D F0 08                       BEQ     FINEC
ROM:EC7F C9 2B                       CMP     #$2B ; '+'
ROM:EC81 F0 04                       BEQ     FINEC
ROM:EC83 D0 07                       BNE     loc_EC8C
ROM:EC85
ROM:EC85             loc_EC85:                               ; CODE XREF: FIN+2B↑j
ROM:EC85                                                     ; FIN+2F↑j
ROM:EC85 66 9C                       ROR     byte_9C
ROM:EC87
ROM:EC87             FINEC:                                  ; CODE XREF: FIN+33↑j
ROM:EC87                                                     ; FIN+37↑j ...
ROM:EC87 20 B1 00                    JSR     CHRGET
ROM:EC8A
ROM:EC8A             loc_EC8A:                               ; CODE XREF: FIN+27↑j
ROM:EC8A 90 5C                       BCC     FINEDG
ROM:EC8C
ROM:EC8C             loc_EC8C:                               ; CODE XREF: FIN+39↑j
ROM:EC8C 24 9C                       BIT     byte_9C
ROM:EC8E 10 0E                       BPL     loc_EC9E
ROM:EC90 A9 00                       LDA     #0
ROM:EC92 38                          SEC
ROM:EC93 E5 9A                       SBC     byte_9A
ROM:EC95 4C A0 EC                    JMP     loc_ECA0
ROM:EC98             ; ---------------------------------------------------------------------------
ROM:EC98
ROM:EC98             loc_EC98:                               ; CODE XREF: FIN+1E↑j
ROM:EC98 66 9B                       ROR     byte_9B
ROM:EC9A 24 9B                       BIT     byte_9B
ROM:EC9C 50 C3                       BVC     loc_EC61
ROM:EC9E
ROM:EC9E             loc_EC9E:                               ; CODE XREF: FIN+22↑j
ROM:EC9E                                                     ; FIN+44↑j
ROM:EC9E A5 9A                       LDA     byte_9A
ROM:ECA0
ROM:ECA0             loc_ECA0:                               ; CODE XREF: FIN+4B↑j
ROM:ECA0 38                          SEC
ROM:ECA1 E5 99                       SBC     byte_99
ROM:ECA3 85 9A                       STA     byte_9A
ROM:ECA5 F0 12                       BEQ     loc_ECB9
ROM:ECA7 10 09                       BPL     loc_ECB2
ROM:ECA9
ROM:ECA9             loc_ECA9:                               ; CODE XREF: FIN+64↓j
ROM:ECA9 20 55 EA                    JSR     sub_EA55
ROM:ECAC E6 9A                       INC     byte_9A
ROM:ECAE D0 F9                       BNE     loc_ECA9
ROM:ECB0 F0 07                       BEQ     loc_ECB9
ROM:ECB2
ROM:ECB2             loc_ECB2:                               ; CODE XREF: FIN+5D↑j
ROM:ECB2                                                     ; FIN+6D↓j
ROM:ECB2 20 39 EA                    JSR     MUL10
ROM:ECB5 C6 9A                       DEC     byte_9A
ROM:ECB7 D0 F9                       BNE     loc_ECB2
ROM:ECB9
ROM:ECB9             loc_ECB9:                               ; CODE XREF: FIN+5B↑j
ROM:ECB9                                                     ; FIN+66↑j
ROM:ECB9 A5 A3                       LDA     byte_A3
ROM:ECBB 30 01                       BMI     loc_ECBE
ROM:ECBD 60                          RTS
ROM:ECBE             ; ---------------------------------------------------------------------------
ROM:ECBE
ROM:ECBE             loc_ECBE:                               ; CODE XREF: FIN+71↑j
ROM:ECBE 4C D0 EE                    JMP     NEGOP
ROM:ECC1             ; ---------------------------------------------------------------------------
ROM:ECC1
ROM:ECC1             loc_ECC1:                               ; CODE XREF: FIN:loc_EC64↑j
ROM:ECC1 48                          PHA
ROM:ECC2 24 9B                       BIT     byte_9B
ROM:ECC4 10 02                       BPL     loc_ECC8
ROM:ECC6 E6 99                       INC     byte_99
ROM:ECC8
ROM:ECC8             loc_ECC8:                               ; CODE XREF: FIN+7A↑j
ROM:ECC8 20 39 EA                    JSR     MUL10
ROM:ECCB 68                          PLA
ROM:ECCC 38                          SEC
ROM:ECCD E9 30                       SBC     #$30 ; '0'
ROM:ECCF 20 D5 EC                    JSR     FINLOG
ROM:ECD2 4C 61 EC                    JMP     loc_EC61
ROM:ECD2             ; End of function FIN
ROM:ECD2
ROM:ECD5
ROM:ECD5             ; =============== S U B R O U T I N E =======================================
ROM:ECD5
ROM:ECD5
ROM:ECD5             FINLOG:                                 ; CODE XREF: ROM:E978↑p
ROM:ECD5                                                     ; FIN+85↑p
ROM:ECD5 48                          PHA
ROM:ECD6 20 63 EB                    JSR     MOVAF
ROM:ECD9 68                          PLA
ROM:ECDA 20 93 EB                    JSR     FLOAT
ROM:ECDD A5 AA                       LDA     byte_AA
ROM:ECDF 45 A2                       EOR     byte_A2
ROM:ECE1 85 AB                       STA     byte_AB
ROM:ECE3 A6 9D                       LDX     byte_9D
ROM:ECE5 4C C1 E7                    JMP     FADDT
ROM:ECE5             ; End of function FINLOG
ROM:ECE5
ROM:ECE8             ; ---------------------------------------------------------------------------
ROM:ECE8             ; START OF FUNCTION CHUNK FOR FIN
ROM:ECE8
ROM:ECE8             FINEDG:                                 ; CODE XREF: FIN:loc_EC8A↑j
ROM:ECE8 A5 9A                       LDA     byte_9A
ROM:ECEA C9 0A                       CMP     #$A
ROM:ECEC 90 09                       BCC     MLEX10
ROM:ECEE A9 64                       LDA     #$64 ; 'd'
ROM:ECF0 24 9C                       BIT     byte_9C
ROM:ECF2 30 11                       BMI     loc_ED05
ROM:ECF4 4C D5 E8                    JMP     OVERR
ROM:ECF7             ; ---------------------------------------------------------------------------
ROM:ECF7
ROM:ECF7             MLEX10:                                 ; CODE XREF: FIN+A2↑j
ROM:ECF7 0A                          ASL     A
ROM:ECF8 0A                          ASL     A
ROM:ECF9 18                          CLC
ROM:ECFA 65 9A                       ADC     byte_9A
ROM:ECFC 0A                          ASL     A
ROM:ECFD 18                          CLC
ROM:ECFE A0 00                       LDY     #0
ROM:ED00 71 B8                       ADC     ($B8),Y
ROM:ED02 38                          SEC
ROM:ED03 E9 30                       SBC     #$30 ; '0'
ROM:ED05
ROM:ED05             loc_ED05:                               ; CODE XREF: FIN+A8↑j
ROM:ED05 85 9A                       STA     byte_9A
ROM:ED07 4C 87 EC                    JMP     FINEC
ROM:ED07             ; END OF FUNCTION CHUNK FOR FIN
ROM:ED07             ; ---------------------------------------------------------------------------
ROM:ED0A 9B          NZ0999:         .BYTE $9B
ROM:ED0B 3E                          .BYTE $3E ; >
ROM:ED0C BC                          .BYTE $BC
ROM:ED0D 1F                          .BYTE $1F
ROM:ED0E FD                          .BYTE $FD
ROM:ED0F 9E          NZ9999:         .BYTE $9E
ROM:ED10 6E                          .BYTE $6E
ROM:ED11 6B                          .BYTE $6B ; k
ROM:ED12 27                          .BYTE $27 ; '
ROM:ED13 FD                          .BYTE $FD
ROM:ED14 9E          NZMIL:          .BYTE $9E
ROM:ED15 6E                          .BYTE $6E ; n
ROM:ED16 6B                          .BYTE $6B
ROM:ED17 28                          .BYTE $28 ; (
ROM:ED18 00                          .BYTE 0
ROM:ED19
ROM:ED19             ; =============== S U B R O U T I N E =======================================
ROM:ED19
ROM:ED19
ROM:ED19             INPRT:                                  ; CODE XREF: STROUT_0+8↓p
ROM:ED19 A9 67                       LDA     #$67 ; 'g'
ROM:ED1B A0 D2                       LDY     #$D2            ; $D267 = " in "
ROM:ED1D 20 31 ED                    JSR     STROU2
ROM:ED20 A5 76                       LDA     byte_76
ROM:ED22 A6 75                       LDX     byte_75
ROM:ED22             ; End of function INPRT
ROM:ED22
ROM:ED24
ROM:ED24             ; =============== S U B R O U T I N E =======================================
ROM:ED24
ROM:ED24
ROM:ED24             LINPRT:                                 ; CODE XREF: ROM:D6EE↑p
ROM:ED24                                                     ; REASON+435↑p
ROM:ED24 85 9E                       STA     byte_9E
ROM:ED26 86 9F                       STX     byte_9F
ROM:ED28 A2 90                       LDX     #$90
ROM:ED2A 38                          SEC
ROM:ED2B 20 A0 EB                    JSR     FLOATC
ROM:ED2E 20 34 ED                    JSR     FOUT
ROM:ED2E             ; End of function LINPRT
ROM:ED2E
ROM:ED31
ROM:ED31             ; =============== S U B R O U T I N E =======================================
ROM:ED31
ROM:ED31             ; Attributes: thunk
ROM:ED31
ROM:ED31             STROU2:                                 ; CODE XREF: INPRT+4↑p
ROM:ED31 4C 3A DB                    JMP     STROUT
ROM:ED31             ; End of function STROU2
ROM:ED31
ROM:ED34
ROM:ED34             ; =============== S U B R O U T I N E =======================================
ROM:ED34
ROM:ED34
ROM:ED34             FOUT:                                   ; CODE XREF: ROM:DAF2↑p
ROM:ED34                                                     ; LINPRT+A↑p ...
ROM:ED34 A0 01                       LDY     #1
ROM:ED36
ROM:ED36             FOUTC:                                  ; CODE XREF: ROM:E3CA↑p
ROM:ED36 A9 2D                       LDA     #$2D ; '-'
ROM:ED38 88                          DEY
ROM:ED39 24 A2                       BIT     byte_A2
ROM:ED3B 10 04                       BPL     loc_ED41
ROM:ED3D C8                          INY
ROM:ED3E 99 FF 00                    STA     $FF,Y
ROM:ED41
ROM:ED41             loc_ED41:                               ; CODE XREF: FOUT+7↑j
ROM:ED41 85 A2                       STA     byte_A2
ROM:ED43 84 AD                       STY     byte_AD
ROM:ED45 C8                          INY
ROM:ED46 A9 30                       LDA     #$30 ; '0'
ROM:ED48 A6 9D                       LDX     byte_9D
ROM:ED4A D0 03                       BNE     loc_ED4F
ROM:ED4C 4C 57 EE                    JMP     loc_EE57
ROM:ED4F             ; ---------------------------------------------------------------------------
ROM:ED4F
ROM:ED4F             loc_ED4F:                               ; CODE XREF: FOUT+16↑j
ROM:ED4F A9 00                       LDA     #0
ROM:ED51 E0 80                       CPX     #$80
ROM:ED53 F0 02                       BEQ     FOUT37
ROM:ED55 B0 09                       BCS     FOUT7
ROM:ED57
ROM:ED57             FOUT37:                                 ; CODE XREF: FOUT+1F↑j
ROM:ED57 A9 14                       LDA     #$14
ROM:ED59 A0 ED                       LDY     #$ED
ROM:ED5B 20 7F E9                    JSR     FMULT
ROM:ED5E A9 F7                       LDA     #$F7
ROM:ED60
ROM:ED60             FOUT7:                                  ; CODE XREF: FOUT+21↑j
ROM:ED60 85 99                       STA     byte_99
ROM:ED62
ROM:ED62             FOUT4:                                  ; CODE XREF: FOUT+50↓j
ROM:ED62 A9 0F                       LDA     #$F
ROM:ED64 A0 ED                       LDY     #$ED
ROM:ED66 20 B2 EB                    JSR     FCOMP
ROM:ED69 F0 1E                       BEQ     loc_ED89
ROM:ED6B 10 12                       BPL     loc_ED7F
ROM:ED6D
ROM:ED6D             loc_ED6D:                               ; CODE XREF: FOUT+49↓j
ROM:ED6D A9 0A                       LDA     #$A
ROM:ED6F A0 ED                       LDY     #$ED
ROM:ED71 20 B2 EB                    JSR     FCOMP
ROM:ED74 F0 02                       BEQ     loc_ED78
ROM:ED76 10 0E                       BPL     loc_ED86
ROM:ED78
ROM:ED78             loc_ED78:                               ; CODE XREF: FOUT+40↑j
ROM:ED78 20 39 EA                    JSR     MUL10
ROM:ED7B C6 99                       DEC     byte_99
ROM:ED7D D0 EE                       BNE     loc_ED6D
ROM:ED7F
ROM:ED7F             loc_ED7F:                               ; CODE XREF: FOUT+37↑j
ROM:ED7F 20 55 EA                    JSR     sub_EA55
ROM:ED82 E6 99                       INC     byte_99
ROM:ED84 D0 DC                       BNE     FOUT4
ROM:ED86
ROM:ED86             loc_ED86:                               ; CODE XREF: FOUT+42↑j
ROM:ED86 20 A0 E7                    JSR     FADDH           ; FLOATING POINT ADDITION AND SUBTRACTION.
ROM:ED89
ROM:ED89             loc_ED89:                               ; CODE XREF: FOUT+35↑j
ROM:ED89 20 F2 EB                    JSR     QINT
ROM:ED8C A2 01                       LDX     #1
ROM:ED8E A5 99                       LDA     byte_99
ROM:ED90 18                          CLC
ROM:ED91 69 0A                       ADC     #$A
ROM:ED93 30 09                       BMI     loc_ED9E
ROM:ED95 C9 0B                       CMP     #$B
ROM:ED97 B0 06                       BCS     loc_ED9F
ROM:ED99 69 FF                       ADC     #$FF
ROM:ED9B AA                          TAX
ROM:ED9C A9 02                       LDA     #2
ROM:ED9E
ROM:ED9E             loc_ED9E:                               ; CODE XREF: FOUT+5F↑j
ROM:ED9E 38                          SEC
ROM:ED9F
ROM:ED9F             loc_ED9F:                               ; CODE XREF: FOUT+63↑j
ROM:ED9F E9 02                       SBC     #2
ROM:EDA1 85 9A                       STA     byte_9A
ROM:EDA3 86 99                       STX     byte_99
ROM:EDA5 8A                          TXA
ROM:EDA6 F0 02                       BEQ     loc_EDAA
ROM:EDA8 10 13                       BPL     loc_EDBD
ROM:EDAA
ROM:EDAA             loc_EDAA:                               ; CODE XREF: FOUT+72↑j
ROM:EDAA A4 AD                       LDY     byte_AD
ROM:EDAC A9 2E                       LDA     #$2E ; '.'
ROM:EDAE C8                          INY
ROM:EDAF 99 FF 00                    STA     $FF,Y
ROM:EDB2 8A                          TXA
ROM:EDB3 F0 06                       BEQ     loc_EDBB
ROM:EDB5 A9 30                       LDA     #$30 ; '0'
ROM:EDB7 C8                          INY
ROM:EDB8 99 FF 00                    STA     $FF,Y
ROM:EDBB
ROM:EDBB             loc_EDBB:                               ; CODE XREF: FOUT+7F↑j
ROM:EDBB 84 AD                       STY     byte_AD
ROM:EDBD
ROM:EDBD             loc_EDBD:                               ; CODE XREF: FOUT+74↑j
ROM:EDBD A0 00                       LDY     #0
ROM:EDBF A2 80                       LDX     #$80
ROM:EDC1
ROM:EDC1             loc_EDC1:                               ; CODE XREF: FOUT+AD↓j
ROM:EDC1                                                     ; FOUT:loc_EDE5↓j ...
ROM:EDC1 A5 A1                       LDA     byte_A1
ROM:EDC3 18                          CLC
ROM:EDC4 79 6C EE                    ADC     byte_EE6C,Y
ROM:EDC7 85 A1                       STA     byte_A1
ROM:EDC9 A5 A0                       LDA     byte_A0
ROM:EDCB 79 6B EE                    ADC     byte_EE6B,Y
ROM:EDCE 85 A0                       STA     byte_A0
ROM:EDD0 A5 9F                       LDA     byte_9F
ROM:EDD2 79 6A EE                    ADC     byte_EE6A,Y
ROM:EDD5 85 9F                       STA     byte_9F
ROM:EDD7 A5 9E                       LDA     byte_9E
ROM:EDD9 79 69 EE                    ADC     byte_EE69,Y
ROM:EDDC 85 9E                       STA     byte_9E
ROM:EDDE E8                          INX
ROM:EDDF B0 04                       BCS     loc_EDE5
ROM:EDE1 10 DE                       BPL     loc_EDC1
ROM:EDE3 30 02                       BMI     loc_EDE7
ROM:EDE5
ROM:EDE5             loc_EDE5:                               ; CODE XREF: FOUT+AB↑j
ROM:EDE5 30 DA                       BMI     loc_EDC1
ROM:EDE7
ROM:EDE7             loc_EDE7:                               ; CODE XREF: FOUT+AF↑j
ROM:EDE7 8A                          TXA
ROM:EDE8 90 04                       BCC     loc_EDEE
ROM:EDEA 49 FF                       EOR     #$FF
ROM:EDEC 69 0A                       ADC     #$A
ROM:EDEE
ROM:EDEE             loc_EDEE:                               ; CODE XREF: FOUT+B4↑j
ROM:EDEE 69 2F                       ADC     #$2F ; '/'
ROM:EDF0 C8                          INY
ROM:EDF1 C8                          INY
ROM:EDF2 C8                          INY
ROM:EDF3 C8                          INY
ROM:EDF4 84 83                       STY     byte_83
ROM:EDF6 A4 AD                       LDY     byte_AD
ROM:EDF8 C8                          INY
ROM:EDF9 AA                          TAX
ROM:EDFA 29 7F                       AND     #$7F
ROM:EDFC 99 FF 00                    STA     $FF,Y
ROM:EDFF C6 99                       DEC     byte_99
ROM:EE01 D0 06                       BNE     loc_EE09
ROM:EE03 A9 2E                       LDA     #$2E ; '.'
ROM:EE05 C8                          INY
ROM:EE06 99 FF 00                    STA     $FF,Y
ROM:EE09
ROM:EE09             loc_EE09:                               ; CODE XREF: FOUT+CD↑j
ROM:EE09 84 AD                       STY     byte_AD
ROM:EE0B A4 83                       LDY     byte_83
ROM:EE0D 8A                          TXA
ROM:EE0E 49 FF                       EOR     #$FF
ROM:EE10 29 80                       AND     #$80
ROM:EE12 AA                          TAX
ROM:EE13 C0 24                       CPY     #$24 ; '$'
ROM:EE15 D0 AA                       BNE     loc_EDC1
ROM:EE17 A4 AD                       LDY     byte_AD
ROM:EE19
ROM:EE19             loc_EE19:                               ; CODE XREF: FOUT+EB↓j
ROM:EE19 B9 FF 00                    LDA     $FF,Y
ROM:EE1C 88                          DEY
ROM:EE1D C9 30                       CMP     #$30 ; '0'
ROM:EE1F F0 F8                       BEQ     loc_EE19
ROM:EE21 C9 2E                       CMP     #$2E ; '.'
ROM:EE23 F0 01                       BEQ     loc_EE26
ROM:EE25 C8                          INY
ROM:EE26
ROM:EE26             loc_EE26:                               ; CODE XREF: FOUT+EF↑j
ROM:EE26 A9 2B                       LDA     #$2B ; '+'
ROM:EE28 A6 9A                       LDX     byte_9A
ROM:EE2A F0 2E                       BEQ     loc_EE5A
ROM:EE2C 10 08                       BPL     loc_EE36
ROM:EE2E A9 00                       LDA     #0
ROM:EE30 38                          SEC
ROM:EE31 E5 9A                       SBC     byte_9A
ROM:EE33 AA                          TAX
ROM:EE34 A9 2D                       LDA     #$2D ; '-'
ROM:EE36
ROM:EE36             loc_EE36:                               ; CODE XREF: FOUT+F8↑j
ROM:EE36 99 01 01                    STA     $101,Y
ROM:EE39 A9 45                       LDA     #$45 ; 'E'
ROM:EE3B 99 00 01                    STA     $100,Y
ROM:EE3E 8A                          TXA
ROM:EE3F A2 2F                       LDX     #$2F ; '/'
ROM:EE41 38                          SEC
ROM:EE42
ROM:EE42             loc_EE42:                               ; CODE XREF: FOUT+111↓j
ROM:EE42 E8                          INX
ROM:EE43 E9 0A                       SBC     #$A
ROM:EE45 B0 FB                       BCS     loc_EE42
ROM:EE47 69 3A                       ADC     #$3A ; ':'
ROM:EE49 99 03 01                    STA     $103,Y
ROM:EE4C 8A                          TXA
ROM:EE4D 99 02 01                    STA     $102,Y
ROM:EE50 A9 00                       LDA     #0
ROM:EE52 99 04 01                    STA     $104,Y
ROM:EE55 F0 08                       BEQ     loc_EE5F
ROM:EE57
ROM:EE57             loc_EE57:                               ; CODE XREF: FOUT+18↑j
ROM:EE57 99 FF 00                    STA     $FF,Y
ROM:EE5A
ROM:EE5A             loc_EE5A:                               ; CODE XREF: FOUT+F6↑j
ROM:EE5A A9 00                       LDA     #0
ROM:EE5C 99 00 01                    STA     $100,Y
ROM:EE5F
ROM:EE5F             loc_EE5F:                               ; CODE XREF: FOUT+121↑j
ROM:EE5F A9 00                       LDA     #0
ROM:EE61 A0 01                       LDY     #1
ROM:EE63 60                          RTS
ROM:EE63             ; End of function FOUT
ROM:EE63
ROM:EE63             ; ---------------------------------------------------------------------------
ROM:EE64 80          FHALF:          .BYTE $80
ROM:EE65 00                          .BYTE 0
ROM:EE66 00                          .BYTE 0
ROM:EE67 00                          .BYTE 0
ROM:EE68 00                          .BYTE 0
ROM:EE69 FA          byte_EE69:      .BYTE $FA
ROM:EE6A 0A          byte_EE6A:      .BYTE $A
ROM:EE6B 1F          byte_EE6B:      .BYTE $1F
ROM:EE6C 00          byte_EE6C:      .BYTE 0
ROM:EE6D 00                          .BYTE 0
ROM:EE6E 98                          .BYTE $98
ROM:EE6F 96                          .BYTE $96
ROM:EE70 80                          .BYTE $80
ROM:EE71 FF                          .BYTE $FF
ROM:EE72 F0                          .BYTE $F0
ROM:EE73 BD                          .BYTE $BD
ROM:EE74 C0                          .BYTE $C0
ROM:EE75 00                          .BYTE 0
ROM:EE76 01                          .BYTE 1
ROM:EE77 86                          .BYTE $86
ROM:EE78 A0                          .BYTE $A0
ROM:EE79 FF                          .BYTE $FF
ROM:EE7A FF                          .BYTE $FF
ROM:EE7B D8                          .BYTE $D8
ROM:EE7C F0                          .BYTE $F0
ROM:EE7D 00                          .BYTE 0
ROM:EE7E 00                          .BYTE 0
ROM:EE7F 03                          .BYTE 3
ROM:EE80 E8                          .BYTE $E8
ROM:EE81 FF                          .BYTE $FF
ROM:EE82 FF                          .BYTE $FF
ROM:EE83 FF                          .BYTE $FF
ROM:EE84 9C                          .BYTE $9C
ROM:EE85 00                          .BYTE 0
ROM:EE86 00                          .BYTE 0
ROM:EE87 00                          .BYTE 0
ROM:EE88 0A                          .BYTE $A
ROM:EE89 FF                          .BYTE $FF
ROM:EE8A FF                          .BYTE $FF
ROM:EE8B FF                          .BYTE $FF
ROM:EE8C FF                          .BYTE $FF
ROM:EE8D             ; ---------------------------------------------------------------------------
ROM:EE8D
ROM:EE8D             SQR:                                    ; DATA XREF: ROM:D090↑o
ROM:EE8D 20 63 EB                    JSR     MOVAF           ; EXPONENTIATION AND SQUARE ROOT FUNCTION.
ROM:EE90 A9 64                       LDA     #$64 ; 'd'
ROM:EE92 A0 EE                       LDY     #$EE
ROM:EE94 20 F9 EA                    JSR     MOVFM
ROM:EE97 F0 70                       BEQ     EXP
ROM:EE99 A5 A5                       LDA     byte_A5
ROM:EE9B D0 03                       BNE     FPWRT1
ROM:EE9D 4C 50 E8                    JMP     ZEROF1
ROM:EEA0             ; ---------------------------------------------------------------------------
ROM:EEA0
ROM:EEA0             FPWRT1:                                 ; CODE XREF: ROM:EE9B↑j
ROM:EEA0 A2 8A                       LDX     #$8A
ROM:EEA2 A0 00                       LDY     #0
ROM:EEA4 20 2B EB                    JSR     MOVMF
ROM:EEA7 A5 AA                       LDA     byte_AA
ROM:EEA9 10 0F                       BPL     loc_EEBA
ROM:EEAB 20 23 EC                    JSR     INT
ROM:EEAE A9 8A                       LDA     #$8A
ROM:EEB0 A0 00                       LDY     #0
ROM:EEB2 20 B2 EB                    JSR     FCOMP
ROM:EEB5 D0 03                       BNE     loc_EEBA
ROM:EEB7 98                          TYA
ROM:EEB8 A4 0D                       LDY     byte_D
ROM:EEBA
ROM:EEBA             loc_EEBA:                               ; CODE XREF: ROM:EEA9↑j
ROM:EEBA                                                     ; ROM:EEB5↑j
ROM:EEBA 20 55 EB                    JSR     MOVFA1
ROM:EEBD 98                          TYA
ROM:EEBE 48                          PHA
ROM:EEBF 20 41 E9                    JSR     LOG
ROM:EEC2 A9 8A                       LDA     #$8A
ROM:EEC4 A0 00                       LDY     #0
ROM:EEC6 20 7F E9                    JSR     FMULT
ROM:EEC9 20 09 EF                    JSR     EXP
ROM:EECC 68                          PLA
ROM:EECD 4A                          LSR     A
ROM:EECE
ROM:EECE             loc_EECE:
ROM:EECE 90 0A                       BCC     locret_EEDA
ROM:EED0
ROM:EED0             ; =============== S U B R O U T I N E =======================================
ROM:EED0
ROM:EED0
ROM:EED0             NEGOP:                                  ; CODE XREF: sub_9AB9+42↑p
ROM:EED0                                                     ; FIN:loc_ECBE↑j ...
ROM:EED0 A5 9D                       LDA     byte_9D
ROM:EED2 F0 06                       BEQ     locret_EEDA
ROM:EED4 A5 A2                       LDA     byte_A2
ROM:EED6 49 FF                       EOR     #$FF
ROM:EED8 85 A2                       STA     byte_A2
ROM:EEDA
ROM:EEDA             locret_EEDA:                            ; CODE XREF: ROM:loc_EECE↑j
ROM:EEDA                                                     ; NEGOP+2↑j
ROM:EEDA 60                          RTS
ROM:EEDA             ; End of function NEGOP
ROM:EEDA
ROM:EEDA             ; ---------------------------------------------------------------------------
ROM:EEDB 81          LOGEB2:         .BYTE $81               ; LOG E Base 2
ROM:EEDC 38                          .BYTE $38 ; 8
ROM:EEDD AA                          .BYTE $AA
ROM:EEDE 3B                          .BYTE $3B ; ;
ROM:EEDF 29                          .BYTE $29 ; )
ROM:EEE0 07          EXPCON:         .BYTE   7
ROM:EEE1 71                          .BYTE $71 ; q
ROM:EEE2 34                          .BYTE $34 ; 4
ROM:EEE3 58                          .BYTE $58 ; X
ROM:EEE4 3E                          .BYTE $3E ; >
ROM:EEE5 56                          .BYTE $56 ; V
ROM:EEE6 74                          .BYTE $74 ; t
ROM:EEE7 16                          .BYTE $16
ROM:EEE8 7E                          .BYTE $7E ; ~
ROM:EEE9 B3                          .BYTE $B3
ROM:EEEA 1B                          .BYTE $1B
ROM:EEEB 77                          .BYTE $77 ; w
ROM:EEEC 2F                          .BYTE $2F ; /
ROM:EEED EE                          .BYTE $EE
ROM:EEEE E3                          .BYTE $E3
ROM:EEEF 85                          .BYTE $85
ROM:EEF0 7A                          .BYTE $7A ; z
ROM:EEF1 1D                          .BYTE $1D
ROM:EEF2 84                          .BYTE $84
ROM:EEF3 1C                          .BYTE $1C
ROM:EEF4 2A                          .BYTE $2A ; *
ROM:EEF5 7C                          .BYTE $7C ; |
ROM:EEF6 63                          .BYTE $63 ; c
ROM:EEF7 59                          .BYTE $59 ; Y
ROM:EEF8 58                          .BYTE $58 ; X
ROM:EEF9 0A                          .BYTE  $A
ROM:EEFA 7E                          .BYTE $7E ; ~
ROM:EEFB 75                          .BYTE $75 ; u
ROM:EEFC FD                          .BYTE $FD
ROM:EEFD E7                          .BYTE $E7
ROM:EEFE C6                          .BYTE $C6
ROM:EEFF 80                          .BYTE $80
ROM:EF00 31                          .BYTE $31 ; 1
ROM:EF01 72                          .BYTE $72 ; r
ROM:EF02 18                          .BYTE $18
ROM:EF03 10                          .BYTE $10
ROM:EF04 81                          .BYTE $81
ROM:EF05 00                          .BYTE   0
ROM:EF06 00                          .BYTE   0
ROM:EF07 00                          .BYTE   0
ROM:EF08 00                          .BYTE   0
ROM:EF09
ROM:EF09             ; =============== S U B R O U T I N E =======================================
ROM:EF09
ROM:EF09
ROM:EF09             EXP:                                    ; CODE XREF: ROM:EE97↑j
ROM:EF09                                                     ; ROM:EEC9↑p
ROM:EF09                                                     ; DATA XREF: ...
ROM:EF09 A9 DB                       LDA     #$DB
ROM:EF0B A0 EE                       LDY     #$EE
ROM:EF0D 20 7F E9                    JSR     FMULT
ROM:EF10 A5 AC                       LDA     byte_AC
ROM:EF12 69 50                       ADC     #$50 ; 'P'
ROM:EF14 90 03                       BCC     STOLD
ROM:EF16 20 7A EB                    JSR     INCRND
ROM:EF19
ROM:EF19             STOLD:                                  ; CODE XREF: EXP+B↑j
ROM:EF19 85 92                       STA     byte_92
ROM:EF1B 20 66 EB                    JSR     loc_EB66
ROM:EF1E A5 9D                       LDA     byte_9D
ROM:EF20 C9 88                       CMP     #$88
ROM:EF22 90 03                       BCC     EXP1
ROM:EF24
ROM:EF24             GOMLDV:                                 ; CODE XREF: EXP+26↓j
ROM:EF24 20 2B EA                    JSR     MLDVEX
ROM:EF27
ROM:EF27             EXP1:                                   ; CODE XREF: EXP+19↑j
ROM:EF27 20 23 EC                    JSR     INT
ROM:EF2A A5 0D                       LDA     byte_D
ROM:EF2C 18                          CLC
ROM:EF2D 69 81                       ADC     #$81
ROM:EF2F F0 F3                       BEQ     GOMLDV
ROM:EF31 38                          SEC
ROM:EF32 E9 01                       SBC     #1
ROM:EF34 48                          PHA
ROM:EF35 A2 05                       LDX     #5
ROM:EF37
ROM:EF37             SWAPLP:                                 ; CODE XREF: EXP+37↓j
ROM:EF37 B5 A5                       LDA     $A5,X
ROM:EF39 B4 9D                       LDY     $9D,X
ROM:EF3B 95 9D                       STA     $9D,X
ROM:EF3D 94 A5                       STY     $A5,X
ROM:EF3F CA                          DEX
ROM:EF40 10 F5                       BPL     SWAPLP
ROM:EF42 A5 92                       LDA     byte_92
ROM:EF44 85 AC                       STA     byte_AC
ROM:EF46 20 AA E7                    JSR     FSUBT
ROM:EF49 20 D0 EE                    JSR     NEGOP
ROM:EF4C A9 E0                       LDA     #$E0
ROM:EF4E A0 EE                       LDY     #$EE
ROM:EF50 20 72 EF                    JSR     POLY
ROM:EF53 A9 00                       LDA     #0
ROM:EF55 85 AB                       STA     byte_AB
ROM:EF57 68                          PLA
ROM:EF58 20 10 EA                    JSR     loc_EA10
ROM:EF5B 60                          RTS
ROM:EF5B             ; End of function EXP
ROM:EF5B
ROM:EF5C
ROM:EF5C             ; =============== S U B R O U T I N E =======================================
ROM:EF5C
ROM:EF5C
ROM:EF5C             POLYX:                                  ; CODE XREF: ROM:E96D↑p
ROM:EF5C                                                     ; SIN+46↓j ...
ROM:EF5C 85 AD                       STA     byte_AD
ROM:EF5E 84 AE                       STY     byte_AE
ROM:EF60 20 21 EB                    JSR     MOV1F
ROM:EF63 A9 93                       LDA     #$93
ROM:EF65 20 7F E9                    JSR     FMULT
ROM:EF68 20 76 EF                    JSR     POLY1
ROM:EF6B A9 93                       LDA     #$93
ROM:EF6D A0 00                       LDY     #0
ROM:EF6F 4C 7F E9                    JMP     FMULT
ROM:EF6F             ; End of function POLYX
ROM:EF6F
ROM:EF72
ROM:EF72             ; =============== S U B R O U T I N E =======================================
ROM:EF72
ROM:EF72
ROM:EF72             POLY:                                   ; CODE XREF: EXP+47↑p
ROM:EF72 85 AD                       STA     byte_AD
ROM:EF74 84 AE                       STY     byte_AE
ROM:EF74             ; End of function POLY
ROM:EF74
ROM:EF76
ROM:EF76             ; =============== S U B R O U T I N E =======================================
ROM:EF76
ROM:EF76
ROM:EF76             POLY1:                                  ; CODE XREF: POLYX+C↑p
ROM:EF76 20 1E EB                    JSR     MOV2F
ROM:EF79 B1 AD                       LDA     ($AD),Y
ROM:EF7B 85 A3                       STA     byte_A3
ROM:EF7D A4 AD                       LDY     byte_AD
ROM:EF7F C8                          INY
ROM:EF80 98                          TYA
ROM:EF81 D0 02                       BNE     loc_EF85
ROM:EF83 E6 AE                       INC     byte_AE
ROM:EF85
ROM:EF85             loc_EF85:                               ; CODE XREF: POLY1+B↑j
ROM:EF85 85 AD                       STA     byte_AD
ROM:EF87 A4 AE                       LDY     byte_AE
ROM:EF89
ROM:EF89             loc_EF89:                               ; CODE XREF: POLY1+2D↓j
ROM:EF89 20 7F E9                    JSR     FMULT
ROM:EF8C A5 AD                       LDA     byte_AD
ROM:EF8E A4 AE                       LDY     byte_AE
ROM:EF90 18                          CLC
ROM:EF91 69 05                       ADC     #5
ROM:EF93 90 01                       BCC     loc_EF96
ROM:EF95 C8                          INY
ROM:EF96
ROM:EF96             loc_EF96:                               ; CODE XREF: POLY1+1D↑j
ROM:EF96 85 AD                       STA     byte_AD
ROM:EF98 84 AE                       STY     byte_AE
ROM:EF9A 20 BE E7                    JSR     FADD
ROM:EF9D A9 98                       LDA     #$98
ROM:EF9F A0 00                       LDY     #0
ROM:EFA1 C6 A3                       DEC     byte_A3
ROM:EFA3 D0 E4                       BNE     loc_EF89
ROM:EFA5
ROM:EFA5             locret_EFA5:                            ; CODE XREF: ROM:EFBC↓j
ROM:EFA5 60                          RTS
ROM:EFA5             ; End of function POLY1
ROM:EFA5
ROM:EFA5             ; ---------------------------------------------------------------------------
ROM:EFA6 98          RMULZC:         .BYTE $98
ROM:EFA7 35                          .BYTE $35 ; 5
ROM:EFA8 44                          .BYTE $44 ; D
ROM:EFA9 7A                          .BYTE $7A ; z
ROM:EFAA 68          RADDZC:         .BYTE $68 ; h
ROM:EFAB 28                          .BYTE $28 ; (
ROM:EFAC B1                          .BYTE $B1
ROM:EFAD 46                          .BYTE $46 ; F
ROM:EFAE             ; ---------------------------------------------------------------------------
ROM:EFAE
ROM:EFAE             RND:                                    ; DATA XREF: ROM:D092↑o
ROM:EFAE 20 82 EB                    JSR     SIGN
ROM:EFB1 AA                          TAX
ROM:EFB2 30 18                       BMI     RND1
ROM:EFB4 A9 C9                       LDA     #$C9
ROM:EFB6 A0 00                       LDY     #0
ROM:EFB8 20 F9 EA                    JSR     MOVFM
ROM:EFBB 8A                          TXA
ROM:EFBC F0 E7                       BEQ     locret_EFA5
ROM:EFBE A9 A6                       LDA     #$A6
ROM:EFC0 A0 EF                       LDY     #$EF
ROM:EFC2 20 7F E9                    JSR     FMULT
ROM:EFC5 A9 AA                       LDA     #$AA
ROM:EFC7 A0 EF                       LDY     #$EF
ROM:EFC9 20 BE E7                    JSR     FADD
ROM:EFCC
ROM:EFCC             RND1:                                   ; CODE XREF: ROM:EFB2↑j
ROM:EFCC A6 A1                       LDX     byte_A1
ROM:EFCE A5 9E                       LDA     byte_9E
ROM:EFD0 85 A1                       STA     byte_A1
ROM:EFD2 86 9E                       STX     byte_9E
ROM:EFD4 A9 00                       LDA     #0
ROM:EFD6 85 A2                       STA     byte_A2
ROM:EFD8 A5 9D                       LDA     byte_9D
ROM:EFDA 85 AC                       STA     byte_AC
ROM:EFDC A9 80                       LDA     #$80
ROM:EFDE 85 9D                       STA     byte_9D
ROM:EFE0 20 2E E8                    JSR     NORMAL_0
ROM:EFE3 A2 C9                       LDX     #$C9
ROM:EFE5 A0 00                       LDY     #0
ROM:EFE7
ROM:EFE7             ; =============== S U B R O U T I N E =======================================
ROM:EFE7
ROM:EFE7             ; Attributes: thunk
ROM:EFE7
ROM:EFE7             j_MOVMF:                                ; CODE XREF: ROM:F048↓p
ROM:EFE7 4C 2B EB                    JMP     MOVMF
ROM:EFE7             ; End of function j_MOVMF
ROM:EFE7
ROM:EFEA
ROM:EFEA             ; =============== S U B R O U T I N E =======================================
ROM:EFEA
ROM:EFEA             ; SINE, COSINE AND TANGENT FUNCTIONS.
ROM:EFEA
ROM:EFEA             COS:                                    ; CODE XREF: sub_99C8+23↑p
ROM:EFEA                                                     ; sub_9AB9+3↑p
ROM:EFEA                                                     ; DATA XREF: ...
ROM:EFEA A9 66                       LDA     #$66 ; 'f'
ROM:EFEC A0 F0                       LDY     #$F0
ROM:EFEE 20 BE E7                    JSR     FADD
ROM:EFEE             ; End of function COS
ROM:EFEE
ROM:EFF1
ROM:EFF1             ; =============== S U B R O U T I N E =======================================
ROM:EFF1
ROM:EFF1
ROM:EFF1             SIN:                                    ; CODE XREF: sub_99C8+30↑p
ROM:EFF1                                                     ; sub_9AB9+13↑p ...
ROM:EFF1 20 63 EB                    JSR     MOVAF
ROM:EFF4 A9 6B                       LDA     #$6B ; 'k'
ROM:EFF6 A0 F0                       LDY     #$F0
ROM:EFF8 A6 AA                       LDX     byte_AA
ROM:EFFA 20 5E EA                    JSR     FDIVF
ROM:EFFD 20 63 EB                    JSR     MOVAF
ROM:F000 20 23 EC                    JSR     INT
ROM:F003 A9 00                       LDA     #0
ROM:F005 85 AB                       STA     byte_AB
ROM:F007 20 AA E7                    JSR     FSUBT
ROM:F00A A9 70                       LDA     #$70 ; 'p'
ROM:F00C A0 F0                       LDY     #$F0
ROM:F00E 20 A7 E7                    JSR     FSUB
ROM:F011 A5 A2                       LDA     byte_A2
ROM:F013 48                          PHA
ROM:F014 10 0D                       BPL     SIN1
ROM:F016 20 A0 E7                    JSR     FADDH           ; FLOATING POINT ADDITION AND SUBTRACTION.
ROM:F019 A5 A2                       LDA     byte_A2
ROM:F01B 30 09                       BMI     loc_F026
ROM:F01D A5 16                       LDA     byte_16
ROM:F01F 49 FF                       EOR     #$FF
ROM:F021 85 16                       STA     byte_16
ROM:F023
ROM:F023             SIN1:                                   ; CODE XREF: SIN+23↑j
ROM:F023                                                     ; COSC+1↓j
ROM:F023 20 D0 EE                    JSR     NEGOP
ROM:F026
ROM:F026             loc_F026:                               ; CODE XREF: SIN+2A↑j
ROM:F026 A9 70                       LDA     #$70 ; 'p'
ROM:F028 A0 F0                       LDY     #$F0
ROM:F02A 20 BE E7                    JSR     FADD
ROM:F02D 68                          PLA
ROM:F02E 10 03                       BPL     loc_F033
ROM:F030 20 D0 EE                    JSR     NEGOP
ROM:F033
ROM:F033             loc_F033:                               ; CODE XREF: SIN+3D↑j
ROM:F033 A9 75                       LDA     #$75 ; 'u'
ROM:F035 A0 F0                       LDY     #$F0
ROM:F037 4C 5C EF                    JMP     POLYX
ROM:F037             ; End of function SIN
ROM:F037
ROM:F03A             ; ---------------------------------------------------------------------------
ROM:F03A
ROM:F03A             TAN:                                    ; DATA XREF: ROM:D09C↑o
ROM:F03A 20 21 EB                    JSR     MOV1F
ROM:F03D A9 00                       LDA     #0
ROM:F03F 85 16                       STA     byte_16
ROM:F041 20 F1 EF                    JSR     SIN
ROM:F044 A2 8A                       LDX     #$8A
ROM:F046 A0 00                       LDY     #0
ROM:F048 20 E7 EF                    JSR     j_MOVMF
ROM:F04B A9 93                       LDA     #$93
ROM:F04D A0 00                       LDY     #0
ROM:F04F 20 F9 EA                    JSR     MOVFM
ROM:F052 A9 00                       LDA     #0
ROM:F054 85 A2                       STA     byte_A2
ROM:F056 A5 16                       LDA     byte_16
ROM:F058 20 62 F0                    JSR     COSC
ROM:F05B A9 8A                       LDA     #$8A
ROM:F05D A0 00                       LDY     #0
ROM:F05F 4C 66 EA                    JMP     FDIV
ROM:F062
ROM:F062             ; =============== S U B R O U T I N E =======================================
ROM:F062
ROM:F062
ROM:F062             COSC:                                   ; CODE XREF: ROM:F058↑p
ROM:F062 48                          PHA
ROM:F063 4C 23 F0                    JMP     SIN1
ROM:F063             ; End of function COSC
ROM:F063
ROM:F063             ; ---------------------------------------------------------------------------
ROM:F066 81          PI2:            .BYTE $81
ROM:F067 49                          .BYTE $49 ; I
ROM:F068 0F                          .BYTE  $F
ROM:F069 DA                          .BYTE $DA
ROM:F06A A2                          .BYTE $A2
ROM:F06B 83                          .BYTE $83
ROM:F06C 49                          .BYTE $49 ; I
ROM:F06D 0F                          .BYTE  $F
ROM:F06E DA                          .BYTE $DA
ROM:F06F A2                          .BYTE $A2
ROM:F070 7F                          .BYTE $7F ; 
ROM:F071 00                          .BYTE   0
ROM:F072 00                          .BYTE   0
ROM:F073 00                          .BYTE   0
ROM:F074 00                          .BYTE   0
ROM:F075 05                          .BYTE   5
ROM:F076 84                          .BYTE $84
ROM:F077 E6                          .BYTE $E6
ROM:F078 1A                          .BYTE $1A
ROM:F079 2D                          .BYTE $2D ; -
ROM:F07A 1B                          .BYTE $1B
ROM:F07B 86                          .BYTE $86
ROM:F07C 28                          .BYTE $28 ; (
ROM:F07D 07                          .BYTE   7
ROM:F07E FB                          .BYTE $FB
ROM:F07F F8                          .BYTE $F8
ROM:F080 87                          .BYTE $87
ROM:F081 99                          .BYTE $99
ROM:F082 68                          .BYTE $68 ; h
ROM:F083 89                          .BYTE $89
ROM:F084 01                          .BYTE   1
ROM:F085 87                          .BYTE $87
ROM:F086 23                          .BYTE $23 ; #
ROM:F087 35                          .BYTE $35 ; 5
ROM:F088 DF                          .BYTE $DF
ROM:F089 E1                          .BYTE $E1
ROM:F08A 86                          .BYTE $86
ROM:F08B A5                          .BYTE $A5
ROM:F08C 5D                          .BYTE $5D ; ]
ROM:F08D E7                          .BYTE $E7
ROM:F08E 28                          .BYTE $28 ; (
ROM:F08F 83                          .BYTE $83
ROM:F090 49                          .BYTE $49 ; I
ROM:F091 0F                          .BYTE  $F
ROM:F092 DA                          .BYTE $DA
ROM:F093 A2                          .BYTE $A2
ROM:F094 A6                          .BYTE $A6
ROM:F095 D3                          .BYTE $D3
ROM:F096 C1                          .BYTE $C1
ROM:F097 C8                          .BYTE $C8
ROM:F098 D4                          .BYTE $D4
ROM:F099 C8                          .BYTE $C8
ROM:F09A D5                          .BYTE $D5
ROM:F09B C4                          .BYTE $C4
ROM:F09C CE                          .BYTE $CE
ROM:F09D CA                          .BYTE $CA
ROM:F09E             ; ---------------------------------------------------------------------------
ROM:F09E
ROM:F09E             ATN:                                    ; DATA XREF: ROM:D09E↑o
ROM:F09E A5 A2                       LDA     byte_A2
ROM:F0A0 48                          PHA
ROM:F0A1 10 03                       BPL     loc_F0A6
ROM:F0A3 20 D0 EE                    JSR     NEGOP
ROM:F0A6
ROM:F0A6             loc_F0A6:                               ; CODE XREF: ROM:F0A1↑j
ROM:F0A6 A5 9D                       LDA     byte_9D
ROM:F0A8 48                          PHA
ROM:F0A9 C9 81                       CMP     #$81
ROM:F0AB 90 07                       BCC     loc_F0B4
ROM:F0AD A9 13                       LDA     #$13
ROM:F0AF A0 E9                       LDY     #$E9
ROM:F0B1 20 66 EA                    JSR     FDIV
ROM:F0B4
ROM:F0B4             loc_F0B4:                               ; CODE XREF: ROM:F0AB↑j
ROM:F0B4 A9 CE                       LDA     #$CE
ROM:F0B6 A0 F0                       LDY     #$F0
ROM:F0B8 20 5C EF                    JSR     POLYX
ROM:F0BB 68                          PLA
ROM:F0BC C9 81                       CMP     #$81
ROM:F0BE 90 07                       BCC     loc_F0C7
ROM:F0C0 A9 66                       LDA     #$66 ; 'f'
ROM:F0C2 A0 F0                       LDY     #$F0
ROM:F0C4 20 A7 E7                    JSR     FSUB
ROM:F0C7
ROM:F0C7             loc_F0C7:                               ; CODE XREF: ROM:F0BE↑j
ROM:F0C7 68                          PLA
ROM:F0C8 10 03                       BPL     ATN4
ROM:F0CA 4C D0 EE                    JMP     NEGOP
ROM:F0CD             ; ---------------------------------------------------------------------------
ROM:F0CD
ROM:F0CD             ATN4:                                   ; CODE XREF: ROM:F0C8↑j
ROM:F0CD 60                          RTS
ROM:F0CD             ; ---------------------------------------------------------------------------
ROM:F0CE 0B          ATNCON:         .BYTE  $B
ROM:F0CF 76                          .BYTE $76 ; v
ROM:F0D0 B3                          .BYTE $B3
ROM:F0D1 83                          .BYTE $83
ROM:F0D2 BD                          .BYTE $BD
ROM:F0D3 D3                          .BYTE $D3
ROM:F0D4 79                          .BYTE $79 ; y
ROM:F0D5 1E                          .BYTE $1E
ROM:F0D6 F4                          .BYTE $F4
ROM:F0D7 A6                          .BYTE $A6
ROM:F0D8 F5                          .BYTE $F5
ROM:F0D9 7B                          .BYTE $7B ; {
ROM:F0DA 83                          .BYTE $83
ROM:F0DB FC                          .BYTE $FC
ROM:F0DC B0                          .BYTE $B0
ROM:F0DD 10                          .BYTE $10
ROM:F0DE 7C                          .BYTE $7C ; |
ROM:F0DF 0C                          .BYTE  $C
ROM:F0E0 1F                          .BYTE $1F
ROM:F0E1 67                          .BYTE $67 ; g
ROM:F0E2 CA                          .BYTE $CA
ROM:F0E3 7C                          .BYTE $7C ; |
ROM:F0E4 DE                          .BYTE $DE
ROM:F0E5 53                          .BYTE $53 ; S
ROM:F0E6 CB                          .BYTE $CB
ROM:F0E7 C1                          .BYTE $C1
ROM:F0E8 7D                          .BYTE $7D ; }
ROM:F0E9 14                          .BYTE $14
ROM:F0EA 64                          .BYTE $64 ; d
ROM:F0EB 70                          .BYTE $70 ; p
ROM:F0EC 4C                          .BYTE $4C ; L
ROM:F0ED 7D                          .BYTE $7D ; }
ROM:F0EE B7                          .BYTE $B7
ROM:F0EF EA                          .BYTE $EA
ROM:F0F0 51                          .BYTE $51 ; Q
ROM:F0F1 7A                          .BYTE $7A ; z
ROM:F0F2 7D                          .BYTE $7D ; }
ROM:F0F3 63                          .BYTE $63 ; c
ROM:F0F4 30                          .BYTE $30 ; 0
ROM:F0F5 88                          .BYTE $88
ROM:F0F6 7E                          .BYTE $7E ; ~
ROM:F0F7 7E                          .BYTE $7E ; ~
ROM:F0F8 92                          .BYTE $92
ROM:F0F9 44                          .BYTE $44 ; D
ROM:F0FA 99                          .BYTE $99
ROM:F0FB 3A                          .BYTE $3A ; :
ROM:F0FC 7E                          .BYTE $7E ; ~
ROM:F0FD 4C                          .BYTE $4C ; L
ROM:F0FE CC                          .BYTE $CC
ROM:F0FF 91                          .BYTE $91
ROM:F100 C7                          .BYTE $C7
ROM:F101 7F                          .BYTE $7F ; 
ROM:F102 AA                          .BYTE $AA
ROM:F103 AA                          .BYTE $AA
ROM:F104 AA                          .BYTE $AA
ROM:F105 13                          .BYTE $13
ROM:F106 81                          .BYTE $81
ROM:F107 00                          .BYTE   0
ROM:F108 00                          .BYTE   0
ROM:F109 00                          .BYTE   0
ROM:F10A 00                          .BYTE   0
ROM:F10B E6                          .BYTE $E6
ROM:F10C B8                          .BYTE $B8
ROM:F10D D0                          .BYTE $D0
ROM:F10E 02                          .BYTE   2
ROM:F10F E6                          .BYTE $E6
ROM:F110 B9                          .BYTE $B9
ROM:F111 AD                          .BYTE $AD
ROM:F112 99                          .BYTE $99
ROM:F113 99                          .BYTE $99
ROM:F114             ; ---------------------------------------------------------------------------
ROM:F114 4C 17 F1                    JMP     loc_F117
ROM:F117             ; ---------------------------------------------------------------------------
ROM:F117
ROM:F117             loc_F117:                               ; CODE XREF: ROM:F114↑j
ROM:F117 C9 3A                       CMP     #$3A ; ':'
ROM:F119 B0 0A                       BCS     locret_F125
ROM:F11B C9 20                       CMP     #$20 ; ' '
ROM:F11D F0 07                       BEQ     loc_F126
ROM:F11F 38                          SEC
ROM:F120 E9 30                       SBC     #$30 ; '0'
ROM:F122 38                          SEC
ROM:F123 E9 D0                       SBC     #$D0
ROM:F125
ROM:F125             locret_F125:                            ; CODE XREF: ROM:F119↑j
ROM:F125 60                          RTS
ROM:F126             ; ---------------------------------------------------------------------------
ROM:F126
ROM:F126             loc_F126:                               ; CODE XREF: ROM:F11D↑j
ROM:F126 4C B1 00                    JMP     CHRGET
ROM:F126             ; ---------------------------------------------------------------------------
ROM:F129 80          INTRND:         .BYTE $80               ; DATA XREF: PTRGT2:loc_F144↓t
ROM:F129                                                     ; initial random number
ROM:F12A 4F                          .BYTE $4F ; O
ROM:F12B C7                          .BYTE $C7
ROM:F12C 52                          .BYTE $52 ; R
ROM:F12D 58                          .BYTE $58 ; X
ROM:F12E             ; ---------------------------------------------------------------------------
ROM:F12E             ; START OF FUNCTION CHUNK FOR PTRGT2
ROM:F12E
ROM:F12E             BASIC_START:                            ; CODE XREF: PTRGT2:BASIC_COLD↑j
ROM:F12E 20 0B F2                    JSR     sub_F20B
ROM:F131 A2 FF                       LDX     #$FF
ROM:F133 86 76                       STX     byte_76
ROM:F135 A2 FB                       LDX     #$FB
ROM:F137 9A                          TXS
ROM:F138 A2 0C                       LDX     #$C
ROM:F13A
ROM:F13A             loc_F13A:                               ; CODE XREF: PTRGT2+1156↓j
ROM:F13A BD 0A F1                    LDA     $F10A,X
ROM:F13D 95 B0                       STA     $B0,X
ROM:F13F CA                          DEX
ROM:F140 D0 F8                       BNE     loc_F13A
ROM:F142 A2 05                       LDX     #5
ROM:F144
ROM:F144             loc_F144:                               ; CODE XREF: PTRGT2+1160↓j
ROM:F144 BD 28 F1                    LDA     INTRND-1        ; initial random number
ROM:F147 95 C8                       STA     $C8,X
ROM:F149 CA                          DEX
ROM:F14A D0 F8                       BNE     loc_F144
ROM:F14C A9 99                       LDA     #$99
ROM:F14E 8D FD 01                    STA     byte_1FD
ROM:F151 8A                          TXA
ROM:F152 CA                          DEX
ROM:F153 86 32                       STX     INVFLG
ROM:F155 85 54                       STA     byte_54
ROM:F157 85 A4                       STA     byte_A4
ROM:F159 A2 01                       LDX     #1
ROM:F15B 86 E7                       STX     byte_E7
ROM:F15D 86 F1                       STX     byte_F1
ROM:F15F 85 F2                       STA     byte_F2
ROM:F161 85 F3                       STA     byte_F3
ROM:F163 85 F9                       STA     byte_F9
ROM:F165 48                          PHA
ROM:F166 A0 C0                       LDY     #$C0
ROM:F168 85 73                       STA     byte_73
ROM:F16A 84 74                       STY     byte_74
ROM:F16C 85 6F                       STA     byte_6F
ROM:F16E 84 70                       STY     byte_70
ROM:F170 A4 68                       LDY     TXTABH
ROM:F172 C0 08                       CPY     #8
ROM:F174 F0 02                       BEQ     loc_F178
ROM:F176 A0 18                       LDY     #$18
ROM:F178
ROM:F178             loc_F178:                               ; CODE XREF: PTRGT2+118A↑j
ROM:F178 84 68                       STY     TXTABH
ROM:F17A 85 67                       STA     TXTABL
ROM:F17C A8                          TAY
ROM:F17D 91 67                       STA     ($67),Y
ROM:F17F E6 67                       INC     TXTABL
ROM:F181 A4 68                       LDY     TXTABH
ROM:F183 20 E3 D3                    JSR     REASON
ROM:F186 20 4B D6                    JSR     SCRATCH
ROM:F189 A9 3C                       LDA     #$3C ; '<'
ROM:F18B A0 D4                       LDY     #$D4
ROM:F18D 85 01                       STA     byte_1
ROM:F18F 84 02                       STY     byte_2
ROM:F191 A9 3A                       LDA     #$3A ; ':'
ROM:F193 A0 DB                       LDY     #$DB
ROM:F195 85 04                       STA     byte_4
ROM:F197 84 05                       STY     byte_5
ROM:F199 A9 99                       LDA     #$99
ROM:F19B A0 E1                       LDY     #$E1
ROM:F19D 85 0B                       STA     byte_B
ROM:F19F 84 0C                       STY     byte_C
ROM:F1A1 A9 4C                       LDA     #$4C ; 'L'
ROM:F1A3 85 00                       STA     byte_0
ROM:F1A5 85 03                       STA     byte_3
ROM:F1A7 85 0A                       STA     byte_A
ROM:F1A9 85 90                       STA     JMPER
ROM:F1AB 20 FB DA                    JSR     CRDO
ROM:F1AE 6C 01 00                    JMP     (byte_1)
ROM:F1AE             ; END OF FUNCTION CHUNK FOR PTRGT2
ROM:F1AE             ; ---------------------------------------------------------------------------
ROM:F1B1 4F                          .BYTE $4F ; O
ROM:F1B2 55                          .BYTE $55 ; U
ROM:F1B3 54                          .BYTE $54 ; T
ROM:F1B4 31                          .BYTE $31 ; 1
ROM:F1B5 20                          .BYTE $20
ROM:F1B6 ED                          .BYTE $ED
ROM:F1B7 41                          .BYTE $41 ; A
ROM:F1B8 A5                          .BYTE $A5
ROM:F1B9 67                          .BYTE $67 ; g
ROM:F1BA 4C                          .BYTE $4C ; L
ROM:F1BB 81                          .BYTE $81
ROM:F1BC F1                          .BYTE $F1
ROM:F1BD
ROM:F1BD             ; =============== S U B R O U T I N E =======================================
ROM:F1BD
ROM:F1BD             ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F1BD
ROM:F1BD             HRSEXT:                                 ; CODE XREF: RAM:loc_9F26↑j
ROM:F1BD                                                     ; RAM:9F66↑j ...
ROM:F1BD 08                          PHP
ROM:F1BE 48                          PHA
ROM:F1BF A5 C7                       LDA     PBANK3          ; Save SBANK3 value : $8000-$BFFF
ROM:F1C1 C9 10                       CMP     #$10
ROM:F1C3 90 02                       BCC     loc_F1C7
ROM:F1C5 A9 03                       LDA     #3
ROM:F1C7
ROM:F1C7             loc_F1C7:                               ; CODE XREF: HRSEXT+6↑j
ROM:F1C7 8D 7E C0                    STA     SBANK3          ; $8000-$BFFF
ROM:F1CA 68                          PLA
ROM:F1CB 28                          PLP
ROM:F1CC 60                          RTS
ROM:F1CC             ; End of function HRSEXT
ROM:F1CC
ROM:F1CC             ; ---------------------------------------------------------------------------
ROM:F1CD 20                          .BYTE $20
ROM:F1CE ED                          .BYTE $ED
ROM:F1CF 62                          .BYTE 'b'
ROM:F1D0 46                          .BYTE 'F'
ROM:F1D1 4F                          .BYTE 'O'
ROM:F1D2 55                          .BYTE 'U'
ROM:F1D3 54                          .BYTE 'T'
ROM:F1D4 33                          .BYTE '3'
ROM:F1D5             ; ---------------------------------------------------------------------------
ROM:F1D5
ROM:F1D5             do_CALL:                                ; DATA XREF: ROM:D018↑t
ROM:F1D5 20 67 DD                    JSR     FRMNUM
ROM:F1D8 20 52 E7                    JSR     GETADR_50       ; evaluate 2 byte address value => $50,$51
ROM:F1DB 6C 50 00                    JMP     (byte_50)
ROM:F1DE             ; ---------------------------------------------------------------------------
ROM:F1DE
ROM:F1DE             do_IN:                                  ; DATA XREF: ROM:D016↑t
ROM:F1DE 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:F1E1 8A                          TXA
ROM:F1E2 4C F9 F1                    JMP     loc_F1F9
ROM:F1E5             ; ---------------------------------------------------------------------------
ROM:F1E5
ROM:F1E5             do_PR:                                  ; DATA XREF: ROM:D014↑t
ROM:F1E5 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:F1E8 8A                          TXA
ROM:F1E9 E0 08                       CPX     #8              ; check range on slot#
ROM:F1EB F0 03                       BEQ     list_fn         ; PR#8 = List current Function Key settings
ROM:F1ED 4C 95 FE                    JMP     SLOT_OUTPUT
ROM:F1F0             ; ---------------------------------------------------------------------------
ROM:F1F0
ROM:F1F0             list_fn:                                ; CODE XREF: ROM:F1EB↑j
ROM:F1F0 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F1F3 20 69 AC                    JSR     LIST_FN_KEYS    ; list current settings of function keys
ROM:F1F6 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F1F9             ; ---------------------------------------------------------------------------
ROM:F1F9
ROM:F1F9             loc_F1F9:                               ; CODE XREF: ROM:F1E2↑j
ROM:F1F9 E0 08                       CPX     #8
ROM:F1FB F0 03                       BEQ     redef_fn_key    ; re-define FN keys with IN#8<RET><FKEY>new key command<ESC><ESC>
ROM:F1FD 4C 8B FE                    JMP     IN_normal
ROM:F200             ; ---------------------------------------------------------------------------
ROM:F200
ROM:F200             redef_fn_key:                           ; CODE XREF: ROM:F1FB↑j
ROM:F200 20 00 F8                    JSR     j_FRAMOI
ROM:F203 A9 66                       LDA     #$66 ; 'f'
ROM:F205 8D 00 48                    STA     KEYFLG
ROM:F208 4C 03 F8                    JMP     j_FRAMOU
ROM:F20B
ROM:F20B             ; =============== S U B R O U T I N E =======================================
ROM:F20B
ROM:F20B
ROM:F20B             sub_F20B:                               ; CODE XREF: PTRGT2:BASIC_START↑p
ROM:F20B 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F20E 20 00 F8                    JSR     j_FRAMOI
ROM:F211 A9 00                       LDA     #0
ROM:F213 A8                          TAY
ROM:F214
ROM:F214             loc_F214:                               ; CODE XREF: sub_F20B+10↓j
ROM:F214 99 00 48                    STA     $4800,Y
ROM:F217 B9 F0 90                    LDA     DEFAULT_FN_KEYS,Y
ROM:F21A C8                          INY
ROM:F21B D0 F7                       BNE     loc_F214
ROM:F21D 20 03 F8                    JSR     j_FRAMOU
ROM:F220 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F220             ; End of function sub_F20B
ROM:F220
ROM:F220             ; ---------------------------------------------------------------------------
ROM:F223 54                          .BYTE $54 ; T
ROM:F224 32                          .BYTE $32 ; 2
ROM:F225 20                          .BYTE $20
ROM:F226 ED                          .BYTE $ED
ROM:F227 C1                          .BYTE $C1
ROM:F228 60                          .BYTE $60 ; `
ROM:F229
ROM:F229             ; =============== S U B R O U T I N E =======================================
ROM:F229
ROM:F229
ROM:F229             RENEW:                                  ; CODE XREF: ESCHK+63↑p
ROM:F229 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F22C 20 D5 AC                    JSR     loc_ACD5
ROM:F22F 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F22F             ; End of function RENEW
ROM:F22F
ROM:F232             ; ---------------------------------------------------------------------------
ROM:F232
ROM:F232             do_TRON:                                ; DATA XREF: ROM:D036↑t
ROM:F232 A9 80                       LDA     #$80
ROM:F234 85 F2                       STA     byte_F2
ROM:F236 60                          RTS
ROM:F237             ; ---------------------------------------------------------------------------
ROM:F237
ROM:F237             do_TROFF:                               ; CODE XREF: ROM:F26F↓j
ROM:F237                                                     ; DATA XREF: ROM:D038↑t
ROM:F237 A9 00                       LDA     #0
ROM:F239 85 F2                       STA     byte_F2
ROM:F23B 60                          RTS
ROM:F23C
ROM:F23C             ; =============== S U B R O U T I N E =======================================
ROM:F23C
ROM:F23C
ROM:F23C             NORMAL:                                 ; CODE XREF: ROM:D5D4↑p
ROM:F23C                                                     ; ROM:F273↓j
ROM:F23C                                                     ; DATA XREF: ...
ROM:F23C A9 FF                       LDA     #$FF
ROM:F23E A2 00                       LDX     #0
ROM:F240 85 32                       STA     INVFLG
ROM:F242 86 F3                       STX     byte_F3
ROM:F244 60                          RTS
ROM:F244             ; End of function NORMAL
ROM:F244
ROM:F245             ; ---------------------------------------------------------------------------
ROM:F245
ROM:F245             FLASH:                                  ; CODE XREF: ROM:F280↓j
ROM:F245                                                     ; DATA XREF: ROM:D03E↑t
ROM:F245 A9 7F                       LDA     #$7F
ROM:F247 A2 40                       LDX     #$40 ; '@'
ROM:F249 85 32                       STA     INVFLG
ROM:F24B 86 F3                       STX     byte_F3
ROM:F24D 60                          RTS
ROM:F24D             ; ---------------------------------------------------------------------------
ROM:F24E EE                          .BYTE $EE
ROM:F24F 19                          .BYTE $19
ROM:F250 46                          .BYTE $46 ; F
ROM:F251 4F                          .BYTE $4F
ROM:F252 60                          .BYTE $60 ; `
ROM:F253             ; ---------------------------------------------------------------------------
ROM:F253
ROM:F253             loc_F253:                               ; CODE XREF: ROM:F25D↓j
ROM:F253 4C 99 E1                    JMP     FCERR
ROM:F256             ; ---------------------------------------------------------------------------
ROM:F256
ROM:F256             VTAB_0:                                 ; DATA XREF: ROM:D044↑t
ROM:F256 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:F259 CA                          DEX
ROM:F25A 8A                          TXA
ROM:F25B E0 18                       CPX     #24
ROM:F25D B0 F4                       BCS     loc_F253
ROM:F25F 4C 5B FB                    JMP     MTABV
ROM:F262             ; ---------------------------------------------------------------------------
ROM:F262
ROM:F262             do_SPEED:                               ; DATA XREF: ROM:D052↑t
ROM:F262 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:F265 CA                          DEX
ROM:F266 86 F1                       STX     byte_F1
ROM:F268 A9 FF                       LDA     #$FF
ROM:F26A 45 F1                       EOR     byte_F1
ROM:F26C 85 F1                       STA     byte_F1
ROM:F26E 60                          RTS
ROM:F26F             ; ---------------------------------------------------------------------------
ROM:F26F 4C 37 F2                    JMP     do_TROFF
ROM:F272             ; ---------------------------------------------------------------------------
ROM:F272 EA                          NOP
ROM:F273 4C 3C F2                    JMP     NORMAL
ROM:F276             ; ---------------------------------------------------------------------------
ROM:F276 EA                          NOP
ROM:F277
ROM:F277             INVERSE:                                ; DATA XREF: ROM:D03C↑t
ROM:F277 A2 00                       LDX     #0
ROM:F279 A9 3F                       LDA     #$3F ; '?'
ROM:F27B 86 F3                       STX     byte_F3
ROM:F27D 85 32                       STA     INVFLG
ROM:F27F 60                          RTS
ROM:F280             ; ---------------------------------------------------------------------------
ROM:F280 4C 45 F2                    JMP     FLASH
ROM:F283             ; ---------------------------------------------------------------------------
ROM:F283 4C 3C D4                    JMP     MAIN
ROM:F286             ; ---------------------------------------------------------------------------
ROM:F286
ROM:F286             do_HIMEM:                               ; DATA XREF: ROM:D046↑t
ROM:F286 20 67 DD                    JSR     FRMNUM
ROM:F289 20 52 E7                    JSR     GETADR_50       ; evaluate 2 byte address value => $50,$51
ROM:F28C C5 6E                       CMP     byte_6E
ROM:F28E 90 0B                       BCC     loc_F29B
ROM:F290 F0 09                       BEQ     loc_F29B
ROM:F292 84 73                       STY     byte_73
ROM:F294 85 74                       STA     byte_74
ROM:F296 84 6F                       STY     byte_6F
ROM:F298 85 70                       STA     byte_70
ROM:F29A 60                          RTS
ROM:F29B             ; ---------------------------------------------------------------------------
ROM:F29B
ROM:F29B             loc_F29B:                               ; CODE XREF: ROM:F28E↑j
ROM:F29B                                                     ; ROM:F290↑j ...
ROM:F29B 4C 10 D4                    JMP     OMERROR         ; ERROR HANDLER, READY, TERMINAL INPUT, COMPACTIFY, NEW, REINIT.
ROM:F29B             ; ---------------------------------------------------------------------------
ROM:F29E EE                          .BYTE $EE
ROM:F29F 97                          .BYTE $97
ROM:F2A0 46                          .BYTE $46 ; F
ROM:F2A1 50                          .BYTE $50 ; P
ROM:F2A2 57                          .BYTE $57 ; W
ROM:F2A3 52                          .BYTE $52 ; R
ROM:F2A4 54                          .BYTE $54 ; T
ROM:F2A5 31                          .BYTE $31 ; 1
ROM:F2A6             ; ---------------------------------------------------------------------------
ROM:F2A6
ROM:F2A6             do_LOMEM:                               ; DATA XREF: ROM:D048↑t
ROM:F2A6 20 67 DD                    JSR     FRMNUM
ROM:F2A9 20 52 E7                    JSR     GETADR_50       ; evaluate 2 byte address value => $50,$51
ROM:F2AC C5 74                       CMP     byte_74
ROM:F2AE B0 EB                       BCS     loc_F29B
ROM:F2B0 C5 6A                       CMP     byte_6A
ROM:F2B2 90 E7                       BCC     loc_F29B
ROM:F2B4 F0 E5                       BEQ     loc_F29B
ROM:F2B6 84 69                       STY     byte_69
ROM:F2B8 85 6A                       STA     byte_6A
ROM:F2BA 4C 6C D6                    JMP     CLEARC
ROM:F2BD
ROM:F2BD             ; =============== S U B R O U T I N E =======================================
ROM:F2BD
ROM:F2BD
ROM:F2BD             LINGET_0:                               ; CODE XREF: REASON:MAIN1↑p
ROM:F2BD A6 AF                       LDX     byte_AF
ROM:F2BF 86 69                       STX     byte_69
ROM:F2C1 A6 B0                       LDX     byte_B0
ROM:F2C3 86 6A                       STX     byte_6A
ROM:F2C5 4C 0C DA                    JMP     LINGET          ; "LINGET" READS A LINE NUMBER FROM THE CURRENT TEXT POSITION.
ROM:F2C5             ; End of function LINGET_0
ROM:F2C5
ROM:F2C5             ; ---------------------------------------------------------------------------
ROM:F2C8 45                          .BYTE $45 ; E
ROM:F2C9 58                          .BYTE $58 ; X
ROM:F2CA 50                          .BYTE $50 ; P
ROM:F2CB 43                          .BYTE $43 ; C
ROM:F2CC             ; ---------------------------------------------------------------------------
ROM:F2CC
ROM:F2CC             do_ONERR:                               ; DATA XREF: ROM:D04A↑t
ROM:F2CC A9 AB                       LDA     #$AB
ROM:F2CE 20 C0 DE                    JSR     SYNCHR
ROM:F2D1 A9 80                       LDA     #$80
ROM:F2D3 85 D8                       STA     byte_D8
ROM:F2D5 A5 75                       LDA     byte_75
ROM:F2D7 85 F6                       STA     byte_F6
ROM:F2D9 A5 76                       LDA     byte_76
ROM:F2DB 85 F7                       STA     byte_F7
ROM:F2DD A5 B8                       LDA     byte_B8
ROM:F2DF 85 F4                       STA     byte_F4
ROM:F2E1 A5 B9                       LDA     byte_B9
ROM:F2E3 85 F5                       STA     byte_F5
ROM:F2E5 20 A6 D9                    JSR     REMN
ROM:F2E8 4C 98 D9                    JMP     ADDON
ROM:F2EB             ; ---------------------------------------------------------------------------
ROM:F2EB             ; START OF FUNCTION CHUNK FOR REASON
ROM:F2EB             ;   ADDITIONAL PARENT FUNCTION sub_D858
ROM:F2EB             ;   ADDITIONAL PARENT FUNCTION INPCO1
ROM:F2EB
ROM:F2EB             loc_F2EB:                               ; CODE XREF: REASON+35↑j
ROM:F2EB                                                     ; sub_D858+11↑j ...
ROM:F2EB A5 75                       LDA     byte_75
ROM:F2ED A6 76                       LDX     byte_76
ROM:F2EF 85 DA                       STA     byte_DA
ROM:F2F1 86 DB                       STX     byte_DB
ROM:F2F3 A5 F6                       LDA     byte_F6
ROM:F2F5 A6 F7                       LDX     byte_F7
ROM:F2F7 85 75                       STA     byte_75
ROM:F2F9 86 76                       STX     byte_76
ROM:F2FB A5 79                       LDA     byte_79
ROM:F2FD A6 7A                       LDX     byte_7A
ROM:F2FF 85 DC                       STA     byte_DC
ROM:F301 86 DD                       STX     byte_DD
ROM:F303 A5 F4                       LDA     byte_F4
ROM:F305 A6 F5                       LDX     byte_F5
ROM:F307 85 B8                       STA     byte_B8
ROM:F309 86 B9                       STX     byte_B9
ROM:F30B A6 F8                       LDX     byte_F8
ROM:F30D 86 DF                       STX     byte_DF
ROM:F30F 20 B7 00                    JSR     CHRGOT
ROM:F312 20 3E D9                    JSR     GOTO
ROM:F315 4C D2 D7                    JMP     NEWSTT
ROM:F315             ; END OF FUNCTION CHUNK FOR REASON
ROM:F318             ; ---------------------------------------------------------------------------
ROM:F318
ROM:F318             do_RESUME:                              ; DATA XREF: ROM:D04C↑t
ROM:F318 A5 DA                       LDA     byte_DA
ROM:F31A A6 DB                       LDX     byte_DB
ROM:F31C 85 75                       STA     byte_75
ROM:F31E 86 76                       STX     byte_76
ROM:F320 A5 DC                       LDA     byte_DC
ROM:F322 A6 DD                       LDX     byte_DD
ROM:F324 85 B8                       STA     byte_B8
ROM:F326 86 B9                       STX     byte_B9
ROM:F328 A6 DF                       LDX     byte_DF
ROM:F32A 9A                          TXS
ROM:F32B 4C D2 D7                    JMP     NEWSTT
ROM:F32E             ; ---------------------------------------------------------------------------
ROM:F32E
ROM:F32E             loc_F32E:                               ; CODE XREF: ROM:F331↓j
ROM:F32E                                                     ; ROM:F35E↓j
ROM:F32E 4C C9 DE                    JMP     SNERR
ROM:F331             ; ---------------------------------------------------------------------------
ROM:F331 B0 FB                       BCS     loc_F32E
ROM:F333 20 0C DA                    JSR     LINGET          ; "LINGET" READS A LINE NUMBER FROM THE CURRENT TEXT POSITION.
ROM:F336 20 1A D6                    JSR     FINDLINE        ; SEARCHES THE PROGRAM TEXT FOR THE LINE
ROM:F336                                                     ;
ROM:F339 A5 9B                       LDA     byte_9B
ROM:F33B A6 9C                       LDX     byte_9C
ROM:F33D 85 42                       STA     REG4L
ROM:F33F 86 43                       STX     REG4H
ROM:F341 A9 2C                       LDA     #$2C ; ','
ROM:F343 20 C0 DE                    JSR     SYNCHR
ROM:F346 20 0C DA                    JSR     LINGET          ; "LINGET" READS A LINE NUMBER FROM THE CURRENT TEXT POSITION.
ROM:F349 E6 50                       INC     byte_50
ROM:F34B D0 02                       BNE     loc_F34F
ROM:F34D E6 51                       INC     byte_51
ROM:F34F
ROM:F34F             loc_F34F:                               ; CODE XREF: ROM:F34B↑j
ROM:F34F 20 1A D6                    JSR     FINDLINE        ; SEARCHES THE PROGRAM TEXT FOR THE LINE
ROM:F34F                                                     ;
ROM:F352 A5 9B                       LDA     byte_9B
ROM:F354 85 3C                       STA     REG1L
ROM:F356 C5 42                       CMP     REG4L
ROM:F358 A5 9C                       LDA     byte_9C
ROM:F35A 85 3D                       STA     REG1H
ROM:F35C E5 43                       SBC     REG4H
ROM:F35E 90 CE                       BCC     loc_F32E
ROM:F360 A5 AF                       LDA     byte_AF
ROM:F362 A6 B0                       LDX     byte_B0
ROM:F364 85 69                       STA     byte_69
ROM:F366 85 3E                       STA     REG2L
ROM:F368 86 6A                       STX     byte_6A
ROM:F36A 86 3F                       STX     REG2H
ROM:F36C A0 00                       LDY     #0
ROM:F36E 20 2C FE                    JSR     MOVE
ROM:F371 A5 43                       LDA     REG4H
ROM:F373 A6 42                       LDX     REG4L
ROM:F375 85 6A                       STA     byte_6A
ROM:F377 86 69                       STX     byte_69
ROM:F379 D0 02                       BNE     loc_F37D
ROM:F37B C6 6A                       DEC     byte_6A
ROM:F37D
ROM:F37D             loc_F37D:                               ; CODE XREF: ROM:F379↑j
ROM:F37D C6 69                       DEC     byte_69
ROM:F37F 4C F2 D4                    JMP     loc_D4F2
ROM:F37F             ; ---------------------------------------------------------------------------
ROM:F382 52 45 44 4F+aRedoFromStart: .BYTE 'REDO FROM START',$D,0
ROM:F393 20                          .BYTE $20
ROM:F394 20                          .BYTE $20
ROM:F395 20                          .BYTE $20
ROM:F396 F0                          .BYTE $F0
ROM:F397 66                          .BYTE $66 ; f
ROM:F398 54                          .BYTE $54 ; T
ROM:F399             ; ---------------------------------------------------------------------------
ROM:F399
ROM:F399             do_TEXT:                                ; DATA XREF: ROM:D012↑t
ROM:F399 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F39C 20 43 A6                    JSR     TEXT
ROM:F39F 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F3A2             ; ---------------------------------------------------------------------------
ROM:F3A2
ROM:F3A2             do_STORE:                               ; DATA XREF: ROM:D050↑t
ROM:F3A2 A9 66                       LDA     #$66 ; 'f'      ; store data array to tape
ROM:F3A4 85 14                       STA     byte_14
ROM:F3A6 20 E3 DF                    JSR     PTRGET
ROM:F3A9 A9 66                       LDA     #$66 ; 'f'
ROM:F3AB 45 14                       EOR     byte_14
ROM:F3AD 85 14                       STA     byte_14
ROM:F3AF A0 02                       LDY     #2
ROM:F3B1 B1 9B                       LDA     ($9B),Y
ROM:F3B3 85 D0                       STA     byte_D0
ROM:F3B5 C8                          INY
ROM:F3B6 B1 9B                       LDA     ($9B),Y
ROM:F3B8 85 D1                       STA     byte_D1
ROM:F3BA A5 D0                       LDA     byte_D0
ROM:F3BC D0 02                       BNE     loc_F3C0
ROM:F3BE C6 D1                       DEC     byte_D1
ROM:F3C0
ROM:F3C0             loc_F3C0:                               ; CODE XREF: ROM:F3BC↑j
ROM:F3C0 C6 D0                       DEC     byte_D0
ROM:F3C2 20 F0 D8                    JSR     sub_D8F0
ROM:F3C5 20 CD FE                    JSR     j_MTSAVE
ROM:F3C8 20 B8 F7                    JSR     sub_F7B8
ROM:F3CB 4C CD FE                    JMP     j_MTSAVE
ROM:F3CE
ROM:F3CE             ; =============== S U B R O U T I N E =======================================
ROM:F3CE
ROM:F3CE             ; bring in lower half of ROM to $8000-$BFFF
ROM:F3CE
ROM:F3CE             EXT_BASIC:                              ; CODE XREF: REASON:GETERR↑p
ROM:F3CE                                                     ; CRUNCH↑p ...
ROM:F3CE 08                          PHP
ROM:F3CF 48                          PHA
ROM:F3D0 A9 0E                       LDA     #$E             ; Bring in lower half of BASIC to $8000-$BFFF
ROM:F3D2 8D 7E C0                    STA     SBANK3          ; $8000-$BFFF
ROM:F3D5 68                          PLA
ROM:F3D6 28                          PLP
ROM:F3D7 60                          RTS
ROM:F3D7             ; End of function EXT_BASIC
ROM:F3D7
ROM:F3D8             ; ---------------------------------------------------------------------------
ROM:F3D8
ROM:F3D8             do_HGR2:                                ; DATA XREF: ROM:D020↑t
ROM:F3D8 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F3DB 20 61 95                    JSR     set_HGR2
ROM:F3DE 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F3E1 60                          RTS
ROM:F3E2             ; ---------------------------------------------------------------------------
ROM:F3E2 4C 1A F4                    JMP     do_HGR
ROM:F3E5             ; ---------------------------------------------------------------------------
ROM:F3E5             ; START OF FUNCTION CHUNK FOR sub_99C8
ROM:F3E5
ROM:F3E5             loc_F3E5:                               ; CODE XREF: sub_99C8+5F↑j
ROM:F3E5 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F3E8 4C DC D9                    JMP     loc_D9DC
ROM:F3E8             ; END OF FUNCTION CHUNK FOR sub_99C8
ROM:F3E8             ; ---------------------------------------------------------------------------
ROM:F3EB 47                          .BYTE $47 ; G
ROM:F3EC 4F                          .BYTE $4F ; O
ROM:F3ED 54                          .BYTE $54 ; T
ROM:F3EE F1                          .BYTE $F1
ROM:F3EF 11                          .BYTE $11
ROM:F3F0 43                          .BYTE $43 ; C
ROM:F3F1 48                          .BYTE $48 ; H
ROM:F3F2             ; ---------------------------------------------------------------------------
ROM:F3F2 A9 00                       LDA     #0
ROM:F3F4 85 1C                       STA     byte_1C
ROM:F3F6 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F3F9 20 97 95                    JSR     loc_9597
ROM:F3FC 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F3FF             ; ---------------------------------------------------------------------------
ROM:F3FF             ; START OF FUNCTION CHUNK FOR sub_9909
ROM:F3FF             ;   ADDITIONAL PARENT FUNCTION sub_949F
ROM:F3FF             ;   ADDITIONAL PARENT FUNCTION sub_99C8
ROM:F3FF             ;   ADDITIONAL PARENT FUNCTION sub_9C89
ROM:F3FF             ;   ADDITIONAL PARENT FUNCTION PAINT
ROM:F3FF             ;   ADDITIONAL PARENT FUNCTION NOISE
ROM:F3FF             ;   ADDITIONAL PARENT FUNCTION SOUND
ROM:F3FF
ROM:F3FF             loc_F3FF:                               ; CODE XREF: sub_949F+15↑j
ROM:F3FF                                                     ; sub_9909:loc_9952↑j ...
ROM:F3FF A2 35                       LDX     #$35 ; '5'
ROM:F401
ROM:F401             loc_F401:                               ; CODE XREF: sub_9E34+15↑j
ROM:F401                                                     ; RAM:A09B↑j ...
ROM:F401 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F404 4C 12 D4                    JMP     ERROR_0
ROM:F404             ; END OF FUNCTION CHUNK FOR sub_9909
ROM:F407             ; ---------------------------------------------------------------------------
ROM:F407             ; START OF FUNCTION CHUNK FOR INLIN
ROM:F407
ROM:F407             loc_F407:                               ; CODE XREF: INLIN+25↑j
ROM:F407 20 0C FD                    JSR     RDKEY
ROM:F40A 29 7F                       AND     #$7F
ROM:F40C 60                          RTS
ROM:F40C             ; END OF FUNCTION CHUNK FOR INLIN
ROM:F40C             ; ---------------------------------------------------------------------------
ROM:F40D 44                          .BYTE $44 ; D
ROM:F40E F1                          .BYTE $F1
ROM:F40F 29                          .BYTE $29 ; )
ROM:F410 49                          .BYTE $49 ; I
ROM:F411             ; ---------------------------------------------------------------------------
ROM:F411 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F414 20 60 96                    JSR     loc_9660
ROM:F417 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F41A             ; ---------------------------------------------------------------------------
ROM:F41A
ROM:F41A             do_HGR:                                 ; CODE XREF: ROM:F3E2↑j
ROM:F41A                                                     ; DATA XREF: ROM:D022↑t
ROM:F41A A0 00                       LDY     #0
ROM:F41C A2 00                       LDX     #0
ROM:F41E
ROM:F41E             loc_F41E:                               ; CODE XREF: ROM:F428↓j
ROM:F41E BD 3F F4                    LDA     HGR_NAME,X
ROM:F421 D1 B8                       CMP     ($B8),Y
ROM:F423 F0 06                       BEQ     loc_F42B
ROM:F425 E8                          INX
ROM:F426 E0 07                       CPX     #7
ROM:F428 D0 F4                       BNE     loc_F41E
ROM:F42A CA                          DEX
ROM:F42B
ROM:F42B             loc_F42B:                               ; CODE XREF: ROM:F423↑j
ROM:F42B 8E B8 03                    STX     byte_3B8
ROM:F42E E0 06                       CPX     #6
ROM:F430 F0 01                       BEQ     loc_F433
ROM:F432 C8                          INY
ROM:F433
ROM:F433             loc_F433:                               ; CODE XREF: ROM:F430↑j
ROM:F433 20 98 D9                    JSR     ADDON
ROM:F436 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F439 20 E8 94                    JSR     SET_HGR_MODE
ROM:F43C 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F43C             ; ---------------------------------------------------------------------------
ROM:F43F 36          HGR_NAME:       .BYTE '6'               ; offset to vector table at $94F7
ROM:F440 31                          .BYTE '1'
ROM:F441 33                          .BYTE '3'
ROM:F442 34                          .BYTE '4'
ROM:F443 35                          .BYTE '5'
ROM:F444 32                          .BYTE '2'
ROM:F445 00                          .BYTE 0
ROM:F446
ROM:F446             ; =============== S U B R O U T I N E =======================================
ROM:F446
ROM:F446
ROM:F446             sub_F446:                               ; CODE XREF: RAM:ACB3↑p
ROM:F446                                                     ; RAM:ACFE↑p
ROM:F446 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F449 20 DA FD                    JSR     j_PRBYTE
ROM:F44C 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F44C             ; End of function sub_F446
ROM:F44C
ROM:F44F             ; ---------------------------------------------------------------------------
ROM:F44F
ROM:F44F             loc_F44F:                               ; CODE XREF: ROM:F498↓j
ROM:F44F 68                          PLA
ROM:F450 85 1C                       STA     byte_1C
ROM:F452 68                          PLA
ROM:F453 85 E4                       STA     byte_E4
ROM:F455 60                          RTS
ROM:F456             ; ---------------------------------------------------------------------------
ROM:F456 F1 20                       SBC     ($20),Y
ROM:F458 CE F3 20                    DEC     byte_20F3
ROM:F45B C1 96                       CMP     ($96,X)
ROM:F45D 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F460
ROM:F460             ; =============== S U B R O U T I N E =======================================
ROM:F460
ROM:F460
ROM:F460             sub_F460:                               ; CODE XREF: REASON:MAIN↑p
ROM:F460 A9 00                       LDA     #0
ROM:F462 85 D8                       STA     byte_D8
ROM:F464 60                          RTS
ROM:F464             ; End of function sub_F460
ROM:F464
ROM:F465             ; ---------------------------------------------------------------------------
ROM:F465 10 23                       BPL     loc_F48A
ROM:F467 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F46A 20 5E 97                    JSR     sub_975E
ROM:F46D 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F470
ROM:F470             ; =============== S U B R O U T I N E =======================================
ROM:F470
ROM:F470             ; Get byte at ($1A,X), ensure $8000 ROM is switched out
ROM:F470
ROM:F470             AUX_GET1AX:                             ; CODE XREF: sub_9475+A↑p
ROM:F470                                                     ; sub_9475:loc_9499↑p
ROM:F470 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F473 A1 1A                       LDA     ($1A,X)
ROM:F475 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F475             ; End of function AUX_GET1AX
ROM:F475
ROM:F478
ROM:F478             ; =============== S U B R O U T I N E =======================================
ROM:F478
ROM:F478             ; call RDKEY from $8000 ROM
ROM:F478
ROM:F478             AUX_RDKEY:                              ; CODE XREF: sub_ADBA:loc_AD9F↑p
ROM:F478                                                     ; sub_ADBA-9↑p
ROM:F478 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F47B 20 0C FD                    JSR     RDKEY
ROM:F47E 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F47E             ; End of function AUX_RDKEY
ROM:F47E
ROM:F47E             ; ---------------------------------------------------------------------------
ROM:F481 4F                          .BYTE $4F ; O
ROM:F482 52                          .BYTE $52 ; R
ROM:F483 4D                          .BYTE $4D ; M
ROM:F484 41                          .BYTE $41 ; A
ROM:F485 4C                          .BYTE $4C ; L
ROM:F486 F2                          .BYTE $F2
ROM:F487 3C                          .BYTE $3C ; <
ROM:F488 46                          .BYTE $46 ; F
ROM:F489 4C                          .BYTE $4C ; L
ROM:F48A             ; ---------------------------------------------------------------------------
ROM:F48A
ROM:F48A             loc_F48A:                               ; CODE XREF: ROM:F465↑j
ROM:F48A 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F48D 20 9F 97                    JSR     sub_979F
ROM:F490 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F493             ; ---------------------------------------------------------------------------
ROM:F493
ROM:F493             loc_F493:                               ; CODE XREF: ROM:F59A↓j
ROM:F493 85 1C                       STA     byte_1C
ROM:F495 20 43 F5                    JSR     do_DRAW
ROM:F498 4C 4F F4                    JMP     loc_F44F
ROM:F498             ; ---------------------------------------------------------------------------
ROM:F49B 42                          .BYTE $42 ; B
ROM:F49C             ; ---------------------------------------------------------------------------
ROM:F49C 18                          CLC
ROM:F49D A5 1C                       LDA     byte_1C
ROM:F49F 48                          PHA
ROM:F4A0 A9 00                       LDA     #0
ROM:F4A2 85 1C                       STA     byte_1C
ROM:F4A4 20 B4 F4                    JSR     sub_F4B4
ROM:F4A7 68                          PLA
ROM:F4A8 85 1C                       STA     byte_1C
ROM:F4AA 60                          RTS
ROM:F4AA             ; ---------------------------------------------------------------------------
ROM:F4AB 46                          .BYTE $46 ; F
ROM:F4AC 46                          .BYTE $46 ; F
ROM:F4AD 31                          .BYTE $31 ; 1
ROM:F4AE F2                          .BYTE $F2
ROM:F4AF 6F                          .BYTE $6F ; o
ROM:F4B0 4E                          .BYTE $4E ; N
ROM:F4B1 4F                          .BYTE $4F ; O
ROM:F4B2 52                          .BYTE $52 ; R
ROM:F4B3 18                          .BYTE $18
ROM:F4B4
ROM:F4B4             ; =============== S U B R O U T I N E =======================================
ROM:F4B4
ROM:F4B4
ROM:F4B4             sub_F4B4:                               ; CODE XREF: ROM:F4A4↑p
ROM:F4B4 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F4B7 20 C7 97                    JSR     sub_97C7
ROM:F4BA 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F4BA             ; End of function sub_F4B4
ROM:F4BA
ROM:F4BD
ROM:F4BD             ; =============== S U B R O U T I N E =======================================
ROM:F4BD
ROM:F4BD             ; call CHRGOT, ensure $8000 ROM switched out
ROM:F4BD
ROM:F4BD             AUX_CHRGOT:                             ; CODE XREF: sub_949F+30↑p
ROM:F4BD                                                     ; HPLOT:loc_995F↑p ...
ROM:F4BD 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F4C0 20 B7 00                    JSR     CHRGOT
ROM:F4C3 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F4C3             ; End of function AUX_CHRGOT
ROM:F4C3
ROM:F4C6             ; ---------------------------------------------------------------------------
ROM:F4C6             ; START OF FUNCTION CHUNK FOR REMN
ROM:F4C6
ROM:F4C6             loc_F4C6:                               ; CODE XREF: REMN+20↑j
ROM:F4C6 C0 41                       CPY     #$41 ; 'A'
ROM:F4C8 F0 03                       BEQ     loc_F4CD
ROM:F4CA 4C 87 D9                    JMP     loc_D987
ROM:F4CD             ; ---------------------------------------------------------------------------
ROM:F4CD
ROM:F4CD             loc_F4CD:                               ; CODE XREF: REMN+1B22↑j
ROM:F4CD 68                          PLA
ROM:F4CE 68                          PLA
ROM:F4CF 68                          PLA
ROM:F4D0 68                          PLA
ROM:F4D1 68                          PLA
ROM:F4D2 60                          RTS
ROM:F4D2             ; END OF FUNCTION CHUNK FOR REMN
ROM:F4D3             ; ---------------------------------------------------------------------------
ROM:F4D3 30 2F                       BMI     loc_F504
ROM:F4D5 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F4D8 20 E0 97                    JSR     loc_97E0
ROM:F4DB 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F4DE
ROM:F4DE             ; =============== S U B R O U T I N E =======================================
ROM:F4DE
ROM:F4DE
ROM:F4DE             AUX_CHRGET:                             ; CODE XREF: RAM:loc_9F82↑p
ROM:F4DE                                                     ; RAM:9F94↑p ...
ROM:F4DE 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F4E1 20 B1 00                    JSR     CHRGET
ROM:F4E4 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F4E4             ; End of function AUX_CHRGET
ROM:F4E4
ROM:F4E7
ROM:F4E7             ; =============== S U B R O U T I N E =======================================
ROM:F4E7
ROM:F4E7
ROM:F4E7             AUX_GET_1AY:                            ; CODE XREF: sub_949F+1F↑p
ROM:F4E7                                                     ; sub_949F+26↑p
ROM:F4E7 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F4EA B1 1A                       LDA     ($1A),Y
ROM:F4EC 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F4EC             ; End of function AUX_GET_1AY
ROM:F4EC
ROM:F4EF
ROM:F4EF             ; =============== S U B R O U T I N E =======================================
ROM:F4EF
ROM:F4EF
ROM:F4EF             AUX_OUTDO:                              ; CODE XREF: RAM:9FAE↑p
ROM:F4EF                                                     ; RAM:A00A↑p ...
ROM:F4EF 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F4F2 20 5C DB                    JSR     OUTDO
ROM:F4F5 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F4F5             ; End of function AUX_OUTDO
ROM:F4F5
ROM:F4F8
ROM:F4F8             ; =============== S U B R O U T I N E =======================================
ROM:F4F8
ROM:F4F8
ROM:F4F8             AUX_FREFAC:                             ; CODE XREF: RAM:loc_9FA6↑p
ROM:F4F8                                                     ; RAM:loc_9FF7↑p ...
ROM:F4F8 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F4FB 20 00 E6                    JSR     FREFAC
ROM:F4FE 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F4FE             ; End of function AUX_FREFAC
ROM:F4FE
ROM:F4FE             ; ---------------------------------------------------------------------------
ROM:F501 45                          .BYTE $45 ; E
ROM:F502 4C                          .BYTE $4C ; L
ROM:F503 45                          .BYTE $45 ; E
ROM:F504             ; ---------------------------------------------------------------------------
ROM:F504
ROM:F504             loc_F504:                               ; CODE XREF: ROM:F4D3↑j
ROM:F504 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F507 20 0D 98                    JSR     loc_980D
ROM:F50A 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F50D
ROM:F50D             ; =============== S U B R O U T I N E =======================================
ROM:F50D
ROM:F50D
ROM:F50D             AUX_FCOMP:                              ; CODE XREF: sub_99AD+11↑p
ROM:F50D 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F510 20 B2 EB                    JSR     FCOMP
ROM:F513 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F513             ; End of function AUX_FCOMP
ROM:F513
ROM:F516
ROM:F516             ; =============== S U B R O U T I N E =======================================
ROM:F516
ROM:F516
ROM:F516             AUX_CMP_1AX:                            ; CODE XREF: sub_949F+E↑p
ROM:F516 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F519 C1 1A                       CMP     ($1A,X)
ROM:F51B 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F51B             ; End of function AUX_CMP_1AX
ROM:F51B
ROM:F51E
ROM:F51E             ; =============== S U B R O U T I N E =======================================
ROM:F51E
ROM:F51E
ROM:F51E             sub_F51E:                               ; CODE XREF: SWAP:loc_A611↑p
ROM:F51E 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F521 B1 85                       LDA     ($85),Y
ROM:F523 48                          PHA
ROM:F524 B1 83                       LDA     ($83),Y
ROM:F526 91 85                       STA     ($85),Y
ROM:F528 68                          PLA
ROM:F529 91 83                       STA     ($83),Y
ROM:F52B 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F52B             ; End of function sub_F51E
ROM:F52B
ROM:F52E             ; ---------------------------------------------------------------------------
ROM:F52E
ROM:F52E             do_SWAP:                                ; DATA XREF: ROM:D01A↑t
ROM:F52E 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F531 20 E8 A5                    JSR     SWAP            ; SWAP A,B   Swap variables
ROM:F534 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F534             ; ---------------------------------------------------------------------------
ROM:F537 B8                          .BYTE $B8
ROM:F538 48                          .BYTE $48 ; H
ROM:F539 47                          .BYTE $47 ; G
ROM:F53A             ; ---------------------------------------------------------------------------
ROM:F53A 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F53D 20 2C 98                    JSR     sub_982C
ROM:F540 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F543
ROM:F543             ; =============== S U B R O U T I N E =======================================
ROM:F543
ROM:F543
ROM:F543             do_DRAW:                                ; CODE XREF: ROM:F495↑p
ROM:F543                                                     ; DATA XREF: ROM:D028↑t
ROM:F543 A2 00                       LDX     #0
ROM:F545 8E B8 03                    STX     byte_3B8
ROM:F548
ROM:F548             loc_F548:                               ; CODE XREF: do_DRAW+1E↓j
ROM:F548 A0 00                       LDY     #0
ROM:F54A
ROM:F54A             loc_F54A:                               ; CODE XREF: do_DRAW+12↓j
ROM:F54A BD 6F F5                    LDA     DRAW_OPTIONS,X
ROM:F54D F0 14                       BEQ     loc_F563
ROM:F54F D1 B8                       CMP     ($B8),Y
ROM:F551 D0 04                       BNE     loc_F557
ROM:F553 C8                          INY
ROM:F554 E8                          INX
ROM:F555 D0 F3                       BNE     loc_F54A
ROM:F557
ROM:F557             loc_F557:                               ; CODE XREF: do_DRAW+E↑j
ROM:F557                                                     ; do_DRAW+18↓j
ROM:F557 E8                          INX
ROM:F558 BD 6F F5                    LDA     DRAW_OPTIONS,X
ROM:F55B D0 FA                       BNE     loc_F557
ROM:F55D E8                          INX
ROM:F55E EE B8 03                    INC     byte_3B8
ROM:F561 D0 E5                       BNE     loc_F548
ROM:F563
ROM:F563             loc_F563:                               ; CODE XREF: do_DRAW+A↑j
ROM:F563 20 98 D9                    JSR     ADDON
ROM:F566 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F569 20 6B 9C                    JSR     sub_9C6B
ROM:F56C 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F56C             ; End of function do_DRAW
ROM:F56C
ROM:F56C             ; ---------------------------------------------------------------------------
ROM:F56F 53 43 49 52+DRAW_OPTIONS:   .BYTE 'SCIRCLE',0
ROM:F577 48 43 49 52+aHcircle:       .BYTE 'HCIRCLE',0
ROM:F57F 53 53 51 55+aSsquare:       .BYTE 'SSQUARE',0
ROM:F587 48 53 51 55+aHsquare:       .BYTE 'HSQUARE',0
ROM:F58F 00                          .BYTE   0
ROM:F590             ; ---------------------------------------------------------------------------
ROM:F590
ROM:F590             do_XDRAW:                               ; DATA XREF: ROM:D02A↑t
ROM:F590 A5 E4                       LDA     byte_E4
ROM:F592 48                          PHA
ROM:F593 A5 1C                       LDA     byte_1C
ROM:F595 48                          PHA
ROM:F596 A9 00                       LDA     #0
ROM:F598 85 E4                       STA     byte_E4
ROM:F59A 4C 93 F4                    JMP     loc_F493
ROM:F59D             ; ---------------------------------------------------------------------------
ROM:F59D 60                          RTS
ROM:F59E
ROM:F59E             ; =============== S U B R O U T I N E =======================================
ROM:F59E
ROM:F59E
ROM:F59E             AUX_CMP_B8Y:                            ; CODE XREF: RAM:9F3E↑p
ROM:F59E                                                     ; RAM:9F50↑p
ROM:F59E 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5A1 D1 B8                       CMP     ($B8),Y
ROM:F5A3 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F5A3             ; End of function AUX_CMP_B8Y
ROM:F5A3
ROM:F5A6
ROM:F5A6             ; =============== S U B R O U T I N E =======================================
ROM:F5A6
ROM:F5A6
ROM:F5A6             AUX_FRMEVL:                             ; CODE XREF: RAM:loc_9F9C↑p
ROM:F5A6                                                     ; RAM:loc_9FED↑p ...
ROM:F5A6 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5A9 20 7B DD                    JSR     FRMEVL
ROM:F5AC 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F5AC             ; End of function AUX_FRMEVL
ROM:F5AC
ROM:F5AF             ; ---------------------------------------------------------------------------
ROM:F5AF
ROM:F5AF             loc_F5AF:                               ; CODE XREF: RAM:loc_9FB6↑j
ROM:F5AF 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5B2 4C FB DA                    JMP     CRDO
ROM:F5B5
ROM:F5B5             ; =============== S U B R O U T I N E =======================================
ROM:F5B5
ROM:F5B5             ; get byte at ($5E),Y
ROM:F5B5
ROM:F5B5             AUX_GET_5EY:                            ; CODE XREF: RAM:9FAB↑p
ROM:F5B5                                                     ; RAM:A007↑p ...
ROM:F5B5 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5B8 B1 5E                       LDA     ($5E),Y
ROM:F5BA 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F5BA             ; End of function AUX_GET_5EY
ROM:F5BA
ROM:F5BD
ROM:F5BD             ; =============== S U B R O U T I N E =======================================
ROM:F5BD
ROM:F5BD
ROM:F5BD             AUX_GET_B8Y:                            ; CODE XREF: RAM:9FC0↑p
ROM:F5BD                                                     ; sub_A5DC:loc_A5E4↑p ...
ROM:F5BD 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5C0 B1 B8                       LDA     ($B8),Y
ROM:F5C2 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F5C2             ; End of function AUX_GET_B8Y
ROM:F5C2
ROM:F5C2             ; ---------------------------------------------------------------------------
ROM:F5C5 54                          .BYTE $54
ROM:F5C6 F4                          .BYTE $F4
ROM:F5C7 DE                          .BYTE $DE
ROM:F5C8 45                          .BYTE $45 ; E
ROM:F5C9 54                          .BYTE $54 ; T
ROM:F5CA 4C                          .BYTE $4C ; L
ROM:F5CB             ; ---------------------------------------------------------------------------
ROM:F5CB 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F5CE 20 30 94                    JSR     sub_9430
ROM:F5D1 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5D4
ROM:F5D4             ; =============== S U B R O U T I N E =======================================
ROM:F5D4
ROM:F5D4
ROM:F5D4             AUX_SNGFLT:                             ; CODE XREF: sub_99C8+5↑p
ROM:F5D4 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5D7 20 01 E3                    JSR     SNGFLT
ROM:F5DA 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F5DA             ; End of function AUX_SNGFLT
ROM:F5DA
ROM:F5DD             ; ---------------------------------------------------------------------------
ROM:F5DD 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5E0 20 E3 E9                    JSR     CONUPK
ROM:F5E3 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F5E6
ROM:F5E6             ; =============== S U B R O U T I N E =======================================
ROM:F5E6
ROM:F5E6             ; call GETBYT from $8000 ROM area
ROM:F5E6
ROM:F5E6             AUX_GETBYT:                             ; CODE XREF: sub_949F+8↑p
ROM:F5E6                                                     ; sub_98EF↑p ...
ROM:F5E6 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F5E9 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:F5EC 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F5EC             ; End of function AUX_GETBYT
ROM:F5EC
ROM:F5EF
ROM:F5EF             ; =============== S U B R O U T I N E =======================================
ROM:F5EF
ROM:F5EF
ROM:F5EF             sub_F5EF:                               ; CODE XREF: ROM:COMPRT↑p
ROM:F5EF A5 24                       LDA     CHORIZ
ROM:F5F1 18                          CLC
ROM:F5F2 69 10                       ADC     #$10
ROM:F5F4 C5 21                       CMP     WNDWTH
ROM:F5F6 A5 24                       LDA     CHORIZ
ROM:F5F8 60                          RTS
ROM:F5F8             ; End of function sub_F5EF
ROM:F5F8
ROM:F5F8             ; ---------------------------------------------------------------------------
ROM:F5F9 4C 49 4E 45+aLine:          .BYTE 'LINE ',0
ROM:F5FF 1E                          .BYTE $1E
ROM:F600 53                          .BYTE $53 ; S
ROM:F601
ROM:F601             ; =============== S U B R O U T I N E =======================================
ROM:F601
ROM:F601
ROM:F601             sub_F601:                               ; CODE XREF: ROM:F668↓p
ROM:F601 84 1B                       STY     byte_1B
ROM:F603 86 1A                       STX     byte_1A
ROM:F605 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F608 20 75 94                    JSR     sub_9475
ROM:F60B 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F60B             ; End of function sub_F601
ROM:F60B
ROM:F60E
ROM:F60E             ; =============== S U B R O U T I N E =======================================
ROM:F60E
ROM:F60E
ROM:F60E             AUX_ADDON:                              ; CODE XREF: RAM:9F60↑p
ROM:F60E                                                     ; RAM:9F6A↑p ...
ROM:F60E 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F611 20 98 D9                    JSR     ADDON
ROM:F614 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F614             ; End of function AUX_ADDON
ROM:F614
ROM:F617
ROM:F617             ; =============== S U B R O U T I N E =======================================
ROM:F617
ROM:F617             ; Call GETADR , ensure $8000 ROM switched out
ROM:F617
ROM:F617             AUX_GETADR:                             ; CODE XREF: sub_9909↑p
ROM:F617 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F61A 20 52 E7                    JSR     GETADR_50       ; evaluate 2 byte address value => $50,$51
ROM:F61D 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F61D             ; End of function AUX_GETADR
ROM:F61D
ROM:F620
ROM:F620             ; =============== S U B R O U T I N E =======================================
ROM:F620
ROM:F620             ; Call FRMNUM , ensure $8000 ROM switched out
ROM:F620
ROM:F620             AUX_FRMNUM:                             ; CODE XREF: sub_9937↑p
ROM:F620                                                     ; sub_99C8+39↑p ...
ROM:F620 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F623 20 67 DD                    JSR     FRMNUM
ROM:F626 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F626             ; End of function AUX_FRMNUM
ROM:F626
ROM:F629             ; ---------------------------------------------------------------------------
ROM:F629 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F62C 20 FB DA                    JSR     CRDO
ROM:F62F 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F632
ROM:F632             ; =============== S U B R O U T I N E =======================================
ROM:F632
ROM:F632             ; Call PTRGET, ensure $8000 ROM switched out
ROM:F632
ROM:F632             AUX_PTRGET:                             ; CODE XREF: SWAP↑p
ROM:F632                                                     ; SWAP+10↑p
ROM:F632 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F635 20 E3 DF                    JSR     PTRGET
ROM:F638 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F638             ; End of function AUX_PTRGET
ROM:F638
ROM:F63B
ROM:F63B             ; =============== S U B R O U T I N E =======================================
ROM:F63B
ROM:F63B             ; Call COUT, ensure $8000 ROM switched out
ROM:F63B
ROM:F63B             AUX_COUT:                               ; CODE XREF: RAM:A591↑p
ROM:F63B                                                     ; RAM:A5A1↑p ...
ROM:F63B 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F63E 20 ED FD                    JSR     COUT
ROM:F641 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F641             ; End of function AUX_COUT
ROM:F641
ROM:F644
ROM:F644             ; =============== S U B R O U T I N E =======================================
ROM:F644
ROM:F644             ; Call FOUT , ensure $8000 ROM switched out
ROM:F644
ROM:F644             AUX_FOUT:                               ; CODE XREF: RAM:A1B4↑p
ROM:F644 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F647 20 34 ED                    JSR     FOUT
ROM:F64A 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F64A             ; End of function AUX_FOUT
ROM:F64A
ROM:F64D             ; ---------------------------------------------------------------------------
ROM:F64D
ROM:F64D             do_PAINT:                               ; DATA XREF: ROM:D010↑t
ROM:F64D 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F650 20 94 9C                    JSR     PAINT           ; paint (x,y), colour, boundary
ROM:F653 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F653             ; ---------------------------------------------------------------------------
ROM:F656 F5                          .BYTE $F5
ROM:F657 AF                          .BYTE $AF
ROM:F658 47                          .BYTE $47
ROM:F659 5A                          .BYTE $5A ; Z
ROM:F65A 50                          .BYTE $50
ROM:F65B 35                          .BYTE $35 ; 5
ROM:F65C 45                          .BYTE $45
ROM:F65D 84                          .BYTE $84
ROM:F65E 1B                          .BYTE $1B
ROM:F65F 86                          .BYTE $86
ROM:F660 1A                          .BYTE $1A
ROM:F661             ; ---------------------------------------------------------------------------
ROM:F661 A5 1C                       LDA     byte_1C
ROM:F663 48                          PHA
ROM:F664 A9 00                       LDA     #0
ROM:F666 85 1C                       STA     byte_1C
ROM:F668 20 01 F6                    JSR     sub_F601
ROM:F66B 68                          PLA
ROM:F66C 85 1C                       STA     byte_1C
ROM:F66E 60                          RTS
ROM:F66F
ROM:F66F             ; =============== S U B R O U T I N E =======================================
ROM:F66F
ROM:F66F             ; CMP ($B8),Y for a ")", with low ROM switched out. SNERR if not equal
ROM:F66F
ROM:F66F             CMP_RPAR_B8_Y_ROM_OUT:                  ; CODE XREF: sub_99C8+48↑p
ROM:F66F                                                     ; RAM:loc_9BF9↑j ...
ROM:F66F A9 29                       LDA     #$29 ; ')'
ROM:F66F             ; End of function CMP_RPAR_B8_Y_ROM_OUT
ROM:F66F
ROM:F66F             ; ---------------------------------------------------------------------------
ROM:F671 2C                          .BYTE $2C
ROM:F672             ; ---------------------------------------------------------------------------
ROM:F672
ROM:F672             CMP_LPAR_B8_Y_ROM_OUT:                  ; CODE XREF: sub_99C8+36↑p
ROM:F672                                                     ; RAM:HSQUARE↑p ...
ROM:F672 A9 28                       LDA     #$28 ; '('      ; CMP ($B8),Y for a "(", with low ROM switched out. SNERR if not equal
ROM:F672             ; ---------------------------------------------------------------------------
ROM:F674 2C                          .BYTE $2C
ROM:F675
ROM:F675             ; =============== S U B R O U T I N E =======================================
ROM:F675
ROM:F675             ; CMP ($B8),Y for a COMMA, with low ROM switched out. SNERR if not equal
ROM:F675
ROM:F675             CMP_COMMA_B8_Y_ROM_OUT:                 ; CODE XREF: sub_99C8+3F↑p
ROM:F675                                                     ; sub_99C8+4B↑p ...
ROM:F675 A9 2C                       LDA     #$2C ; ','
ROM:F675             ; End of function CMP_COMMA_B8_Y_ROM_OUT
ROM:F675
ROM:F677
ROM:F677             ; =============== S U B R O U T I N E =======================================
ROM:F677
ROM:F677             ; CMP A with ($B8),Y with low ROM switched out. SNERR if not equal
ROM:F677
ROM:F677             CMP_B8_Y_ROM_OUT:                       ; CODE XREF: sub_949F+37↑p
ROM:F677                                                     ; sub_9937+C↑p ...
ROM:F677 A0 00                       LDY     #0
ROM:F679 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F67C D1 B8                       CMP     ($B8),Y
ROM:F67E D0 06                       BNE     AUX_SNERR       ; Call Syntax Error, ensure $8000 ROM switched out
ROM:F680 20 B1 00                    JSR     CHRGET
ROM:F683 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F686             ; ---------------------------------------------------------------------------
ROM:F686
ROM:F686             AUX_SNERR:                              ; CODE XREF: PAINT+5↑j
ROM:F686                                                     ; RAM:9FCB↑j ...
ROM:F686 20 BD F1                    JSR     HRSEXT          ; Call Syntax Error, ensure $8000 ROM switched out
ROM:F689 4C C9 DE                    JMP     SNERR
ROM:F689             ; End of function CMP_B8_Y_ROM_OUT
ROM:F689
ROM:F68C
ROM:F68C             ; =============== S U B R O U T I N E =======================================
ROM:F68C
ROM:F68C             ; Call CONINT, ensure $8000 ROM switched out
ROM:F68C
ROM:F68C             AUX_CONINT:                             ; CODE XREF: sub_9AB9+84↑p
ROM:F68C                                                     ; sub_9B75+7↑p
ROM:F68C 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F68F 20 FB E6                    JSR     CONINT
ROM:F692 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F692             ; End of function AUX_CONINT
ROM:F692
ROM:F695             ; ---------------------------------------------------------------------------
ROM:F695 20 BD F1                    JSR     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F698 20 EF E0                    JSR     loc_E0EF
ROM:F69B 4C CE F3                    JMP     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F69E             ; ---------------------------------------------------------------------------
ROM:F69E
ROM:F69E             do_WIDTH:                               ; DATA XREF: ROM:D01E↑t
ROM:F69E 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:F6A1
ROM:F6A1             ; =============== S U B R O U T I N E =======================================
ROM:F6A1
ROM:F6A1
ROM:F6A1             set_WIDTH:                              ; CODE XREF: RAM:A634↑p
ROM:F6A1
ROM:F6A1             ; FUNCTION CHUNK AT ROM:DBB6 SIZE 00000026 BYTES
ROM:F6A1
ROM:F6A1 E0 00                       CPX     #0
ROM:F6A3 F0 08                       BEQ     loc_F6AD
ROM:F6A5 E0 29                       CPX     #41
ROM:F6A7 90 0D                       BCC     loc_F6B6
ROM:F6A9 E0 51                       CPX     #81
ROM:F6AB 90 03                       BCC     loc_F6B0
ROM:F6AD
ROM:F6AD             loc_F6AD:                               ; CODE XREF: set_WIDTH+2↑j
ROM:F6AD 4C 99 E1                    JMP     FCERR
ROM:F6B0             ; ---------------------------------------------------------------------------
ROM:F6B0
ROM:F6B0             loc_F6B0:                               ; CODE XREF: set_WIDTH+A↑j
ROM:F6B0 20 09 F8                    JSR     j_TEXT80
ROM:F6B3 4C B9 F6                    JMP     loc_F6B9
ROM:F6B6             ; ---------------------------------------------------------------------------
ROM:F6B6
ROM:F6B6             loc_F6B6:                               ; CODE XREF: set_WIDTH+6↑j
ROM:F6B6 20 06 F8                    JSR     j_TEXT40
ROM:F6B9
ROM:F6B9             loc_F6B9:                               ; CODE XREF: set_WIDTH+12↑j
ROM:F6B9 86 21                       STX     WNDWTH
ROM:F6BB 4C DA F6                    JMP     loc_F6DA
ROM:F6BE             ; ---------------------------------------------------------------------------
ROM:F6BE
ROM:F6BE             loc_F6BE:                               ; CODE XREF: ROM:D6FA↑p
ROM:F6BE A5 21                       LDA     WNDWTH
ROM:F6C0 18                          CLC
ROM:F6C1 E5 24                       SBC     CHORIZ
ROM:F6C3 D0 07                       BNE     locret_F6CC
ROM:F6C5 20 FB DA                    JSR     CRDO
ROM:F6C8 A9 05                       LDA     #5
ROM:F6CA 85 24                       STA     CHORIZ
ROM:F6CC
ROM:F6CC             locret_F6CC:                            ; CODE XREF: set_WIDTH+22↑j
ROM:F6CC 60                          RTS
ROM:F6CD             ; ---------------------------------------------------------------------------
ROM:F6CD
ROM:F6CD             loc_F6CD:                               ; CODE XREF: ROM:DBB3↑j
ROM:F6CD C9 22                       CMP     #$22 ; '"'
ROM:F6CF D0 03                       BNE     loc_F6D4
ROM:F6D1 4C B6 DB                    JMP     loc_DBB6
ROM:F6D4             ; ---------------------------------------------------------------------------
ROM:F6D4
ROM:F6D4             loc_F6D4:                               ; CODE XREF: set_WIDTH+2E↑j
ROM:F6D4 20 5A DB                    JSR     OUTQST
ROM:F6D7 4C C1 DB                    JMP     loc_DBC1
ROM:F6DA             ; ---------------------------------------------------------------------------
ROM:F6DA
ROM:F6DA             loc_F6DA:                               ; CODE XREF: set_WIDTH+1A↑j
ROM:F6DA 8D 54 C0                    STA     VZPAGE1         ; display primary page
ROM:F6DD 4C 58 FC                    JMP     F8HOME
ROM:F6DD             ; End of function set_WIDTH
ROM:F6DD
ROM:F6DD             ; ---------------------------------------------------------------------------
ROM:F6E0 4E                          .BYTE $4E
ROM:F6E1 48                          .BYTE $48 ; H
ROM:F6E2 4B                          .BYTE $4B ; K
ROM:F6E3 4F                          .BYTE $4F
ROM:F6E4 50                          .BYTE $50 ; P
ROM:F6E5 4E                          .BYTE $4E ; N
ROM:F6E6 F6                          .BYTE $F6
ROM:F6E7 72                          .BYTE $72 ; r
ROM:F6E8 4E                          .BYTE $4E
ROM:F6E9             ; ---------------------------------------------------------------------------
ROM:F6E9
ROM:F6E9             do_HCOLOR:                              ; DATA XREF: ROM:D024↑t
ROM:F6E9 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:F6EC 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F6EF 20 F2 98                    JSR     HCOLOR          ; HCOLOR= colour code (0 => 7)
ROM:F6F2 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F6F5             ; ---------------------------------------------------------------------------
ROM:F6F5
ROM:F6F5             do_SOUND:                               ; DATA XREF: ROM:D040↑t
ROM:F6F5 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F6F8 20 3D A8                    JSR     SOUND
ROM:F6FB 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F6FE             ; ---------------------------------------------------------------------------
ROM:F6FE
ROM:F6FE             do_HPLOT:                               ; DATA XREF: ROM:D026↑t
ROM:F6FE 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F701 20 55 99                    JSR     HPLOT
ROM:F704 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F707             ; ---------------------------------------------------------------------------
ROM:F707
ROM:F707             do_NOISE:                               ; DATA XREF: ROM:D01C↑t
ROM:F707 20 CE F3                    JSR     EXT_BASIC       ; bring in lower half of ROM to $8000-$BFFF
ROM:F70A 20 B9 A7                    JSR     NOISE           ; noise periodicity, duration, [volume, freq control]
ROM:F70D 4C BD F1                    JMP     HRSEXT          ; switch lower half of ROM *OUT* of $8000-$BFFF
ROM:F710
ROM:F710             ; =============== S U B R O U T I N E =======================================
ROM:F710
ROM:F710
ROM:F710             SAVE_TXTAB:                             ; CODE XREF: LNKPRG↑p
ROM:F710 A5 67                       LDA     TXTABL
ROM:F712 A4 68                       LDY     TXTABH
ROM:F714 85 5E                       STA     word_5E
ROM:F716 84 5F                       STY     word_5E+1
ROM:F718 18                          CLC
ROM:F719 60                          RTS
ROM:F719             ; End of function SAVE_TXTAB
ROM:F719
ROM:F719             ; ---------------------------------------------------------------------------
ROM:F71A 44                          .BYTE $44 ; D
ROM:F71B 45                          .BYTE $45 ; E
ROM:F71C 52                          .BYTE $52 ; R
ROM:F71D 52                          .BYTE $52 ; R
ROM:F71E F6                          .BYTE $F6
ROM:F71F AD                          .BYTE $AD
ROM:F720 57                          .BYTE $57 ; W
ROM:F721             ; ---------------------------------------------------------------------------
ROM:F721
ROM:F721             do_ROT:                                 ; DATA XREF: ROM:D030↑t
ROM:F721 20 F8 E6                    JSR     GETBYT          ; rotate shape
ROM:F724 86 F9                       STX     byte_F9
ROM:F726 60                          RTS
ROM:F727             ; ---------------------------------------------------------------------------
ROM:F727
ROM:F727             do_SCALE:                               ; DATA XREF: ROM:D032↑t
ROM:F727 20 F8 E6                    JSR     GETBYT          ; scale shape
ROM:F72A 86 E7                       STX     byte_E7
ROM:F72C 60                          RTS
ROM:F72D             ; ---------------------------------------------------------------------------
ROM:F72D
ROM:F72D             do_RECALL:                              ; DATA XREF: ROM:D04E↑t
ROM:F72D A9 66                       LDA     #$66 ; 'f'      ; recall array of data from tape
ROM:F72F 85 14                       STA     byte_14
ROM:F731 20 E3 DF                    JSR     PTRGET
ROM:F734 A9 66                       LDA     #$66 ; 'f'
ROM:F736 45 14                       EOR     byte_14
ROM:F738 85 14                       STA     byte_14
ROM:F73A 20 F0 D8                    JSR     sub_D8F0
ROM:F73D 20 FD FE                    JSR     TLOAD
ROM:F740 A0 02                       LDY     #2
ROM:F742 B1 9B                       LDA     ($9B),Y
ROM:F744 38                          SEC
ROM:F745 E5 D0                       SBC     byte_D0
ROM:F747 C8                          INY
ROM:F748 B1 9B                       LDA     ($9B),Y
ROM:F74A E5 D1                       SBC     byte_D1
ROM:F74C B0 03                       BCS     loc_F751
ROM:F74E 4C 10 D4                    JMP     OMERROR         ; ERROR HANDLER, READY, TERMINAL INPUT, COMPACTIFY, NEW, REINIT.
ROM:F751             ; ---------------------------------------------------------------------------
ROM:F751
ROM:F751             loc_F751:                               ; CODE XREF: ROM:F74C↑j
ROM:F751 20 B8 F7                    JSR     sub_F7B8
ROM:F754 4C FD FE                    JMP     TLOAD
ROM:F757
ROM:F757             ; =============== S U B R O U T I N E =======================================
ROM:F757
ROM:F757
ROM:F757             STROUT_0:                               ; CODE XREF: REASON:loc_D439↑p
ROM:F757 20 3A DB                    JSR     STROUT
ROM:F75A A4 76                       LDY     byte_76
ROM:F75C C8                          INY
ROM:F75D F0 03                       BEQ     locret_F762
ROM:F75F 20 19 ED                    JSR     INPRT
ROM:F762
ROM:F762             locret_F762:                            ; CODE XREF: STROUT_0+6↑j
ROM:F762 60                          RTS
ROM:F762             ; End of function STROUT_0
ROM:F762
ROM:F762             ; ---------------------------------------------------------------------------
ROM:F763 4F                          .BYTE $4F
ROM:F764 54                          .BYTE $54
ROM:F765 20                          .BYTE $20
ROM:F766 F6                          .BYTE $F6
ROM:F767 FE                          .BYTE $FE
ROM:F768 4E                          .BYTE $4E
ROM:F769 4C                          .BYTE $4C ; L
ROM:F76A 43                          .BYTE $43 ; C
ROM:F76B F5                          .BYTE $F5
ROM:F76C 45                          .BYTE $45 ; E
ROM:F76D 20                          .BYTE $20
ROM:F76E F7                          .BYTE $F7
ROM:F76F 4C                          .BYTE $4C
ROM:F770 90                          .BYTE $90
ROM:F771 F5                          .BYTE $F5
ROM:F772 4B                          .BYTE $4B
ROM:F773 50                          .BYTE $50
ROM:F774 52                          .BYTE $52
ROM:F775             ; ---------------------------------------------------------------------------
ROM:F775
ROM:F775             do_SHLOAD:                              ; DATA XREF: ROM:D034↑t
ROM:F775 A0 D1                       LDY     #$D1            ; load shape from tape
ROM:F777 84 3E                       STY     REG2L
ROM:F779 88                          DEY
ROM:F77A 84 3C                       STY     REG1L
ROM:F77C A0 00                       LDY     #0
ROM:F77E 84 3D                       STY     REG1H
ROM:F780 84 3F                       STY     REG2H
ROM:F782 20 FD FE                    JSR     TLOAD
ROM:F785 A4 74                       LDY     byte_74
ROM:F787 A6 73                       LDX     byte_73
ROM:F789 D0 01                       BNE     loc_F78C
ROM:F78B 88                          DEY
ROM:F78C
ROM:F78C             loc_F78C:                               ; CODE XREF: ROM:F789↑j
ROM:F78C CA                          DEX
ROM:F78D 86 3E                       STX     REG2L
ROM:F78F 84 3F                       STY     REG2H
ROM:F791 8A                          TXA
ROM:F792 38                          SEC
ROM:F793 E5 D0                       SBC     byte_D0
ROM:F795 85 3C                       STA     REG1L
ROM:F797 98                          TYA
ROM:F798 E5 D1                       SBC     byte_D1
ROM:F79A 85 3D                       STA     REG1H
ROM:F79C C5 6E                       CMP     byte_6E
ROM:F79E B0 05                       BCS     loc_F7A5
ROM:F7A0
ROM:F7A0             loc_F7A0:                               ; CODE XREF: ROM:loc_F7A5↓j
ROM:F7A0 A2 4D                       LDX     #$4D ; 'M'
ROM:F7A2 4C 12 D4                    JMP     ERROR_0
ROM:F7A5             ; ---------------------------------------------------------------------------
ROM:F7A5
ROM:F7A5             loc_F7A5:                               ; CODE XREF: ROM:F79E↑j
ROM:F7A5 F0 F9                       BEQ     loc_F7A0
ROM:F7A7 85 70                       STA     byte_70
ROM:F7A9 85 74                       STA     byte_74
ROM:F7AB 85 E9                       STA     byte_E9
ROM:F7AD A5 3C                       LDA     REG1L
ROM:F7AF 85 6F                       STA     byte_6F
ROM:F7B1 85 73                       STA     byte_73
ROM:F7B3 85 E8                       STA     byte_E8
ROM:F7B5 4C FD FE                    JMP     TLOAD
ROM:F7B8
ROM:F7B8             ; =============== S U B R O U T I N E =======================================
ROM:F7B8
ROM:F7B8
ROM:F7B8             sub_F7B8:                               ; CODE XREF: ROM:F3C8↑p
ROM:F7B8                                                     ; ROM:loc_F751↑p
ROM:F7B8 A5 9B                       LDA     byte_9B
ROM:F7BA 18                          CLC
ROM:F7BB 65 D0                       ADC     byte_D0
ROM:F7BD 85 3E                       STA     REG2L
ROM:F7BF A5 9C                       LDA     byte_9C
ROM:F7C1 65 D1                       ADC     byte_D1
ROM:F7C3 85 3F                       STA     REG2H
ROM:F7C5 A0 04                       LDY     #4
ROM:F7C7 B1 9B                       LDA     ($9B),Y
ROM:F7C9 20 EF E0                    JSR     loc_E0EF
ROM:F7CC A5 95                       LDA     byte_95
ROM:F7CE 85 3D                       STA     REG1H
ROM:F7D0 A5 94                       LDA     byte_94
ROM:F7D2 85 3C                       STA     REG1L
ROM:F7D4 60                          RTS
ROM:F7D4             ; End of function sub_F7B8
ROM:F7D4
ROM:F7D5
ROM:F7D5             ; =============== S U B R O U T I N E =======================================
ROM:F7D5
ROM:F7D5
ROM:F7D5             sub_F7D5:                               ; CODE XREF: REASON:GONE↑p
ROM:F7D5 A5 76                       LDA     byte_76
ROM:F7D7 C9 FF                       CMP     #$FF
ROM:F7D9 D0 03                       BNE     loc_F7DE
ROM:F7DB A9 00                       LDA     #0
ROM:F7DD 60                          RTS
ROM:F7DE             ; ---------------------------------------------------------------------------
ROM:F7DE
ROM:F7DE             loc_F7DE:                               ; CODE XREF: sub_F7D5+4↑j
ROM:F7DE 24 F2                       BIT     byte_F2
ROM:F7E0 60                          RTS
ROM:F7E0             ; End of function sub_F7D5
ROM:F7E0
ROM:F7E0             ; ---------------------------------------------------------------------------
ROM:F7E1 46                          .BYTE $46 ; F
ROM:F7E2 44                          .BYTE $44 ; D
ROM:F7E3 43                          .BYTE $43 ; C
ROM:F7E4 20                          .BYTE $20
ROM:F7E5 20                          .BYTE $20
ROM:F7E6 CF                          .BYTE $CF
ROM:F7E7             ; ---------------------------------------------------------------------------
ROM:F7E7
ROM:F7E7             do_HTAB:                                ; DATA XREF: ROM:D02C↑t
ROM:F7E7 20 F8 E6                    JSR     GETBYT          ; get single byte value from keyboard input
ROM:F7EA CA                          DEX
ROM:F7EB 8A                          TXA
ROM:F7EC C9 FF                       CMP     #$FF
ROM:F7EE D0 03                       BNE     loc_F7F3
ROM:F7F0 4C 99 E1                    JMP     FCERR
ROM:F7F3             ; ---------------------------------------------------------------------------
ROM:F7F3
ROM:F7F3             loc_F7F3:                               ; CODE XREF: ROM:F7EE↑j
ROM:F7F3                                                     ; ROM:F7F9↓j
ROM:F7F3 C5 21                       CMP     WNDWTH
ROM:F7F5 90 05                       BCC     loc_F7FC
ROM:F7F7 E5 21                       SBC     WNDWTH
ROM:F7F9 4C F3 F7                    JMP     loc_F7F3
ROM:F7FC             ; ---------------------------------------------------------------------------
ROM:F7FC
ROM:F7FC             loc_F7FC:                               ; CODE XREF: ROM:F7F5↑j
ROM:F7FC 85 24                       STA     CHORIZ
ROM:F7FE 60                          RTS
ROM:F7FE             ; ---------------------------------------------------------------------------
ROM:F7FF 16                          .BYTE $16
ROM:F800
ROM:F800             ; =============== S U B R O U T I N E =======================================
ROM:F800
ROM:F800             ; Attributes: thunk
ROM:F800
ROM:F800             j_FRAMOI:                               ; CODE XREF: RAM:loc_ACC1↑p
ROM:F800                                                     ; RAM:AD0D↑p ...
ROM:F800 4C C7 FB                    JMP     FRAMOI
ROM:F800             ; End of function j_FRAMOI
ROM:F800
ROM:F803
ROM:F803             ; =============== S U B R O U T I N E =======================================
ROM:F803
ROM:F803             ; Attributes: thunk
ROM:F803
ROM:F803             j_FRAMOU:                               ; CODE XREF: RAM:95B4↑j
ROM:F803                                                     ; RAM:95BA↑j ...
ROM:F803 4C CD FB                    JMP     FRAMOU
ROM:F803             ; End of function j_FRAMOU
ROM:F803
ROM:F806
ROM:F806             ; =============== S U B R O U T I N E =======================================
ROM:F806
ROM:F806             ; Attributes: thunk
ROM:F806
ROM:F806             j_TEXT40:                               ; CODE XREF: RAM:A693↑p
ROM:F806                                                     ; RAM:A6A6↑p ...
ROM:F806 4C 78 FB                    JMP     TEXT40
ROM:F806             ; End of function j_TEXT40
ROM:F806
ROM:F809
ROM:F809             ; =============== S U B R O U T I N E =======================================
ROM:F809
ROM:F809             ; Attributes: thunk
ROM:F809
ROM:F809             j_TEXT80:                               ; CODE XREF: RAM:text80_ok↑p
ROM:F809                                                     ; RAM:text80_param_error↑p ...
ROM:F809 4C 81 FB                    JMP     TEXT80
ROM:F809             ; End of function j_TEXT80
ROM:F809
ROM:F80C
ROM:F80C             ; =============== S U B R O U T I N E =======================================
ROM:F80C
ROM:F80C             ; Attributes: thunk
ROM:F80C
ROM:F80C             j_AUDOUT:                               ; CODE XREF: SOUND-C2↑p
ROM:F80C                                                     ; SOUND-B4↑p ...
ROM:F80C 4C 2A FC                    JMP     AUDOUT
ROM:F80C             ; End of function j_AUDOUT
ROM:F80C
ROM:F80F             ; ---------------------------------------------------------------------------
ROM:F80F 4C 4E FC                    JMP     MOUTS1
ROM:F812
ROM:F812             ; =============== S U B R O U T I N E =======================================
ROM:F812
ROM:F812
ROM:F812             SETWIDTH:                               ; CODE XREF: VZINIT+27↓p
ROM:F812 AD 7B 05                    LDA     TXTMOD          ; TEXT MODE : $10 = 80 cols, $04 = 40 cols
ROM:F815 C9 10                       CMP     #$10
ROM:F817 D0 08                       BNE     SETW40
ROM:F819 A9 50                       LDA     #80
ROM:F81B 8D 4F C0                    STA     VZTX80          ; 80 char wide HIRES modes, also switches to 2MHz
ROM:F81E
ROM:F81E             SETW48:                                 ; CODE XREF: SETWIDTH+14↓j
ROM:F81E 85 21                       STA     WNDWTH
ROM:F820 60                          RTS
ROM:F821             ; ---------------------------------------------------------------------------
ROM:F821
ROM:F821             SETW40:                                 ; CODE XREF: SETWIDTH+5↑j
ROM:F821 A9 28                       LDA     #40
ROM:F823 8D 4C C0                    STA     VZTX40          ; 40 char wide LORES modes, also switches to 1MHz
ROM:F826 D0 F6                       BNE     SETW48
ROM:F828
ROM:F828             DOT:                                    ; CODE XREF: ROM:F83A↓p
ROM:F828                                                     ; ROM:FC0A↓j
ROM:F828                                                     ; DATA XREF: ...
ROM:F828 A5 3E                       LDA     REG2L
ROM:F82A 85 3C                       STA     REG1L
ROM:F82C A5 3F                       LDA     REG2H
ROM:F82E 85 3D                       STA     REG1H
ROM:F830 60                          RTS
ROM:F830             ; End of function SETWIDTH
ROM:F830
ROM:F830             ; ---------------------------------------------------------------------------
ROM:F831 07          DATA07:         .BYTE 7                 ; DATA XREF: GETLN-385↓r
ROM:F832             ; ---------------------------------------------------------------------------
ROM:F832 60                          RTS
ROM:F833             ; ---------------------------------------------------------------------------
ROM:F833
ROM:F833             MON_CR:                                 ; DATA XREF: ROM:FAB7↓t
ROM:F833 A5 34                       LDA     SAVEX           ; handle <CR> in Monitor. Display next 8 mem locs
ROM:F835 F0 0F                       BEQ     XMEM8           ; examine memory
ROM:F837 20 DF FC                    JSR     SPACE
ROM:F83A 20 28 F8                    JSR     DOT
ROM:F83D
ROM:F83D             loc_F83D:                               ; CODE XREF: ROM:F87B↓j
ROM:F83D 68                          PLA
ROM:F83E 68                          PLA
ROM:F83F A9 00                       LDA     #0
ROM:F841 85 31                       STA     STOFLG
ROM:F843 4C 69 FF                    JMP     MON1            ; CALL -151 entry point
ROM:F846             ; ---------------------------------------------------------------------------
ROM:F846
ROM:F846             examine memory
ROM:F846
ROM:F846             XMEM8:                                  ; CODE XREF: ROM:F835↑j
ROM:F846 AD 7B 05                    LDA     TXTMOD          ; TEXT MODE : $10 = 80 cols, $04 = 40 cols
ROM:F849 C9 10                       CMP     #$10
ROM:F84B D0 03                       BNE     loc_F850        ; 40 col
ROM:F84D A9 0F                       LDA     #$F             ; 80 col mode
ROM:F84D             ; ---------------------------------------------------------------------------
ROM:F84F 2C                          .BYTE $2C               ; BIT
ROM:F850             ; ---------------------------------------------------------------------------
ROM:F850
ROM:F850             loc_F850:                               ; CODE XREF: ROM:F84B↑j
ROM:F850 A9 07                       LDA     #7              ; 40 col
ROM:F852 85 2E                       STA     CHECKSUM        ; use checksum as general register here
ROM:F854 20 C5 FE                    JSR     CROUT
ROM:F857 20 85 FC                    JSR     INCRE2
ROM:F85A A5 3D                       LDA     REG1H
ROM:F85C 20 C1 FD                    JSR     PRBYTE
ROM:F85F A5 3C                       LDA     REG1L
ROM:F861 20 C1 FD                    JSR     PRBYTE
ROM:F864 A9 BD                       LDA     #$BD
ROM:F866 20 ED FD                    JSR     COUT
ROM:F869 A0 00                       LDY     #0
ROM:F86B
ROM:F86B             loc_F86B:                               ; CODE XREF: ROM:F880↓j
ROM:F86B A9 A0                       LDA     #$A0
ROM:F86D 20 ED FD                    JSR     COUT
ROM:F870 B1 3C                       LDA     (REG1L),Y
ROM:F872 20 C1 FD                    JSR     PRBYTE
ROM:F875 A5 3C                       LDA     REG1L
ROM:F877 25 2E                       AND     CHECKSUM
ROM:F879 C5 2E                       CMP     CHECKSUM
ROM:F87B F0 C0                       BEQ     loc_F83D
ROM:F87D 20 85 FC                    JSR     INCRE2
ROM:F880 4C 6B F8                    JMP     loc_F86B
ROM:F880             ; ---------------------------------------------------------------------------
ROM:F883 C5          ERROR_TEXT2:    .BYTE $C5               ; "ERROR"
ROM:F884 D2                          .BYTE $D2
ROM:F885 D2                          .BYTE $D2
ROM:F886 CF                          .BYTE $CF
ROM:F887 D2                          .BYTE $D2
ROM:F888 A0                          .BYTE $A0
ROM:F889             ; ---------------------------------------------------------------------------
ROM:F889
ROM:F889             OPERR:                                  ; CODE XREF: ROM:F8A0↓j
ROM:F889                                                     ; ROM:F8A6↓j ...
ROM:F889 A9 00                       LDA     #0
ROM:F88B 85 2F                       STA     OPCODL
ROM:F88D 60                          RTS
ROM:F88E             ; ---------------------------------------------------------------------------
ROM:F88E 4A                          LSR     A
ROM:F88F B0 14                       BCS     odd
ROM:F891
ROM:F891             ODDEVN:                                 ; CODE XREF: ROM:loc_F8B2↓j
ROM:F891 4A                          LSR     A
ROM:F892 A8                          TAY
ROM:F893 B9 F6 F9                    LDA     TABLE1,Y
ROM:F896 90 04                       BCC     lownib
ROM:F898 4A                          LSR     A
ROM:F899 4A                          LSR     A
ROM:F89A 4A                          LSR     A
ROM:F89B 4A                          LSR     A
ROM:F89C
ROM:F89C             lownib:                                 ; CODE XREF: ROM:F896↑j
ROM:F89C 29 0F                       AND     #$F
ROM:F89E C9 06                       CMP     #6              ; invalid opcode?
ROM:F8A0 F0 E7                       BEQ     OPERR
ROM:F8A2 85 2F                       STA     OPCODL
ROM:F8A4 60                          RTS
ROM:F8A5             ; ---------------------------------------------------------------------------
ROM:F8A5
ROM:F8A5             odd:                                    ; CODE XREF: ROM:F88F↑j
ROM:F8A5 6A                          ROR     A
ROM:F8A6 B0 E1                       BCS     OPERR           ; error! No XXXXXX11 opcodes
ROM:F8A8 49 FF                       EOR     #$FF
ROM:F8AA C9 5D                       CMP     #$5D ; ']'
ROM:F8AC F0 DB                       BEQ     OPERR           ; no STA #---
ROM:F8AE 49 FF                       EOR     #$FF
ROM:F8B0 29 87                       AND     #$87
ROM:F8B2
ROM:F8B2             loc_F8B2:
ROM:F8B2 4C 91 F8                    JMP     ODDEVN
ROM:F8B5
ROM:F8B5             ; =============== S U B R O U T I N E =======================================
ROM:F8B5
ROM:F8B5
ROM:F8B5             MTSAVE:                                 ; CODE XREF: j_MTSAVE↓j
ROM:F8B5                                                     ; DATA XREF: ROM:FAB1↓t
ROM:F8B5 A9 40                       LDA     #64
ROM:F8B7 20 F0 F8                    JSR     LEADER
ROM:F8BA 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:F8BD 10 03                       BPL     loc_F8C2
ROM:F8BF A0 54                       LDY     #84
ROM:F8BF             ; ---------------------------------------------------------------------------
ROM:F8C1 2C                          .BYTE $2C               ; BIT
ROM:F8C2             ; ---------------------------------------------------------------------------
ROM:F8C2
ROM:F8C2             loc_F8C2:                               ; CODE XREF: MTSAVE+8↑j
ROM:F8C2 A0 25                       LDY     #37
ROM:F8C4
ROM:F8C4             loc_F8C4:                               ; CODE XREF: MTSAVE+29↓j
ROM:F8C4 A2 00                       LDX     #0
ROM:F8C6 41 3C                       EOR     (REG1L,X)
ROM:F8C8 85 2E                       STA     CHECKSUM
ROM:F8CA A1 3C                       LDA     (REG1L,X)
ROM:F8CC 20 18 FE                    JSR     WRBYTE
ROM:F8CF 20 85 FC                    JSR     INCRE2
ROM:F8D2 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:F8D5 10 03                       BPL     loc_F8DA
ROM:F8D7 A0 3E                       LDY     #62
ROM:F8D7             ; ---------------------------------------------------------------------------
ROM:F8D9 2C                          .BYTE $2C
ROM:F8DA             ; ---------------------------------------------------------------------------
ROM:F8DA
ROM:F8DA             loc_F8DA:                               ; CODE XREF: MTSAVE+20↑j
ROM:F8DA A0 1B                       LDY     #27
ROM:F8DC A5 2E                       LDA     CHECKSUM
ROM:F8DE 90 E4                       BCC     loc_F8C4
ROM:F8E0 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:F8E3 10 03                       BPL     loc_F8E8
ROM:F8E5 A0 44                       LDY     #68
ROM:F8E5             ; ---------------------------------------------------------------------------
ROM:F8E7 2C                          .BYTE $2C
ROM:F8E8             ; ---------------------------------------------------------------------------
ROM:F8E8
ROM:F8E8             loc_F8E8:                               ; CODE XREF: MTSAVE+2E↑j
ROM:F8E8 A0 20                       LDY     #32
ROM:F8EA 20 18 FE                    JSR     WRBYTE
ROM:F8ED 4C 3A FF                    JMP     MBELL
ROM:F8ED             ; End of function MTSAVE
ROM:F8ED
ROM:F8F0
ROM:F8F0             ; =============== S U B R O U T I N E =======================================
ROM:F8F0
ROM:F8F0
ROM:F8F0             LEADER:                                 ; CODE XREF: MTSAVE+2↑p
ROM:F8F0                                                     ; LEADER+D↓j ...
ROM:F8F0 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:F8F3 10 03                       BPL     loc_F8F8
ROM:F8F5 A0 9B                       LDY     #155
ROM:F8F5             ; ---------------------------------------------------------------------------
ROM:F8F7 2C                          .BYTE $2C               ; BIT
ROM:F8F8             ; ---------------------------------------------------------------------------
ROM:F8F8
ROM:F8F8             loc_F8F8:                               ; CODE XREF: LEADER+3↑j
ROM:F8F8 A0 49                       LDY     #73
ROM:F8FA 20 12 F9                    JSR     loc_F912
ROM:F8FD D0 F1                       BNE     LEADER
ROM:F8FF 69 FE                       ADC     #$FE
ROM:F901 B0 ED                       BCS     LEADER
ROM:F903 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:F906 10 03                       BPL     loc_F90B
ROM:F908 A0 44                       LDY     #68
ROM:F908             ; End of function LEADER
ROM:F908
ROM:F908             ; ---------------------------------------------------------------------------
ROM:F90A 2C                          .BYTE $2C               ; BIT
ROM:F90B             ; ---------------------------------------------------------------------------
ROM:F90B
ROM:F90B             loc_F90B:                               ; CODE XREF: LEADER+16↑j
ROM:F90B A0 1F                       LDY     #31
ROM:F90D
ROM:F90D             ; =============== S U B R O U T I N E =======================================
ROM:F90D
ROM:F90D
ROM:F90D             WRTBIT:                                 ; CODE XREF: WRBYTE+3↓p
ROM:F90D 20 12 F9                    JSR     loc_F912
ROM:F910 C8                          INY
ROM:F911 C8                          INY
ROM:F911             ; End of function WRTBIT
ROM:F911
ROM:F912
ROM:F912             loc_F912:                               ; CODE XREF: LEADER+A↑p
ROM:F912                                                     ; WRTBIT↑p ...
ROM:F912 88                          DEY
ROM:F913 D0 FD                       BNE     loc_F912
ROM:F915 90 10                       BCC     loc_F927
ROM:F917 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:F91A 10 03                       BPL     loc_F91F
ROM:F91C A0 65                       LDY     #101
ROM:F91C             ; ---------------------------------------------------------------------------
ROM:F91E 2C                          .BYTE $2C               ; BIT
ROM:F91F             ; ---------------------------------------------------------------------------
ROM:F91F
ROM:F91F             loc_F91F:                               ; CODE XREF: ROM:F91A↑j
ROM:F91F A0 2F                       LDY     #47
ROM:F921
ROM:F921             loc_F921:                               ; CODE XREF: ROM:F922↓j
ROM:F921 88                          DEY
ROM:F922 D0 FD                       BNE     loc_F921
ROM:F924 4C 27 F9                    JMP     loc_F927
ROM:F927             ; ---------------------------------------------------------------------------
ROM:F927
ROM:F927             loc_F927:                               ; CODE XREF: ROM:F915↑j
ROM:F927                                                     ; ROM:F924↑j
ROM:F927 AC 20 C0                    LDY     byte_C020
ROM:F92A 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:F92D 10 03                       BPL     loc_F932
ROM:F92F A0 5A                       LDY     #90
ROM:F92F             ; ---------------------------------------------------------------------------
ROM:F931 2C                          .BYTE $2C               ; BIT
ROM:F932             ; ---------------------------------------------------------------------------
ROM:F932
ROM:F932             loc_F932:                               ; CODE XREF: ROM:F92D↑j
ROM:F932 A0 2A                       LDY     #42
ROM:F934 CA                          DEX
ROM:F935 60                          RTS
ROM:F935             ; ---------------------------------------------------------------------------
ROM:F936 60                          .BYTE $60 ; `
ROM:F937 60                          .BYTE $60 ; `
ROM:F938 60                          .BYTE $60 ; `
ROM:F939 60                          .BYTE $60 ; `
ROM:F93A 60                          .BYTE $60 ; `
ROM:F93B 60                          .BYTE $60 ; `
ROM:F93C 60                          .BYTE $60 ; `
ROM:F93D 60                          .BYTE $60 ; `
ROM:F93E 60                          .BYTE $60 ; `
ROM:F93F 60                          .BYTE $60 ; `
ROM:F940             ; ---------------------------------------------------------------------------
ROM:F940
ROM:F940             PRNYX:
ROM:F940 98                          TYA
ROM:F941
ROM:F941             PRNAX:
ROM:F941 20 C1 FD                    JSR     PRBYTE
ROM:F944
ROM:F944             PRNX:
ROM:F944 8A                          TXA
ROM:F945 4C C1 FD                    JMP     PRBYTE
ROM:F948             ; ---------------------------------------------------------------------------
ROM:F948 A9 03                       LDA     #3
ROM:F94A 85 4E                       STA     RNDNOL
ROM:F94C A9 A0                       LDA     #$A0
ROM:F94E
ROM:F94E             PRNSP1:                                 ; CODE XREF: ROM:F953↓j
ROM:F94E 20 ED FD                    JSR     COUT
ROM:F951 C6 4E                       DEC     RNDNOL
ROM:F953 D0 F9                       BNE     PRNSP1
ROM:F955 60                          RTS
ROM:F956
ROM:F956             ; =============== S U B R O U T I N E =======================================
ROM:F956
ROM:F956
ROM:F956             RT8BIT:                                 ; CODE XREF: TLOAD:TLOAD1↓p
ROM:F956                                                     ; TLOAD+21↓p
ROM:F956 A2 09                       LDX     #9
ROM:F958 CA                          DEX
ROM:F959
ROM:F959             loc_F959:                               ; CODE XREF: RT8BIT+C↓j
ROM:F959 48                          PHA
ROM:F95A 20 65 F9                    JSR     READPS          ; find tape leader
ROM:F95D 68                          PLA
ROM:F95E 2A                          ROL     A
ROM:F95F A0 39                       LDY     #57
ROM:F961 CA                          DEX
ROM:F962 D0 F5                       BNE     loc_F959
ROM:F964 60                          RTS
ROM:F964             ; End of function RT8BIT
ROM:F964
ROM:F965
ROM:F965             ; =============== S U B R O U T I N E =======================================
ROM:F965
ROM:F965             ; find tape leader
ROM:F965
ROM:F965             READPS:                                 ; CODE XREF: RT8BIT+4↑p
ROM:F965                                                     ; TLOAD↓p ...
ROM:F965 20 68 F9                    JSR     RT1BIT
ROM:F965             ; End of function READPS
ROM:F965
ROM:F968
ROM:F968             ; =============== S U B R O U T I N E =======================================
ROM:F968
ROM:F968
ROM:F968             RT1BIT:                                 ; CODE XREF: READPS↑p
ROM:F968                                                     ; RT1BIT:RTBIT2↓j ...
ROM:F968 88                          DEY
ROM:F969 88                          DEY
ROM:F96A 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:F96D 10 0A                       BPL     RTBIT1          ; JMP if 1MHz
ROM:F96F E6 4E                       INC     RNDNOL          ; 5 clock cycles each as double delay
ROM:F971 C6 4E                       DEC     RNDNOL
ROM:F973 E6 4E                       INC     RNDNOL
ROM:F975 C6 4E                       DEC     RNDNOL
ROM:F977 EA                          NOP                     ; 2 clocks each
ROM:F978 EA                          NOP                     ; total delay = 24 clocks
ROM:F979
ROM:F979             RTBIT1:                                 ; CODE XREF: RT1BIT+5↑j
ROM:F979 AD 60 C0                    LDA     TAPEIN
ROM:F97C 45 2F                       EOR     OPCODL
ROM:F97E 10 07                       BPL     RTBIT2
ROM:F980 45 2F                       EOR     OPCODL
ROM:F982 85 2F                       STA     OPCODL
ROM:F984 C0 80                       CPY     #$80
ROM:F986 60                          RTS
ROM:F987             ; ---------------------------------------------------------------------------
ROM:F987
ROM:F987             RTBIT2:                                 ; CODE XREF: RT1BIT+16↑j
ROM:F987 4C 68 F9                    JMP     RT1BIT
ROM:F987             ; End of function RT1BIT
ROM:F987
ROM:F98A             ; ---------------------------------------------------------------------------
ROM:F98A
ROM:F98A             VERIFY:                                 ; CODE XREF: ROM:F995↓j
ROM:F98A                                                     ; ROM:FE36↓j
ROM:F98A                                                     ; DATA XREF: ...
ROM:F98A A0 00                       LDY     #0
ROM:F98C B1 3C                       LDA     (REG1L),Y
ROM:F98E D1 42                       CMP     (REG4L),Y
ROM:F990 D0 06                       BNE     VERERR
ROM:F992
ROM:F992             VERCOM:                                 ; CODE XREF: ROM:F9C7↓j
ROM:F992 20 7F FC                    JSR     INCRE1
ROM:F995 90 F3                       BCC     VERIFY
ROM:F997 60                          RTS
ROM:F998             ; ---------------------------------------------------------------------------
ROM:F998
ROM:F998             VERERR:                                 ; CODE XREF: ROM:F990↑j
ROM:F998 20 C5 FE                    JSR     CROUT
ROM:F99B A5 3D                       LDA     REG1H
ROM:F99D 20 C1 FD                    JSR     PRBYTE
ROM:F9A0 A5 3C                       LDA     REG1L
ROM:F9A2 20 C1 FD                    JSR     PRBYTE
ROM:F9A5 A9 BD                       LDA     #$BD
ROM:F9A7 20 ED FD                    JSR     COUT
ROM:F9AA A0 00                       LDY     #0
ROM:F9AC B1 3C                       LDA     (REG1L),Y
ROM:F9AE 20 C1 FD                    JSR     PRBYTE
ROM:F9B1 A9 A0                       LDA     #$A0
ROM:F9B3 20 ED FD                    JSR     COUT
ROM:F9B6 A9 A8                       LDA     #$A8
ROM:F9B8 20 ED FD                    JSR     COUT
ROM:F9BB A0 00                       LDY     #0
ROM:F9BD B1 42                       LDA     (REG4L),Y
ROM:F9BF 20 C1 FD                    JSR     PRBYTE
ROM:F9C2 A9 A9                       LDA     #$A9
ROM:F9C4 20 ED FD                    JSR     COUT
ROM:F9C7 4C 92 F9                    JMP     VERCOM
ROM:F9CA             ; ---------------------------------------------------------------------------
ROM:F9CA             ; START OF FUNCTION CHUNK FOR GETLN
ROM:F9CA
ROM:F9CA             TAB:                                    ; CODE XREF: GETLN+12↓j
ROM:F9CA E0 F8                       CPX     #248
ROM:F9CC B0 25                       BCS     TABJMP
ROM:F9CE A5 24                       LDA     CHORIZ
ROM:F9D0 18                          CLC
ROM:F9D1 69 08                       ADC     #8              ; TAB = 8 chars
ROM:F9D3 C5 21                       CMP     WNDWTH
ROM:F9D5 B0 1C                       BCS     TABJMP
ROM:F9D7 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:F9DA
ROM:F9DA             TAB1:                                   ; CODE XREF: GETLN-37A↓j
ROM:F9DA AD FB 06                    LDA     TEMPA
ROM:F9DD 9D 00 02                    STA     KEYBUF,X
ROM:F9E0 E8                          INX
ROM:F9E1 E6 24                       INC     CHORIZ
ROM:F9E3 A5 24                       LDA     CHORIZ
ROM:F9E5 2C 31 F8                    BIT     DATA07
ROM:F9E8 F0 09                       BEQ     TABJMP
ROM:F9EA 20 A0 CB                    JSR     ENCUR           ; Enable Cursor
ROM:F9ED 20 DF CB                    JSR     DECUR
ROM:F9F0 4C DA F9                    JMP     TAB1
ROM:F9F3             ; ---------------------------------------------------------------------------
ROM:F9F3
ROM:F9F3             TABJMP:                                 ; CODE XREF: GETLN-39E↑j
ROM:F9F3                                                     ; GETLN-395↑j ...
ROM:F9F3 4C 71 FD                    JMP     GETLN1
ROM:F9F3             ; END OF FUNCTION CHUNK FOR GETLN
ROM:F9F3             ; ---------------------------------------------------------------------------
ROM:F9F6 60          TABLE1:         .BYTE $60 ; `           ; 128 x 4 bit opcode lengths XXXXXXX0
ROM:F9F7 16                          .BYTE $16
ROM:F9F8 00                          .BYTE   0
ROM:F9F9 26                          .BYTE $26 ; &
ROM:F9FA 61                          .BYTE $61 ; a
ROM:F9FB 16                          .BYTE $16
ROM:F9FC 60                          .BYTE $60 ; `
ROM:F9FD 26                          .BYTE $26 ; &
ROM:F9FE 62                          .BYTE $62 ; b
ROM:F9FF 11                          .BYTE $11
ROM:FA00 00                          .BYTE   0
ROM:FA01 22                          .BYTE $22 ; "
ROM:FA02 61                          .BYTE $61 ; a
ROM:FA03 16                          .BYTE $16
ROM:FA04 60                          .BYTE $60 ; `
ROM:FA05 26                          .BYTE $26 ; &
ROM:FA06 60                          .BYTE $60 ; `
ROM:FA07 16                          .BYTE $16
ROM:FA08 00                          .BYTE   0
ROM:FA09 22                          .BYTE $22 ; "
ROM:FA0A 61                          .BYTE $61 ; a
ROM:FA0B 16                          .BYTE $16
ROM:FA0C 60                          .BYTE $60 ; `
ROM:FA0D 26                          .BYTE $26 ; &
ROM:FA0E 60                          .BYTE $60 ; `
ROM:FA0F 16                          .BYTE $16
ROM:FA10 00                          .BYTE   0
ROM:FA11 22                          .BYTE $22 ; "
ROM:FA12 61                          .BYTE $61 ; a
ROM:FA13 16                          .BYTE $16
ROM:FA14 60                          .BYTE $60 ; `
ROM:FA15 26                          .BYTE $26 ; &
ROM:FA16 66                          .BYTE $66 ; f
ROM:FA17 11                          .BYTE $11
ROM:FA18 00                          .BYTE   0
ROM:FA19 22                          .BYTE $22 ; "
ROM:FA1A 61                          .BYTE $61 ; a
ROM:FA1B 16                          .BYTE $16
ROM:FA1C 60                          .BYTE $60 ; `
ROM:FA1D 26                          .BYTE $26 ; &
ROM:FA1E 11                          .BYTE $11
ROM:FA1F 11                          .BYTE $11
ROM:FA20 00                          .BYTE   0
ROM:FA21 22                          .BYTE $22 ; "
ROM:FA22 61                          .BYTE $61 ; a
ROM:FA23 11                          .BYTE $11
ROM:FA24 00                          .BYTE   0
ROM:FA25 22                          .BYTE $22 ; "
ROM:FA26 61                          .BYTE $61 ; a
ROM:FA27 11                          .BYTE $11
ROM:FA28 00                          .BYTE   0
ROM:FA29 22                          .BYTE $22 ; "
ROM:FA2A 61                          .BYTE $61 ; a
ROM:FA2B 16                          .BYTE $16
ROM:FA2C 60                          .BYTE $60 ; `
ROM:FA2D 26                          .BYTE $26 ; &
ROM:FA2E 61                          .BYTE $61 ; a
ROM:FA2F 11                          .BYTE $11
ROM:FA30 00                          .BYTE   0
ROM:FA31 22                          .BYTE $22 ; "
ROM:FA32 61                          .BYTE $61 ; a
ROM:FA33 16                          .BYTE $16
ROM:FA34 60                          .BYTE $60 ; `
ROM:FA35 26                          .BYTE $26 ; &
ROM:FA36 11                          .BYTE $11               ; 8 x 4 bit opcode lengths XXXXXX01
ROM:FA37 21                          .BYTE $21 ; !
ROM:FA38 11                          .BYTE $11
ROM:FA39 22                          .BYTE $22 ; "
ROM:FA3A 60                          .BYTE $60 ; `           ; blank space
ROM:FA3B 60                          .BYTE $60 ; `
ROM:FA3C 60                          .BYTE $60 ; `
ROM:FA3D 60                          .BYTE $60 ; `
ROM:FA3E 60                          .BYTE $60 ; `
ROM:FA3F 60                          .BYTE $60 ; `
ROM:FA40             ; ---------------------------------------------------------------------------
ROM:FA40
ROM:FA40             IRQBRK:                                 ; DATA XREF: ROM:FFFE↓o
ROM:FA40 85 45                       STA     ACC
ROM:FA42 68                          PLA
ROM:FA43 48                          PHA
ROM:FA44 2C 49 FB                    BIT     DATA10          ; Interrupt or Break?
ROM:FA47 D0 03                       BNE     BREAK
ROM:FA49 6C FE 03                    JMP     (IRQ_VECTOR)
ROM:FA4C             ; ---------------------------------------------------------------------------
ROM:FA4C
ROM:FA4C             BREAK:                                  ; CODE XREF: ROM:FA47↑j
ROM:FA4C 68                          PLA
ROM:FA4D 85 48                       STA     STATUS
ROM:FA4F 68                          PLA
ROM:FA50 85 3A                       STA     PCL
ROM:FA52 68                          PLA
ROM:FA53 85 3B                       STA     PCH
ROM:FA55 86 46                       STX     REGX
ROM:FA57 84 47                       STY     REGY
ROM:FA59 BA                          TSX
ROM:FA5A 86 49                       STX     STACKP
ROM:FA5C 6C F0 03                    JMP     (BREAKVER)
ROM:FA5F             ; ---------------------------------------------------------------------------
ROM:FA5F 4C 65 FF                    JMP     MON
ROM:FA62             ; ---------------------------------------------------------------------------
ROM:FA62
ROM:FA62             RESET:                                  ; DATA XREF: ROM:FFFC↓o
ROM:FA62 4C 71 D5                    JMP     RESET0
ROM:FA65             ; ---------------------------------------------------------------------------
ROM:FA65
ROM:FA65             BREAK1:                                 ; DATA XREF: ROM:PG3VECT↓o
ROM:FA65 20 C5 FE                    JSR     CROUT
ROM:FA68 A2 00                       LDX     #0
ROM:FA6A
ROM:FA6A             BREAK2:                                 ; CODE XREF: ROM:FA73↓j
ROM:FA6A BD BD FC                    LDA     BREAKMSG,X
ROM:FA6D 20 ED FD                    JSR     COUT
ROM:FA70 E8                          INX
ROM:FA71 E0 0B                       CPX     #11
ROM:FA73 D0 F5                       BNE     BREAK2
ROM:FA75 A5 3A                       LDA     PCL             ; Print Address
ROM:FA77 E9 02                       SBC     #2
ROM:FA79 48                          PHA
ROM:FA7A A5 3B                       LDA     PCH
ROM:FA7C E9 00                       SBC     #0
ROM:FA7E 20 C1 FD                    JSR     PRBYTE
ROM:FA81 68                          PLA
ROM:FA82 20 C1 FD                    JSR     PRBYTE
ROM:FA85 4C 65 FF                    JMP     MON
ROM:FA85             ; ---------------------------------------------------------------------------
ROM:FA88 83          COMTBL:         .BYTE $83               ; DATA XREF: SEARCH:search1↓t
ROM:FA88                                                     ; CTRL-C   monitor commands
ROM:FA89 82                          .BYTE $82               ; CTRL-B
ROM:FA8A 99                          .BYTE $99               ; CTRL-Y
ROM:FA8B 8B                          .BYTE $8B               ; CTRL-K
ROM:FA8C 90                          .BYTE $90               ; CTRL-P
ROM:FA8D CE                          .BYTE $CE               ; CTRL-N
ROM:FA8E C9                          .BYTE $C9               ; CTRL-I
ROM:FA8F AE                          .BYTE $AE               ; "DOT"
ROM:FA90 B3                          .BYTE $B3
ROM:FA91 B5                          .BYTE $B5
ROM:FA92 C7                          .BYTE $C7               ; "G"
ROM:FA93 D2                          .BYTE $D2               ; "R"
ROM:FA94 D7                          .BYTE $D7               ; "W"
ROM:FA95 CD                          .BYTE $CD               ; "M"
ROM:FA96 D6                          .BYTE $D6               ; "V"
ROM:FA97 8D                          .BYTE $8D               ; <CR>
ROM:FA98 A0                          .BYTE $A0               ; SPACE
ROM:FA99 02 E0       ADRTBL:         .WORD BASIC_WARM-1      ; address of monitor routine vectors
ROM:FA9B FF DF                       .WORD BASIC_COLD-1
ROM:FA9D F7 03                       .WORD USER_VECTOR-1
ROM:FA9F 8C FE                       .WORD DIVERT_KB_INPUT-1
ROM:FAA1 96 FE                       .WORD $FE96
ROM:FAA3 83 FE                       .WORD SETNORMAL-1
ROM:FAA5 7F FE                       .WORD SETINVERSE-1
ROM:FAA7 27 F8                       .WORD DOT-1
ROM:FAA9 05 FC                       .WORD $FC05
ROM:FAAB 3F FB                       .WORD $FB3F
ROM:FAAD CF FE                       .WORD GO-1
ROM:FAAF FC FE                       .WORD TLOAD-1
ROM:FAB1 B4 F8                       .WORD MTSAVE-1
ROM:FAB3 2B FE                       .WORD MOVE-1
ROM:FAB5 89 F9                       .WORD VERIFY-1
ROM:FAB7 32 F8                       .WORD MON_CR-1          ; handle <CR> in Monitor. Display next 8 mem locs
ROM:FAB9 DE FC                       .WORD SPACE-1
ROM:FABB CD          LOGO:           .BYTE $CD               ; Microsoft BASIC V.T. Version....
ROM:FABC C9                          .BYTE $C9
ROM:FABD C3                          .BYTE $C3
ROM:FABE D2                          .BYTE $D2
ROM:FABF CF                          .BYTE $CF
ROM:FAC0 D3                          .BYTE $D3
ROM:FAC1 CF                          .BYTE $CF
ROM:FAC2 C6                          .BYTE $C6
ROM:FAC3 D4                          .BYTE $D4
ROM:FAC4 A0                          .BYTE $A0
ROM:FAC5 C2                          .BYTE $C2
ROM:FAC6 C1                          .BYTE $C1
ROM:FAC7 D3                          .BYTE $D3
ROM:FAC8 C9                          .BYTE $C9
ROM:FAC9 C3                          .BYTE $C3
ROM:FACA A0                          .BYTE $A0
ROM:FACB D6                          .BYTE $D6
ROM:FACC AE                          .BYTE $AE
ROM:FACD D4                          .BYTE $D4
ROM:FACE AE                          .BYTE $AE
ROM:FACF A0                          .BYTE $A0
ROM:FAD0 D6                          .BYTE $D6
ROM:FAD1 C5                          .BYTE $C5
ROM:FAD2 D2                          .BYTE $D2
ROM:FAD3 D3                          .BYTE $D3
ROM:FAD4 C9                          .BYTE $C9
ROM:FAD5 CF                          .BYTE $CF
ROM:FAD6 CE                          .BYTE $CE
ROM:FAD7 A0                          .BYTE $A0
ROM:FAD8 B2                          .BYTE $B2               ; version 2.2
ROM:FAD9 AE                          .BYTE $AE
ROM:FADA B2                          .BYTE $B2
ROM:FADB 8D                          .BYTE $8D
ROM:FADC 8D                          .BYTE $8D
ROM:FADD A8                          .BYTE $A8
ROM:FADE C3                          .BYTE $C3
ROM:FADF A9                          .BYTE $A9
ROM:FAE0 A0                          .BYTE $A0
ROM:FAE1 C3                          .BYTE $C3
ROM:FAE2 CF                          .BYTE $CF
ROM:FAE3 D0                          .BYTE $D0
ROM:FAE4 D9                          .BYTE $D9
ROM:FAE5 D2                          .BYTE $D2
ROM:FAE6 C9                          .BYTE $C9
ROM:FAE7 C7                          .BYTE $C7
ROM:FAE8 C8                          .BYTE $C8
ROM:FAE9 D4                          .BYTE $D4
ROM:FAEA A0                          .BYTE $A0
ROM:FAEB D6                          .BYTE $D6
ROM:FAEC AE                          .BYTE $AE
ROM:FAED D4                          .BYTE $D4
ROM:FAEE AE                          .BYTE $AE
ROM:FAEF A0                          .BYTE $A0
ROM:FAF0 B1                          .BYTE $B1
ROM:FAF1 B9                          .BYTE $B9
ROM:FAF2 B8                          .BYTE $B8
ROM:FAF3 B4                          .BYTE $B4
ROM:FAF4 8D                          .BYTE $8D
ROM:FAF5 8D                          .BYTE $8D
ROM:FAF6 00                          .BYTE   0
ROM:FAF7 60                          .BYTE $60 ; `
ROM:FAF8 60                          .BYTE $60 ; `
ROM:FAF9 60                          .BYTE $60 ; `
ROM:FAFA 60                          .BYTE $60 ; `
ROM:FAFB 60                          .BYTE $60 ; `
ROM:FAFC 60                          .BYTE $60 ; `
ROM:FAFD 60                          .BYTE $60 ; `
ROM:FAFE 60                          .BYTE $60 ; `
ROM:FAFF 60                          .BYTE $60 ; `
ROM:FB00 60                          .BYTE $60 ; `
ROM:FB01 60                          .BYTE $60 ; `
ROM:FB02             ; ---------------------------------------------------------------------------
ROM:FB02             ; START OF FUNCTION CHUNK FOR MPREAD
ROM:FB02
ROM:FB02             PREAD1:                                 ; CODE XREF: MPREAD-16↓j
ROM:FB02                                                     ; MPREAD+A↓j
ROM:FB02 BD 64 C0                    LDA     PADDL0,X
ROM:FB05 10 04                       BPL     PDL_RTS
ROM:FB07 C8                          INY
ROM:FB08 D0 F8                       BNE     PREAD1
ROM:FB0A 88                          DEY
ROM:FB0B
ROM:FB0B             PDL_RTS:                                ; CODE XREF: MPREAD-19↑j
ROM:FB0B                                                     ; MPREAD-C↓j ...
ROM:FB0B 60                          RTS
ROM:FB0C             ; ---------------------------------------------------------------------------
ROM:FB0C
ROM:FB0C             PREAD2:                                 ; CODE XREF: MPREAD-4↓j
ROM:FB0C                                                     ; MPREAD+C↓j
ROM:FB0C BD 64 C0                    LDA     PADDL0,X
ROM:FB0F BD 64 C0                    LDA     PADDL0,X
ROM:FB12 10 F7                       BPL     PDL_RTS
ROM:FB14 10 F5                       BPL     PDL_RTS
ROM:FB16 C8                          INY
ROM:FB17 EA                          NOP
ROM:FB18 85 2A                       STA     SBAS2L
ROM:FB1A D0 F0                       BNE     PREAD2
ROM:FB1C 88                          DEY
ROM:FB1D 60                          RTS
ROM:FB1D             ; END OF FUNCTION CHUNK FOR MPREAD
ROM:FB1E
ROM:FB1E             ; =============== S U B R O U T I N E =======================================
ROM:FB1E
ROM:FB1E
ROM:FB1E             MPREAD:                                 ; CODE XREF: ROM:DFD0↑p
ROM:FB1E
ROM:FB1E             ; FUNCTION CHUNK AT ROM:FB02 SIZE 0000001C BYTES
ROM:FB1E
ROM:FB1E A0 00                       LDY     #0
ROM:FB20 2C C5 C1                    BIT     TWOMHZ          ; read HIRES status (always runs at 2MHz)
ROM:FB23 EA                          NOP
ROM:FB24 EA                          NOP
ROM:FB25 8D 70 C0                    STA     PDLRES          ; reset paddles (Analog clear)
ROM:FB28 10 D8                       BPL     PREAD1
ROM:FB2A 30 E0                       BMI     PREAD2
ROM:FB2C 60                          RTS
ROM:FB2C             ; End of function MPREAD
ROM:FB2C
ROM:FB2C             ; ---------------------------------------------------------------------------
ROM:FB2D 60                          .BYTE $60 ; `
ROM:FB2E 60                          .BYTE $60 ; `
ROM:FB2F
ROM:FB2F             ; =============== S U B R O U T I N E =======================================
ROM:FB2F
ROM:FB2F
ROM:FB2F             VZINIT:                                 ; CODE XREF: ROM:D5E3↑p
ROM:FB2F EA                          NOP
ROM:FB30 EA                          NOP
ROM:FB31 EA                          NOP
ROM:FB32 EA                          NOP
ROM:FB33 AD 56 C0                    LDA     VZSELF          ; disable RGB/DOUBLE RES MODE selection
ROM:FB36 AD 54 C0                    LDA     VZPAGE1         ; display primary page
ROM:FB39
ROM:FB39             loc_FB39:                               ; CODE XREF: RAM:A696↑j
ROM:FB39                                                     ; RAM:A69C↑j ...
ROM:FB39 AD 51 C0                    LDA     VZTEXT          ; text mode on
ROM:FB3C A9 00                       LDA     #0
ROM:FB3E
ROM:FB3E             loc_FB3E:                               ; always
ROM:FB3E F0 0B                       BEQ     MSETWN
ROM:FB40
ROM:FB40             MODE3:
ROM:FB40 A5 3E                       LDA     REG2L
ROM:FB42 85 42                       STA     REG4L
ROM:FB44 A5 3F                       LDA     REG2H
ROM:FB46 85 43                       STA     REG4H
ROM:FB48 60                          RTS
ROM:FB48             ; ---------------------------------------------------------------------------
ROM:FB49 10          DATA10:         .BYTE $10               ; DATA XREF: ROM:FA44↑r
ROM:FB4A 00          SIGNAT:         .BYTE 0                 ; DATA XREF: ROAD:FIRST_80↑r
ROM:FB4B             ; ---------------------------------------------------------------------------
ROM:FB4B
ROM:FB4B             MSETWN:                                 ; CODE XREF: RAM:A639↑p
ROM:FB4B                                                     ; VZINIT:loc_FB3E↑j
ROM:FB4B 85 22                       STA     WNDTOP
ROM:FB4D A9 00                       LDA     #0
ROM:FB4F 85 20                       STA     WNDLEFT
ROM:FB51 A9 18                       LDA     #24
ROM:FB53 85 23                       STA     WNDBTM
ROM:FB55 EA                          NOP
ROM:FB56 20 12 F8                    JSR     SETWIDTH        ; 40 or 80
ROM:FB59 A9 17                       LDA     #23             ; Cursor on bottom line
ROM:FB5B
ROM:FB5B             MTABV:                                  ; CODE XREF: ROM:F25F↑j
ROM:FB5B 85 25                       STA     CVERT
ROM:FB5D 20 22 FC                    JSR     MVTAB
ROM:FB60 60                          RTS
ROM:FB60             ; End of function VZINIT
ROM:FB60
ROM:FB61
ROM:FB61             ; =============== S U B R O U T I N E =======================================
ROM:FB61
ROM:FB61             ; preset PAGE#3 vectors
ROM:FB61
ROM:FB61             PRESP3:                                 ; CODE XREF: ROM:D602↑p
ROM:FB61 A0 04                       LDY     #4
ROM:FB63
ROM:FB63             LOOP1:                                  ; CODE XREF: PRESP3+9↓j
ROM:FB63 B9 D2 FB                    LDA     PG3VECT-1
ROM:FB66 99 EF 03                    STA     BREAKVER-1,Y
ROM:FB69 88                          DEY
ROM:FB6A D0 F7                       BNE     LOOP1
ROM:FB6C 4C 6F FB                    JMP     SRESTV
ROM:FB6C             ; End of function PRESP3
ROM:FB6C
ROM:FB6F
ROM:FB6F             ; =============== S U B R O U T I N E =======================================
ROM:FB6F
ROM:FB6F
ROM:FB6F             SRESTV:                                 ; CODE XREF: ROM:D60D↑p
ROM:FB6F                                                     ; PRESP3+B↑j
ROM:FB6F AD F3 03                    LDA     RESTVR+1
ROM:FB72 49 A5                       EOR     #$A5
ROM:FB74 8D F4 03                    STA     RESTVR+2
ROM:FB77 60                          RTS
ROM:FB77             ; End of function SRESTV
ROM:FB77
ROM:FB78
ROM:FB78             ; =============== S U B R O U T I N E =======================================
ROM:FB78
ROM:FB78
ROM:FB78             TEXT40:                                 ; CODE XREF: ROM:SETT40↑p
ROM:FB78                                                     ; j_TEXT40↑j
ROM:FB78 A9 04                       LDA     #4
ROM:FB7A 20 8A FB                    JSR     BEAUTI          ; 40 column screen starts at $0400
ROM:FB7D 2C 4C C0                    BIT     VZTX40          ; 40 char wide LORES modes, also switches to 1MHz
ROM:FB80 60                          RTS
ROM:FB80             ; End of function TEXT40
ROM:FB80
ROM:FB81
ROM:FB81             ; =============== S U B R O U T I N E =======================================
ROM:FB81
ROM:FB81
ROM:FB81             TEXT80:                                 ; CODE XREF: ROM:D5C5↑p
ROM:FB81                                                     ; j_TEXT80↑j
ROM:FB81 A9 10                       LDA     #$10
ROM:FB83 20 8A FB                    JSR     BEAUTI          ; 80 column screen starts at $1000
ROM:FB86 2C 4F C0                    BIT     VZTX80          ; 80 char wide HIRES modes, also switches to 2MHz
ROM:FB89 60                          RTS
ROM:FB89             ; End of function TEXT80
ROM:FB89
ROM:FB8A
ROM:FB8A             ; =============== S U B R O U T I N E =======================================
ROM:FB8A
ROM:FB8A
ROM:FB8A             BEAUTI:                                 ; CODE XREF: TEXT40+2↑p
ROM:FB8A                                                     ; TEXT80+2↑p
ROM:FB8A 8D 7B 05                    STA     TXTMOD          ; TEXT MODE : $10 = 80 cols, $04 = 40 cols
ROM:FB8D
ROM:FB8D             wait_vert:                              ; CODE XREF: BEAUTI+6↓j
ROM:FB8D 2C C3 C1                    BIT     VERTSC          ; Read Vertical blank status
ROM:FB90 30 FB                       BMI     wait_vert       ; Wait for vertical re-trace to change
ROM:FB92 2C 56 C0                    BIT     VZSELF          ; disable RGB/DOUBLE RES MODE selection
ROM:FB95 2C 51 C0                    BIT     VZTEXT          ; text mode on
ROM:FB98 60                          RTS
ROM:FB98             ; End of function BEAUTI
ROM:FB98
ROM:FB99
ROM:FB99             ; =============== S U B R O U T I N E =======================================
ROM:FB99
ROM:FB99
ROM:FB99             TITLE:                                  ; CODE XREF: ROM:FIRSTTIME↑p
ROM:FB99 20 58 FC                    JSR     F8HOME
ROM:FB9C A2 00                       LDX     #0
ROM:FB9E
ROM:FB9E             TITLE1:                                 ; CODE XREF: TITLE+E↓j
ROM:FB9E BD BB FA                    LDA     LOGO,X
ROM:FBA1 F0 06                       BEQ     titlerts
ROM:FBA3 20 ED FD                    JSR     COUT
ROM:FBA6 E8                          INX
ROM:FBA7 D0 F5                       BNE     TITLE1
ROM:FBA9
ROM:FBA9             titlerts:                               ; CODE XREF: TITLE+8↑j
ROM:FBA9 60                          RTS
ROM:FBA9             ; End of function TITLE
ROM:FBA9
ROM:FBAA
ROM:FBAA             ; =============== S U B R O U T I N E =======================================
ROM:FBAA
ROM:FBAA
ROM:FBAA             INFKEY:                                 ; CODE XREF: ROM:D5FF↑p
ROM:FBAA 20 C7 FB                    JSR     FRAMOI
ROM:FBAD A2 18                       LDX     #24
ROM:FBAF A9 A0                       LDA     #$A0
ROM:FBB1
ROM:FBB1             INFKE1:                                 ; CODE XREF: INFKEY+B↓j
ROM:FBB1 9D 00 48                    STA     KEYFLG,X
ROM:FBB4 CA                          DEX
ROM:FBB5 10 FA                       BPL     INFKE1
ROM:FBB7 4C CD FB                    JMP     FRAMOU
ROM:FBB7             ; End of function INFKEY
ROM:FBB7
ROM:FBB7             ; ---------------------------------------------------------------------------
ROM:FBBA 60                          .BYTE $60 ; `
ROM:FBBB 60                          .BYTE $60 ; `
ROM:FBBC 60                          .BYTE $60 ; `
ROM:FBBD 60                          .BYTE $60 ; `
ROM:FBBE 60                          .BYTE $60 ; `
ROM:FBBF 60                          .BYTE $60 ; `
ROM:FBC0 60                          .BYTE $60 ; `
ROM:FBC1             ; ---------------------------------------------------------------------------
ROM:FBC1 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FBC4 4C 41 CB                    JMP     ADRCAL          ; Calculate Screen Line base address
ROM:FBC4                                                     ; A = Line Number
ROM:FBC4                                                     ; SBASL,H = Base Address for this line
ROM:FBC7
ROM:FBC7             ; =============== S U B R O U T I N E =======================================
ROM:FBC7
ROM:FBC7
ROM:FBC7             FRAMOI:                                 ; CODE XREF: j_FRAMOI↑j
ROM:FBC7                                                     ; INFKEY↑p
ROM:FBC7 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FBCA 4C 0D CC                    JMP     RAM0IN          ; Bring in RAM0 to $4000-$7FFF
ROM:FBCA             ; End of function FRAMOI
ROM:FBCA
ROM:FBCD
ROM:FBCD             ; =============== S U B R O U T I N E =======================================
ROM:FBCD
ROM:FBCD
ROM:FBCD             FRAMOU:                                 ; CODE XREF: ROM:D5D1↑p
ROM:FBCD                                                     ; j_FRAMOU↑j ...
ROM:FBCD 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FBD0 4C 17 CC                    JMP     RAMODU          ; Move RAM0 out of $4000-$7FFF, restore previous
ROM:FBD0             ; End of function FRAMOU
ROM:FBD0
ROM:FBD0             ; ---------------------------------------------------------------------------
ROM:FBD3 65 FA       PG3VECT:        .WORD BREAK1            ; DATA XREF: PRESP3:LOOP1↑t
ROM:FBD3                                                     ; Page 3 vectors
ROM:FBD5 00 E0                       .WORD BASIC_COLD
ROM:FBD7 60                          .BYTE $60
ROM:FBD8 60                          .BYTE $60
ROM:FBD9             ; ---------------------------------------------------------------------------
ROM:FBD9 C9 87                       CMP     #$87
ROM:FBDB D0 F0                       BNE     FRAMOU
ROM:FBDD EA                          NOP
ROM:FBDE EA                          NOP
ROM:FBDF EA                          NOP
ROM:FBE0 EA                          NOP
ROM:FBE1 EA                          NOP
ROM:FBE2 EA                          NOP
ROM:FBE3 EA                          NOP
ROM:FBE4 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FBE7 4C 2E CA                    JMP     BELL            ; Buzz speaker at 1 kHz for 0.1 second
ROM:FBEA
ROM:FBEA             ; =============== S U B R O U T I N E =======================================
ROM:FBEA
ROM:FBEA
ROM:FBEA             ENTRY1:                                 ; CODE XREF: ROM:FBF0↓p
ROM:FBEA 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FBED 4C 18 CA                    JMP     STORAD          ; horizontal position
ROM:FBED             ; End of function ENTRY1
ROM:FBED
ROM:FBF0             ; ---------------------------------------------------------------------------
ROM:FBF0 20 EA FB                    JSR     ENTRY1
ROM:FBF3 60                          RTS
ROM:FBF4             ; ---------------------------------------------------------------------------
ROM:FBF4 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FBF7 4C 20 CA                    JMP     ADVANCE
ROM:FBFA
ROM:FBFA             ; =============== S U B R O U T I N E =======================================
ROM:FBFA
ROM:FBFA             ; turn sound generators off
ROM:FBFA
ROM:FBFA             SONINT:                                 ; CODE XREF: ROM:D5E0↑p
ROM:FBFA A0 03                       LDY     #3
ROM:FBFC
ROM:FBFC             loc_FBFC:                               ; CODE XREF: SONINT+9↓j
ROM:FBFC B9 16 FC                    LDA     DEAF,Y
ROM:FBFF 20 2A FC                    JSR     AUDOUT
ROM:FC02 88                          DEY
ROM:FC03 10 F7                       BPL     loc_FBFC
ROM:FC05 60                          RTS
ROM:FC05             ; End of function SONINT
ROM:FC05
ROM:FC06             ; ---------------------------------------------------------------------------
ROM:FC06 A9 99                       LDA     #$99
ROM:FC08 85 31                       STA     STOFLG
ROM:FC0A 4C 28 F8                    JMP     DOT
ROM:FC0A             ; ---------------------------------------------------------------------------
ROM:FC0D 60                          .BYTE $60
ROM:FC0E 60                          .BYTE $60
ROM:FC0F 60                          .BYTE $60
ROM:FC10             ; ---------------------------------------------------------------------------
ROM:FC10 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FC13 4C 54 CA                    JMP     BS
ROM:FC13             ; ---------------------------------------------------------------------------
ROM:FC16 9F          DEAF:           .BYTE $9F               ; data to turn the sound channels off
ROM:FC17 BF                          .BYTE $BF
ROM:FC18 DF                          .BYTE $DF
ROM:FC19 FF                          .BYTE $FF
ROM:FC1A             ; ---------------------------------------------------------------------------
ROM:FC1A 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FC1D 4C 5E CA                    JMP     UP
ROM:FC1D             ; ---------------------------------------------------------------------------
ROM:FC20 60                          .BYTE $60
ROM:FC21 60                          .BYTE $60
ROM:FC22
ROM:FC22             ; =============== S U B R O U T I N E =======================================
ROM:FC22
ROM:FC22
ROM:FC22             MVTAB:                                  ; CODE XREF: RAM:A640↑j
ROM:FC22                                                     ; VZINIT+2E↑p
ROM:FC22 A5 25                       LDA     CVERT
ROM:FC24 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FC27 4C 41 CB                    JMP     ADRCAL          ; Calculate Screen Line base address
ROM:FC27             ; End of function MVTAB                 ; A = Line Number
ROM:FC27                                                     ; SBASL,H = Base Address for this line
ROM:FC2A
ROM:FC2A             ; =============== S U B R O U T I N E =======================================
ROM:FC2A
ROM:FC2A
ROM:FC2A             AUDOUT:                                 ; CODE XREF: j_AUDOUT↑j
ROM:FC2A                                                     ; SONINT+5↑p
ROM:FC2A 8D 68 C0                    STA     SONGEN          ; Sound chip data register
ROM:FC2D
ROM:FC2D             loc_FC2D:                               ; CODE XREF: AUDOUT+6↓j
ROM:FC2D 2C C2 C1                    BIT     HORIZSC         ; Read Horizontal blank status
ROM:FC30 30 FB                       BMI     loc_FC2D        ; wait for 1 horizontal sync period
ROM:FC32
ROM:FC32             loc_FC32:                               ; CODE XREF: AUDOUT+B↓j
ROM:FC32 2C C2 C1                    BIT     HORIZSC         ; Read Horizontal blank status
ROM:FC35 10 FB                       BPL     loc_FC32
ROM:FC37 60                          RTS
ROM:FC37             ; End of function AUDOUT
ROM:FC37
ROM:FC38
ROM:FC38             ; =============== S U B R O U T I N E =======================================
ROM:FC38
ROM:FC38             ; Read the SYNC period
ROM:FC38
ROM:FC38             FINDSTB:                                ; CODE XREF: FINDSTB+5↓j
ROM:FC38                                                     ; TLOAD+9↓p
ROM:FC38 A0 24                       LDY     #36
ROM:FC3A 20 68 F9                    JSR     RT1BIT
ROM:FC3D B0 F9                       BCS     FINDSTB         ; Read the SYNC period
ROM:FC3F 60                          RTS
ROM:FC3F             ; End of function FINDSTB
ROM:FC3F
ROM:FC3F             ; ---------------------------------------------------------------------------
ROM:FC40 60                          .BYTE $60 ; `
ROM:FC41 60                          .BYTE $60 ; `
ROM:FC42             ; ---------------------------------------------------------------------------
ROM:FC42 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FC45 4C 7F CA                    JMP     CLREOP
ROM:FC48
ROM:FC48             ; =============== S U B R O U T I N E =======================================
ROM:FC48
ROM:FC48
ROM:FC48             ENTRY2:                                 ; CODE XREF: ROM:FC62↓p
ROM:FC48 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FC4B 4C A4 CA                    JMP     CRLF
ROM:FC4B             ; End of function ENTRY2
ROM:FC4B
ROM:FC4E             ; ---------------------------------------------------------------------------
ROM:FC4E
ROM:FC4E             MOUTS1:                                 ; CODE XREF: ROM:F80F↑j
ROM:FC4E 20 F0 FD                    JSR     COUT1
ROM:FC51 8D FF CF                    STA     ROMCLEAR        ; disable all $C8XX rom extensions
ROM:FC54 8D 00 C1                    STA     SLOT1_PRINTER   ; enable printer driver
ROM:FC57 60                          RTS
ROM:FC58
ROM:FC58             ; =============== S U B R O U T I N E =======================================
ROM:FC58
ROM:FC58
ROM:FC58             F8HOME:                                 ; CODE XREF: set_WIDTH+3C↑j
ROM:FC58                                                     ; TITLE↑p
ROM:FC58                                                     ; DATA XREF: ...
ROM:FC58
ROM:FC58             ; FUNCTION CHUNK AT ROM:CA76 SIZE 00000021 BYTES
ROM:FC58
ROM:FC58 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FC5B 4C 76 CA                    JMP     CLRSCRN
ROM:FC5B             ; End of function F8HOME
ROM:FC5B
ROM:FC5B             ; ---------------------------------------------------------------------------
ROM:FC5E 60                          .BYTE $60 ; `
ROM:FC5F 60                          .BYTE $60 ; `
ROM:FC60 60                          .BYTE $60 ; `
ROM:FC61 60                          .BYTE $60 ; `
ROM:FC62             ; ---------------------------------------------------------------------------
ROM:FC62 20 48 FC                    JSR     ENTRY2
ROM:FC65 60                          RTS
ROM:FC66             ; ---------------------------------------------------------------------------
ROM:FC66 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FC69 4C A7 CA                    JMP     LF
ROM:FC6C             ; ---------------------------------------------------------------------------
ROM:FC6C             ; START OF FUNCTION CHUNK FOR MWAIT
ROM:FC6C
ROM:FC6C             MWAIT1:                                 ; CODE XREF: MWAIT-3↓j
ROM:FC6C                                                     ; MWAIT+5↓j
ROM:FC6C 48                          PHA
ROM:FC6D
ROM:FC6D             MWAIT2:                                 ; CODE XREF: MWAIT-8↓j
ROM:FC6D 69 01                       ADC     #1
ROM:FC6F D0 FC                       BNE     MWAIT2
ROM:FC71 68                          PLA
ROM:FC72 69 00                       ADC     #0
ROM:FC74 D0 F6                       BNE     MWAIT1
ROM:FC76 60                          RTS
ROM:FC76             ; END OF FUNCTION CHUNK FOR MWAIT
ROM:FC77
ROM:FC77             ; =============== S U B R O U T I N E =======================================
ROM:FC77
ROM:FC77
ROM:FC77             MWAIT:                                  ; CODE XREF: j_MWAIT↓j
ROM:FC77
ROM:FC77             ; FUNCTION CHUNK AT ROM:FC6C SIZE 0000000B BYTES
ROM:FC77
ROM:FC77 49 FF                       EOR     #$FF
ROM:FC79 18                          CLC
ROM:FC7A 69 01                       ADC     #1
ROM:FC7C 4C 6C FC                    JMP     MWAIT1
ROM:FC7C             ; End of function MWAIT
ROM:FC7C
ROM:FC7F
ROM:FC7F             ; =============== S U B R O U T I N E =======================================
ROM:FC7F
ROM:FC7F
ROM:FC7F             INCRE1:                                 ; CODE XREF: ROM:VERCOM↑p
ROM:FC7F                                                     ; MOVE+4↓p
ROM:FC7F E6 42                       INC     REG4L
ROM:FC81 D0 02                       BNE     INCRE2
ROM:FC83 E6 43                       INC     REG4H
ROM:FC83             ; End of function INCRE1
ROM:FC83
ROM:FC85
ROM:FC85             ; =============== S U B R O U T I N E =======================================
ROM:FC85
ROM:FC85
ROM:FC85             INCRE2:                                 ; CODE XREF: ROM:F857↑p
ROM:FC85                                                     ; ROM:F87D↑p ...
ROM:FC85 A5 3D                       LDA     REG1H
ROM:FC87 C5 3F                       CMP     REG2H
ROM:FC89 90 06                       BCC     incre3
ROM:FC8B D0 04                       BNE     incre3
ROM:FC8D A5 3C                       LDA     REG1L
ROM:FC8F C5 3E                       CMP     REG2L
ROM:FC91
ROM:FC91             incre3:                                 ; CODE XREF: INCRE2+4↑j
ROM:FC91                                                     ; INCRE2+6↑j
ROM:FC91 E6 3C                       INC     REG1L
ROM:FC93 D0 02                       BNE     locret_FC97
ROM:FC95 E6 3D                       INC     REG1H
ROM:FC97
ROM:FC97             locret_FC97:                            ; CODE XREF: INCRE2+E↑j
ROM:FC97 60                          RTS
ROM:FC97             ; End of function INCRE2
ROM:FC97
ROM:FC97             ; ---------------------------------------------------------------------------
ROM:FC98 60                          .BYTE $60 ; `
ROM:FC99 60                          .BYTE $60 ; `
ROM:FC9A 60                          .BYTE $60 ; `
ROM:FC9B 60                          .BYTE $60 ; `
ROM:FC9C             ; ---------------------------------------------------------------------------
ROM:FC9C A4 24                       LDY     CHORIZ
ROM:FC9E 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FCA1 4C 99 CA                    JMP     CLEOLZ
ROM:FCA1             ; ---------------------------------------------------------------------------
ROM:FCA4 60                          .BYTE $60 ; `
ROM:FCA5 60                          .BYTE $60 ; `
ROM:FCA6 60                          .BYTE $60 ; `
ROM:FCA7 60                          .BYTE $60 ; `
ROM:FCA8
ROM:FCA8             ; =============== S U B R O U T I N E =======================================
ROM:FCA8
ROM:FCA8             ; Attributes: thunk
ROM:FCA8
ROM:FCA8             j_MWAIT:                                ; CODE XREF: OUTDO+E↑p
ROM:FCA8 4C 77 FC                    JMP     MWAIT
ROM:FCA8             ; End of function j_MWAIT
ROM:FCA8
ROM:FCA8             ; ---------------------------------------------------------------------------
ROM:FCAB 60                          .BYTE $60 ; `
ROM:FCAC 60                          .BYTE $60 ; `
ROM:FCAD 60                          .BYTE $60 ; `
ROM:FCAE 60                          .BYTE $60 ; `
ROM:FCAF 60                          .BYTE $60 ; `
ROM:FCB0 60                          .BYTE $60 ; `
ROM:FCB1 60                          .BYTE $60 ; `
ROM:FCB2 60                          .BYTE $60 ; `
ROM:FCB3 60                          .BYTE $60 ; `
ROM:FCB4             ; ---------------------------------------------------------------------------
ROM:FCB4 E6 42                       INC     REG4L
ROM:FCB6 D0 02                       BNE     loc_FCBA
ROM:FCB8 E6 43                       INC     REG4H
ROM:FCBA
ROM:FCBA             loc_FCBA:                               ; CODE XREF: ROM:FCB6↑j
ROM:FCBA 4C 85 FC                    JMP     INCRE2
ROM:FCBA             ; ---------------------------------------------------------------------------
ROM:FCBD A1          BREAKMSG:       .BYTE $A1               ; "BREAK AT $"
ROM:FCBE C2                          .BYTE $C2
ROM:FCBF D2                          .BYTE $D2
ROM:FCC0 C5                          .BYTE $C5
ROM:FCC1 C1                          .BYTE $C1
ROM:FCC2 CB                          .BYTE $CB
ROM:FCC3 A0                          .BYTE $A0
ROM:FCC4 C1                          .BYTE $C1
ROM:FCC5 D4                          .BYTE $D4
ROM:FCC6 A0                          .BYTE $A0
ROM:FCC7 A4                          .BYTE $A4
ROM:FCC8             ; ---------------------------------------------------------------------------
ROM:FCC8 60                          RTS
ROM:FCC9
ROM:FCC9             ; =============== S U B R O U T I N E =======================================
ROM:FCC9
ROM:FCC9
ROM:FCC9             RDELAY:                                 ; CODE XREF: TLOAD+3↓p
ROM:FCC9 38                          SEC
ROM:FCCA A9 B4                       LDA     #180            ; 3 seconds approx
ROM:FCCC
ROM:FCCC             loc_FCCC:                               ; CODE XREF: RDELAY+6↓j
ROM:FCCC                                                     ; RDELAY+F↓j
ROM:FCCC 2C C3 C1                    BIT     VERTSC          ; Read Vertical blank status
ROM:FCCF 30 FB                       BMI     loc_FCCC
ROM:FCD1
ROM:FCD1             loc_FCD1:                               ; CODE XREF: RDELAY+B↓j
ROM:FCD1 2C C3 C1                    BIT     VERTSC          ; Read Vertical blank status
ROM:FCD4 10 FB                       BPL     loc_FCD1
ROM:FCD6 E9 01                       SBC     #1
ROM:FCD8 D0 F2                       BNE     loc_FCCC
ROM:FCDA A9 FF                       LDA     #$FF
ROM:FCDC 85 2E                       STA     CHECKSUM
ROM:FCDE 60                          RTS
ROM:FCDE             ; End of function RDELAY
ROM:FCDE
ROM:FCDF
ROM:FCDF             ; =============== S U B R O U T I N E =======================================
ROM:FCDF
ROM:FCDF
ROM:FCDF             SPACE:                                  ; CODE XREF: ROM:F837↑p
ROM:FCDF                                                     ; DATA XREF: ROM:FAB9↑t
ROM:FCDF
ROM:FCDF             ; FUNCTION CHUNK AT ROM:FE4B SIZE 00000032 BYTES
ROM:FCDF
ROM:FCDF A5 31                       LDA     STOFLG          ; store or examine?
ROM:FCE1 C9 99                       CMP     #$99
ROM:FCE3 D0 09                       BNE     EXAMIN
ROM:FCE5 A0 00                       LDY     #0
ROM:FCE7 A5 3E                       LDA     REG2L
ROM:FCE9 91 3C                       STA     (REG1L),Y
ROM:FCEB 4C 85 FC                    JMP     INCRE2
ROM:FCEE             ; ---------------------------------------------------------------------------
ROM:FCEE
ROM:FCEE             EXAMIN:                                 ; CODE XREF: SPACE+4↑j
ROM:FCEE 4C 4B FE                    JMP     MEMXM
ROM:FCEE             ; End of function SPACE
ROM:FCEE
ROM:FCF1             ; ---------------------------------------------------------------------------
ROM:FCF1
ROM:FCF1             DEBUG1:                                 ; CODE XREF: ROM:D5F9↑j
ROM:FCF1 AD F3 03                    LDA     RESTVR+1
ROM:FCF4 C9 E0                       CMP     #$E0
ROM:FCF6 D0 08                       BNE     NONRST
ROM:FCF8 AD F2 03                    LDA     RESTVR
ROM:FCFB D0 03                       BNE     NONRST
ROM:FCFD 4C 08 D6                    JMP     loc_D608
ROM:FD00             ; ---------------------------------------------------------------------------
ROM:FD00
ROM:FD00             NONRST:                                 ; CODE XREF: ROM:FCF6↑j
ROM:FD00                                                     ; ROM:FCFB↑j
ROM:FD00 6C F2 03                    JMP     (RESTVR)
ROM:FD00             ; ---------------------------------------------------------------------------
ROM:FD03 60                          .BYTE $60 ; `
ROM:FD04 60                          .BYTE $60 ; `
ROM:FD05 60                          .BYTE $60 ; `
ROM:FD06 60                          .BYTE $60 ; `
ROM:FD07 60                          .BYTE $60 ; `
ROM:FD08 60                          .BYTE $60 ; `
ROM:FD09 60                          .BYTE $60 ; `
ROM:FD0A 60                          .BYTE $60 ; `
ROM:FD0B 60                          .BYTE $60 ; `
ROM:FD0C
ROM:FD0C             ; =============== S U B R O U T I N E =======================================
ROM:FD0C
ROM:FD0C
ROM:FD0C             RDKEY:                                  ; CODE XREF: ESCX-3↑p
ROM:FD0C                                                     ; MRDKEY_PATCH↑p ...
ROM:FD0C 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FD0F 20 A0 CB                    JSR     ENCUR           ; Enable Cursor
ROM:FD12 AD FB 06                    LDA     TEMPA
ROM:FD15 6C 38 00                    JMP     (INSWL)
ROM:FD15             ; End of function RDKEY
ROM:FD15
ROM:FD15             ; ---------------------------------------------------------------------------
ROM:FD18 60                          .BYTE $60 ; `
ROM:FD19 60                          .BYTE $60 ; `
ROM:FD1A 60                          .BYTE $60 ; `
ROM:FD1B             ; ---------------------------------------------------------------------------
ROM:FD1B             ; START OF FUNCTION CHUNK FOR ROAD
ROM:FD1B
ROM:FD1B             KEYIN:                                  ; CODE XREF: ROAD:INMED↑j
ROM:FD1B 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FD1E 84 35                       STY     SAVEY
ROM:FD20 20 4D C8                    JSR     KEYIN_C8        ; use PASCAL READ KEY routine
ROM:FD23 20 DF CB                    JSR     DECUR
ROM:FD26 A4 35                       LDY     SAVEY
ROM:FD28 60                          RTS
ROM:FD28             ; END OF FUNCTION CHUNK FOR ROAD
ROM:FD28             ; ---------------------------------------------------------------------------
ROM:FD29 60                          .BYTE $60 ; `
ROM:FD2A 60                          .BYTE $60 ; `
ROM:FD2B 60                          .BYTE $60 ; `
ROM:FD2C             ; ---------------------------------------------------------------------------
ROM:FD2C             ; START OF FUNCTION CHUNK FOR RDCHAR
ROM:FD2C
ROM:FD2C             ESC1:                                   ; CODE XREF: RDCHAR+5↓j
ROM:FD2C 20 0C FD                    JSR     RDKEY
ROM:FD2C             ; END OF FUNCTION CHUNK FOR RDCHAR
ROM:FD2F             ; START OF FUNCTION CHUNK FOR MRDKEY_PATCH
ROM:FD2F
ROM:FD2F             ESC:                                    ; CODE XREF: MRDKEY_PATCH+9↑j
ROM:FD2F                                                     ; MRDKEY_PATCH+12↑j
ROM:FD2F 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FD32 20 F6 CB                    JSR     ESCX
ROM:FD32             ; END OF FUNCTION CHUNK FOR MRDKEY_PATCH
ROM:FD35
ROM:FD35             ; =============== S U B R O U T I N E =======================================
ROM:FD35
ROM:FD35
ROM:FD35             RDCHAR:                                 ; CODE XREF: GETLN:GETLN1↓p
ROM:FD35
ROM:FD35             ; FUNCTION CHUNK AT ROM:FD2C SIZE 00000003 BYTES
ROM:FD35
ROM:FD35 20 00 D3                    JSR     MRDKEY_PATCH    ; *** Code differs from published source ***
ROM:FD38 C9 9B                       CMP     #$9B            ; ESC
ROM:FD3A F0 F0                       BEQ     ESC1
ROM:FD3C C9 FF                       CMP     #$FF            ; BREAK
ROM:FD3E D0 02                       BNE     locret_FD42
ROM:FD40 A9 83                       LDA     #$83            ; replace with CTRL-C
ROM:FD42
ROM:FD42             locret_FD42:                            ; CODE XREF: RDCHAR+9↑j
ROM:FD42 60                          RTS
ROM:FD42             ; End of function RDCHAR
ROM:FD42
ROM:FD43
ROM:FD43             ; =============== S U B R O U T I N E =======================================
ROM:FD43
ROM:FD43             ; Look for disk controller in Slot#6, then Slot#5
ROM:FD43
ROM:FD43             CHKDIS:                                 ; CODE XREF: ROM:D605↑p
ROM:FD43
ROM:FD43             ; FUNCTION CHUNK AT ROM:C500 SIZE 00000003 BYTES
ROM:FD43             ; FUNCTION CHUNK AT ROM:C600 SIZE 00000002 BYTES
ROM:FD43
ROM:FD43 AD 07 C6                    LDA     S6_DISK_ID2
ROM:FD46 C9 3C                       CMP     #$3C ; '<'
ROM:FD48 D0 0A                       BNE     TRY5            ; check slot 5 as well
ROM:FD4A AD 03 C6                    LDA     S6_DISK_ID1
ROM:FD4D D0 05                       BNE     TRY5            ; check slot 5 as well
ROM:FD4F 68                          PLA
ROM:FD50 68                          PLA
ROM:FD51 4C 00 C6                    JMP     DISK_SLOT6
ROM:FD54             ; ---------------------------------------------------------------------------
ROM:FD54
ROM:FD54             TRY5:                                   ; CODE XREF: CHKDIS+5↑j
ROM:FD54                                                     ; CHKDIS+A↑j
ROM:FD54 AD 07 C5                    LDA     S5_DISK_ID2     ; check slot 5 as well
ROM:FD57 C9 3C                       CMP     #$3C ; '<'
ROM:FD59 D0 0A                       BNE     chkdrts
ROM:FD5B AD 03 C5                    LDA     S5_DISK_ID1
ROM:FD5E D0 05                       BNE     chkdrts
ROM:FD60 68                          PLA
ROM:FD61 68                          PLA
ROM:FD62 4C 00 C5                    JMP     DISK_SLOT5
ROM:FD65             ; ---------------------------------------------------------------------------
ROM:FD65
ROM:FD65             chkdrts:                                ; CODE XREF: CHKDIS+16↑j
ROM:FD65                                                     ; CHKDIS+1B↑j
ROM:FD65 60                          RTS
ROM:FD65             ; End of function CHKDIS
ROM:FD65
ROM:FD65             ; ---------------------------------------------------------------------------
ROM:FD66 60                          .BYTE $60 ; `
ROM:FD67
ROM:FD67             ; =============== S U B R O U T I N E =======================================
ROM:FD67
ROM:FD67
ROM:FD67             GETLNZ:                                 ; CODE XREF: GETLN+2F↓j
ROM:FD67                                                     ; GETLN+54↓j ...
ROM:FD67 20 C5 FE                    JSR     CROUT
ROM:FD67             ; End of function GETLNZ
ROM:FD67
ROM:FD6A
ROM:FD6A             ; =============== S U B R O U T I N E =======================================
ROM:FD6A
ROM:FD6A
ROM:FD6A             GETLN:                                  ; CODE XREF: INLIN+2↑p
ROM:FD6A
ROM:FD6A             ; FUNCTION CHUNK AT ROM:F9CA SIZE 0000002C BYTES
ROM:FD6A
ROM:FD6A A5 33                       LDA     PROMPT
ROM:FD6C 20 ED FD                    JSR     COUT
ROM:FD6F A2 00                       LDX     #0
ROM:FD71
ROM:FD71             GETLN1:                                 ; CODE XREF: GETLN:TABJMP↑j
ROM:FD71                                                     ; GETLN+46↓j ...
ROM:FD71 20 35 FD                    JSR     RDCHAR
ROM:FD74 C9 98                       CMP     #$98            ; CTRL-X
ROM:FD76 F0 41                       BEQ     cancel          ; "/" Danger
ROM:FD78 C9 89                       CMP     #$89            ; TAB
ROM:FD7A D0 03                       BNE     not_tab
ROM:FD7C 4C CA F9                    JMP     TAB
ROM:FD7F             ; ---------------------------------------------------------------------------
ROM:FD7F
ROM:FD7F             not_tab:                                ; CODE XREF: GETLN+10↑j
ROM:FD7F C9 95                       CMP     #$95            ; Right Arrow
ROM:FD81 D0 05                       BNE     not_right_Arrow
ROM:FD83 AD FB 06                    LDA     TEMPA           ; get char under cursor position
ROM:FD86 09 80                       ORA     #$80
ROM:FD88
ROM:FD88             not_right_Arrow:                        ; CODE XREF: GETLN+17↑j
ROM:FD88 9D 00 02                    STA     KEYBUF,X
ROM:FD8B 4C 91 FD                    JMP     loc_FD91
ROM:FD8E             ; ---------------------------------------------------------------------------
ROM:FD8E 4C C5 FE                    JMP     CROUT
ROM:FD91             ; ---------------------------------------------------------------------------
ROM:FD91
ROM:FD91             loc_FD91:                               ; CODE XREF: GETLN+21↑j
ROM:FD91 C9 88                       CMP     #$88            ; Left Arrow?
ROM:FD93 D0 06                       BNE     not_left_arrow
ROM:FD95 CA                          DEX
ROM:FD96 CA                          DEX
ROM:FD97 E0 FE                       CPX     #$FE
ROM:FD99 F0 CC                       BEQ     GETLNZ
ROM:FD9B
ROM:FD9B             not_left_arrow:                         ; CODE XREF: GETLN+29↑j
ROM:FD9B C9 8D                       CMP     #$8D            ; <CR>?
ROM:FD9D D0 0B                       BNE     notcr
ROM:FD9F 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FDA2 48                          PHA
ROM:FDA3 20 97 CA                    JSR     CLREOL
ROM:FDA6 68                          PLA
ROM:FDA7 4C ED FD                    JMP     COUT
ROM:FDAA             ; ---------------------------------------------------------------------------
ROM:FDAA
ROM:FDAA             notcr:                                  ; CODE XREF: GETLN+33↑j
ROM:FDAA 20 ED FD                    JSR     COUT
ROM:FDAD E8                          INX
ROM:FDAE E0 F9                       CPX     #249            ; too many chars in buffer?
ROM:FDB0 90 BF                       BCC     GETLN1
ROM:FDB2 20 3A FF                    JSR     MBELL
ROM:FDB5 E0 FF                       CPX     #$FF
ROM:FDB7 D0 B8                       BNE     GETLN1
ROM:FDB9
ROM:FDB9             cancel:                                 ; CODE XREF: GETLN+C↑j
ROM:FDB9 A9 AF                       LDA     #$AF            ; "/" Danger
ROM:FDBB 20 ED FD                    JSR     COUT
ROM:FDBE 4C 67 FD                    JMP     GETLNZ
ROM:FDBE             ; End of function GETLN
ROM:FDBE
ROM:FDC1
ROM:FDC1             ; =============== S U B R O U T I N E =======================================
ROM:FDC1
ROM:FDC1
ROM:FDC1             PRBYTE:                                 ; CODE XREF: ROM:F85C↑p
ROM:FDC1                                                     ; ROM:F861↑p ...
ROM:FDC1 85 4E                       STA     RNDNOL
ROM:FDC3 4A                          LSR     A
ROM:FDC4 4A                          LSR     A
ROM:FDC5 4A                          LSR     A
ROM:FDC6 4A                          LSR     A
ROM:FDC7 20 B9 FE                    JSR     PRNHEX          ; high nibble
ROM:FDCA A5 4E                       LDA     RNDNOL
ROM:FDCC 29 0F                       AND     #$F
ROM:FDCE 4C B9 FE                    JMP     PRNHEX          ; low nibble
ROM:FDCE             ; End of function PRBYTE
ROM:FDCE
ROM:FDCE             ; ---------------------------------------------------------------------------
ROM:FDD1 60                          .BYTE $60 ; `
ROM:FDD2 60                          .BYTE $60 ; `
ROM:FDD3 60                          .BYTE $60 ; `
ROM:FDD4 60                          .BYTE $60 ; `
ROM:FDD5 60                          .BYTE $60 ; `
ROM:FDD6 60                          .BYTE $60 ; `
ROM:FDD7 60                          .BYTE $60 ; `
ROM:FDD8 60                          .BYTE $60 ; `
ROM:FDD9 60                          .BYTE $60 ; `
ROM:FDDA
ROM:FDDA             ; =============== S U B R O U T I N E =======================================
ROM:FDDA
ROM:FDDA             ; Attributes: thunk
ROM:FDDA
ROM:FDDA             j_PRBYTE:                               ; CODE XREF: sub_F446+3↑p
ROM:FDDA 4C C1 FD                    JMP     PRBYTE
ROM:FDDA             ; End of function j_PRBYTE
ROM:FDDA
ROM:FDDA             ; ---------------------------------------------------------------------------
ROM:FDDD 60                          .BYTE $60 ; `
ROM:FDDE 60                          .BYTE $60 ; `
ROM:FDDF 60                          .BYTE $60 ; `
ROM:FDE0 60                          .BYTE $60 ; `
ROM:FDE1 60                          .BYTE $60 ; `
ROM:FDE2 60                          .BYTE $60 ; `
ROM:FDE3             ; ---------------------------------------------------------------------------
ROM:FDE3 4C B9 FE                    JMP     PRNHEX
ROM:FDE6
ROM:FDE6             ; =============== S U B R O U T I N E =======================================
ROM:FDE6
ROM:FDE6             ; ensure 80col firmware is in $C800-$CFFF
ROM:FDE6
ROM:FDE6             C800IN:                                 ; CODE XREF: GETLN-393↑p
ROM:FDE6                                                     ; ROM:FBC1↑p ...
ROM:FDE6 8D FF CF                    STA     ROMCLEAR        ; disable all $C8XX rom extensions
ROM:FDE9 8D 00 C3                    STA     SLOT3_80COL     ; we want slot#3's C800 code
ROM:FDEC 60                          RTS
ROM:FDEC             ; End of function C800IN
ROM:FDEC
ROM:FDED
ROM:FDED             ; =============== S U B R O U T I N E =======================================
ROM:FDED
ROM:FDED
ROM:FDED             COUT:                                   ; CODE XREF: OUTDO:is_printable↑p
ROM:FDED                                                     ; AUX_COUT+3↑p ...
ROM:FDED 6C 36 00                    JMP     (OUTSWL)
ROM:FDED             ; End of function COUT
ROM:FDED
ROM:FDF0
ROM:FDF0             ; =============== S U B R O U T I N E =======================================
ROM:FDF0
ROM:FDF0
ROM:FDF0             COUT1:                                  ; CODE XREF: ROAD:OUTMED↑j
ROM:FDF0                                                     ; ROM:MOUTS1↑p
ROM:FDF0
ROM:FDF0             ; FUNCTION CHUNK AT ROM:CD00 SIZE 0000001D BYTES
ROM:FDF0             ; FUNCTION CHUNK AT ROM:FDFA SIZE 0000001E BYTES
ROM:FDF0
ROM:FDF0 20 E6 FD                    JSR     C800IN          ; ensure 80col firmware is in $C800-$CFFF
ROM:FDF3 48                          PHA
ROM:FDF4 84 35                       STY     SAVEY
ROM:FDF6 4C 00 CD                    JMP     MCOUT1_PATCH
ROM:FDF6             ; End of function COUT1
ROM:FDF6
ROM:FDF6             ; ---------------------------------------------------------------------------
ROM:FDF9 06                          .BYTE   6
ROM:FDFA             ; ---------------------------------------------------------------------------
ROM:FDFA             ; START OF FUNCTION CHUNK FOR COUT1
ROM:FDFA
ROM:FDFA             loc_FDFA:                               ; CODE XREF: COUT1:loc_CD1A↑j
ROM:FDFA C9 A0                       CMP     #$A0
ROM:FDFC 90 08                       BCC     MCOUT2
ROM:FDFE 25 32                       AND     INVFLG
ROM:FE00
ROM:FE00             loc_FE00:                               ; CODE XREF: COUT1-30D9↑j
ROM:FE00 20 18 CA                    JSR     STORAD          ; horizontal position
ROM:FE03 4C 14 FE                    JMP     MCOUT3
ROM:FE06             ; ---------------------------------------------------------------------------
ROM:FE06
ROM:FE06             MCOUT2:                                 ; CODE XREF: COUT1+C↑j
ROM:FE06 29 7F                       AND     #$7F
ROM:FE08 C9 0D                       CMP     #$D
ROM:FE0A D0 05                       BNE     MCOUT4
ROM:FE0C 20 01 CA                    JSR     VIDOU1
ROM:FE0F A9 0A                       LDA     #$A
ROM:FE11
ROM:FE11             MCOUT4:                                 ; CODE XREF: COUT1+1A↑j
ROM:FE11 20 01 CA                    JSR     VIDOU1
ROM:FE14
ROM:FE14             MCOUT3:                                 ; CODE XREF: COUT1-30E0↑j
ROM:FE14                                                     ; COUT1+13↑j
ROM:FE14 68                          PLA
ROM:FE15 A4 35                       LDY     SAVEY
ROM:FE17 60                          RTS
ROM:FE17             ; END OF FUNCTION CHUNK FOR COUT1
ROM:FE18
ROM:FE18             ; =============== S U B R O U T I N E =======================================
ROM:FE18
ROM:FE18
ROM:FE18             WRBYTE:                                 ; CODE XREF: MTSAVE+17↑p
ROM:FE18                                                     ; MTSAVE+35↑p
ROM:FE18 A2 10                       LDX     #16
ROM:FE1A
ROM:FE1A             WBYTE1:                                 ; CODE XREF: WRBYTE+6↓j
ROM:FE1A 0A                          ASL     A
ROM:FE1B 20 0D F9                    JSR     WRTBIT
ROM:FE1E D0 FA                       BNE     WBYTE1
ROM:FE20 60                          RTS
ROM:FE20             ; End of function WRBYTE
ROM:FE20
ROM:FE21             ; ---------------------------------------------------------------------------
ROM:FE21
ROM:FE21             POWER_PATCH:                            ; CODE XREF: ROM:D5BE↑j
ROM:FE21 A9 00                       LDA     #0
ROM:FE23 8D 7B 07                    STA     POWER
ROM:FE26 2C 10 C0                    BIT     KEYSTRB
ROM:FE29 4C C1 D5                    JMP     POWER_PATCH_RET ; ESC pressed?
ROM:FE2C
ROM:FE2C             ; =============== S U B R O U T I N E =======================================
ROM:FE2C
ROM:FE2C
ROM:FE2C             MOVE:                                   ; CODE XREF: ROM:F36E↑p
ROM:FE2C                                                     ; MOVE+7↓j
ROM:FE2C                                                     ; DATA XREF: ...
ROM:FE2C B1 3C                       LDA     (REG1L),Y
ROM:FE2E 91 42                       STA     (REG4L),Y
ROM:FE30 20 7F FC                    JSR     INCRE1
ROM:FE33 90 F7                       BCC     MOVE
ROM:FE35 60                          RTS
ROM:FE35             ; End of function MOVE
ROM:FE35
ROM:FE36             ; ---------------------------------------------------------------------------
ROM:FE36 4C 8A F9                    JMP     VERIFY
ROM:FE39
ROM:FE39             ; =============== S U B R O U T I N E =======================================
ROM:FE39
ROM:FE39             ; set output vector to Screen Handler
ROM:FE39
ROM:FE39             SCREEN:                                 ; CODE XREF: ROM:D5E6↑p
ROM:FE39                                                     ; ROM:FE99↓j
ROM:FE39 A9 FD                       LDA     #$FD
ROM:FE3B A0 F0                       LDY     #$F0
ROM:FE3D 85 37                       STA     OUTSWH          ; MCOUT1 = $FDF0
ROM:FE3F 84 36                       STY     OUTSWL
ROM:FE41 60                          RTS
ROM:FE41             ; End of function SCREEN
ROM:FE41
ROM:FE42
ROM:FE42             ; =============== S U B R O U T I N E =======================================
ROM:FE42
ROM:FE42             ; set input vector to Keyboard
ROM:FE42
ROM:FE42             KBDBRD:                                 ; CODE XREF: ROM:D5E9↑p
ROM:FE42                                                     ; ROM:FEA8↓j
ROM:FE42 A9 FD                       LDA     #$FD
ROM:FE44 A0 1B                       LDY     #$1B            ; MINKEY = $FD1B
ROM:FE46 85 39                       STA     INSWH
ROM:FE48 84 38                       STY     INSWL
ROM:FE4A
ROM:FE4A             KBDRTS:                                 ; CODE XREF: SPACE+16E↓j
ROM:FE4A                                                     ; SPACE+17E↓j
ROM:FE4A 60                          RTS
ROM:FE4A             ; End of function KBDBRD
ROM:FE4A
ROM:FE4B             ; ---------------------------------------------------------------------------
ROM:FE4B             ; START OF FUNCTION CHUNK FOR SPACE
ROM:FE4B
ROM:FE4B             MEMXM:                                  ; CODE XREF: SPACE:EXAMIN↑j
ROM:FE4B A6 34                       LDX     SAVEX
ROM:FE4D F0 FB                       BEQ     KBDRTS
ROM:FE4F CA                          DEX
ROM:FE50 BD 00 02                    LDA     KEYBUF,X
ROM:FE53 49 B0                       EOR     #$B0            ; hex digit?
ROM:FE55 C9 0A                       CMP     #$A
ROM:FE57 90 06                       BCC     memxm1
ROM:FE59 69 88                       ADC     #$88
ROM:FE5B C9 FA                       CMP     #$FA
ROM:FE5D 90 EB                       BCC     KBDRTS
ROM:FE5F
ROM:FE5F             memxm1:                                 ; CODE XREF: SPACE+178↑j
ROM:FE5F A5 3F                       LDA     REG2H
ROM:FE61 20 C1 FD                    JSR     PRBYTE
ROM:FE64 A5 3E                       LDA     REG2L
ROM:FE66 20 C1 FD                    JSR     PRBYTE
ROM:FE69 A9 BD                       LDA     #$BD            ; '='
ROM:FE6B 20 ED FD                    JSR     COUT
ROM:FE6E A9 A0                       LDA     #$A0            ; <SPC>
ROM:FE70 20 ED FD                    JSR     COUT
ROM:FE73 A0 00                       LDY     #0
ROM:FE75 B1 3E                       LDA     (REG2L),Y
ROM:FE77 20 C1 FD                    JSR     PRBYTE
ROM:FE7A 4C C5 FE                    JMP     CROUT
ROM:FE7A             ; END OF FUNCTION CHUNK FOR SPACE
ROM:FE7A             ; ---------------------------------------------------------------------------
ROM:FE7D 60                          .BYTE $60 ; `
ROM:FE7E 60                          .BYTE $60 ; `
ROM:FE7F 60                          .BYTE $60 ; `
ROM:FE80             ; ---------------------------------------------------------------------------
ROM:FE80
ROM:FE80             SETINVERSE:                             ; DATA XREF: ROM:FAA5↑t
ROM:FE80 A9 3F                       LDA     #$3F ; '?'
ROM:FE82 EA                          NOP
ROM:FE82             ; ---------------------------------------------------------------------------
ROM:FE83 2C                          .BYTE $2C               ; bit
ROM:FE84             ; ---------------------------------------------------------------------------
ROM:FE84
ROM:FE84             SETNORMAL:                              ; DATA XREF: ROM:FAA3↑t
ROM:FE84 A9 FF                       LDA     #$FF
ROM:FE86 85 32                       STA     INVFLG
ROM:FE88 60                          RTS
ROM:FE89             ; ---------------------------------------------------------------------------
ROM:FE89 A9 00                       LDA     #0
ROM:FE8B
ROM:FE8B             IN_normal:                              ; CODE XREF: ROM:F1FD↑j
ROM:FE8B 85 3E                       STA     REG2L
ROM:FE8D
ROM:FE8D             DIVERT_KB_INPUT:                        ; DATA XREF: ROM:FA9F↑t
ROM:FE8D 4C A6 FE                    JMP     SLOT_INPUT
ROM:FE8D             ; ---------------------------------------------------------------------------
ROM:FE90 60                          .BYTE $60 ; `
ROM:FE91 60                          .BYTE $60 ; `
ROM:FE92 60                          .BYTE $60 ; `
ROM:FE93             ; ---------------------------------------------------------------------------
ROM:FE93 A9 00                       LDA     #0
ROM:FE95
ROM:FE95             SLOT_OUTPUT:                            ; CODE XREF: ROM:F1ED↑j
ROM:FE95 85 3E                       STA     REG2L
ROM:FE97 A5 3E                       LDA     REG2L
ROM:FE99 F0 9E                       BEQ     SCREEN          ; set output vector to Screen Handler
ROM:FE9B 29 07                       AND     #7
ROM:FE9D 09 C0                       ORA     #$C0
ROM:FE9F 85 37                       STA     OUTSWH
ROM:FEA1 A0 00                       LDY     #0
ROM:FEA3 84 36                       STY     OUTSWL
ROM:FEA5 60                          RTS
ROM:FEA6             ; ---------------------------------------------------------------------------
ROM:FEA6
ROM:FEA6             SLOT_INPUT:                             ; CODE XREF: ROM:DIVERT_KB_INPUT↑j
ROM:FEA6 A5 3E                       LDA     REG2L
ROM:FEA8 F0 98                       BEQ     KBDBRD          ; set input vector to Keyboard
ROM:FEAA 29 07                       AND     #7
ROM:FEAC 09 C0                       ORA     #$C0
ROM:FEAE 85 39                       STA     INSWH
ROM:FEB0 A0 00                       LDY     #0
ROM:FEB2 84 38                       STY     INSWL
ROM:FEB4 60                          RTS
ROM:FEB5             ; ---------------------------------------------------------------------------
ROM:FEB5 60                          RTS
ROM:FEB6             ; ---------------------------------------------------------------------------
ROM:FEB6 4C D0 FE                    JMP     GO
ROM:FEB9
ROM:FEB9             ; =============== S U B R O U T I N E =======================================
ROM:FEB9
ROM:FEB9
ROM:FEB9             PRNHEX:                                 ; CODE XREF: PRBYTE+6↑p
ROM:FEB9                                                     ; PRBYTE+D↑j ...
ROM:FEB9 C9 0A                       CMP     #10
ROM:FEBB 90 03                       BCC     prnhe1          ; 0-9?
ROM:FEBD 18                          CLC
ROM:FEBE 69 07                       ADC     #7              ; adjust for A-F
ROM:FEC0
ROM:FEC0             prnhe1:                                 ; CODE XREF: PRNHEX+2↑j
ROM:FEC0 69 B0                       ADC     #$B0
ROM:FEC2 4C ED FD                    JMP     COUT
ROM:FEC2             ; End of function PRNHEX
ROM:FEC2
ROM:FEC5
ROM:FEC5             ; =============== S U B R O U T I N E =======================================
ROM:FEC5
ROM:FEC5
ROM:FEC5             CROUT:                                  ; CODE XREF: ROM:F854↑p
ROM:FEC5                                                     ; ROM:VERERR↑p ...
ROM:FEC5 A9 8D                       LDA     #$8D
ROM:FEC7 4C ED FD                    JMP     COUT
ROM:FEC7             ; End of function CROUT
ROM:FEC7
ROM:FEC7             ; ---------------------------------------------------------------------------
ROM:FECA 60                          .BYTE $60 ; `
ROM:FECB 60                          .BYTE $60 ; `
ROM:FECC 60                          .BYTE $60 ; `
ROM:FECD
ROM:FECD             ; =============== S U B R O U T I N E =======================================
ROM:FECD
ROM:FECD             ; Attributes: thunk
ROM:FECD
ROM:FECD             j_MTSAVE:                               ; CODE XREF: ROM:D8C0↑p
ROM:FECD                                                     ; ROM:D8C6↑j ...
ROM:FECD 4C B5 F8                    JMP     MTSAVE
ROM:FECD             ; End of function j_MTSAVE
ROM:FECD
ROM:FED0             ; ---------------------------------------------------------------------------
ROM:FED0
ROM:FED0             GO:                                     ; CODE XREF: ROM:FEB6↑j
ROM:FED0                                                     ; DATA XREF: ROM:FAAD↑t
ROM:FED0 20 3F FF                    JSR     RESTORE         ; restore registers from $45-$49 and return
ROM:FED3 A5 3E                       LDA     REG2L
ROM:FED5 85 3A                       STA     PCL
ROM:FED7 A5 3F                       LDA     REG2H
ROM:FED9 85 3B                       STA     PCH
ROM:FEDB 6C 3A 00                    JMP     (PCL)
ROM:FEDE             ; ---------------------------------------------------------------------------
ROM:FEDE             ; START OF FUNCTION CHUNK FOR TLOAD
ROM:FEDE
ROM:FEDE             ERROR:                                  ; CODE XREF: TLOAD+28↓j
ROM:FEDE                                                     ; ROM:PRERR↓j
ROM:FEDE 8A                          TXA
ROM:FEDF 48                          PHA
ROM:FEE0 A2 00                       LDX     #0
ROM:FEE2
ROM:FEE2             error1:                                 ; CODE XREF: TLOAD-12↓j
ROM:FEE2 BD 83 F8                    LDA     ERROR_TEXT2,X
ROM:FEE5 20 ED FD                    JSR     COUT
ROM:FEE8 E8                          INX
ROM:FEE9 E0 06                       CPX     #6
ROM:FEEB D0 F5                       BNE     error1
ROM:FEED 68                          PLA
ROM:FEEE AA                          TAX
ROM:FEEF 4C 3A FF                    JMP     MBELL
ROM:FEEF             ; END OF FUNCTION CHUNK FOR TLOAD
ROM:FEEF             ; ---------------------------------------------------------------------------
ROM:FEF2 60                          .BYTE $60 ; `
ROM:FEF3 60                          .BYTE $60 ; `
ROM:FEF4 60                          .BYTE $60 ; `
ROM:FEF5 60                          .BYTE $60 ; `
ROM:FEF6             ; [00000001 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
ROM:FEF7 60                          .BYTE $60 ; `
ROM:FEF8 60                          .BYTE $60 ; `
ROM:FEF9 60                          .BYTE $60 ; `
ROM:FEFA 60                          .BYTE $60 ; `
ROM:FEFB 60                          .BYTE $60 ; `
ROM:FEFC 60                          .BYTE $60 ; `
ROM:FEFD
ROM:FEFD             ; =============== S U B R O U T I N E =======================================
ROM:FEFD
ROM:FEFD
ROM:FEFD             TLOAD:                                  ; CODE XREF: ROM:D8CC↑p
ROM:FEFD                                                     ; ROM:D8E6↑p ...
ROM:FEFD
ROM:FEFD             ; FUNCTION CHUNK AT ROM:FEDE SIZE 00000014 BYTES
ROM:FEFD
ROM:FEFD 20 65 F9                    JSR     READPS          ; find tape leader
ROM:FF00 20 C9 FC                    JSR     RDELAY
ROM:FF03 20 65 F9                    JSR     READPS          ; find tape leader
ROM:FF06 20 38 FC                    JSR     FINDSTB         ; Read the SYNC period
ROM:FF09 20 68 F9                    JSR     RT1BIT
ROM:FF0C A0 39                       LDY     #57
ROM:FF0E
ROM:FF0E             TLOAD1:                                 ; CODE XREF: TLOAD+1F↓j
ROM:FF0E 20 56 F9                    JSR     RT8BIT
ROM:FF11 81 3C                       STA     (REG1L,X)
ROM:FF13 45 2E                       EOR     CHECKSUM
ROM:FF15 85 2E                       STA     CHECKSUM
ROM:FF17 20 85 FC                    JSR     INCRE2
ROM:FF1A A0 33                       LDY     #51
ROM:FF1C 90 F0                       BCC     TLOAD1
ROM:FF1E 20 56 F9                    JSR     RT8BIT
ROM:FF21 C5 2E                       CMP     CHECKSUM
ROM:FF23 F0 15                       BEQ     MBELL
ROM:FF25 D0 B7                       BNE     ERROR
ROM:FF27 60                          RTS
ROM:FF27             ; End of function TLOAD
ROM:FF27
ROM:FF27             ; ---------------------------------------------------------------------------
ROM:FF28 60                          .BYTE $60 ; `
ROM:FF29 60                          .BYTE $60 ; `
ROM:FF2A 60                          .BYTE $60 ; `
ROM:FF2B 60                          .BYTE $60 ; `
ROM:FF2C 60                          .BYTE $60 ; `
ROM:FF2D             ; ---------------------------------------------------------------------------
ROM:FF2D
ROM:FF2D             PRERR:
ROM:FF2D 4C DE FE                    JMP     ERROR
ROM:FF2D             ; ---------------------------------------------------------------------------
ROM:FF30 60                          .BYTE $60 ; `
ROM:FF31 60                          .BYTE $60 ; `
ROM:FF32 60                          .BYTE $60 ; `
ROM:FF33 60                          .BYTE $60 ; `
ROM:FF34 60                          .BYTE $60 ; `
ROM:FF35 60                          .BYTE $60 ; `
ROM:FF36 60                          .BYTE $60 ; `
ROM:FF37 60                          .BYTE $60 ; `
ROM:FF38 60                          .BYTE $60 ; `
ROM:FF39 60                          .BYTE $60 ; `
ROM:FF3A
ROM:FF3A             ; =============== S U B R O U T I N E =======================================
ROM:FF3A
ROM:FF3A
ROM:FF3A             MBELL:                                  ; CODE XREF: ROM:D5EC↑p
ROM:FF3A                                                     ; MTSAVE+38↑j ...
ROM:FF3A A9 87                       LDA     #$87
ROM:FF3C 4C ED FD                    JMP     COUT
ROM:FF3C             ; End of function MBELL
ROM:FF3C
ROM:FF3F
ROM:FF3F             ; =============== S U B R O U T I N E =======================================
ROM:FF3F
ROM:FF3F             ; restore registers from $45-$49 and return
ROM:FF3F
ROM:FF3F             RESTORE:                                ; CODE XREF: ROM:GO↑p
ROM:FF3F A6 46                       LDX     REGX
ROM:FF41 A4 47                       LDY     REGY
ROM:FF43 A5 48                       LDA     STATUS
ROM:FF45 48                          PHA
ROM:FF46 A5 45                       LDA     ACC
ROM:FF48 28                          PLP
ROM:FF49 60                          RTS
ROM:FF49             ; End of function RESTORE
ROM:FF49
ROM:FF4A             ; ---------------------------------------------------------------------------
ROM:FF4A
ROM:FF4A             SAVE:                                   ; save registers at $45-$49 and return
ROM:FF4A 86 46                       STX     REGX
ROM:FF4C 84 47                       STY     REGY
ROM:FF4E 85 45                       STA     ACC
ROM:FF50 08                          PHP
ROM:FF51 68                          PLA
ROM:FF52 85 48                       STA     STATUS
ROM:FF54 BA                          TSX
ROM:FF55 86 49                       STX     STACKP
ROM:FF57 D8                          CLD
ROM:FF58 60                          RTS
ROM:FF59             ; ---------------------------------------------------------------------------
ROM:FF59 4C 65 FF                    JMP     MON
ROM:FF59             ; ---------------------------------------------------------------------------
ROM:FF5C 60                          .BYTE $60 ; `
ROM:FF5D 60                          .BYTE $60 ; `
ROM:FF5E 60                          .BYTE $60 ; `
ROM:FF5F 60                          .BYTE $60 ; `
ROM:FF60 60                          .BYTE $60 ; `
ROM:FF61 60                          .BYTE $60 ; `
ROM:FF62 60                          .BYTE $60 ; `
ROM:FF63 60                          .BYTE $60 ; `
ROM:FF64 60                          .BYTE $60 ; `
ROM:FF65             ; ---------------------------------------------------------------------------
ROM:FF65
ROM:FF65             MON:                                    ; CODE XREF: ROM:FA5F↑j
ROM:FF65                                                     ; ROM:FA85↑j ...
ROM:FF65 20 3A FF                    JSR     MBELL
ROM:FF68 EA                          NOP
ROM:FF69
ROM:FF69             MON1:                                   ; CODE XREF: ROM:F843↑j
ROM:FF69 A9 AA                       LDA     #$AA            ; CALL -151 entry point
ROM:FF6B 85 33                       STA     PROMPT          ; AA = '*' - monitor prompt
ROM:FF6D 20 67 FD                    JSR     GETLNZ
ROM:FF70 A2 00                       LDX     #0
ROM:FF72 CA                          DEX
ROM:FF73
ROM:FF73             MON2:                                   ; CODE XREF: ROM:FF8C↓j
ROM:FF73 20 A7 FF                    JSR     GETNUM
ROM:FF76 20 8F FF                    JSR     SEARCH          ; look for a match on monitor command table
ROM:FF79 90 EA                       BCC     MON
ROM:FF7B 86 34                       STX     SAVEX
ROM:FF7D A2 00                       LDX     #0
ROM:FF7F C0 10                       CPY     #$10
ROM:FF81 B0 04                       BCS     READY
ROM:FF83 A9 00                       LDA     #0
ROM:FF85 85 31                       STA     STOFLG
ROM:FF87
ROM:FF87             READY:                                  ; CODE XREF: ROM:FF81↑j
ROM:FF87 20 D6 FF                    JSR     GOSUBM          ; call monitor routine. Y = command index
ROM:FF8A A6 34                       LDX     SAVEX
ROM:FF8C 4C 73 FF                    JMP     MON2
ROM:FF8F
ROM:FF8F             ; =============== S U B R O U T I N E =======================================
ROM:FF8F
ROM:FF8F             ; look for a match on monitor command table
ROM:FF8F
ROM:FF8F             SEARCH:                                 ; CODE XREF: ROM:FF76↑p
ROM:FF8F A0 11                       LDY     #$11
ROM:FF91
ROM:FF91             search1:                                ; CODE XREF: SEARCH+9↓j
ROM:FF91 D9 87 FA                    CMP     COMTBL-1,Y      ; CTRL-C   monitor commands
ROM:FF94 D0 01                       BNE     search2
ROM:FF96 60                          RTS
ROM:FF97             ; ---------------------------------------------------------------------------
ROM:FF97
ROM:FF97             search2:                                ; CODE XREF: SEARCH+5↑j
ROM:FF97 88                          DEY
ROM:FF98 D0 F7                       BNE     search1
ROM:FF9A 18                          CLC
ROM:FF9B 60                          RTS
ROM:FF9B             ; End of function SEARCH
ROM:FF9B
ROM:FF9B             ; ---------------------------------------------------------------------------
ROM:FF9C 60                          .BYTE $60 ; `
ROM:FF9D 60                          .BYTE $60 ; `
ROM:FF9E 60                          .BYTE $60 ; `
ROM:FF9F 60                          .BYTE $60 ; `
ROM:FFA0 60                          .BYTE $60 ; `
ROM:FFA1 60                          .BYTE $60 ; `
ROM:FFA2 60                          .BYTE $60 ; `
ROM:FFA3 60                          .BYTE $60 ; `
ROM:FFA4 60                          .BYTE $60 ; `
ROM:FFA5 60                          .BYTE $60 ; `
ROM:FFA6 60                          .BYTE $60 ; `
ROM:FFA7
ROM:FFA7             ; =============== S U B R O U T I N E =======================================
ROM:FFA7
ROM:FFA7
ROM:FFA7             GETNUM:                                 ; CODE XREF: ROM:MON2↑p
ROM:FFA7 A9 00                       LDA     #0
ROM:FFA9 85 3E                       STA     REG2L
ROM:FFAB 85 3F                       STA     REG2H
ROM:FFAD
ROM:FFAD             loc_FFAD:                               ; CODE XREF: GETNUM+2C↓j
ROM:FFAD E8                          INX
ROM:FFAE BD 00 02                    LDA     KEYBUF,X
ROM:FFB1 C9 B0                       CMP     #$B0
ROM:FFB3 90 20                       BCC     NONNUM
ROM:FFB5 C9 C7                       CMP     #$C7
ROM:FFB7 B0 1C                       BCS     NONNUM
ROM:FFB9 C9 BA                       CMP     #$BA
ROM:FFBB 90 06                       BCC     HEXNUM
ROM:FFBD E9 07                       SBC     #7
ROM:FFBF C9 BA                       CMP     #$BA
ROM:FFC1 90 12                       BCC     NONNUM
ROM:FFC3
ROM:FFC3             HEXNUM:                                 ; CODE XREF: GETNUM+14↑j
ROM:FFC3 A0 04                       LDY     #4
ROM:FFC5 49 B0                       EOR     #$B0
ROM:FFC7 0A                          ASL     A
ROM:FFC8 0A                          ASL     A
ROM:FFC9 0A                          ASL     A
ROM:FFCA 0A                          ASL     A
ROM:FFCB
ROM:FFCB             NUMSHF:                                 ; CODE XREF: GETNUM+2A↓j
ROM:FFCB 0A                          ASL     A
ROM:FFCC 26 3E                       ROL     REG2L
ROM:FFCE 26 3F                       ROL     REG2H
ROM:FFD0 88                          DEY
ROM:FFD1 D0 F8                       BNE     NUMSHF
ROM:FFD3 F0 D8                       BEQ     loc_FFAD
ROM:FFD5
ROM:FFD5             NONNUM:                                 ; CODE XREF: GETNUM+C↑j
ROM:FFD5                                                     ; GETNUM+10↑j ...
ROM:FFD5 60                          RTS
ROM:FFD5             ; End of function GETNUM
ROM:FFD5
ROM:FFD6
ROM:FFD6             ; =============== S U B R O U T I N E =======================================
ROM:FFD6
ROM:FFD6             ; call monitor routine. Y = command index
ROM:FFD6
ROM:FFD6             GOSUBM:                                 ; CODE XREF: ROM:READY↑p
ROM:FFD6 88                          DEY
ROM:FFD7 98                          TYA
ROM:FFD8 0A                          ASL     A
ROM:FFD9 A8                          TAY
ROM:FFDA B9 9A FA                    LDA     ADRTBL+1,Y
ROM:FFDD 48                          PHA
ROM:FFDE B9 99 FA                    LDA     ADRTBL,Y
ROM:FFE1 48                          PHA
ROM:FFE2 A0 00                       LDY     #0
ROM:FFE4 60                          RTS
ROM:FFE4             ; End of function GOSUBM
ROM:FFE4
ROM:FFE4             ; ---------------------------------------------------------------------------
ROM:FFE5 60                          .BYTE $60 ; `
ROM:FFE6 60                          .BYTE $60 ; `
ROM:FFE7 60                          .BYTE $60 ; `
ROM:FFE8 60                          .BYTE $60 ; `
ROM:FFE9 60                          .BYTE $60 ; `
ROM:FFEA 60                          .BYTE $60 ; `
ROM:FFEB 60                          .BYTE $60 ; `
ROM:FFEC 60                          .BYTE $60 ; `
ROM:FFED 60                          .BYTE $60 ; `
ROM:FFEE 60                          .BYTE $60 ; `
ROM:FFEF 60                          .BYTE $60 ; `
ROM:FFF0 60                          .BYTE $60 ; `
ROM:FFF1 60                          .BYTE $60 ; `
ROM:FFF2 60                          .BYTE $60 ; `
ROM:FFF3 60                          .BYTE $60 ; `
ROM:FFF4 60                          .BYTE $60 ; `
ROM:FFF5 60                          .BYTE $60 ; `
ROM:FFF6 60                          .BYTE $60 ; `
ROM:FFF7 60                          .BYTE $60 ; `
ROM:FFF8 60                          .BYTE $60 ; `
ROM:FFF9 60                          .BYTE $60 ; `
ROM:FFFA FB 03                       .WORD NMIADDR
ROM:FFFC 62 FA                       .WORD RESET
ROM:FFFE 40 FA                       .WORD IRQBRK
ROM:FFFE             ; end of 'ROM'
ROM:FFFE
ROM:FFFE
ROM:FFFE                             .END
